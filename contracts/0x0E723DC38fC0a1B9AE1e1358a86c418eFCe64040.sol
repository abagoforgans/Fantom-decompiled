contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1)
#  - sub_8dc5b6fb(?)
#  - _fallback()
#
const decimals = 18

const sub_d2802be5(?) = 1

const withdrawFee = 15


mapping of uint256 balanceOf;
uint256 totalSupply;
array of struct stor3;
array of struct stor4;
address owner;
mapping of struct strategyInfo;
mapping of uint8 stor8;
array of struct stor9;
uint256 sub_5e8f09aa;
uint256 sub_66f2b1a7;
address governmentAddress;
address sub_97091078Address;
address sub_d7959960Address;
address USDTAddress;
uint256 stor16;
address stor18;
address stor19;
address stor20;
address stor21;
address stor22;
address stor23;

function totalSupply() {
    return totalSupply
}

function government() {
    return governmentAddress
}

function sub_5e8f09aa(?) {
    return sub_5e8f09aa
}

function sub_66f2b1a7(?) {
    return sub_66f2b1a7
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function owner() {
    return owner
}

function sub_97091078(?) {
    return sub_97091078Address
}

function USDT() {
    return USDTAddress
}

function sub_d7959960(?) {
    return sub_d7959960Address
}

function getStrategyInfo(uint256 arg1) {
    require calldata.size - 4 >= 32
    return strategyInfo[arg1].field_0, 
           strategyInfo[arg1].field_256,
           strategyInfo[arg1].field_1792,
           strategyInfo[arg1].field_1536,
           strategyInfo[arg1].field_1280,
           strategyInfo[arg1].field_512
}

function getCurrentStrategy() {
    return stor22, stor23, stor20, stor19, stor18, stor16
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Approve is not supporting for share tokens.'
}

function transfer(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Transfer is not supporting for share tokens.'
}

function allowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Allowance is not supporting for share tokens.'
}

function increaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                'IncreaseAllowance is not supporting for share tokens.'
}

function decreaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                'DecreaseAllowance is not supporting for share tokens.'
}

function transferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TransferFrom is not supporting for share tokens.'
}

function sub_463b4b70(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call msg.sender with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setGovernment(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'The address of government can not be a zero address'
    governmentAddress = arg1
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_f5da03e8(?) {
    if stor9.length:
        mem[128] = uint256(stor9.field_0)
        idx = 128
        s = 0
        while (32 * stor9.length) + 96 > idx:
            mem[idx + 32] = stor9[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        return Array(len=stor9.length, data=mem[128 len 32 * stor9.length])
    mem[(32 * stor9.length) + 128] = 32
    mem[(32 * stor9.length) + 160] = stor9.length
    mem[(32 * stor9.length) + 192 len 32 * stor9.length] = mem[128 len 32 * stor9.length]
    return memory
      from (32 * stor9.length) + 128
       len (96 * stor9.length) + 64
}

function earn() {
    require ext_code.size(stor23)
    staticcall stor23.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor18)
    if stor16 >= 999999:
        call stor18.deposit(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
    else:
        call stor18.0xe2bbb158 with:
             gas gas_remaining wei
            args stor16, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    emit Earn(ext_call.return_data[0]);
}

function sub_00d791b5(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(USDTAddress)
    staticcall USDTAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'GrowthVault: USDT balance should be more then 0'
    require ext_code.size(USDTAddress)
    call USDTAddress.0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, sub_5e8f09aa
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    sub_5e8f09aa = 0
}

function sub_bd7a107b(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x93f1a40b with:
            gas gas_remaining wei
           args arg3, this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_code.size(address(arg1))
    call address(arg1).0x441a3e70 with:
         gas gas_remaining wei
        args arg3, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(address(arg2))
    call address(arg2).0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_030bcab3(?) {
    require calldata.size - 4 >= 160
    require arg1 == address(arg1)
    require arg3 == address(arg3)
    require arg4 == address(arg4)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'newStrategy can not be a zero address'
    if not address(arg3):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'lpToken can not be a zero address'
    if not address(arg4):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'liquidityRouter can not be a zero address'
    require ext_code.size(address(arg3))
    staticcall address(arg3).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg3))
    staticcall address(arg3).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    strategyInfo[arg5].field_0 = address(arg4)
    strategyInfo[arg5].field_256 = address(arg3)
    strategyInfo[arg5].field_512 = arg2
    strategyInfo[arg5].field_1280 = address(arg1)
    strategyInfo[arg5].field_1536 = address(ext_call.return_data[0])
    strategyInfo[arg5].field_1792 = ext_call.return_data[12 len 20]
    if not stor8[arg5]:
        stor9.length++
        stor9[stor9.length].field_0 = arg5
        stor8[arg5] = 1
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg4), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg4), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_7f5ed9f9(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'newStrategy can not be a zero address'
    if not address(arg2):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'lpToken can not be a zero address'
    if not address(arg3):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'liquidityRouter can not be a zero address'
    require ext_code.size(address(arg2))
    staticcall address(arg2).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg2))
    staticcall address(arg2).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    strategyInfo[arg4].field_0 = address(arg3)
    strategyInfo[arg4].field_256 = address(arg2)
    strategyInfo[arg4].field_512 = 999999
    strategyInfo[arg4].field_1280 = address(arg1)
    strategyInfo[arg4].field_1536 = address(ext_call.return_data[0])
    strategyInfo[arg4].field_1792 = ext_call.return_data[12 len 20]
    if not stor8[arg4]:
        stor9.length++
        stor9[stor9.length].field_0 = arg4
        stor8[arg4] = 1
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg3), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg3), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function name() {
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor3.length):
            if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor3.length):
                if 31 < uint255(stor3.length) * 0.5:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor3.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        else:
            if bool(stor3.length) == stor3.length.field_1 < 32:
                revert with 0, 34
            if stor3.length.field_1:
                if 31 < stor3.length.field_1:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while stor3.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        mem[ceil32(uint255(stor3.length) * 0.5) + 192 len ceil32(uint255(stor3.length) * 0.5)] = mem[128 len ceil32(uint255(stor3.length) * 0.5)]
        if ceil32(uint255(stor3.length) * 0.5) > uint255(stor3.length) * 0.5:
            mem[(uint255(stor3.length) * 0.5) + ceil32(uint255(stor3.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)], mem[(2 * ceil32(uint255(stor3.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor3.length) * 0.5)]), 
    if bool(stor3.length) == stor3.length.field_1 < 32:
        revert with 0, 34
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor3.length):
            if 31 < uint255(stor3.length) * 0.5:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while (uint255(stor3.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    else:
        if bool(stor3.length) == stor3.length.field_1 < 32:
            revert with 0, 34
        if stor3.length.field_1:
            if 31 < stor3.length.field_1:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while stor3.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    mem[ceil32(stor3.length.field_1) + 192 len ceil32(stor3.length.field_1)] = mem[128 len ceil32(stor3.length.field_1)]
    if ceil32(stor3.length.field_1) > stor3.length.field_1:
        mem[stor3.length.field_1 + ceil32(stor3.length.field_1) + 192] = 0
    return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)], mem[(2 * ceil32(stor3.length.field_1)) + 192 len 2 * ceil32(stor3.length.field_1)]), 
}

function symbol() {
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor4.length):
            if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor4.length):
                if 31 < uint255(stor4.length) * 0.5:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor4.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        else:
            if bool(stor4.length) == stor4.length.field_1 < 32:
                revert with 0, 34
            if stor4.length.field_1:
                if 31 < stor4.length.field_1:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while stor4.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        mem[ceil32(uint255(stor4.length) * 0.5) + 192 len ceil32(uint255(stor4.length) * 0.5)] = mem[128 len ceil32(uint255(stor4.length) * 0.5)]
        if ceil32(uint255(stor4.length) * 0.5) > uint255(stor4.length) * 0.5:
            mem[(uint255(stor4.length) * 0.5) + ceil32(uint255(stor4.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)], mem[(2 * ceil32(uint255(stor4.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor4.length) * 0.5)]), 
    if bool(stor4.length) == stor4.length.field_1 < 32:
        revert with 0, 34
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor4.length):
            if 31 < uint255(stor4.length) * 0.5:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while (uint255(stor4.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    else:
        if bool(stor4.length) == stor4.length.field_1 < 32:
            revert with 0, 34
        if stor4.length.field_1:
            if 31 < stor4.length.field_1:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while stor4.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    mem[ceil32(stor4.length.field_1) + 192 len ceil32(stor4.length.field_1)] = mem[128 len ceil32(stor4.length.field_1)]
    if ceil32(stor4.length.field_1) > stor4.length.field_1:
        mem[stor4.length.field_1 + ceil32(stor4.length.field_1) + 192] = 0
    return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)], mem[(2 * ceil32(stor4.length.field_1)) + 192 len 2 * ceil32(stor4.length.field_1)]), 
}

function getTotalCapital() {
    mem[96] = 0
    mem[128] = 0
    mem[160] = 0
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 2
    mem[64] = 448
    mem[384 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = 96
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _232 = mem[64]
        mem[64] = mem[64] + 256
        mem[_232] = strategyInfo[stor9[idx].field_0].field_0
        mem[_232 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_232 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_232 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_232 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_232 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_232 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_232 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _242 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _244 = mem[_242]
            if not mem[_242]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_242]
                v = _232
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _261 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _263 = mem[_261]
            require mem[_261] == mem[_261 + 18 len 14]
            _265 = mem[_261 + 32]
            require mem[_261 + 32] == mem[_261 + 50 len 14]
            require mem[_261 + 64] == mem[_261 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _273 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _275 = mem[_273]
            if _244 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_273]:
                revert with 0, 18
            if 10^12 * _244 / mem[_273] and Mask(112, 0, _263) > -1 / 10^12 * _244 / mem[_273]:
                revert with 0, 17
            if 10^12 * _244 / mem[_273] and Mask(112, 0, _265) > -1 / 10^12 * _244 / mem[_273]:
                revert with 0, 17
            if 1 >= mem[352]:
                revert with 0, 50
            mem[416] = stor21
            if 0 >= mem[352]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[384] = strategyInfo[stor9[idx].field_0].field_1792
                _291 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                mem[mem[64] + 36] = 64
                _298 = mem[352]
                mem[mem[64] + 68] = mem[352]
                s = 0
                t = 384
                u = mem[64] + 100
                while s < _298:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _291 + (32 * _298) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _472 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _478 = mem[_472]
                require mem[_472] <= test266151307()
                require _472 + mem[_472] + 31 < _472 + return_data.size
                _484 = mem[_472 + mem[_472]]
                if mem[_472 + mem[_472]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_472 + mem[_472]]) + 1 < 0 or _472 + ceil32(return_data.size) + ceil32(32 * mem[_472 + mem[_472]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _472 + ceil32(return_data.size) + ceil32(32 * mem[_472 + mem[_472]]) + 1
                mem[_472 + ceil32(return_data.size)] = _484
                require _478 + (32 * _484) + 32 <= return_data.size
                t = _472 + ceil32(return_data.size) + 32
                s = _472 + _478 + 32
                while s < _472 + _478 + (32 * _484) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _484:
                    revert with 0, 50
                _584 = mem[_472 + ceil32(return_data.size) + 64]
                if 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12 > !mem[_472 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_232 + 128] = (10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + mem[_472 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + _584):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _472 + ceil32(return_data.size)
                t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                v = _244
                v = _232
                v = stor9[idx].field_0
                v = v + (10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + _584
                continue 
            mem[384] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _295 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                mem[mem[64] + 36] = 64
                _299 = mem[352]
                mem[mem[64] + 68] = mem[352]
                s = 0
                t = 384
                u = mem[64] + 100
                while s < _299:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _295 + (32 * _299) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _471 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _477 = mem[_471]
                require mem[_471] <= test266151307()
                require _471 + mem[_471] + 31 < _471 + return_data.size
                _483 = mem[_471 + mem[_471]]
                if mem[_471 + mem[_471]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_471 + mem[_471]]) + 1 < 0 or _471 + ceil32(return_data.size) + ceil32(32 * mem[_471 + mem[_471]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _471 + ceil32(return_data.size) + ceil32(32 * mem[_471 + mem[_471]]) + 1
                mem[_471 + ceil32(return_data.size)] = _483
                require _477 + (32 * _483) + 32 <= return_data.size
                t = _471 + ceil32(return_data.size) + 32
                s = _471 + _477 + 32
                while s < _471 + _477 + (32 * _483) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _483:
                    revert with 0, 50
                _583 = mem[_471 + ceil32(return_data.size) + 64]
                if 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12 > !mem[_471 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_232 + 128] = (10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + mem[_471 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + _583):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _471 + ceil32(return_data.size)
                t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                v = _244
                v = _232
                v = stor9[idx].field_0
                v = v + (10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + _583
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _300 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _304 = mem[_300]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _324 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _331 = mem[_324]
            if mem[_324] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _304:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _357 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _363 = mem[_357]
            if 10^12 * _331 / _304 and mem[_357] > -1 / 10^12 * _331 / _304:
                revert with 0, 17
            _373 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _331 / _304 * _363 / 10^12
            mem[mem[64] + 36] = 64
            _376 = mem[352]
            mem[mem[64] + 68] = mem[352]
            t = 0
            u = 384
            w = mem[64] + 100
            while t < _376:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _373 + (32 * _376) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _470 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _476 = mem[_470]
            require mem[_470] <= test266151307()
            require _470 + mem[_470] + 31 < _470 + return_data.size
            _482 = mem[_470 + mem[_470]]
            if mem[_470 + mem[_470]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_470 + mem[_470]]) + 1 < 0 or _470 + ceil32(return_data.size) + ceil32(32 * mem[_470 + mem[_470]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _470 + ceil32(return_data.size) + ceil32(32 * mem[_470 + mem[_470]]) + 1
            mem[_470 + ceil32(return_data.size)] = _482
            require _476 + (32 * _482) + 32 <= return_data.size
            u = _470 + ceil32(return_data.size) + 32
            t = _470 + _476 + 32
            while t < _470 + _476 + (32 * _482) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _482:
                revert with 0, 50
            _582 = mem[_470 + ceil32(return_data.size) + 64]
            mem[_232 + 128] = mem[_470 + ceil32(return_data.size) + 64]
            if v > !_582:
                revert with 0, 17
            if 0 >= mem[352]:
                revert with 0, 50
            mem[384] = mem[_232 + 236 len 20]
            _591 = mem[_232 + 224]
            _592 = mem[_232]
            require ext_code.size(mem[_232 + 236 len 20])
            staticcall mem[_232 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _598 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _600 = mem[_598]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_591))
            staticcall address(_591).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _606 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _608 = mem[_606]
            if mem[_606] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _600:
                revert with 0, 18
            mem[mem[64] + 4] = address(_592)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_592)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _614 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _616 = mem[_614]
            if 10^12 * _608 / _600 and mem[_614] > -1 / 10^12 * _608 / _600:
                revert with 0, 17
            _618 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _608 / _600 * _616 / 10^12
            mem[mem[64] + 36] = 64
            _620 = mem[352]
            mem[mem[64] + 68] = mem[352]
            t = 0
            u = 384
            w = mem[64] + 100
            while t < _620:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_592))
            staticcall address(_592).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _618 + (32 * _620) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _648 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _650 = mem[_648]
            require mem[_648] <= test266151307()
            require _648 + mem[_648] + 31 < _648 + return_data.size
            _652 = mem[_648 + mem[_648]]
            if mem[_648 + mem[_648]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_648 + mem[_648]]) + 1 < 0 or _648 + ceil32(return_data.size) + ceil32(32 * mem[_648 + mem[_648]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _648 + ceil32(return_data.size) + ceil32(32 * mem[_648 + mem[_648]]) + 1
            mem[_648 + ceil32(return_data.size)] = _652
            require _650 + (32 * _652) + 32 <= return_data.size
            u = _648 + ceil32(return_data.size) + 32
            t = _648 + _650 + 32
            while t < _648 + _650 + (32 * _652) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _652:
                revert with 0, 50
            if mem[_232 + 128] > !mem[_648 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = mem[_232 + 128] + mem[_648 + ceil32(return_data.size) + 64]
            if v + _582 > !mem[_232 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
            u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
            v = _244
            v = _232
            v = stor9[idx].field_0
            v = v + _582 + mem[_232 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _241 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _243 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_243] = mem[_241]
        mem[_243 + 32] = mem[_241 + 32]
        mem[_243 + 64] = mem[_241 + 64]
        require return_data.size - 96 >= 96
        _249 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_249] = mem[_241 + 96]
        mem[_249 + 32] = mem[_241 + 128]
        mem[_249 + 64] = mem[_241 + 160]
        mem[_243 + 96] = _249
        mem[_243 + 128] = mem[_241 + 192]
        require return_data.size - 224 >= 96
        _257 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_257] = mem[_241 + 224]
        mem[_257 + 32] = mem[_241 + 256]
        mem[_257 + 64] = mem[_241 + 288]
        mem[_243 + 160] = _257
        _262 = mem[_243 + 64]
        if not mem[_243 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_243 + 64]
            v = _232
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _269 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _270 = mem[_269]
        require mem[_269] == mem[_269 + 18 len 14]
        _274 = mem[_269 + 32]
        require mem[_269 + 32] == mem[_269 + 50 len 14]
        require mem[_269 + 64] == mem[_269 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _279 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _280 = mem[_279]
        if _262 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_279]:
            revert with 0, 18
        if 10^12 * _262 / mem[_279] and Mask(112, 0, _270) > -1 / 10^12 * _262 / mem[_279]:
            revert with 0, 17
        if 10^12 * _262 / mem[_279] and Mask(112, 0, _274) > -1 / 10^12 * _262 / mem[_279]:
            revert with 0, 17
        if 1 >= mem[352]:
            revert with 0, 50
        mem[416] = stor21
        if 0 >= mem[352]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[384] = strategyInfo[stor9[idx].field_0].field_1792
            _318 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            mem[mem[64] + 36] = 64
            _328 = mem[352]
            mem[mem[64] + 68] = mem[352]
            s = 0
            t = 384
            u = mem[64] + 100
            while s < _328:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _318 + (32 * _328) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _469 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _475 = mem[_469]
            require mem[_469] <= test266151307()
            require _469 + mem[_469] + 31 < _469 + return_data.size
            _481 = mem[_469 + mem[_469]]
            if mem[_469 + mem[_469]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_469 + mem[_469]]) + 1 < 0 or _469 + ceil32(return_data.size) + ceil32(32 * mem[_469 + mem[_469]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _469 + ceil32(return_data.size) + ceil32(32 * mem[_469 + mem[_469]]) + 1
            mem[_469 + ceil32(return_data.size)] = _481
            require _475 + (32 * _481) + 32 <= return_data.size
            t = _469 + ceil32(return_data.size) + 32
            s = _469 + _475 + 32
            while s < _469 + _475 + (32 * _481) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _481:
                revert with 0, 50
            _581 = mem[_469 + ceil32(return_data.size) + 64]
            if 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12 > !mem[_469 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = (10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + mem[_469 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + _581):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _469 + ceil32(return_data.size)
            t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            u = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            v = _262
            v = _232
            v = stor9[idx].field_0
            v = v + (10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + _581
            continue 
        mem[384] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            _323 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            mem[mem[64] + 36] = 64
            _330 = mem[352]
            mem[mem[64] + 68] = mem[352]
            s = 0
            t = 384
            w = mem[64] + 100
            while s < _330:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _323 + (32 * _330) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _468 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _474 = mem[_468]
            require mem[_468] <= test266151307()
            require _468 + mem[_468] + 31 < _468 + return_data.size
            _480 = mem[_468 + mem[_468]]
            if mem[_468 + mem[_468]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_468 + mem[_468]]) + 1 < 0 or _468 + ceil32(return_data.size) + ceil32(32 * mem[_468 + mem[_468]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _468 + ceil32(return_data.size) + ceil32(32 * mem[_468 + mem[_468]]) + 1
            mem[_468 + ceil32(return_data.size)] = _480
            require _474 + (32 * _480) + 32 <= return_data.size
            t = _468 + ceil32(return_data.size) + 32
            s = _468 + _474 + 32
            while s < _468 + _474 + (32 * _480) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _480:
                revert with 0, 50
            _580 = mem[_468 + ceil32(return_data.size) + 64]
            if 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12 > !mem[_468 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = (10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + mem[_468 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + _580):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _468 + ceil32(return_data.size)
            t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            s = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            v = _262
            v = _232
            v = stor9[idx].field_0
            v = v + (10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + _580
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _333 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _338 = mem[_333]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _346 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _352 = mem[_346]
        if mem[_346] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _338:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _370 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _375 = mem[_370]
        if 10^12 * _352 / _338 and mem[_370] > -1 / 10^12 * _352 / _338:
            revert with 0, 17
        _379 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _352 / _338 * _375 / 10^12
        mem[mem[64] + 36] = 64
        _381 = mem[352]
        mem[mem[64] + 68] = mem[352]
        t = 0
        u = 384
        w = mem[64] + 100
        while t < _381:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _379 + (32 * _381) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _467 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _473 = mem[_467]
        require mem[_467] <= test266151307()
        require _467 + mem[_467] + 31 < _467 + return_data.size
        _479 = mem[_467 + mem[_467]]
        if mem[_467 + mem[_467]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_467 + mem[_467]]) + 1 < 0 or _467 + ceil32(return_data.size) + ceil32(32 * mem[_467 + mem[_467]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _467 + ceil32(return_data.size) + ceil32(32 * mem[_467 + mem[_467]]) + 1
        mem[_467 + ceil32(return_data.size)] = _479
        require _473 + (32 * _479) + 32 <= return_data.size
        u = _467 + ceil32(return_data.size) + 32
        t = _467 + _473 + 32
        while t < _467 + _473 + (32 * _479) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _479:
            revert with 0, 50
        _579 = mem[_467 + ceil32(return_data.size) + 64]
        mem[_232 + 128] = mem[_467 + ceil32(return_data.size) + 64]
        if v > !_579:
            revert with 0, 17
        if 0 >= mem[352]:
            revert with 0, 50
        mem[384] = mem[_232 + 236 len 20]
        _589 = mem[_232 + 224]
        _590 = mem[_232]
        require ext_code.size(mem[_232 + 236 len 20])
        staticcall mem[_232 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _597 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _599 = mem[_597]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_589))
        staticcall address(_589).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _605 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _607 = mem[_605]
        if mem[_605] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _599:
            revert with 0, 18
        mem[mem[64] + 4] = address(_590)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_590)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _613 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _615 = mem[_613]
        if 10^12 * _607 / _599 and mem[_613] > -1 / 10^12 * _607 / _599:
            revert with 0, 17
        _617 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _607 / _599 * _615 / 10^12
        mem[mem[64] + 36] = 64
        _619 = mem[352]
        mem[mem[64] + 68] = mem[352]
        t = 0
        u = 384
        w = mem[64] + 100
        while t < _619:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_590))
        staticcall address(_590).mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _617 + (32 * _619) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _647 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _649 = mem[_647]
        require mem[_647] <= test266151307()
        require _647 + mem[_647] + 31 < _647 + return_data.size
        _651 = mem[_647 + mem[_647]]
        if mem[_647 + mem[_647]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_647 + mem[_647]]) + 1 < 0 or _647 + ceil32(return_data.size) + ceil32(32 * mem[_647 + mem[_647]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _647 + ceil32(return_data.size) + ceil32(32 * mem[_647 + mem[_647]]) + 1
        mem[_647 + ceil32(return_data.size)] = _651
        require _649 + (32 * _651) + 32 <= return_data.size
        u = _647 + ceil32(return_data.size) + 32
        t = _647 + _649 + 32
        while t < _647 + _649 + (32 * _651) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _651:
            revert with 0, 50
        if mem[_232 + 128] > !mem[_647 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_232 + 128] = mem[_232 + 128] + mem[_647 + ceil32(return_data.size) + 64]
        if v + _579 > !mem[_232 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
        u = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
        v = _262
        v = _232
        v = stor9[idx].field_0
        v = v + _579 + mem[_232 + 128]
        continue 
    return v
}

function autoCompound() {
    mem[96] = 2
    mem[128 len 64] = call.data[calldata.size len 64]
    mem[64] = 448
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    idx = 0
    s = 192
    s = 0
    s = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _610 = mem[64]
        mem[64] = mem[64] + 256
        mem[_610] = strategyInfo[stor9[idx].field_0].field_0
        mem[_610 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_610 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_610 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_610 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_610 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_610 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_610 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _621 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _630 = mem[_621]
            if not mem[_621]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _610
                s = mem[_621]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _650 = mem[64]
            mem[64] = mem[64] + 256
            mem[_650] = strategyInfo[stor9[idx].field_0].field_0
            mem[_650 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_650 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_650 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_650 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_650 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_650 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_650 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _630
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _630
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _685 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _695 = mem[_685]
                require mem[_685] == mem[_685 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_685 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_695))
                staticcall address(_695).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _729 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _733 = mem[_729]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_695))
                staticcall address(_695).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _747 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _755 = mem[_747]
                if mem[_747] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _733:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _775 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _777 = mem[_775]
                if 10^12 * _755 / _733 and mem[_775] > -1 / 10^12 * _755 / _733:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _755 / _733 * _777 / 10^12
                mem[mem[64] + 36] = 64
                _807 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _807) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1504 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1511 = mem[_1504]
                require mem[_1504] <= test266151307()
                require _1504 + mem[_1504] + 31 < _1504 + return_data.size
                _1518 = mem[_1504 + mem[_1504]]
                if mem[_1504 + mem[_1504]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_1504 + mem[_1504]]) + 1 < 0 or _1504 + ceil32(return_data.size) + ceil32(32 * mem[_1504 + mem[_1504]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _1504 + ceil32(return_data.size) + ceil32(32 * mem[_1504 + mem[_1504]]) + 1
                mem[_1504 + ceil32(return_data.size)] = _1518
                require _1511 + (32 * _1518) + 32 <= return_data.size
                t = _1504 + ceil32(return_data.size) + 32
                s = _1504 + _1511 + 32
                while s < _1504 + _1511 + (32 * _1518) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _1518:
                    revert with 0, 50
                _2910 = mem[_1504 + ceil32(return_data.size) + 64]
                if mem[_1504 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1504 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_1504 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_1504 + ceil32(return_data.size) + 64] < 100 * mem[_1504 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _2950 = mem[_610]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_695))
                staticcall address(_695).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2974 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2982 = mem[_2974]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _2996 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _2982
                mem[mem[64] + 36] = _2910 - (100 * _2910 / 10000)
                mem[mem[64] + 68] = 160
                _3002 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _3002:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_2996 + 100] = this.address
                mem[_2996 + 132] = block.timestamp + 60
                require ext_code.size(address(_2950))
                call address(_2950).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _2996 + (32 * _3002) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4330 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4338 = mem[_4330]
                require mem[_4330] <= test266151307()
                require _4330 + mem[_4330] + 31 < _4330 + return_data.size
                _4350 = mem[_4330 + mem[_4330]]
                if mem[_4330 + mem[_4330]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_4330 + mem[_4330]]) + 1 < 0 or _4330 + ceil32(return_data.size) + ceil32(32 * mem[_4330 + mem[_4330]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _4330 + ceil32(return_data.size) + ceil32(32 * mem[_4330 + mem[_4330]]) + 1
                mem[_4330 + ceil32(return_data.size)] = _4350
                require _4338 + (32 * _4350) + 32 <= return_data.size
                t = _4330 + ceil32(return_data.size) + 32
                s = _4330 + _4338 + 32
                while s < _4330 + _4338 + (32 * _4350) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _5850 = mem[_610]
                _5851 = mem[_610 + 192]
                _5852 = mem[_610 + 224]
                _5862 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_5862 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_5862]:
                    revert with 0, 50
                mem[_5862 + 32] = stor21
                if stor21 == address(_5851):
                    if stor21 == address(_5852):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[_5862 + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        mem[_5862 + ceil32(return_data.size) + 100] = address(_5850)
                        mem[_5862 + ceil32(return_data.size) + 132] = -1
                        require ext_code.size(address(_5851))
                        call address(_5851).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5850), -1
                        mem[_5862 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_5862 + (2 * ceil32(return_data.size)) + 100] = address(_5850)
                        mem[_5862 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_5852))
                        call address(_5852).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5850), -1
                        mem[_5862 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5862 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        _6042 = mem[_610 + 160]
                        _6043 = mem[_610 + 64]
                        _6044 = mem[_610 + 32]
                        mem[_5862 + (4 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6044))
                        staticcall address(_6044).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5862 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5862 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _6043 >= 999999:
                            mem[_5862 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_6042))
                            call address(_6042).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5862 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _6130 = mem[_610 + 32]
                            mem[_5862 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_6130))
                            staticcall address(_6130).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5862 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_610 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_5862 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5862 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5862 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _6270 = mem[_610]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_5862 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_5862 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_5862 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_5862 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _5862 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_5862 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_5862 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_6270))
                            call address(_6270).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5862 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5862 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5862 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7406 = mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5862 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _7422 = mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5862 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _5862 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_5862 + (10 * ceil32(return_data.size)) + 96] = _7422
                            require _7406 + (32 * _7422) + 32 <= return_data.size
                            t = _5862 + (10 * ceil32(return_data.size)) + 128
                            s = _5862 + (8 * ceil32(return_data.size)) + _7406 + 128
                            while s < _5862 + (8 * ceil32(return_data.size)) + _7406 + (32 * _7422) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8654 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_8654]
                        else:
                            mem[_5862 + (6 * ceil32(return_data.size)) + 100] = _6043
                            mem[_5862 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_6042))
                            call address(_6042).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _6043, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5862 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _6131 = mem[_610 + 32]
                            mem[_5862 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_6131))
                            staticcall address(_6131).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5862 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_610 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_5862 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5862 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5862 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _6271 = mem[_610]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_5862 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_5862 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_5862 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_5862 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _5862 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_5862 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_5862 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_6271))
                            call address(_6271).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5862 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5862 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5862 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7407 = mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5862 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _7423 = mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5862 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _5862 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5862 + (8 * ceil32(return_data.size)) + mem[_5862 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_5862 + (10 * ceil32(return_data.size)) + 96] = _7423
                            require _7407 + (32 * _7423) + 32 <= return_data.size
                            t = _5862 + (10 * ceil32(return_data.size)) + 128
                            s = _5862 + (8 * ceil32(return_data.size)) + _7407 + 128
                            while s < _5862 + (8 * ceil32(return_data.size)) + _7407 + (32 * _7423) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8655 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_8655]
                    else:
                        if 1 >= mem[_5862]:
                            revert with 0, 50
                        mem[_5862 + 64] = address(_5852)
                        mem[_5862 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_5862 + 100] = eth.balance(this.address) / 2
                        mem[_5862 + 132] = 64
                        mem[_5862 + 164] = mem[_5862]
                        s = 0
                        t = _5862 + 32
                        u = _5862 + 196
                        while s < mem[_5862]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_5850))
                        staticcall address(_5850).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _5862 + (32 * mem[_5862]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7396 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _7414 = mem[_7396]
                        require mem[_7396] <= test266151307()
                        require _7396 + mem[_7396] + 31 < _7396 + return_data.size
                        _7430 = mem[_7396 + mem[_7396]]
                        if mem[_7396 + mem[_7396]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7396 + mem[_7396]]) + 1 < 0 or _7396 + ceil32(return_data.size) + ceil32(32 * mem[_7396 + mem[_7396]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _7396 + ceil32(return_data.size) + ceil32(32 * mem[_7396 + mem[_7396]]) + 1
                        mem[_7396 + ceil32(return_data.size)] = _7430
                        require _7414 + (32 * _7430) + 32 <= return_data.size
                        t = _7396 + ceil32(return_data.size) + 32
                        s = _7396 + _7414 + 32
                        while s < _7396 + _7414 + (32 * _7430) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _7430:
                            revert with 0, 50
                        _8630 = mem[_7396 + ceil32(return_data.size) + 64]
                        if mem[_7396 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7396 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_7396 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _7430:
                            revert with 0, 50
                        _8678 = mem[_7396 + ceil32(return_data.size) + 64]
                        if mem[_7396 + ceil32(return_data.size) + 64] < 100 * mem[_7396 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _8686 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _8678 - (100 * _8630 / 10000)
                        mem[mem[64] + 36] = 128
                        _8694 = mem[_5862]
                        mem[mem[64] + 132] = mem[_5862]
                        s = 0
                        t = _5862 + 32
                        u = mem[64] + 164
                        while s < _8694:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_8686 + 68] = this.address
                        mem[_8686 + 100] = block.timestamp + 60
                        require ext_code.size(address(_5850))
                        call address(_5850).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8686 + (32 * _8694) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9814 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9822 = mem[_9814]
                        require mem[_9814] <= test266151307()
                        require _9814 + mem[_9814] + 31 < _9814 + return_data.size
                        _9830 = mem[_9814 + mem[_9814]]
                        if mem[_9814 + mem[_9814]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_9814 + mem[_9814]]) + 1 < 0 or _9814 + ceil32(return_data.size) + ceil32(32 * mem[_9814 + mem[_9814]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _9814 + ceil32(return_data.size) + ceil32(32 * mem[_9814 + mem[_9814]]) + 1
                        mem[_9814 + ceil32(return_data.size)] = _9830
                        require _9822 + (32 * _9830) + 32 <= return_data.size
                        t = _9814 + ceil32(return_data.size) + 32
                        s = _9814 + _9822 + 32
                        while s < _9814 + _9822 + (32 * _9830) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10924 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_10924] == mem[_10924 + 18 len 14]
                        require mem[_10924 + 32] == mem[_10924 + 50 len 14]
                        require mem[_10924 + 64] == mem[_10924 + 92 len 4]
                        mem[mem[64] + 4] = address(_5850)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5851))
                        call address(_5851).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5850), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10998 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10998] == bool(mem[_10998])
                        mem[mem[64] + 4] = address(_5850)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5852))
                        call address(_5852).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5850), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11038 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_11038] == bool(mem[_11038])
                        _11064 = mem[_610 + 160]
                        _11065 = mem[_610 + 64]
                        _11066 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11066))
                        staticcall address(_11066).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11100 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11114 = mem[_11100]
                        if _11065 >= 999999:
                            mem[mem[64] + 4] = mem[_11100]
                            require ext_code.size(address(_11064))
                            call address(_11064).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _11114
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11114
                            emit Earn(_11114);
                            _11186 = mem[_610 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11186))
                            staticcall address(_11186).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11248 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_610 + 96] = mem[_11248]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11362 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11382 = mem[_11362]
                            _11398 = mem[_610]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11418 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11382
                            mem[mem[64] + 36] = 128
                            _11442 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11442:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11418 + 68] = this.address
                            mem[_11418 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11398))
                            call address(_11398).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11418 + (32 * _11442) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11986 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12006 = mem[_11986]
                            require mem[_11986] <= test266151307()
                            require _11986 + mem[_11986] + 31 < _11986 + return_data.size
                            _12026 = mem[_11986 + mem[_11986]]
                            if mem[_11986 + mem[_11986]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11986 + mem[_11986]]) + 1 < 0 or _11986 + ceil32(return_data.size) + ceil32(32 * mem[_11986 + mem[_11986]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11986 + ceil32(return_data.size) + ceil32(32 * mem[_11986 + mem[_11986]]) + 1
                            mem[_11986 + ceil32(return_data.size)] = _12026
                            require _12006 + (32 * _12026) + 32 <= return_data.size
                            t = _11986 + ceil32(return_data.size) + 32
                            s = _11986 + _12006 + 32
                            while s < _11986 + _12006 + (32 * _12026) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12578 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12578]
                        else:
                            mem[mem[64] + 4] = _11065
                            mem[mem[64] + 36] = _11114
                            require ext_code.size(address(_11064))
                            call address(_11064).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _11065, _11114
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11114
                            emit Earn(_11114);
                            _11187 = mem[_610 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11187))
                            staticcall address(_11187).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11249 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_610 + 96] = mem[_11249]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11363 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11383 = mem[_11363]
                            _11399 = mem[_610]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11419 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11383
                            mem[mem[64] + 36] = 128
                            _11443 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11443:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11419 + 68] = this.address
                            mem[_11419 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11399))
                            call address(_11399).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11419 + (32 * _11443) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11987 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12007 = mem[_11987]
                            require mem[_11987] <= test266151307()
                            require _11987 + mem[_11987] + 31 < _11987 + return_data.size
                            _12027 = mem[_11987 + mem[_11987]]
                            if mem[_11987 + mem[_11987]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11987 + mem[_11987]]) + 1 < 0 or _11987 + ceil32(return_data.size) + ceil32(32 * mem[_11987 + mem[_11987]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11987 + ceil32(return_data.size) + ceil32(32 * mem[_11987 + mem[_11987]]) + 1
                            mem[_11987 + ceil32(return_data.size)] = _12027
                            require _12007 + (32 * _12027) + 32 <= return_data.size
                            t = _11987 + ceil32(return_data.size) + 32
                            s = _11987 + _12007 + 32
                            while s < _11987 + _12007 + (32 * _12027) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12579 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12579]
                else:
                    if 1 >= mem[_5862]:
                        revert with 0, 50
                    mem[_5862 + 64] = address(_5851)
                    mem[_5862 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5862 + 100] = eth.balance(this.address) / 2
                    mem[_5862 + 132] = 64
                    mem[_5862 + 164] = mem[_5862]
                    s = 0
                    t = _5862 + 32
                    u = _5862 + 196
                    while s < mem[_5862]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5850))
                    staticcall address(_5850).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5862 + (32 * mem[_5862]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7397 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7415 = mem[_7397]
                    require mem[_7397] <= test266151307()
                    require _7397 + mem[_7397] + 31 < _7397 + return_data.size
                    _7431 = mem[_7397 + mem[_7397]]
                    if mem[_7397 + mem[_7397]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7397 + mem[_7397]]) + 1 < 0 or _7397 + ceil32(return_data.size) + ceil32(32 * mem[_7397 + mem[_7397]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7397 + ceil32(return_data.size) + ceil32(32 * mem[_7397 + mem[_7397]]) + 1
                    mem[_7397 + ceil32(return_data.size)] = _7431
                    require _7415 + (32 * _7431) + 32 <= return_data.size
                    t = _7397 + ceil32(return_data.size) + 32
                    s = _7397 + _7415 + 32
                    while s < _7397 + _7415 + (32 * _7431) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7431:
                        revert with 0, 50
                    _8631 = mem[_7397 + ceil32(return_data.size) + 64]
                    if mem[_7397 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7397 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_7397 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _7431:
                        revert with 0, 50
                    _8679 = mem[_7397 + ceil32(return_data.size) + 64]
                    if mem[_7397 + ceil32(return_data.size) + 64] < 100 * mem[_7397 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _8687 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _8679 - (100 * _8631 / 10000)
                    mem[mem[64] + 36] = 128
                    _8695 = mem[_5862]
                    mem[mem[64] + 132] = mem[_5862]
                    s = 0
                    t = _5862 + 32
                    u = mem[64] + 164
                    while s < _8695:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8687 + 68] = this.address
                    mem[_8687 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5850))
                    call address(_5850).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8687 + (32 * _8695) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9815 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9823 = mem[_9815]
                    require mem[_9815] <= test266151307()
                    require _9815 + mem[_9815] + 31 < _9815 + return_data.size
                    _9831 = mem[_9815 + mem[_9815]]
                    if mem[_9815 + mem[_9815]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9815 + mem[_9815]]) + 1 < 0 or _9815 + ceil32(return_data.size) + ceil32(32 * mem[_9815 + mem[_9815]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9815 + ceil32(return_data.size) + ceil32(32 * mem[_9815 + mem[_9815]]) + 1
                    mem[_9815 + ceil32(return_data.size)] = _9831
                    require _9823 + (32 * _9831) + 32 <= return_data.size
                    t = _9815 + ceil32(return_data.size) + 32
                    s = _9815 + _9823 + 32
                    while s < _9815 + _9823 + (32 * _9831) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_5852):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10930 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_10930] == mem[_10930 + 18 len 14]
                        require mem[_10930 + 32] == mem[_10930 + 50 len 14]
                        require mem[_10930 + 64] == mem[_10930 + 92 len 4]
                        mem[mem[64] + 4] = address(_5850)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5851))
                        call address(_5851).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5850), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11004 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_11004] == bool(mem[_11004])
                        mem[mem[64] + 4] = address(_5850)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5852))
                        call address(_5852).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5850), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11046 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_11046] == bool(mem[_11046])
                        _11082 = mem[_610 + 160]
                        _11083 = mem[_610 + 64]
                        _11084 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11084))
                        staticcall address(_11084).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11106 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11120 = mem[_11106]
                        if _11083 >= 999999:
                            mem[mem[64] + 4] = mem[_11106]
                            require ext_code.size(address(_11082))
                            call address(_11082).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _11120
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11120
                            emit Earn(_11120);
                            _11216 = mem[_610 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11216))
                            staticcall address(_11216).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_610 + 96] = mem[_11258]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11372 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11390 = mem[_11372]
                            _11406 = mem[_610]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11430 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11390
                            mem[mem[64] + 36] = 128
                            _11452 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11452:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11430 + 68] = this.address
                            mem[_11430 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11406))
                            call address(_11406).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11430 + (32 * _11452) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11988 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12008 = mem[_11988]
                            require mem[_11988] <= test266151307()
                            require _11988 + mem[_11988] + 31 < _11988 + return_data.size
                            _12028 = mem[_11988 + mem[_11988]]
                            if mem[_11988 + mem[_11988]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11988 + mem[_11988]]) + 1 < 0 or _11988 + ceil32(return_data.size) + ceil32(32 * mem[_11988 + mem[_11988]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11988 + ceil32(return_data.size) + ceil32(32 * mem[_11988 + mem[_11988]]) + 1
                            mem[_11988 + ceil32(return_data.size)] = _12028
                            require _12008 + (32 * _12028) + 32 <= return_data.size
                            t = _11988 + ceil32(return_data.size) + 32
                            s = _11988 + _12008 + 32
                            while s < _11988 + _12008 + (32 * _12028) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12580 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12580]
                        else:
                            mem[mem[64] + 4] = _11083
                            mem[mem[64] + 36] = _11120
                            require ext_code.size(address(_11082))
                            call address(_11082).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _11083, _11120
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11120
                            emit Earn(_11120);
                            _11217 = mem[_610 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11217))
                            staticcall address(_11217).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11259 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_610 + 96] = mem[_11259]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11373 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11391 = mem[_11373]
                            _11407 = mem[_610]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11431 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11391
                            mem[mem[64] + 36] = 128
                            _11453 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11453:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11431 + 68] = this.address
                            mem[_11431 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11407))
                            call address(_11407).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11431 + (32 * _11453) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11989 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12009 = mem[_11989]
                            require mem[_11989] <= test266151307()
                            require _11989 + mem[_11989] + 31 < _11989 + return_data.size
                            _12029 = mem[_11989 + mem[_11989]]
                            if mem[_11989 + mem[_11989]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11989 + mem[_11989]]) + 1 < 0 or _11989 + ceil32(return_data.size) + ceil32(32 * mem[_11989 + mem[_11989]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11989 + ceil32(return_data.size) + ceil32(32 * mem[_11989 + mem[_11989]]) + 1
                            mem[_11989 + ceil32(return_data.size)] = _12029
                            require _12009 + (32 * _12029) + 32 <= return_data.size
                            t = _11989 + ceil32(return_data.size) + 32
                            s = _11989 + _12009 + 32
                            while s < _11989 + _12009 + (32 * _12029) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12581 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12581]
                    else:
                        if 1 >= mem[_5862]:
                            revert with 0, 50
                        mem[_5862 + 64] = address(_5852)
                        _10918 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _10931 = mem[_5862]
                        mem[mem[64] + 68] = mem[_5862]
                        s = 0
                        t = _5862 + 32
                        u = mem[64] + 100
                        while s < _10931:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_5850))
                        staticcall address(_5850).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _10918 + (32 * _10931) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11996 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12016 = mem[_11996]
                        require mem[_11996] <= test266151307()
                        require _11996 + mem[_11996] + 31 < _11996 + return_data.size
                        _12036 = mem[_11996 + mem[_11996]]
                        if mem[_11996 + mem[_11996]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11996 + mem[_11996]]) + 1 < 0 or _11996 + ceil32(return_data.size) + ceil32(32 * mem[_11996 + mem[_11996]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11996 + ceil32(return_data.size) + ceil32(32 * mem[_11996 + mem[_11996]]) + 1
                        mem[_11996 + ceil32(return_data.size)] = _12036
                        require _12016 + (32 * _12036) + 32 <= return_data.size
                        t = _11996 + ceil32(return_data.size) + 32
                        s = _11996 + _12016 + 32
                        while s < _11996 + _12016 + (32 * _12036) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _12036:
                            revert with 0, 50
                        _12536 = mem[_11996 + ceil32(return_data.size) + 64]
                        if mem[_11996 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11996 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_11996 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _12036:
                            revert with 0, 50
                        _12608 = mem[_11996 + ceil32(return_data.size) + 64]
                        if mem[_11996 + ceil32(return_data.size) + 64] < 100 * mem[_11996 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12612 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12608 - (100 * _12536 / 10000)
                        mem[mem[64] + 36] = 128
                        _12616 = mem[_5862]
                        mem[mem[64] + 132] = mem[_5862]
                        s = 0
                        t = _5862 + 32
                        u = mem[64] + 164
                        while s < _12616:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_12612 + 68] = this.address
                        mem[_12612 + 100] = block.timestamp + 60
                        require ext_code.size(address(_5850))
                        call address(_5850).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12612 + (32 * _12616) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12972 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12976 = mem[_12972]
                        require mem[_12972] <= test266151307()
                        require _12972 + mem[_12972] + 31 < _12972 + return_data.size
                        _12980 = mem[_12972 + mem[_12972]]
                        if mem[_12972 + mem[_12972]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12972 + mem[_12972]]) + 1 < 0 or _12972 + ceil32(return_data.size) + ceil32(32 * mem[_12972 + mem[_12972]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12972 + ceil32(return_data.size) + ceil32(32 * mem[_12972 + mem[_12972]]) + 1
                        mem[_12972 + ceil32(return_data.size)] = _12980
                        require _12976 + (32 * _12980) + 32 <= return_data.size
                        t = _12972 + ceil32(return_data.size) + 32
                        s = _12972 + _12976 + 32
                        while s < _12972 + _12976 + (32 * _12980) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13320 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_13320] == mem[_13320 + 18 len 14]
                        require mem[_13320 + 32] == mem[_13320 + 50 len 14]
                        require mem[_13320 + 64] == mem[_13320 + 92 len 4]
                        mem[mem[64] + 4] = address(_5850)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5851))
                        call address(_5851).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5850), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13344 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13344] == bool(mem[_13344])
                        mem[mem[64] + 4] = address(_5850)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_5852))
                        call address(_5852).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_5850), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13360 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13360] == bool(mem[_13360])
                        _13372 = mem[_610 + 160]
                        _13373 = mem[_610 + 64]
                        _13374 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13374))
                        staticcall address(_13374).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13388 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13392 = mem[_13388]
                        if _13373 >= 999999:
                            mem[mem[64] + 4] = mem[_13388]
                            require ext_code.size(address(_13372))
                            call address(_13372).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _13392
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13392
                            emit Earn(_13392);
                            _13430 = mem[_610 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13430))
                            staticcall address(_13430).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13454 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_610 + 96] = mem[_13454]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13502 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13510 = mem[_13502]
                            _13518 = mem[_610]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13526 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13510
                            mem[mem[64] + 36] = 128
                            _13534 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13534:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13526 + 68] = this.address
                            mem[_13526 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13518))
                            call address(_13518).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13526 + (32 * _13534) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13646 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13654 = mem[_13646]
                            require mem[_13646] <= test266151307()
                            require _13646 + mem[_13646] + 31 < _13646 + return_data.size
                            _13662 = mem[_13646 + mem[_13646]]
                            if mem[_13646 + mem[_13646]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13646 + mem[_13646]]) + 1 < 0 or _13646 + ceil32(return_data.size) + ceil32(32 * mem[_13646 + mem[_13646]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13646 + ceil32(return_data.size) + ceil32(32 * mem[_13646 + mem[_13646]]) + 1
                            mem[_13646 + ceil32(return_data.size)] = _13662
                            require _13654 + (32 * _13662) + 32 <= return_data.size
                            t = _13646 + ceil32(return_data.size) + 32
                            s = _13646 + _13654 + 32
                            while s < _13646 + _13654 + (32 * _13662) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13742 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_13742]
                        else:
                            mem[mem[64] + 4] = _13373
                            mem[mem[64] + 36] = _13392
                            require ext_code.size(address(_13372))
                            call address(_13372).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _13373, _13392
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13392
                            emit Earn(_13392);
                            _13431 = mem[_610 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13431))
                            staticcall address(_13431).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13455 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_610 + 96] = mem[_13455]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13503 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13511 = mem[_13503]
                            _13519 = mem[_610]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13527 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13511
                            mem[mem[64] + 36] = 128
                            _13535 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_13527 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13519))
                            call address(_13519).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13527 + (32 * _13535) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13647 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13655 = mem[_13647]
                            require mem[_13647] <= test266151307()
                            require _13647 + mem[_13647] + 31 < _13647 + return_data.size
                            _13663 = mem[_13647 + mem[_13647]]
                            if mem[_13647 + mem[_13647]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13647 + mem[_13647]]) + 1 < 0 or _13647 + ceil32(return_data.size) + ceil32(32 * mem[_13647 + mem[_13647]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13647 + ceil32(return_data.size) + ceil32(32 * mem[_13647 + mem[_13647]]) + 1
                            mem[_13647 + ceil32(return_data.size)] = _13663
                            require _13655 + (32 * _13663) + 32 <= return_data.size
                            t = _13647 + ceil32(return_data.size) + 32
                            s = _13647 + _13655 + 32
                            while s < _13647 + _13655 + (32 * _13663) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13743 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_13743]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _610
                s = _2910 - (100 * _2910 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _630
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _630
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _686 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _696 = mem[_686]
            require mem[_686] == mem[_686 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_686 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_696))
            staticcall address(_696).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _730 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _734 = mem[_730]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_696))
            staticcall address(_696).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _748 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _756 = mem[_748]
            if mem[_748] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _734:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _776 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _778 = mem[_776]
            if 10^12 * _756 / _734 and mem[_776] > -1 / 10^12 * _756 / _734:
                revert with 0, 17
            _797 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _756 / _734 * _778 / 10^12
            mem[mem[64] + 36] = 64
            _808 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _808:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _797 + (32 * _808) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1505 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1512 = mem[_1505]
            require mem[_1505] <= test266151307()
            require _1505 + mem[_1505] + 31 < _1505 + return_data.size
            _1519 = mem[_1505 + mem[_1505]]
            if mem[_1505 + mem[_1505]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1505 + mem[_1505]]) + 1 < 0 or _1505 + ceil32(return_data.size) + ceil32(32 * mem[_1505 + mem[_1505]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1505 + ceil32(return_data.size) + ceil32(32 * mem[_1505 + mem[_1505]]) + 1
            mem[_1505 + ceil32(return_data.size)] = _1519
            require _1512 + (32 * _1519) + 32 <= return_data.size
            t = _1505 + ceil32(return_data.size) + 32
            s = _1505 + _1512 + 32
            while s < _1505 + _1512 + (32 * _1519) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1519:
                revert with 0, 50
            _2911 = mem[_1505 + ceil32(return_data.size) + 64]
            if mem[_1505 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1505 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1505 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1505 + ceil32(return_data.size) + 64] < 100 * mem[_1505 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _2951 = mem[_610]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_696))
            staticcall address(_696).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2975 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2983 = mem[_2975]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _2983
            mem[mem[64] + 36] = _2911 - (100 * _2911 / 10000)
            mem[mem[64] + 68] = 160
            _3003 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_2951))
            call address(_2951).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3003) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4331 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4339 = mem[_4331]
            require mem[_4331] <= test266151307()
            require _4331 + mem[_4331] + 31 < _4331 + return_data.size
            _4351 = mem[_4331 + mem[_4331]]
            if mem[_4331 + mem[_4331]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_4331 + mem[_4331]]) + 1 < 0 or _4331 + ceil32(return_data.size) + ceil32(32 * mem[_4331 + mem[_4331]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _4331 + ceil32(return_data.size) + ceil32(32 * mem[_4331 + mem[_4331]]) + 1
            mem[_4331 + ceil32(return_data.size)] = _4351
            require _4339 + (32 * _4351) + 32 <= return_data.size
            t = _4331 + ceil32(return_data.size) + 32
            s = _4331 + _4339 + 32
            while s < _4331 + _4339 + (32 * _4351) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _5853 = mem[_610]
            _5854 = mem[_610 + 192]
            _5855 = mem[_610 + 224]
            _5864 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_5864 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_5864]:
                revert with 0, 50
            mem[_5864 + 32] = stor21
            if stor21 == address(_5854):
                if stor21 == address(_5855):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[_5864 + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    mem[_5864 + ceil32(return_data.size) + 100] = address(_5853)
                    mem[_5864 + ceil32(return_data.size) + 132] = -1
                    require ext_code.size(address(_5854))
                    call address(_5854).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5853), -1
                    mem[_5864 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_5864 + (2 * ceil32(return_data.size)) + 100] = address(_5853)
                    mem[_5864 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_5855))
                    call address(_5855).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5853), -1
                    mem[_5864 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5864 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    _6045 = mem[_610 + 160]
                    _6046 = mem[_610 + 64]
                    _6047 = mem[_610 + 32]
                    mem[_5864 + (4 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_6047))
                    staticcall address(_6047).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5864 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5864 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _6046 >= 999999:
                        mem[_5864 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_6045))
                        call address(_6045).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5864 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6133 = mem[_610 + 32]
                        mem[_5864 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6133))
                        staticcall address(_6133).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5864 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_610 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5864 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5864 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5864 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6273 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5864 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5864 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5864 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_5864 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5864 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5864 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5864 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6273))
                        call address(_6273).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5864 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5864 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5864 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7408 = mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5864 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _7424 = mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5864 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5864 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5864 + (10 * ceil32(return_data.size)) + 96] = _7424
                        require _7408 + (32 * _7424) + 32 <= return_data.size
                        t = _5864 + (10 * ceil32(return_data.size)) + 128
                        s = _5864 + (8 * ceil32(return_data.size)) + _7408 + 128
                        while s < _5864 + (8 * ceil32(return_data.size)) + _7408 + (32 * _7424) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8656 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_8656]
                    else:
                        mem[_5864 + (6 * ceil32(return_data.size)) + 100] = _6046
                        mem[_5864 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_6045))
                        call address(_6045).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _6046, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5864 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6134 = mem[_610 + 32]
                        mem[_5864 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6134))
                        staticcall address(_6134).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5864 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_610 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5864 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5864 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5864 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6274 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5864 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5864 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5864 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_5864 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5864 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5864 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5864 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6274))
                        call address(_6274).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5864 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5864 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5864 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7409 = mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5864 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _7425 = mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5864 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5864 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5864 + (8 * ceil32(return_data.size)) + mem[_5864 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5864 + (10 * ceil32(return_data.size)) + 96] = _7425
                        require _7409 + (32 * _7425) + 32 <= return_data.size
                        t = _5864 + (10 * ceil32(return_data.size)) + 128
                        s = _5864 + (8 * ceil32(return_data.size)) + _7409 + 128
                        while s < _5864 + (8 * ceil32(return_data.size)) + _7409 + (32 * _7425) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8657 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_8657]
                else:
                    if 1 >= mem[_5864]:
                        revert with 0, 50
                    mem[_5864 + 64] = address(_5855)
                    mem[_5864 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5864 + 100] = eth.balance(this.address) / 2
                    mem[_5864 + 132] = 64
                    mem[_5864 + 164] = mem[_5864]
                    s = 0
                    t = _5864 + 32
                    u = _5864 + 196
                    while s < mem[_5864]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5853))
                    staticcall address(_5853).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5864 + (32 * mem[_5864]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7398 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7416 = mem[_7398]
                    require mem[_7398] <= test266151307()
                    require _7398 + mem[_7398] + 31 < _7398 + return_data.size
                    _7432 = mem[_7398 + mem[_7398]]
                    if mem[_7398 + mem[_7398]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7398 + mem[_7398]]) + 1 < 0 or _7398 + ceil32(return_data.size) + ceil32(32 * mem[_7398 + mem[_7398]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7398 + ceil32(return_data.size) + ceil32(32 * mem[_7398 + mem[_7398]]) + 1
                    mem[_7398 + ceil32(return_data.size)] = _7432
                    require _7416 + (32 * _7432) + 32 <= return_data.size
                    t = _7398 + ceil32(return_data.size) + 32
                    s = _7398 + _7416 + 32
                    while s < _7398 + _7416 + (32 * _7432) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7432:
                        revert with 0, 50
                    _8632 = mem[_7398 + ceil32(return_data.size) + 64]
                    if mem[_7398 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7398 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_7398 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _7432:
                        revert with 0, 50
                    _8680 = mem[_7398 + ceil32(return_data.size) + 64]
                    if mem[_7398 + ceil32(return_data.size) + 64] < 100 * mem[_7398 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _8688 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _8680 - (100 * _8632 / 10000)
                    mem[mem[64] + 36] = 128
                    _8696 = mem[_5864]
                    mem[mem[64] + 132] = mem[_5864]
                    s = 0
                    t = _5864 + 32
                    u = mem[64] + 164
                    while s < _8696:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8688 + 68] = this.address
                    mem[_8688 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5853))
                    call address(_5853).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8688 + (32 * _8696) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9816 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9824 = mem[_9816]
                    require mem[_9816] <= test266151307()
                    require _9816 + mem[_9816] + 31 < _9816 + return_data.size
                    _9832 = mem[_9816 + mem[_9816]]
                    if mem[_9816 + mem[_9816]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9816 + mem[_9816]]) + 1 < 0 or _9816 + ceil32(return_data.size) + ceil32(32 * mem[_9816 + mem[_9816]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9816 + ceil32(return_data.size) + ceil32(32 * mem[_9816 + mem[_9816]]) + 1
                    mem[_9816 + ceil32(return_data.size)] = _9832
                    require _9824 + (32 * _9832) + 32 <= return_data.size
                    t = _9816 + ceil32(return_data.size) + 32
                    s = _9816 + _9824 + 32
                    while s < _9816 + _9824 + (32 * _9832) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10925 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_10925] == mem[_10925 + 18 len 14]
                    require mem[_10925 + 32] == mem[_10925 + 50 len 14]
                    require mem[_10925 + 64] == mem[_10925 + 92 len 4]
                    mem[mem[64] + 4] = address(_5853)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5854))
                    call address(_5854).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5853), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11000 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11000] == bool(mem[_11000])
                    mem[mem[64] + 4] = address(_5853)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5855))
                    call address(_5855).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5853), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11040 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11040] == bool(mem[_11040])
                    _11067 = mem[_610 + 160]
                    _11068 = mem[_610 + 64]
                    _11069 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11069))
                    staticcall address(_11069).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11101 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11116 = mem[_11101]
                    if _11068 >= 999999:
                        mem[mem[64] + 4] = mem[_11101]
                        require ext_code.size(address(_11067))
                        call address(_11067).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11116
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11116
                        emit Earn(_11116);
                        _11192 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11192))
                        staticcall address(_11192).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11251 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_11251]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11364 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11384 = mem[_11364]
                        _11400 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11420 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11384
                        mem[mem[64] + 36] = 128
                        _11444 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11444:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11420 + 68] = this.address
                        mem[_11420 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11400))
                        call address(_11400).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11420 + (32 * _11444) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11990 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12010 = mem[_11990]
                        require mem[_11990] <= test266151307()
                        require _11990 + mem[_11990] + 31 < _11990 + return_data.size
                        _12030 = mem[_11990 + mem[_11990]]
                        if mem[_11990 + mem[_11990]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11990 + mem[_11990]]) + 1 < 0 or _11990 + ceil32(return_data.size) + ceil32(32 * mem[_11990 + mem[_11990]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11990 + ceil32(return_data.size) + ceil32(32 * mem[_11990 + mem[_11990]]) + 1
                        mem[_11990 + ceil32(return_data.size)] = _12030
                        require _12010 + (32 * _12030) + 32 <= return_data.size
                        t = _11990 + ceil32(return_data.size) + 32
                        s = _11990 + _12010 + 32
                        while s < _11990 + _12010 + (32 * _12030) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12582 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12582]
                    else:
                        mem[mem[64] + 4] = _11068
                        mem[mem[64] + 36] = _11116
                        require ext_code.size(address(_11067))
                        call address(_11067).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _11068, _11116
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11116
                        emit Earn(_11116);
                        _11193 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11193))
                        staticcall address(_11193).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11252 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_11252]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11365 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11385 = mem[_11365]
                        _11401 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11421 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11385
                        mem[mem[64] + 36] = 128
                        _11445 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11445:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11421 + 68] = this.address
                        mem[_11421 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11401))
                        call address(_11401).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11421 + (32 * _11445) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11991 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12011 = mem[_11991]
                        require mem[_11991] <= test266151307()
                        require _11991 + mem[_11991] + 31 < _11991 + return_data.size
                        _12031 = mem[_11991 + mem[_11991]]
                        if mem[_11991 + mem[_11991]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11991 + mem[_11991]]) + 1 < 0 or _11991 + ceil32(return_data.size) + ceil32(32 * mem[_11991 + mem[_11991]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11991 + ceil32(return_data.size) + ceil32(32 * mem[_11991 + mem[_11991]]) + 1
                        mem[_11991 + ceil32(return_data.size)] = _12031
                        require _12011 + (32 * _12031) + 32 <= return_data.size
                        t = _11991 + ceil32(return_data.size) + 32
                        s = _11991 + _12011 + 32
                        while s < _11991 + _12011 + (32 * _12031) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12583 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12583]
            else:
                if 1 >= mem[_5864]:
                    revert with 0, 50
                mem[_5864 + 64] = address(_5854)
                mem[_5864 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5864 + 100] = eth.balance(this.address) / 2
                mem[_5864 + 132] = 64
                mem[_5864 + 164] = mem[_5864]
                s = 0
                t = _5864 + 32
                u = _5864 + 196
                while s < mem[_5864]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5853))
                staticcall address(_5853).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5864 + (32 * mem[_5864]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7399 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7417 = mem[_7399]
                require mem[_7399] <= test266151307()
                require _7399 + mem[_7399] + 31 < _7399 + return_data.size
                _7433 = mem[_7399 + mem[_7399]]
                if mem[_7399 + mem[_7399]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7399 + mem[_7399]]) + 1 < 0 or _7399 + ceil32(return_data.size) + ceil32(32 * mem[_7399 + mem[_7399]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7399 + ceil32(return_data.size) + ceil32(32 * mem[_7399 + mem[_7399]]) + 1
                mem[_7399 + ceil32(return_data.size)] = _7433
                require _7417 + (32 * _7433) + 32 <= return_data.size
                t = _7399 + ceil32(return_data.size) + 32
                s = _7399 + _7417 + 32
                while s < _7399 + _7417 + (32 * _7433) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7433:
                    revert with 0, 50
                _8633 = mem[_7399 + ceil32(return_data.size) + 64]
                if mem[_7399 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7399 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_7399 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _7433:
                    revert with 0, 50
                _8681 = mem[_7399 + ceil32(return_data.size) + 64]
                if mem[_7399 + ceil32(return_data.size) + 64] < 100 * mem[_7399 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _8681 - (100 * _8633 / 10000)
                mem[mem[64] + 36] = 128
                _8697 = mem[_5864]
                mem[mem[64] + 132] = mem[_5864]
                s = 0
                t = _5864 + 32
                u = mem[64] + 164
                while s < _8697:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_5853))
                call address(_5853).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args _8681 - (100 * _8633 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _8697) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9817 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9825 = mem[_9817]
                require mem[_9817] <= test266151307()
                require _9817 + mem[_9817] + 31 < _9817 + return_data.size
                _9833 = mem[_9817 + mem[_9817]]
                if mem[_9817 + mem[_9817]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9817 + mem[_9817]]) + 1 < 0 or _9817 + ceil32(return_data.size) + ceil32(32 * mem[_9817 + mem[_9817]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9817 + ceil32(return_data.size) + ceil32(32 * mem[_9817 + mem[_9817]]) + 1
                mem[_9817 + ceil32(return_data.size)] = _9833
                require _9825 + (32 * _9833) + 32 <= return_data.size
                t = _9817 + ceil32(return_data.size) + 32
                s = _9817 + _9825 + 32
                while s < _9817 + _9825 + (32 * _9833) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_5855):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10932 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_10932] == mem[_10932 + 18 len 14]
                    require mem[_10932 + 32] == mem[_10932 + 50 len 14]
                    require mem[_10932 + 64] == mem[_10932 + 92 len 4]
                    mem[mem[64] + 4] = address(_5853)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5854))
                    call address(_5854).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5853), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11005 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11005] == bool(mem[_11005])
                    mem[mem[64] + 4] = address(_5853)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5855))
                    call address(_5855).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5853), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11048 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11048] == bool(mem[_11048])
                    _11087 = mem[_610 + 160]
                    _11088 = mem[_610 + 64]
                    _11089 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11089))
                    staticcall address(_11089).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11108 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11121 = mem[_11108]
                    if _11088 >= 999999:
                        mem[mem[64] + 4] = mem[_11108]
                        require ext_code.size(address(_11087))
                        call address(_11087).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11121
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11121
                        emit Earn(_11121);
                        _11223 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11223))
                        staticcall address(_11223).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11260 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_11260]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11375 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11392 = mem[_11375]
                        _11408 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11434 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11392
                        mem[mem[64] + 36] = 128
                        _11455 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11455:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11434 + 68] = this.address
                        mem[_11434 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11408))
                        call address(_11408).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11434 + (32 * _11455) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11992 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12012 = mem[_11992]
                        require mem[_11992] <= test266151307()
                        require _11992 + mem[_11992] + 31 < _11992 + return_data.size
                        _12032 = mem[_11992 + mem[_11992]]
                        if mem[_11992 + mem[_11992]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11992 + mem[_11992]]) + 1 < 0 or _11992 + ceil32(return_data.size) + ceil32(32 * mem[_11992 + mem[_11992]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11992 + ceil32(return_data.size) + ceil32(32 * mem[_11992 + mem[_11992]]) + 1
                        mem[_11992 + ceil32(return_data.size)] = _12032
                        require _12012 + (32 * _12032) + 32 <= return_data.size
                        t = _11992 + ceil32(return_data.size) + 32
                        s = _11992 + _12012 + 32
                        while s < _11992 + _12012 + (32 * _12032) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12584 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12584]
                    else:
                        mem[mem[64] + 4] = _11088
                        mem[mem[64] + 36] = _11121
                        require ext_code.size(address(_11087))
                        call address(_11087).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _11088, _11121
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11121
                        emit Earn(_11121);
                        _11224 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11224))
                        staticcall address(_11224).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11261 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_11261]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11376 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11393 = mem[_11376]
                        _11409 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11435 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11393
                        mem[mem[64] + 36] = 128
                        _11456 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11435 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11409))
                        call address(_11409).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11435 + (32 * _11456) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11993 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12013 = mem[_11993]
                        require mem[_11993] <= test266151307()
                        require _11993 + mem[_11993] + 31 < _11993 + return_data.size
                        _12033 = mem[_11993 + mem[_11993]]
                        if mem[_11993 + mem[_11993]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11993 + mem[_11993]]) + 1 < 0 or _11993 + ceil32(return_data.size) + ceil32(32 * mem[_11993 + mem[_11993]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11993 + ceil32(return_data.size) + ceil32(32 * mem[_11993 + mem[_11993]]) + 1
                        mem[_11993 + ceil32(return_data.size)] = _12033
                        require _12013 + (32 * _12033) + 32 <= return_data.size
                        t = _11993 + ceil32(return_data.size) + 32
                        s = _11993 + _12013 + 32
                        while s < _11993 + _12013 + (32 * _12033) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12585 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12585]
                else:
                    if 1 >= mem[_5864]:
                        revert with 0, 50
                    mem[_5864 + 64] = address(_5855)
                    _10921 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _10933 = mem[_5864]
                    mem[mem[64] + 68] = mem[_5864]
                    s = 0
                    t = _5864 + 32
                    u = mem[64] + 100
                    while s < _10933:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5853))
                    staticcall address(_5853).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _10921 + (32 * _10933) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11997 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12017 = mem[_11997]
                    require mem[_11997] <= test266151307()
                    require _11997 + mem[_11997] + 31 < _11997 + return_data.size
                    _12037 = mem[_11997 + mem[_11997]]
                    if mem[_11997 + mem[_11997]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11997 + mem[_11997]]) + 1 < 0 or _11997 + ceil32(return_data.size) + ceil32(32 * mem[_11997 + mem[_11997]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11997 + ceil32(return_data.size) + ceil32(32 * mem[_11997 + mem[_11997]]) + 1
                    mem[_11997 + ceil32(return_data.size)] = _12037
                    require _12017 + (32 * _12037) + 32 <= return_data.size
                    t = _11997 + ceil32(return_data.size) + 32
                    s = _11997 + _12017 + 32
                    while s < _11997 + _12017 + (32 * _12037) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _12037:
                        revert with 0, 50
                    _12537 = mem[_11997 + ceil32(return_data.size) + 64]
                    if mem[_11997 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11997 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_11997 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _12037:
                        revert with 0, 50
                    _12609 = mem[_11997 + ceil32(return_data.size) + 64]
                    if mem[_11997 + ceil32(return_data.size) + 64] < 100 * mem[_11997 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _12613 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12609 - (100 * _12537 / 10000)
                    mem[mem[64] + 36] = 128
                    _12617 = mem[_5864]
                    mem[mem[64] + 132] = mem[_5864]
                    s = 0
                    t = _5864 + 32
                    u = mem[64] + 164
                    while s < _12617:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_12613 + 68] = this.address
                    mem[_12613 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5853))
                    call address(_5853).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _12613 + (32 * _12617) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12973 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12977 = mem[_12973]
                    require mem[_12973] <= test266151307()
                    require _12973 + mem[_12973] + 31 < _12973 + return_data.size
                    _12981 = mem[_12973 + mem[_12973]]
                    if mem[_12973 + mem[_12973]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12973 + mem[_12973]]) + 1 < 0 or _12973 + ceil32(return_data.size) + ceil32(32 * mem[_12973 + mem[_12973]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12973 + ceil32(return_data.size) + ceil32(32 * mem[_12973 + mem[_12973]]) + 1
                    mem[_12973 + ceil32(return_data.size)] = _12981
                    require _12977 + (32 * _12981) + 32 <= return_data.size
                    t = _12973 + ceil32(return_data.size) + 32
                    s = _12973 + _12977 + 32
                    while s < _12973 + _12977 + (32 * _12981) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13321 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_13321] == mem[_13321 + 18 len 14]
                    require mem[_13321 + 32] == mem[_13321 + 50 len 14]
                    require mem[_13321 + 64] == mem[_13321 + 92 len 4]
                    mem[mem[64] + 4] = address(_5853)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5854))
                    call address(_5854).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5853), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13345 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13345] == bool(mem[_13345])
                    mem[mem[64] + 4] = address(_5853)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5855))
                    call address(_5855).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5853), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13361 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13361] == bool(mem[_13361])
                    _13375 = mem[_610 + 160]
                    _13376 = mem[_610 + 64]
                    _13377 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13377))
                    staticcall address(_13377).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13389 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13393 = mem[_13389]
                    if _13376 >= 999999:
                        mem[mem[64] + 4] = mem[_13389]
                        require ext_code.size(address(_13375))
                        call address(_13375).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13393
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13393
                        emit Earn(_13393);
                        _13432 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13432))
                        staticcall address(_13432).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13456 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_13456]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13504 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13512 = mem[_13504]
                        _13520 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13528 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13512
                        mem[mem[64] + 36] = 128
                        _13536 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13528 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13520))
                        call address(_13520).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13528 + (32 * _13536) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13648 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13656 = mem[_13648]
                        require mem[_13648] <= test266151307()
                        require _13648 + mem[_13648] + 31 < _13648 + return_data.size
                        _13664 = mem[_13648 + mem[_13648]]
                        if mem[_13648 + mem[_13648]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13648 + mem[_13648]]) + 1 < 0 or _13648 + ceil32(return_data.size) + ceil32(32 * mem[_13648 + mem[_13648]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13648 + ceil32(return_data.size) + ceil32(32 * mem[_13648 + mem[_13648]]) + 1
                        mem[_13648 + ceil32(return_data.size)] = _13664
                        require _13656 + (32 * _13664) + 32 <= return_data.size
                        t = _13648 + ceil32(return_data.size) + 32
                        s = _13648 + _13656 + 32
                        while s < _13648 + _13656 + (32 * _13664) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13744 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13744]
                    else:
                        mem[mem[64] + 4] = _13376
                        mem[mem[64] + 36] = _13393
                        require ext_code.size(address(_13375))
                        call address(_13375).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _13376, _13393
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13393
                        emit Earn(_13393);
                        _13433 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13433))
                        staticcall address(_13433).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13457 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_13457]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13505 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13513 = mem[_13505]
                        _13521 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13529 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13513
                        mem[mem[64] + 36] = 128
                        _13537 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13537:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13529 + 68] = this.address
                        mem[_13529 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13521))
                        call address(_13521).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13529 + (32 * _13537) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13649 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13657 = mem[_13649]
                        require mem[_13649] <= test266151307()
                        require _13649 + mem[_13649] + 31 < _13649 + return_data.size
                        _13665 = mem[_13649 + mem[_13649]]
                        if mem[_13649 + mem[_13649]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13649 + mem[_13649]]) + 1 < 0 or _13649 + ceil32(return_data.size) + ceil32(32 * mem[_13649 + mem[_13649]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13649 + ceil32(return_data.size) + ceil32(32 * mem[_13649 + mem[_13649]]) + 1
                        mem[_13649 + ceil32(return_data.size)] = _13665
                        require _13657 + (32 * _13665) + 32 <= return_data.size
                        t = _13649 + ceil32(return_data.size) + 32
                        s = _13649 + _13657 + 32
                        while s < _13649 + _13657 + (32 * _13665) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13745 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13745]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _610
            s = _2911 - (100 * _2911 / 10000)
            s = stor9[idx].field_0
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _620 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _629 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_629] = mem[_620]
        mem[_629 + 32] = mem[_620 + 32]
        mem[_629 + 64] = mem[_620 + 64]
        require return_data.size - 96 >= 96
        _641 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_641] = mem[_620 + 96]
        mem[_641 + 32] = mem[_620 + 128]
        mem[_641 + 64] = mem[_620 + 160]
        mem[_629 + 96] = _641
        mem[_629 + 128] = mem[_620 + 192]
        require return_data.size - 224 >= 96
        _659 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_659] = mem[_620 + 224]
        mem[_659 + 32] = mem[_620 + 256]
        mem[_659 + 64] = mem[_620 + 288]
        mem[_629 + 160] = _659
        _671 = mem[_629 + 64]
        if not mem[_629 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _610
            s = mem[_629 + 64]
            s = stor9[idx].field_0
            continue 
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _688 = mem[64]
        mem[64] = mem[64] + 256
        mem[_688] = strategyInfo[stor9[idx].field_0].field_0
        mem[_688 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_688 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_688 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_688 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_688 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_688 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_688 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 4] = _671
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                 gas gas_remaining wei
                args _671
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _716 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _720 = mem[_716]
            require mem[_716] == mem[_716 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_716 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_720))
            staticcall address(_720).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _757 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _760 = mem[_757]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_720))
            staticcall address(_720).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _767 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _773 = mem[_767]
            if mem[_767] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _760:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _794 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _805 = mem[_794]
            if 10^12 * _773 / _760 and mem[_794] > -1 / 10^12 * _773 / _760:
                revert with 0, 17
            _834 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _773 / _760 * _805 / 10^12
            mem[mem[64] + 36] = 64
            _848 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _848:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _834 + (32 * _848) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1502 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1509 = mem[_1502]
            require mem[_1502] <= test266151307()
            require _1502 + mem[_1502] + 31 < _1502 + return_data.size
            _1516 = mem[_1502 + mem[_1502]]
            if mem[_1502 + mem[_1502]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1502 + mem[_1502]]) + 1 < 0 or _1502 + ceil32(return_data.size) + ceil32(32 * mem[_1502 + mem[_1502]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1502 + ceil32(return_data.size) + ceil32(32 * mem[_1502 + mem[_1502]]) + 1
            mem[_1502 + ceil32(return_data.size)] = _1516
            require _1509 + (32 * _1516) + 32 <= return_data.size
            t = _1502 + ceil32(return_data.size) + 32
            s = _1502 + _1509 + 32
            while s < _1502 + _1509 + (32 * _1516) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1516:
                revert with 0, 50
            _2908 = mem[_1502 + ceil32(return_data.size) + 64]
            if mem[_1502 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1502 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1502 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1502 + ceil32(return_data.size) + 64] < 100 * mem[_1502 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _2948 = mem[_610]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_720))
            staticcall address(_720).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2972 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2980 = mem[_2972]
            if 60 > !block.timestamp:
                revert with 0, 17
            _2994 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _2980
            mem[mem[64] + 36] = _2908 - (100 * _2908 / 10000)
            mem[mem[64] + 68] = 160
            _3000 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _3000:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_2994 + 100] = this.address
            mem[_2994 + 132] = block.timestamp + 60
            require ext_code.size(address(_2948))
            call address(_2948).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _2994 + (32 * _3000) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4328 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4336 = mem[_4328]
            require mem[_4328] <= test266151307()
            require _4328 + mem[_4328] + 31 < _4328 + return_data.size
            _4348 = mem[_4328 + mem[_4328]]
            if mem[_4328 + mem[_4328]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_4328 + mem[_4328]]) + 1 < 0 or _4328 + ceil32(return_data.size) + ceil32(32 * mem[_4328 + mem[_4328]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _4328 + ceil32(return_data.size) + ceil32(32 * mem[_4328 + mem[_4328]]) + 1
            mem[_4328 + ceil32(return_data.size)] = _4348
            require _4336 + (32 * _4348) + 32 <= return_data.size
            t = _4328 + ceil32(return_data.size) + 32
            s = _4328 + _4336 + 32
            while s < _4328 + _4336 + (32 * _4348) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _5844 = mem[_610]
            _5845 = mem[_610 + 192]
            _5846 = mem[_610 + 224]
            _5858 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_5858 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_5858]:
                revert with 0, 50
            mem[_5858 + 32] = stor21
            if stor21 == address(_5845):
                if stor21 == address(_5846):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[_5858 + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    mem[_5858 + ceil32(return_data.size) + 100] = address(_5844)
                    mem[_5858 + ceil32(return_data.size) + 132] = -1
                    require ext_code.size(address(_5845))
                    call address(_5845).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5844), -1
                    mem[_5858 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_5858 + (2 * ceil32(return_data.size)) + 100] = address(_5844)
                    mem[_5858 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_5846))
                    call address(_5846).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5844), -1
                    mem[_5858 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5858 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    _6036 = mem[_610 + 160]
                    _6037 = mem[_610 + 64]
                    _6038 = mem[_610 + 32]
                    mem[_5858 + (4 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_6038))
                    staticcall address(_6038).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5858 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5858 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _6037 >= 999999:
                        mem[_5858 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_6036))
                        call address(_6036).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5858 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6124 = mem[_610 + 32]
                        mem[_5858 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6124))
                        staticcall address(_6124).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5858 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_610 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5858 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5858 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5858 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6264 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5858 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5858 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5858 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_5858 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5858 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5858 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5858 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6264))
                        call address(_6264).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5858 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5858 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5858 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7402 = mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5858 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _7418 = mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5858 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5858 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5858 + (10 * ceil32(return_data.size)) + 96] = _7418
                        require _7402 + (32 * _7418) + 32 <= return_data.size
                        t = _5858 + (10 * ceil32(return_data.size)) + 128
                        s = _5858 + (8 * ceil32(return_data.size)) + _7402 + 128
                        while s < _5858 + (8 * ceil32(return_data.size)) + _7402 + (32 * _7418) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8650 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_8650]
                    else:
                        mem[_5858 + (6 * ceil32(return_data.size)) + 100] = _6037
                        mem[_5858 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_6036))
                        call address(_6036).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _6037, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5858 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6125 = mem[_610 + 32]
                        mem[_5858 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6125))
                        staticcall address(_6125).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5858 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_610 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5858 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5858 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5858 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6265 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5858 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5858 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5858 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_5858 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5858 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5858 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5858 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6265))
                        call address(_6265).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5858 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5858 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5858 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7403 = mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5858 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _7419 = mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5858 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5858 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5858 + (8 * ceil32(return_data.size)) + mem[_5858 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5858 + (10 * ceil32(return_data.size)) + 96] = _7419
                        require _7403 + (32 * _7419) + 32 <= return_data.size
                        t = _5858 + (10 * ceil32(return_data.size)) + 128
                        s = _5858 + (8 * ceil32(return_data.size)) + _7403 + 128
                        while s < _5858 + (8 * ceil32(return_data.size)) + _7403 + (32 * _7419) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8651 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_8651]
                else:
                    if 1 >= mem[_5858]:
                        revert with 0, 50
                    mem[_5858 + 64] = address(_5846)
                    mem[_5858 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5858 + 100] = eth.balance(this.address) / 2
                    mem[_5858 + 132] = 64
                    mem[_5858 + 164] = mem[_5858]
                    s = 0
                    t = _5858 + 32
                    u = _5858 + 196
                    while s < mem[_5858]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5844))
                    staticcall address(_5844).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5858 + (32 * mem[_5858]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7392 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7410 = mem[_7392]
                    require mem[_7392] <= test266151307()
                    require _7392 + mem[_7392] + 31 < _7392 + return_data.size
                    _7426 = mem[_7392 + mem[_7392]]
                    if mem[_7392 + mem[_7392]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7392 + mem[_7392]]) + 1 < 0 or _7392 + ceil32(return_data.size) + ceil32(32 * mem[_7392 + mem[_7392]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7392 + ceil32(return_data.size) + ceil32(32 * mem[_7392 + mem[_7392]]) + 1
                    mem[_7392 + ceil32(return_data.size)] = _7426
                    require _7410 + (32 * _7426) + 32 <= return_data.size
                    t = _7392 + ceil32(return_data.size) + 32
                    s = _7392 + _7410 + 32
                    while s < _7392 + _7410 + (32 * _7426) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7426:
                        revert with 0, 50
                    _8626 = mem[_7392 + ceil32(return_data.size) + 64]
                    if mem[_7392 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7392 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_7392 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _7426:
                        revert with 0, 50
                    _8674 = mem[_7392 + ceil32(return_data.size) + 64]
                    if mem[_7392 + ceil32(return_data.size) + 64] < 100 * mem[_7392 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _8674 - (100 * _8626 / 10000)
                    mem[mem[64] + 36] = 128
                    _8690 = mem[_5858]
                    mem[mem[64] + 132] = mem[_5858]
                    s = 0
                    t = _5858 + 32
                    u = mem[64] + 164
                    while s < _8690:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_5844))
                    call address(_5844).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _8674 - (100 * _8626 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _8690) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9810 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9818 = mem[_9810]
                    require mem[_9810] <= test266151307()
                    require _9810 + mem[_9810] + 31 < _9810 + return_data.size
                    _9826 = mem[_9810 + mem[_9810]]
                    if mem[_9810 + mem[_9810]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9810 + mem[_9810]]) + 1 < 0 or _9810 + ceil32(return_data.size) + ceil32(32 * mem[_9810 + mem[_9810]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9810 + ceil32(return_data.size) + ceil32(32 * mem[_9810 + mem[_9810]]) + 1
                    mem[_9810 + ceil32(return_data.size)] = _9826
                    require _9818 + (32 * _9826) + 32 <= return_data.size
                    t = _9810 + ceil32(return_data.size) + 32
                    s = _9810 + _9818 + 32
                    while s < _9810 + _9818 + (32 * _9826) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10922 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_10922] == mem[_10922 + 18 len 14]
                    require mem[_10922 + 32] == mem[_10922 + 50 len 14]
                    require mem[_10922 + 64] == mem[_10922 + 92 len 4]
                    mem[mem[64] + 4] = address(_5844)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5845))
                    call address(_5845).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5844), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10994 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10994] == bool(mem[_10994])
                    mem[mem[64] + 4] = address(_5844)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5846))
                    call address(_5846).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5844), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11034 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11034] == bool(mem[_11034])
                    _11058 = mem[_610 + 160]
                    _11059 = mem[_610 + 64]
                    _11060 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11060))
                    staticcall address(_11060).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11098 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11110 = mem[_11098]
                    if _11059 >= 999999:
                        mem[mem[64] + 4] = mem[_11098]
                        require ext_code.size(address(_11058))
                        call address(_11058).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11110
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11110
                        emit Earn(_11110);
                        _11174 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11174))
                        staticcall address(_11174).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11242 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_11242]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11358 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11378 = mem[_11358]
                        _11394 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11414 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11378
                        mem[mem[64] + 36] = 128
                        _11438 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11438:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11414 + 68] = this.address
                        mem[_11414 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11394))
                        call address(_11394).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11414 + (32 * _11438) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11978 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11998 = mem[_11978]
                        require mem[_11978] <= test266151307()
                        require _11978 + mem[_11978] + 31 < _11978 + return_data.size
                        _12018 = mem[_11978 + mem[_11978]]
                        if mem[_11978 + mem[_11978]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11978 + mem[_11978]]) + 1 < 0 or _11978 + ceil32(return_data.size) + ceil32(32 * mem[_11978 + mem[_11978]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11978 + ceil32(return_data.size) + ceil32(32 * mem[_11978 + mem[_11978]]) + 1
                        mem[_11978 + ceil32(return_data.size)] = _12018
                        require _11998 + (32 * _12018) + 32 <= return_data.size
                        t = _11978 + ceil32(return_data.size) + 32
                        s = _11978 + _11998 + 32
                        while s < _11978 + _11998 + (32 * _12018) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12570 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12570]
                    else:
                        mem[mem[64] + 4] = _11059
                        mem[mem[64] + 36] = _11110
                        require ext_code.size(address(_11058))
                        call address(_11058).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _11059, _11110
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11110
                        emit Earn(_11110);
                        _11175 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11175))
                        staticcall address(_11175).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11243 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_11243]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11359 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11379 = mem[_11359]
                        _11395 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11415 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11379
                        mem[mem[64] + 36] = 128
                        _11439 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11439:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11415 + 68] = this.address
                        mem[_11415 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11395))
                        call address(_11395).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11415 + (32 * _11439) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11979 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11999 = mem[_11979]
                        require mem[_11979] <= test266151307()
                        require _11979 + mem[_11979] + 31 < _11979 + return_data.size
                        _12019 = mem[_11979 + mem[_11979]]
                        if mem[_11979 + mem[_11979]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11979 + mem[_11979]]) + 1 < 0 or _11979 + ceil32(return_data.size) + ceil32(32 * mem[_11979 + mem[_11979]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11979 + ceil32(return_data.size) + ceil32(32 * mem[_11979 + mem[_11979]]) + 1
                        mem[_11979 + ceil32(return_data.size)] = _12019
                        require _11999 + (32 * _12019) + 32 <= return_data.size
                        t = _11979 + ceil32(return_data.size) + 32
                        s = _11979 + _11999 + 32
                        while s < _11979 + _11999 + (32 * _12019) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12571 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12571]
            else:
                if 1 >= mem[_5858]:
                    revert with 0, 50
                mem[_5858 + 64] = address(_5845)
                mem[_5858 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5858 + 100] = eth.balance(this.address) / 2
                mem[_5858 + 132] = 64
                mem[_5858 + 164] = mem[_5858]
                s = 0
                t = _5858 + 32
                u = _5858 + 196
                while s < mem[_5858]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5844))
                staticcall address(_5844).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5858 + (32 * mem[_5858]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7393 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7411 = mem[_7393]
                require mem[_7393] <= test266151307()
                require _7393 + mem[_7393] + 31 < _7393 + return_data.size
                _7427 = mem[_7393 + mem[_7393]]
                if mem[_7393 + mem[_7393]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7393 + mem[_7393]]) + 1 < 0 or _7393 + ceil32(return_data.size) + ceil32(32 * mem[_7393 + mem[_7393]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7393 + ceil32(return_data.size) + ceil32(32 * mem[_7393 + mem[_7393]]) + 1
                mem[_7393 + ceil32(return_data.size)] = _7427
                require _7411 + (32 * _7427) + 32 <= return_data.size
                t = _7393 + ceil32(return_data.size) + 32
                s = _7393 + _7411 + 32
                while s < _7393 + _7411 + (32 * _7427) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7427:
                    revert with 0, 50
                _8627 = mem[_7393 + ceil32(return_data.size) + 64]
                if mem[_7393 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7393 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_7393 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _7427:
                    revert with 0, 50
                _8675 = mem[_7393 + ceil32(return_data.size) + 64]
                if mem[_7393 + ceil32(return_data.size) + 64] < 100 * mem[_7393 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _8683 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _8675 - (100 * _8627 / 10000)
                mem[mem[64] + 36] = 128
                _8691 = mem[_5858]
                mem[mem[64] + 132] = mem[_5858]
                s = 0
                t = _5858 + 32
                u = mem[64] + 164
                while s < _8691:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_8683 + 68] = this.address
                mem[_8683 + 100] = block.timestamp + 60
                require ext_code.size(address(_5844))
                call address(_5844).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8683 + (32 * _8691) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9811 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9819 = mem[_9811]
                require mem[_9811] <= test266151307()
                require _9811 + mem[_9811] + 31 < _9811 + return_data.size
                _9827 = mem[_9811 + mem[_9811]]
                if mem[_9811 + mem[_9811]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9811 + mem[_9811]]) + 1 < 0 or _9811 + ceil32(return_data.size) + ceil32(32 * mem[_9811 + mem[_9811]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9811 + ceil32(return_data.size) + ceil32(32 * mem[_9811 + mem[_9811]]) + 1
                mem[_9811 + ceil32(return_data.size)] = _9827
                require _9819 + (32 * _9827) + 32 <= return_data.size
                t = _9811 + ceil32(return_data.size) + 32
                s = _9811 + _9819 + 32
                while s < _9811 + _9819 + (32 * _9827) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_5846):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10926 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_10926] == mem[_10926 + 18 len 14]
                    require mem[_10926 + 32] == mem[_10926 + 50 len 14]
                    require mem[_10926 + 64] == mem[_10926 + 92 len 4]
                    mem[mem[64] + 4] = address(_5844)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5845))
                    call address(_5845).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5844), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11002 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11002] == bool(mem[_11002])
                    mem[mem[64] + 4] = address(_5844)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5846))
                    call address(_5846).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5844), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11042 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11042] == bool(mem[_11042])
                    _11072 = mem[_610 + 160]
                    _11073 = mem[_610 + 64]
                    _11074 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11074))
                    staticcall address(_11074).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11102 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11118 = mem[_11102]
                    if _11073 >= 999999:
                        mem[mem[64] + 4] = mem[_11102]
                        require ext_code.size(address(_11072))
                        call address(_11072).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11118
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11118
                        emit Earn(_11118);
                        _11202 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11202))
                        staticcall address(_11202).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11254 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_11254]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11366 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11386 = mem[_11366]
                        _11402 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11422 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11386
                        mem[mem[64] + 36] = 128
                        _11446 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11446:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11422 + 68] = this.address
                        mem[_11422 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11402))
                        call address(_11402).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11422 + (32 * _11446) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11980 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12000 = mem[_11980]
                        require mem[_11980] <= test266151307()
                        require _11980 + mem[_11980] + 31 < _11980 + return_data.size
                        _12020 = mem[_11980 + mem[_11980]]
                        if mem[_11980 + mem[_11980]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11980 + mem[_11980]]) + 1 < 0 or _11980 + ceil32(return_data.size) + ceil32(32 * mem[_11980 + mem[_11980]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11980 + ceil32(return_data.size) + ceil32(32 * mem[_11980 + mem[_11980]]) + 1
                        mem[_11980 + ceil32(return_data.size)] = _12020
                        require _12000 + (32 * _12020) + 32 <= return_data.size
                        t = _11980 + ceil32(return_data.size) + 32
                        s = _11980 + _12000 + 32
                        while s < _11980 + _12000 + (32 * _12020) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12572 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12572]
                    else:
                        mem[mem[64] + 4] = _11073
                        mem[mem[64] + 36] = _11118
                        require ext_code.size(address(_11072))
                        call address(_11072).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _11073, _11118
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11118
                        emit Earn(_11118);
                        _11203 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11203))
                        staticcall address(_11203).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11255 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_11255]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11367 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11387 = mem[_11367]
                        _11403 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11423 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11387
                        mem[mem[64] + 36] = 128
                        _11447 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11447:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11423 + 68] = this.address
                        mem[_11423 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11403))
                        call address(_11403).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11423 + (32 * _11447) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11981 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12001 = mem[_11981]
                        require mem[_11981] <= test266151307()
                        require _11981 + mem[_11981] + 31 < _11981 + return_data.size
                        _12021 = mem[_11981 + mem[_11981]]
                        if mem[_11981 + mem[_11981]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11981 + mem[_11981]]) + 1 < 0 or _11981 + ceil32(return_data.size) + ceil32(32 * mem[_11981 + mem[_11981]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11981 + ceil32(return_data.size) + ceil32(32 * mem[_11981 + mem[_11981]]) + 1
                        mem[_11981 + ceil32(return_data.size)] = _12021
                        require _12001 + (32 * _12021) + 32 <= return_data.size
                        t = _11981 + ceil32(return_data.size) + 32
                        s = _11981 + _12001 + 32
                        while s < _11981 + _12001 + (32 * _12021) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12573 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12573]
                else:
                    if 1 >= mem[_5858]:
                        revert with 0, 50
                    mem[_5858 + 64] = address(_5846)
                    _10912 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _10927 = mem[_5858]
                    mem[mem[64] + 68] = mem[_5858]
                    s = 0
                    t = _5858 + 32
                    u = mem[64] + 100
                    while s < _10927:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5844))
                    staticcall address(_5844).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _10912 + (32 * _10927) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11994 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12014 = mem[_11994]
                    require mem[_11994] <= test266151307()
                    require _11994 + mem[_11994] + 31 < _11994 + return_data.size
                    _12034 = mem[_11994 + mem[_11994]]
                    if mem[_11994 + mem[_11994]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11994 + mem[_11994]]) + 1 < 0 or _11994 + ceil32(return_data.size) + ceil32(32 * mem[_11994 + mem[_11994]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11994 + ceil32(return_data.size) + ceil32(32 * mem[_11994 + mem[_11994]]) + 1
                    mem[_11994 + ceil32(return_data.size)] = _12034
                    require _12014 + (32 * _12034) + 32 <= return_data.size
                    t = _11994 + ceil32(return_data.size) + 32
                    s = _11994 + _12014 + 32
                    while s < _11994 + _12014 + (32 * _12034) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _12034:
                        revert with 0, 50
                    _12534 = mem[_11994 + ceil32(return_data.size) + 64]
                    if mem[_11994 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11994 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_11994 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _12034:
                        revert with 0, 50
                    _12606 = mem[_11994 + ceil32(return_data.size) + 64]
                    if mem[_11994 + ceil32(return_data.size) + 64] < 100 * mem[_11994 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _12610 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12606 - (100 * _12534 / 10000)
                    mem[mem[64] + 36] = 128
                    _12614 = mem[_5858]
                    mem[mem[64] + 132] = mem[_5858]
                    s = 0
                    t = _5858 + 32
                    u = mem[64] + 164
                    while s < _12614:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_12610 + 68] = this.address
                    mem[_12610 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5844))
                    call address(_5844).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _12610 + (32 * _12614) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12970 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12974 = mem[_12970]
                    require mem[_12970] <= test266151307()
                    require _12970 + mem[_12970] + 31 < _12970 + return_data.size
                    _12978 = mem[_12970 + mem[_12970]]
                    if mem[_12970 + mem[_12970]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12970 + mem[_12970]]) + 1 < 0 or _12970 + ceil32(return_data.size) + ceil32(32 * mem[_12970 + mem[_12970]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12970 + ceil32(return_data.size) + ceil32(32 * mem[_12970 + mem[_12970]]) + 1
                    mem[_12970 + ceil32(return_data.size)] = _12978
                    require _12974 + (32 * _12978) + 32 <= return_data.size
                    t = _12970 + ceil32(return_data.size) + 32
                    s = _12970 + _12974 + 32
                    while s < _12970 + _12974 + (32 * _12978) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13318 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_13318] == mem[_13318 + 18 len 14]
                    require mem[_13318 + 32] == mem[_13318 + 50 len 14]
                    require mem[_13318 + 64] == mem[_13318 + 92 len 4]
                    mem[mem[64] + 4] = address(_5844)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5845))
                    call address(_5845).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5844), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13342 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13342] == bool(mem[_13342])
                    mem[mem[64] + 4] = address(_5844)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_5846))
                    call address(_5846).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_5844), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13358 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13358] == bool(mem[_13358])
                    _13366 = mem[_610 + 160]
                    _13367 = mem[_610 + 64]
                    _13368 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13368))
                    staticcall address(_13368).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13386 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13390 = mem[_13386]
                    if _13367 >= 999999:
                        mem[mem[64] + 4] = mem[_13386]
                        require ext_code.size(address(_13366))
                        call address(_13366).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13390
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13390
                        emit Earn(_13390);
                        _13426 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13426))
                        staticcall address(_13426).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13450 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_13450]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13506 = mem[_13498]
                        _13514 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13522 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13506
                        mem[mem[64] + 36] = 128
                        _13530 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13530:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13522 + 68] = this.address
                        mem[_13522 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13514))
                        call address(_13514).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13522 + (32 * _13530) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13642 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13650 = mem[_13642]
                        require mem[_13642] <= test266151307()
                        require _13642 + mem[_13642] + 31 < _13642 + return_data.size
                        _13658 = mem[_13642 + mem[_13642]]
                        if mem[_13642 + mem[_13642]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13642 + mem[_13642]]) + 1 < 0 or _13642 + ceil32(return_data.size) + ceil32(32 * mem[_13642 + mem[_13642]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13642 + ceil32(return_data.size) + ceil32(32 * mem[_13642 + mem[_13642]]) + 1
                        mem[_13642 + ceil32(return_data.size)] = _13658
                        require _13650 + (32 * _13658) + 32 <= return_data.size
                        t = _13642 + ceil32(return_data.size) + 32
                        s = _13642 + _13650 + 32
                        while s < _13642 + _13650 + (32 * _13658) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13738 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13738]
                    else:
                        mem[mem[64] + 4] = _13367
                        mem[mem[64] + 36] = _13390
                        require ext_code.size(address(_13366))
                        call address(_13366).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _13367, _13390
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13390
                        emit Earn(_13390);
                        _13427 = mem[_610 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13427))
                        staticcall address(_13427).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13451 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_610 + 96] = mem[_13451]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13499 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13507 = mem[_13499]
                        _13515 = mem[_610]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13523 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13507
                        mem[mem[64] + 36] = 128
                        _13531 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13523 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13515))
                        call address(_13515).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13523 + (32 * _13531) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13643 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13651 = mem[_13643]
                        require mem[_13643] <= test266151307()
                        require _13643 + mem[_13643] + 31 < _13643 + return_data.size
                        _13659 = mem[_13643 + mem[_13643]]
                        if mem[_13643 + mem[_13643]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13643 + mem[_13643]]) + 1 < 0 or _13643 + ceil32(return_data.size) + ceil32(32 * mem[_13643 + mem[_13643]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13643 + ceil32(return_data.size) + ceil32(32 * mem[_13643 + mem[_13643]]) + 1
                        mem[_13643 + ceil32(return_data.size)] = _13659
                        require _13651 + (32 * _13659) + 32 <= return_data.size
                        t = _13643 + ceil32(return_data.size) + 32
                        s = _13643 + _13651 + 32
                        while s < _13643 + _13651 + (32 * _13659) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13739 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13739]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _610
            s = _2908 - (100 * _2908 / 10000)
            s = stor9[idx].field_0
            continue 
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
        mem[mem[64] + 36] = _671
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
             gas gas_remaining wei
            args strategyInfo[stor9[idx].field_0].field_512, _671
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _717 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _721 = mem[_717]
        require mem[_717] == mem[_717 + 12 len 20]
        if 0 >= mem[96]:
            revert with 0, 50
        mem[128] = mem[_717 + 12 len 20]
        if 1 >= mem[96]:
            revert with 0, 50
        mem[160] = stor21
        require ext_code.size(address(_721))
        staticcall address(_721).0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _758 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _761 = mem[_758]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_721))
        staticcall address(_721).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _768 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _774 = mem[_768]
        if mem[_768] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _761:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _795 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _806 = mem[_795]
        if 10^12 * _774 / _761 and mem[_795] > -1 / 10^12 * _774 / _761:
            revert with 0, 17
        _835 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _774 / _761 * _806 / 10^12
        mem[mem[64] + 36] = 64
        _849 = mem[96]
        mem[mem[64] + 68] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 100
        while s < _849:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _835 + (32 * _849) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1503 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1510 = mem[_1503]
        require mem[_1503] <= test266151307()
        require _1503 + mem[_1503] + 31 < _1503 + return_data.size
        _1517 = mem[_1503 + mem[_1503]]
        if mem[_1503 + mem[_1503]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_1503 + mem[_1503]]) + 1 < 0 or _1503 + ceil32(return_data.size) + ceil32(32 * mem[_1503 + mem[_1503]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _1503 + ceil32(return_data.size) + ceil32(32 * mem[_1503 + mem[_1503]]) + 1
        mem[_1503 + ceil32(return_data.size)] = _1517
        require _1510 + (32 * _1517) + 32 <= return_data.size
        t = _1503 + ceil32(return_data.size) + 32
        s = _1503 + _1510 + 32
        while s < _1503 + _1510 + (32 * _1517) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        if 1 >= _1517:
            revert with 0, 50
        _2909 = mem[_1503 + ceil32(return_data.size) + 64]
        if mem[_1503 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1503 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_1503 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if mem[_1503 + ceil32(return_data.size) + 64] < 100 * mem[_1503 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        _2949 = mem[_610]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_721))
        staticcall address(_721).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2973 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2981 = mem[_2973]
        if 60 > !block.timestamp:
            revert with 0, 17
        _2995 = mem[64]
        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _2981
        mem[mem[64] + 36] = _2909 - (100 * _2909 / 10000)
        mem[mem[64] + 68] = 160
        _3001 = mem[96]
        mem[mem[64] + 164] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 196
        while s < _3001:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_2995 + 100] = this.address
        mem[_2995 + 132] = block.timestamp + 60
        require ext_code.size(address(_2949))
        call address(_2949).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _2995 + (32 * _3001) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4329 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4337 = mem[_4329]
        require mem[_4329] <= test266151307()
        require _4329 + mem[_4329] + 31 < _4329 + return_data.size
        _4349 = mem[_4329 + mem[_4329]]
        if mem[_4329 + mem[_4329]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_4329 + mem[_4329]]) + 1 < 0 or _4329 + ceil32(return_data.size) + ceil32(32 * mem[_4329 + mem[_4329]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _4329 + ceil32(return_data.size) + ceil32(32 * mem[_4329 + mem[_4329]]) + 1
        mem[_4329 + ceil32(return_data.size)] = _4349
        require _4337 + (32 * _4349) + 32 <= return_data.size
        t = _4329 + ceil32(return_data.size) + 32
        s = _4329 + _4337 + 32
        while s < _4329 + _4337 + (32 * _4349) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        _5847 = mem[_610]
        _5848 = mem[_610 + 192]
        _5849 = mem[_610 + 224]
        _5860 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_5860 + 32 len 64] = call.data[calldata.size len 64]
        if not mem[_5860]:
            revert with 0, 50
        mem[_5860 + 32] = stor21
        if stor21 == address(_5848):
            if stor21 == address(_5849):
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[_5860 + 96 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                mem[_5860 + ceil32(return_data.size) + 100] = address(_5847)
                mem[_5860 + ceil32(return_data.size) + 132] = -1
                require ext_code.size(address(_5848))
                call address(_5848).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5847), -1
                mem[_5860 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                mem[_5860 + (2 * ceil32(return_data.size)) + 100] = address(_5847)
                mem[_5860 + (2 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_5849))
                call address(_5849).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5847), -1
                mem[_5860 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _5860 + (4 * ceil32(return_data.size)) + 96
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                _6039 = mem[_610 + 160]
                _6040 = mem[_610 + 64]
                _6041 = mem[_610 + 32]
                mem[_5860 + (4 * ceil32(return_data.size)) + 100] = this.address
                require ext_code.size(address(_6041))
                staticcall address(_6041).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_5860 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _5860 + (6 * ceil32(return_data.size)) + 96
                require return_data.size >= 32
                if _6040 >= 999999:
                    mem[_5860 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(_6039))
                    call address(_6039).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5860 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _6127 = mem[_610 + 32]
                    mem[_5860 + (6 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_6127))
                    staticcall address(_6127).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5860 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_610 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_5860 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5860 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5860 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _6267 = mem[_610]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_5860 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_5860 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_5860 + (8 * ceil32(return_data.size)) + 132] = 128
                    mem[_5860 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _5860 + (8 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_5860 + (8 * ceil32(return_data.size)) + 164] = this.address
                    mem[_5860 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_6267))
                    call address(_6267).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5860 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5860 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _5860 + (10 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7404 = mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5860 + (8 * ceil32(return_data.size)) + return_data.size + 96
                    _7420 = mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5860 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _5860 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_5860 + (10 * ceil32(return_data.size)) + 96] = _7420
                    require _7404 + (32 * _7420) + 32 <= return_data.size
                    t = _5860 + (10 * ceil32(return_data.size)) + 128
                    s = _5860 + (8 * ceil32(return_data.size)) + _7404 + 128
                    while s < _5860 + (8 * ceil32(return_data.size)) + _7404 + (32 * _7420) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8652 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_8652]
                else:
                    mem[_5860 + (6 * ceil32(return_data.size)) + 100] = _6040
                    mem[_5860 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                    require ext_code.size(address(_6039))
                    call address(_6039).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _6040, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5860 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _6128 = mem[_610 + 32]
                    mem[_5860 + (6 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_6128))
                    staticcall address(_6128).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5860 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_610 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_5860 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5860 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5860 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _6268 = mem[_610]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_5860 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_5860 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_5860 + (8 * ceil32(return_data.size)) + 132] = 128
                    mem[_5860 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _5860 + (8 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_5860 + (8 * ceil32(return_data.size)) + 164] = this.address
                    mem[_5860 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_6268))
                    call address(_6268).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5860 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5860 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _5860 + (10 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7405 = mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5860 + (8 * ceil32(return_data.size)) + return_data.size + 96
                    _7421 = mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5860 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _5860 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_5860 + (8 * ceil32(return_data.size)) + mem[_5860 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_5860 + (10 * ceil32(return_data.size)) + 96] = _7421
                    require _7405 + (32 * _7421) + 32 <= return_data.size
                    t = _5860 + (10 * ceil32(return_data.size)) + 128
                    s = _5860 + (8 * ceil32(return_data.size)) + _7405 + 128
                    while s < _5860 + (8 * ceil32(return_data.size)) + _7405 + (32 * _7421) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8653 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_8653]
            else:
                if 1 >= mem[_5860]:
                    revert with 0, 50
                mem[_5860 + 64] = address(_5849)
                mem[_5860 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5860 + 100] = eth.balance(this.address) / 2
                mem[_5860 + 132] = 64
                mem[_5860 + 164] = mem[_5860]
                s = 0
                t = _5860 + 32
                u = _5860 + 196
                while s < mem[_5860]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5847))
                staticcall address(_5847).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5860 + (32 * mem[_5860]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7394 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7412 = mem[_7394]
                require mem[_7394] <= test266151307()
                require _7394 + mem[_7394] + 31 < _7394 + return_data.size
                _7428 = mem[_7394 + mem[_7394]]
                if mem[_7394 + mem[_7394]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7394 + mem[_7394]]) + 1 < 0 or _7394 + ceil32(return_data.size) + ceil32(32 * mem[_7394 + mem[_7394]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7394 + ceil32(return_data.size) + ceil32(32 * mem[_7394 + mem[_7394]]) + 1
                mem[_7394 + ceil32(return_data.size)] = _7428
                require _7412 + (32 * _7428) + 32 <= return_data.size
                t = _7394 + ceil32(return_data.size) + 32
                s = _7394 + _7412 + 32
                while s < _7394 + _7412 + (32 * _7428) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7428:
                    revert with 0, 50
                _8628 = mem[_7394 + ceil32(return_data.size) + 64]
                if mem[_7394 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7394 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_7394 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _7428:
                    revert with 0, 50
                _8676 = mem[_7394 + ceil32(return_data.size) + 64]
                if mem[_7394 + ceil32(return_data.size) + 64] < 100 * mem[_7394 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _8684 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _8676 - (100 * _8628 / 10000)
                mem[mem[64] + 36] = 128
                _8692 = mem[_5860]
                mem[mem[64] + 132] = mem[_5860]
                s = 0
                t = _5860 + 32
                u = mem[64] + 164
                while s < _8692:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_8684 + 68] = this.address
                mem[_8684 + 100] = block.timestamp + 60
                require ext_code.size(address(_5847))
                call address(_5847).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8684 + (32 * _8692) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9812 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9820 = mem[_9812]
                require mem[_9812] <= test266151307()
                require _9812 + mem[_9812] + 31 < _9812 + return_data.size
                _9828 = mem[_9812 + mem[_9812]]
                if mem[_9812 + mem[_9812]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9812 + mem[_9812]]) + 1 < 0 or _9812 + ceil32(return_data.size) + ceil32(32 * mem[_9812 + mem[_9812]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9812 + ceil32(return_data.size) + ceil32(32 * mem[_9812 + mem[_9812]]) + 1
                mem[_9812 + ceil32(return_data.size)] = _9828
                require _9820 + (32 * _9828) + 32 <= return_data.size
                t = _9812 + ceil32(return_data.size) + 32
                s = _9812 + _9820 + 32
                while s < _9812 + _9820 + (32 * _9828) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10923 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_10923] == mem[_10923 + 18 len 14]
                require mem[_10923 + 32] == mem[_10923 + 50 len 14]
                require mem[_10923 + 64] == mem[_10923 + 92 len 4]
                mem[mem[64] + 4] = address(_5847)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5848))
                call address(_5848).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5847), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10996 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10996] == bool(mem[_10996])
                mem[mem[64] + 4] = address(_5847)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5849))
                call address(_5849).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5847), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11036 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_11036] == bool(mem[_11036])
                _11061 = mem[_610 + 160]
                _11062 = mem[_610 + 64]
                _11063 = mem[_610 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11063))
                staticcall address(_11063).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11099 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11112 = mem[_11099]
                if _11062 >= 999999:
                    mem[mem[64] + 4] = mem[_11099]
                    require ext_code.size(address(_11061))
                    call address(_11061).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _11112
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11112
                    emit Earn(_11112);
                    _11180 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11180))
                    staticcall address(_11180).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11245 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_610 + 96] = mem[_11245]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11360 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11380 = mem[_11360]
                    _11396 = mem[_610]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11416 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11380
                    mem[mem[64] + 36] = 128
                    _11440 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_11416 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11396))
                    call address(_11396).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11416 + (32 * _11440) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11982 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12002 = mem[_11982]
                    require mem[_11982] <= test266151307()
                    require _11982 + mem[_11982] + 31 < _11982 + return_data.size
                    _12022 = mem[_11982 + mem[_11982]]
                    if mem[_11982 + mem[_11982]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11982 + mem[_11982]]) + 1 < 0 or _11982 + ceil32(return_data.size) + ceil32(32 * mem[_11982 + mem[_11982]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11982 + ceil32(return_data.size) + ceil32(32 * mem[_11982 + mem[_11982]]) + 1
                    mem[_11982 + ceil32(return_data.size)] = _12022
                    require _12002 + (32 * _12022) + 32 <= return_data.size
                    t = _11982 + ceil32(return_data.size) + 32
                    s = _11982 + _12002 + 32
                    while s < _11982 + _12002 + (32 * _12022) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12574 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12574]
                else:
                    mem[mem[64] + 4] = _11062
                    mem[mem[64] + 36] = _11112
                    require ext_code.size(address(_11061))
                    call address(_11061).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _11062, _11112
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11112
                    emit Earn(_11112);
                    _11181 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11181))
                    staticcall address(_11181).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11246 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_610 + 96] = mem[_11246]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11361 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11381 = mem[_11361]
                    _11397 = mem[_610]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11417 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11381
                    mem[mem[64] + 36] = 128
                    _11441 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11441:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11417 + 68] = this.address
                    mem[_11417 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11397))
                    call address(_11397).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11417 + (32 * _11441) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11983 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12003 = mem[_11983]
                    require mem[_11983] <= test266151307()
                    require _11983 + mem[_11983] + 31 < _11983 + return_data.size
                    _12023 = mem[_11983 + mem[_11983]]
                    if mem[_11983 + mem[_11983]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11983 + mem[_11983]]) + 1 < 0 or _11983 + ceil32(return_data.size) + ceil32(32 * mem[_11983 + mem[_11983]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11983 + ceil32(return_data.size) + ceil32(32 * mem[_11983 + mem[_11983]]) + 1
                    mem[_11983 + ceil32(return_data.size)] = _12023
                    require _12003 + (32 * _12023) + 32 <= return_data.size
                    t = _11983 + ceil32(return_data.size) + 32
                    s = _11983 + _12003 + 32
                    while s < _11983 + _12003 + (32 * _12023) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12575 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12575]
        else:
            if 1 >= mem[_5860]:
                revert with 0, 50
            mem[_5860 + 64] = address(_5848)
            mem[_5860 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_5860 + 100] = eth.balance(this.address) / 2
            mem[_5860 + 132] = 64
            mem[_5860 + 164] = mem[_5860]
            s = 0
            t = _5860 + 32
            u = _5860 + 196
            while s < mem[_5860]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(address(_5847))
            staticcall address(_5847).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _5860 + (32 * mem[_5860]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7395 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7413 = mem[_7395]
            require mem[_7395] <= test266151307()
            require _7395 + mem[_7395] + 31 < _7395 + return_data.size
            _7429 = mem[_7395 + mem[_7395]]
            if mem[_7395 + mem[_7395]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_7395 + mem[_7395]]) + 1 < 0 or _7395 + ceil32(return_data.size) + ceil32(32 * mem[_7395 + mem[_7395]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _7395 + ceil32(return_data.size) + ceil32(32 * mem[_7395 + mem[_7395]]) + 1
            mem[_7395 + ceil32(return_data.size)] = _7429
            require _7413 + (32 * _7429) + 32 <= return_data.size
            t = _7395 + ceil32(return_data.size) + 32
            s = _7395 + _7413 + 32
            while s < _7395 + _7413 + (32 * _7429) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _7429:
                revert with 0, 50
            _8629 = mem[_7395 + ceil32(return_data.size) + 64]
            if mem[_7395 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7395 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_7395 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _7429:
                revert with 0, 50
            _8677 = mem[_7395 + ceil32(return_data.size) + 64]
            if mem[_7395 + ceil32(return_data.size) + 64] < 100 * mem[_7395 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _8685 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _8677 - (100 * _8629 / 10000)
            mem[mem[64] + 36] = 128
            _8693 = mem[_5860]
            mem[mem[64] + 132] = mem[_5860]
            s = 0
            t = _5860 + 32
            u = mem[64] + 164
            while s < _8693:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_8685 + 68] = this.address
            mem[_8685 + 100] = block.timestamp + 60
            require ext_code.size(address(_5847))
            call address(_5847).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8685 + (32 * _8693) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _9813 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _9821 = mem[_9813]
            require mem[_9813] <= test266151307()
            require _9813 + mem[_9813] + 31 < _9813 + return_data.size
            _9829 = mem[_9813 + mem[_9813]]
            if mem[_9813 + mem[_9813]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_9813 + mem[_9813]]) + 1 < 0 or _9813 + ceil32(return_data.size) + ceil32(32 * mem[_9813 + mem[_9813]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _9813 + ceil32(return_data.size) + ceil32(32 * mem[_9813 + mem[_9813]]) + 1
            mem[_9813 + ceil32(return_data.size)] = _9829
            require _9821 + (32 * _9829) + 32 <= return_data.size
            t = _9813 + ceil32(return_data.size) + 32
            s = _9813 + _9821 + 32
            while s < _9813 + _9821 + (32 * _9829) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if stor21 == address(_5849):
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10928 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_10928] == mem[_10928 + 18 len 14]
                require mem[_10928 + 32] == mem[_10928 + 50 len 14]
                require mem[_10928 + 64] == mem[_10928 + 92 len 4]
                mem[mem[64] + 4] = address(_5847)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5848))
                call address(_5848).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5847), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11003 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_11003] == bool(mem[_11003])
                mem[mem[64] + 4] = address(_5847)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5849))
                call address(_5849).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5847), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11044 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_11044] == bool(mem[_11044])
                _11077 = mem[_610 + 160]
                _11078 = mem[_610 + 64]
                _11079 = mem[_610 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11079))
                staticcall address(_11079).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11104 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11119 = mem[_11104]
                if _11078 >= 999999:
                    mem[mem[64] + 4] = mem[_11104]
                    require ext_code.size(address(_11077))
                    call address(_11077).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _11119
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11119
                    emit Earn(_11119);
                    _11209 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11209))
                    staticcall address(_11209).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11256 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_610 + 96] = mem[_11256]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11369 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11388 = mem[_11369]
                    _11404 = mem[_610]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11426 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11388
                    mem[mem[64] + 36] = 128
                    _11449 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11449:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11426 + 68] = this.address
                    mem[_11426 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11404))
                    call address(_11404).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11426 + (32 * _11449) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11984 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12004 = mem[_11984]
                    require mem[_11984] <= test266151307()
                    require _11984 + mem[_11984] + 31 < _11984 + return_data.size
                    _12024 = mem[_11984 + mem[_11984]]
                    if mem[_11984 + mem[_11984]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11984 + mem[_11984]]) + 1 < 0 or _11984 + ceil32(return_data.size) + ceil32(32 * mem[_11984 + mem[_11984]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11984 + ceil32(return_data.size) + ceil32(32 * mem[_11984 + mem[_11984]]) + 1
                    mem[_11984 + ceil32(return_data.size)] = _12024
                    require _12004 + (32 * _12024) + 32 <= return_data.size
                    t = _11984 + ceil32(return_data.size) + 32
                    s = _11984 + _12004 + 32
                    while s < _11984 + _12004 + (32 * _12024) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12576 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12576]
                else:
                    mem[mem[64] + 4] = _11078
                    mem[mem[64] + 36] = _11119
                    require ext_code.size(address(_11077))
                    call address(_11077).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _11078, _11119
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11119
                    emit Earn(_11119);
                    _11210 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11210))
                    staticcall address(_11210).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11257 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_610 + 96] = mem[_11257]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11370 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11389 = mem[_11370]
                    _11405 = mem[_610]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11427 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11389
                    mem[mem[64] + 36] = 128
                    _11450 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11450:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11427 + 68] = this.address
                    mem[_11427 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11405))
                    call address(_11405).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11427 + (32 * _11450) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11985 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12005 = mem[_11985]
                    require mem[_11985] <= test266151307()
                    require _11985 + mem[_11985] + 31 < _11985 + return_data.size
                    _12025 = mem[_11985 + mem[_11985]]
                    if mem[_11985 + mem[_11985]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11985 + mem[_11985]]) + 1 < 0 or _11985 + ceil32(return_data.size) + ceil32(32 * mem[_11985 + mem[_11985]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11985 + ceil32(return_data.size) + ceil32(32 * mem[_11985 + mem[_11985]]) + 1
                    mem[_11985 + ceil32(return_data.size)] = _12025
                    require _12005 + (32 * _12025) + 32 <= return_data.size
                    t = _11985 + ceil32(return_data.size) + 32
                    s = _11985 + _12005 + 32
                    while s < _11985 + _12005 + (32 * _12025) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12577 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12577]
            else:
                if 1 >= mem[_5860]:
                    revert with 0, 50
                mem[_5860 + 64] = address(_5849)
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _10929 = mem[_5860]
                mem[mem[64] + 68] = mem[_5860]
                s = 0
                t = _5860 + 32
                u = mem[64] + 100
                while s < _10929:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5847))
                staticcall address(_5847).getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _10929) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11995 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12015 = mem[_11995]
                require mem[_11995] <= test266151307()
                require _11995 + mem[_11995] + 31 < _11995 + return_data.size
                _12035 = mem[_11995 + mem[_11995]]
                if mem[_11995 + mem[_11995]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11995 + mem[_11995]]) + 1 < 0 or _11995 + ceil32(return_data.size) + ceil32(32 * mem[_11995 + mem[_11995]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11995 + ceil32(return_data.size) + ceil32(32 * mem[_11995 + mem[_11995]]) + 1
                mem[_11995 + ceil32(return_data.size)] = _12035
                require _12015 + (32 * _12035) + 32 <= return_data.size
                t = _11995 + ceil32(return_data.size) + 32
                s = _11995 + _12015 + 32
                while s < _11995 + _12015 + (32 * _12035) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _12035:
                    revert with 0, 50
                _12535 = mem[_11995 + ceil32(return_data.size) + 64]
                if mem[_11995 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11995 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_11995 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _12035:
                    revert with 0, 50
                _12607 = mem[_11995 + ceil32(return_data.size) + 64]
                if mem[_11995 + ceil32(return_data.size) + 64] < 100 * mem[_11995 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _12611 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _12607 - (100 * _12535 / 10000)
                mem[mem[64] + 36] = 128
                _12615 = mem[_5860]
                mem[mem[64] + 132] = mem[_5860]
                s = 0
                t = _5860 + 32
                u = mem[64] + 164
                while s < _12615:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_12611 + 68] = this.address
                mem[_12611 + 100] = block.timestamp + 60
                require ext_code.size(address(_5847))
                call address(_5847).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _12611 + (32 * _12615) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12971 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12975 = mem[_12971]
                require mem[_12971] <= test266151307()
                require _12971 + mem[_12971] + 31 < _12971 + return_data.size
                _12979 = mem[_12971 + mem[_12971]]
                if mem[_12971 + mem[_12971]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_12971 + mem[_12971]]) + 1 < 0 or _12971 + ceil32(return_data.size) + ceil32(32 * mem[_12971 + mem[_12971]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _12971 + ceil32(return_data.size) + ceil32(32 * mem[_12971 + mem[_12971]]) + 1
                mem[_12971 + ceil32(return_data.size)] = _12979
                require _12975 + (32 * _12979) + 32 <= return_data.size
                t = _12971 + ceil32(return_data.size) + 32
                s = _12971 + _12975 + 32
                while s < _12971 + _12975 + (32 * _12979) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13319 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_13319] == mem[_13319 + 18 len 14]
                require mem[_13319 + 32] == mem[_13319 + 50 len 14]
                require mem[_13319 + 64] == mem[_13319 + 92 len 4]
                mem[mem[64] + 4] = address(_5847)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5848))
                call address(_5848).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5847), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13343 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13343] == bool(mem[_13343])
                mem[mem[64] + 4] = address(_5847)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_5849))
                call address(_5849).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_5847), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13359 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13359] == bool(mem[_13359])
                _13369 = mem[_610 + 160]
                _13370 = mem[_610 + 64]
                _13371 = mem[_610 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_13371))
                staticcall address(_13371).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13387 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13391 = mem[_13387]
                if _13370 >= 999999:
                    mem[mem[64] + 4] = mem[_13387]
                    require ext_code.size(address(_13369))
                    call address(_13369).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _13391
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13391
                    emit Earn(_13391);
                    _13428 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13428))
                    staticcall address(_13428).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13452 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_610 + 96] = mem[_13452]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13500 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13508 = mem[_13500]
                    _13516 = mem[_610]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13524 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13508
                    mem[mem[64] + 36] = 128
                    _13532 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _13532:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_13524 + 68] = this.address
                    mem[_13524 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13516))
                    call address(_13516).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13524 + (32 * _13532) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13644 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13652 = mem[_13644]
                    require mem[_13644] <= test266151307()
                    require _13644 + mem[_13644] + 31 < _13644 + return_data.size
                    _13660 = mem[_13644 + mem[_13644]]
                    if mem[_13644 + mem[_13644]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13644 + mem[_13644]]) + 1 < 0 or _13644 + ceil32(return_data.size) + ceil32(32 * mem[_13644 + mem[_13644]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13644 + ceil32(return_data.size) + ceil32(32 * mem[_13644 + mem[_13644]]) + 1
                    mem[_13644 + ceil32(return_data.size)] = _13660
                    require _13652 + (32 * _13660) + 32 <= return_data.size
                    t = _13644 + ceil32(return_data.size) + 32
                    s = _13644 + _13652 + 32
                    while s < _13644 + _13652 + (32 * _13660) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13740 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_13740]
                else:
                    mem[mem[64] + 4] = _13370
                    mem[mem[64] + 36] = _13391
                    require ext_code.size(address(_13369))
                    call address(_13369).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _13370, _13391
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13391
                    emit Earn(_13391);
                    _13429 = mem[_610 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13429))
                    staticcall address(_13429).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13453 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_610 + 96] = mem[_13453]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13501 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13509 = mem[_13501]
                    _13517 = mem[_610]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13525 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13509
                    mem[mem[64] + 36] = 128
                    _13533 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _13533:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_13525 + 68] = this.address
                    mem[_13525 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13517))
                    call address(_13517).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13525 + (32 * _13533) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13645 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13653 = mem[_13645]
                    require mem[_13645] <= test266151307()
                    require _13645 + mem[_13645] + 31 < _13645 + return_data.size
                    _13661 = mem[_13645 + mem[_13645]]
                    if mem[_13645 + mem[_13645]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13645 + mem[_13645]]) + 1 < 0 or _13645 + ceil32(return_data.size) + ceil32(32 * mem[_13645 + mem[_13645]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13645 + ceil32(return_data.size) + ceil32(32 * mem[_13645 + mem[_13645]]) + 1
                    mem[_13645 + ceil32(return_data.size)] = _13661
                    require _13653 + (32 * _13661) + 32 <= return_data.size
                    t = _13645 + ceil32(return_data.size) + 32
                    s = _13645 + _13653 + 32
                    while s < _13645 + _13653 + (32 * _13661) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13741 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_13741]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = _610
        s = _2909 - (100 * _2909 / 10000)
        s = stor9[idx].field_0
        continue 
    _611 = mem[64]
    mem[64] = mem[64] + 256
    mem[_611] = 0
    mem[_611 + 32] = 0
    mem[_611 + 64] = 0
    mem[_611 + 96] = 0
    mem[_611 + 128] = 0
    mem[_611 + 160] = 0
    mem[_611 + 192] = 0
    mem[_611 + 224] = 0
    _615 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_615 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _611
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _1488 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1488] = strategyInfo[stor9[idx].field_0].field_0
        mem[_1488 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_1488 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_1488 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_1488 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_1488 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_1488 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_1488 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1501 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1507 = mem[_1501]
            if not mem[_1501]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_1501]
                v = _1488
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1536 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1546 = mem[_1536]
            require mem[_1536] == mem[_1536 + 18 len 14]
            _1552 = mem[_1536 + 32]
            require mem[_1536 + 32] == mem[_1536 + 50 len 14]
            require mem[_1536 + 64] == mem[_1536 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1560 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1562 = mem[_1560]
            if _1507 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_1560]:
                revert with 0, 18
            if 10^12 * _1507 / mem[_1560] and Mask(112, 0, _1546) > -1 / 10^12 * _1507 / mem[_1560]:
                revert with 0, 17
            if 10^12 * _1507 / mem[_1560] and Mask(112, 0, _1552) > -1 / 10^12 * _1507 / mem[_1560]:
                revert with 0, 17
            if 1 >= mem[_615]:
                revert with 0, 50
            mem[_615 + 64] = stor21
            if 0 >= mem[_615]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_615 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _1622 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1507 / _1562 * Mask(112, 0, _1552) / 10^12
                mem[mem[64] + 36] = 64
                _1633 = mem[_615]
                mem[mem[64] + 68] = mem[_615]
                s = 0
                t = _615 + 32
                u = mem[64] + 100
                while s < _1633:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1622 + (32 * _1633) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2923 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2929 = mem[_2923]
                require mem[_2923] <= test266151307()
                require _2923 + mem[_2923] + 31 < _2923 + return_data.size
                _2935 = mem[_2923 + mem[_2923]]
                if mem[_2923 + mem[_2923]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_2923 + mem[_2923]]) + 1 < 0 or _2923 + ceil32(return_data.size) + ceil32(32 * mem[_2923 + mem[_2923]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _2923 + ceil32(return_data.size) + ceil32(32 * mem[_2923 + mem[_2923]]) + 1
                mem[_2923 + ceil32(return_data.size)] = _2935
                require _2929 + (32 * _2935) + 32 <= return_data.size
                t = _2923 + ceil32(return_data.size) + 32
                s = _2923 + _2929 + 32
                while s < _2923 + _2929 + (32 * _2935) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _2935:
                    revert with 0, 50
                _4323 = mem[_2923 + ceil32(return_data.size) + 64]
                if 10^12 * _1507 / _1562 * Mask(112, 0, _1546) / 10^12 > !mem[_2923 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1488 + 128] = (10^12 * _1507 / _1562 * Mask(112, 0, _1546) / 10^12) + mem[_2923 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1507 / _1562 * Mask(112, 0, _1546) / 10^12) + _4323):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _2923 + ceil32(return_data.size)
                t = 10^12 * _1507 / _1562 * Mask(112, 0, _1552) / 10^12
                u = 10^12 * _1507 / _1562 * Mask(112, 0, _1546) / 10^12
                v = _1507
                v = _1488
                v = stor9[idx].field_0
                v = v + (10^12 * _1507 / _1562 * Mask(112, 0, _1546) / 10^12) + _4323
                continue 
            mem[_615 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _1630 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1507 / _1562 * Mask(112, 0, _1546) / 10^12
                mem[mem[64] + 36] = 64
                _1638 = mem[_615]
                mem[mem[64] + 68] = mem[_615]
                s = 0
                t = _615 + 32
                u = mem[64] + 100
                while s < _1638:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1630 + (32 * _1638) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2922 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2928 = mem[_2922]
                require mem[_2922] <= test266151307()
                require _2922 + mem[_2922] + 31 < _2922 + return_data.size
                _2934 = mem[_2922 + mem[_2922]]
                if mem[_2922 + mem[_2922]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_2922 + mem[_2922]]) + 1 < 0 or _2922 + ceil32(return_data.size) + ceil32(32 * mem[_2922 + mem[_2922]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _2922 + ceil32(return_data.size) + ceil32(32 * mem[_2922 + mem[_2922]]) + 1
                mem[_2922 + ceil32(return_data.size)] = _2934
                require _2928 + (32 * _2934) + 32 <= return_data.size
                t = _2922 + ceil32(return_data.size) + 32
                s = _2922 + _2928 + 32
                while s < _2922 + _2928 + (32 * _2934) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _2934:
                    revert with 0, 50
                _4322 = mem[_2922 + ceil32(return_data.size) + 64]
                if 10^12 * _1507 / _1562 * Mask(112, 0, _1552) / 10^12 > !mem[_2922 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1488 + 128] = (10^12 * _1507 / _1562 * Mask(112, 0, _1552) / 10^12) + mem[_2922 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1507 / _1562 * Mask(112, 0, _1552) / 10^12) + _4322):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _2922 + ceil32(return_data.size)
                t = 10^12 * _1507 / _1562 * Mask(112, 0, _1552) / 10^12
                u = 10^12 * _1507 / _1562 * Mask(112, 0, _1546) / 10^12
                v = _1507
                v = _1488
                v = stor9[idx].field_0
                v = v + (10^12 * _1507 / _1562 * Mask(112, 0, _1552) / 10^12) + _4322
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1639 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1643 = mem[_1639]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1679 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1694 = mem[_1679]
            if mem[_1679] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1643:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1764 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1778 = mem[_1764]
            if 10^12 * _1694 / _1643 and mem[_1764] > -1 / 10^12 * _1694 / _1643:
                revert with 0, 17
            _1824 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1694 / _1643 * _1778 / 10^12
            mem[mem[64] + 36] = 64
            _1843 = mem[_615]
            mem[mem[64] + 68] = mem[_615]
            t = 0
            u = _615 + 32
            w = mem[64] + 100
            while t < _1843:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1824 + (32 * _1843) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2921 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2927 = mem[_2921]
            require mem[_2921] <= test266151307()
            require _2921 + mem[_2921] + 31 < _2921 + return_data.size
            _2933 = mem[_2921 + mem[_2921]]
            if mem[_2921 + mem[_2921]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_2921 + mem[_2921]]) + 1 < 0 or _2921 + ceil32(return_data.size) + ceil32(32 * mem[_2921 + mem[_2921]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _2921 + ceil32(return_data.size) + ceil32(32 * mem[_2921 + mem[_2921]]) + 1
            mem[_2921 + ceil32(return_data.size)] = _2933
            require _2927 + (32 * _2933) + 32 <= return_data.size
            u = _2921 + ceil32(return_data.size) + 32
            t = _2921 + _2927 + 32
            while t < _2921 + _2927 + (32 * _2933) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _2933:
                revert with 0, 50
            _4321 = mem[_2921 + ceil32(return_data.size) + 64]
            mem[_1488 + 128] = mem[_2921 + ceil32(return_data.size) + 64]
            if v > !_4321:
                revert with 0, 17
            if 0 >= mem[_615]:
                revert with 0, 50
            mem[_615 + 32] = mem[_1488 + 236 len 20]
            _4342 = mem[_1488 + 224]
            _4343 = mem[_1488]
            require ext_code.size(mem[_1488 + 236 len 20])
            staticcall mem[_1488 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4353 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4359 = mem[_4353]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_4342))
            staticcall address(_4342).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4369 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4383 = mem[_4369]
            if mem[_4369] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4359:
                revert with 0, 18
            mem[mem[64] + 4] = address(_4343)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_4343)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4433 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4443 = mem[_4433]
            if 10^12 * _4383 / _4359 and mem[_4433] > -1 / 10^12 * _4383 / _4359:
                revert with 0, 17
            _4481 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4383 / _4359 * _4443 / 10^12
            mem[mem[64] + 36] = 64
            _4491 = mem[_615]
            mem[mem[64] + 68] = mem[_615]
            t = 0
            u = _615 + 32
            w = mem[64] + 100
            while t < _4491:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_4343))
            staticcall address(_4343).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4481 + (32 * _4491) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5867 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5869 = mem[_5867]
            require mem[_5867] <= test266151307()
            require _5867 + mem[_5867] + 31 < _5867 + return_data.size
            _5875 = mem[_5867 + mem[_5867]]
            if mem[_5867 + mem[_5867]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5867 + mem[_5867]]) + 1 < 0 or _5867 + ceil32(return_data.size) + ceil32(32 * mem[_5867 + mem[_5867]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5867 + ceil32(return_data.size) + ceil32(32 * mem[_5867 + mem[_5867]]) + 1
            mem[_5867 + ceil32(return_data.size)] = _5875
            require _5869 + (32 * _5875) + 32 <= return_data.size
            u = _5867 + ceil32(return_data.size) + 32
            t = _5867 + _5869 + 32
            while t < _5867 + _5869 + (32 * _5875) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _5875:
                revert with 0, 50
            if mem[_1488 + 128] > !mem[_5867 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1488 + 128] = mem[_1488 + 128] + mem[_5867 + ceil32(return_data.size) + 64]
            if v + _4321 > !mem[_1488 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _1507 / _1562 * Mask(112, 0, _1552) / 10^12
            u = 10^12 * _1507 / _1562 * Mask(112, 0, _1546) / 10^12
            v = _1507
            v = _1488
            v = stor9[idx].field_0
            v = v + _4321 + mem[_1488 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1500 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _1506 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_1506] = mem[_1500]
        mem[_1506 + 32] = mem[_1500 + 32]
        mem[_1506 + 64] = mem[_1500 + 64]
        require return_data.size - 96 >= 96
        _1520 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1520] = mem[_1500 + 96]
        mem[_1520 + 32] = mem[_1500 + 128]
        mem[_1520 + 64] = mem[_1500 + 160]
        mem[_1506 + 96] = _1520
        mem[_1506 + 128] = mem[_1500 + 192]
        require return_data.size - 224 >= 96
        _1532 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1532] = mem[_1500 + 224]
        mem[_1532 + 32] = mem[_1500 + 256]
        mem[_1532 + 64] = mem[_1500 + 288]
        mem[_1506 + 160] = _1532
        _1541 = mem[_1506 + 64]
        if not mem[_1506 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_1506 + 64]
            v = _1488
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1556 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1557 = mem[_1556]
        require mem[_1556] == mem[_1556 + 18 len 14]
        _1561 = mem[_1556 + 32]
        require mem[_1556 + 32] == mem[_1556 + 50 len 14]
        require mem[_1556 + 64] == mem[_1556 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1582 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1587 = mem[_1582]
        if _1541 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_1582]:
            revert with 0, 18
        if 10^12 * _1541 / mem[_1582] and Mask(112, 0, _1557) > -1 / 10^12 * _1541 / mem[_1582]:
            revert with 0, 17
        if 10^12 * _1541 / mem[_1582] and Mask(112, 0, _1561) > -1 / 10^12 * _1541 / mem[_1582]:
            revert with 0, 17
        if 1 >= mem[_615]:
            revert with 0, 50
        mem[_615 + 64] = stor21
        if 0 >= mem[_615]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_615 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            _1661 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1541 / _1587 * Mask(112, 0, _1561) / 10^12
            mem[mem[64] + 36] = 64
            _1691 = mem[_615]
            mem[mem[64] + 68] = mem[_615]
            s = 0
            t = _615 + 32
            u = mem[64] + 100
            while s < _1691:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1661 + (32 * _1691) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2920 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2926 = mem[_2920]
            require mem[_2920] <= test266151307()
            require _2920 + mem[_2920] + 31 < _2920 + return_data.size
            _2932 = mem[_2920 + mem[_2920]]
            if mem[_2920 + mem[_2920]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_2920 + mem[_2920]]) + 1 < 0 or _2920 + ceil32(return_data.size) + ceil32(32 * mem[_2920 + mem[_2920]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _2920 + ceil32(return_data.size) + ceil32(32 * mem[_2920 + mem[_2920]]) + 1
            mem[_2920 + ceil32(return_data.size)] = _2932
            require _2926 + (32 * _2932) + 32 <= return_data.size
            t = _2920 + ceil32(return_data.size) + 32
            s = _2920 + _2926 + 32
            while s < _2920 + _2926 + (32 * _2932) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _2932:
                revert with 0, 50
            _4320 = mem[_2920 + ceil32(return_data.size) + 64]
            if 10^12 * _1541 / _1587 * Mask(112, 0, _1557) / 10^12 > !mem[_2920 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1488 + 128] = (10^12 * _1541 / _1587 * Mask(112, 0, _1557) / 10^12) + mem[_2920 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1541 / _1587 * Mask(112, 0, _1557) / 10^12) + _4320):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _2920 + ceil32(return_data.size)
            t = 10^12 * _1541 / _1587 * Mask(112, 0, _1561) / 10^12
            u = 10^12 * _1541 / _1587 * Mask(112, 0, _1557) / 10^12
            v = _1541
            v = _1488
            v = stor9[idx].field_0
            v = v + (10^12 * _1541 / _1587 * Mask(112, 0, _1557) / 10^12) + _4320
            continue 
        mem[_615 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            _1678 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1541 / _1587 * Mask(112, 0, _1557) / 10^12
            mem[mem[64] + 36] = 64
            _1693 = mem[_615]
            mem[mem[64] + 68] = mem[_615]
            s = 0
            t = _615 + 32
            w = mem[64] + 100
            while s < _1693:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1678 + (32 * _1693) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2919 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2925 = mem[_2919]
            require mem[_2919] <= test266151307()
            require _2919 + mem[_2919] + 31 < _2919 + return_data.size
            _2931 = mem[_2919 + mem[_2919]]
            if mem[_2919 + mem[_2919]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_2919 + mem[_2919]]) + 1 < 0 or _2919 + ceil32(return_data.size) + ceil32(32 * mem[_2919 + mem[_2919]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _2919 + ceil32(return_data.size) + ceil32(32 * mem[_2919 + mem[_2919]]) + 1
            mem[_2919 + ceil32(return_data.size)] = _2931
            require _2925 + (32 * _2931) + 32 <= return_data.size
            t = _2919 + ceil32(return_data.size) + 32
            s = _2919 + _2925 + 32
            while s < _2919 + _2925 + (32 * _2931) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _2931:
                revert with 0, 50
            _4319 = mem[_2919 + ceil32(return_data.size) + 64]
            if 10^12 * _1541 / _1587 * Mask(112, 0, _1561) / 10^12 > !mem[_2919 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1488 + 128] = (10^12 * _1541 / _1587 * Mask(112, 0, _1561) / 10^12) + mem[_2919 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1541 / _1587 * Mask(112, 0, _1561) / 10^12) + _4319):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _2919 + ceil32(return_data.size)
            t = 10^12 * _1541 / _1587 * Mask(112, 0, _1561) / 10^12
            s = 10^12 * _1541 / _1587 * Mask(112, 0, _1557) / 10^12
            v = _1541
            v = _1488
            v = stor9[idx].field_0
            v = v + (10^12 * _1541 / _1587 * Mask(112, 0, _1561) / 10^12) + _4319
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1696 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1701 = mem[_1696]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1737 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1755 = mem[_1737]
        if mem[_1737] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _1701:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1821 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1842 = mem[_1821]
        if 10^12 * _1755 / _1701 and mem[_1821] > -1 / 10^12 * _1755 / _1701:
            revert with 0, 17
        _1890 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _1755 / _1701 * _1842 / 10^12
        mem[mem[64] + 36] = 64
        _1896 = mem[_615]
        mem[mem[64] + 68] = mem[_615]
        t = 0
        u = _615 + 32
        w = mem[64] + 100
        while t < _1896:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _1890 + (32 * _1896) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2918 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2924 = mem[_2918]
        require mem[_2918] <= test266151307()
        require _2918 + mem[_2918] + 31 < _2918 + return_data.size
        _2930 = mem[_2918 + mem[_2918]]
        if mem[_2918 + mem[_2918]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_2918 + mem[_2918]]) + 1 < 0 or _2918 + ceil32(return_data.size) + ceil32(32 * mem[_2918 + mem[_2918]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _2918 + ceil32(return_data.size) + ceil32(32 * mem[_2918 + mem[_2918]]) + 1
        mem[_2918 + ceil32(return_data.size)] = _2930
        require _2924 + (32 * _2930) + 32 <= return_data.size
        u = _2918 + ceil32(return_data.size) + 32
        t = _2918 + _2924 + 32
        while t < _2918 + _2924 + (32 * _2930) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _2930:
            revert with 0, 50
        _4318 = mem[_2918 + ceil32(return_data.size) + 64]
        mem[_1488 + 128] = mem[_2918 + ceil32(return_data.size) + 64]
        if v > !_4318:
            revert with 0, 17
        if 0 >= mem[_615]:
            revert with 0, 50
        mem[_615 + 32] = mem[_1488 + 236 len 20]
        _4340 = mem[_1488 + 224]
        _4341 = mem[_1488]
        require ext_code.size(mem[_1488 + 236 len 20])
        staticcall mem[_1488 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4352 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4358 = mem[_4352]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_4340))
        staticcall address(_4340).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4368 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4382 = mem[_4368]
        if mem[_4368] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _4358:
            revert with 0, 18
        mem[mem[64] + 4] = address(_4341)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_4341)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4432 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4442 = mem[_4432]
        if 10^12 * _4382 / _4358 and mem[_4432] > -1 / 10^12 * _4382 / _4358:
            revert with 0, 17
        _4480 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _4382 / _4358 * _4442 / 10^12
        mem[mem[64] + 36] = 64
        _4490 = mem[_615]
        mem[mem[64] + 68] = mem[_615]
        t = 0
        u = _615 + 32
        w = mem[64] + 100
        while t < _4490:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_4341))
        staticcall address(_4341).mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _4480 + (32 * _4490) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5866 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5868 = mem[_5866]
        require mem[_5866] <= test266151307()
        require _5866 + mem[_5866] + 31 < _5866 + return_data.size
        _5874 = mem[_5866 + mem[_5866]]
        if mem[_5866 + mem[_5866]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5866 + mem[_5866]]) + 1 < 0 or _5866 + ceil32(return_data.size) + ceil32(32 * mem[_5866 + mem[_5866]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5866 + ceil32(return_data.size) + ceil32(32 * mem[_5866 + mem[_5866]]) + 1
        mem[_5866 + ceil32(return_data.size)] = _5874
        require _5868 + (32 * _5874) + 32 <= return_data.size
        u = _5866 + ceil32(return_data.size) + 32
        t = _5866 + _5868 + 32
        while t < _5866 + _5868 + (32 * _5874) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _5874:
            revert with 0, 50
        if mem[_1488 + 128] > !mem[_5866 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_1488 + 128] = mem[_1488 + 128] + mem[_5866 + ceil32(return_data.size) + 64]
        if v + _4318 > !mem[_1488 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _1541 / _1587 * Mask(112, 0, _1561) / 10^12
        u = 10^12 * _1541 / _1587 * Mask(112, 0, _1557) / 10^12
        v = _1541
        v = _1488
        v = stor9[idx].field_0
        v = v + _4318 + mem[_1488 + 128]
        continue 
    emit 0xf9ede3d1 
}

function deposit() payable {
    mem[96] = 2
    mem[128 len 64] = call.data[calldata.size len 64]
    mem[64] = 448
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    idx = 0
    s = 192
    s = 0
    s = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _739 = mem[64]
        mem[64] = mem[64] + 256
        mem[_739] = strategyInfo[stor9[idx].field_0].field_0
        mem[_739 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_739 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_739 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_739 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_739 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_739 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_739 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _750 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _759 = mem[_750]
            if not mem[_750]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _739
                s = mem[_750]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _781 = mem[64]
            mem[64] = mem[64] + 256
            mem[_781] = strategyInfo[stor9[idx].field_0].field_0
            mem[_781 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_781 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_781 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_781 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_781 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_781 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_781 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _759
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _759
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _821 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _835 = mem[_821]
                require mem[_821] == mem[_821 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_821 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_835))
                staticcall address(_835).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _883 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _891 = mem[_883]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_835))
                staticcall address(_835).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _908 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _921 = mem[_908]
                if mem[_908] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _891:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _947 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _952 = mem[_947]
                if 10^12 * _921 / _891 and mem[_947] > -1 / 10^12 * _921 / _891:
                    revert with 0, 17
                _973 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _921 / _891 * _952 / 10^12
                mem[mem[64] + 36] = 64
                _986 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _986:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _973 + (32 * _986) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1764 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1771 = mem[_1764]
                require mem[_1764] <= test266151307()
                require _1764 + mem[_1764] + 31 < _1764 + return_data.size
                _1786 = mem[_1764 + mem[_1764]]
                if mem[_1764 + mem[_1764]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_1764 + mem[_1764]]) + 1 < 0 or _1764 + ceil32(return_data.size) + ceil32(32 * mem[_1764 + mem[_1764]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _1764 + ceil32(return_data.size) + ceil32(32 * mem[_1764 + mem[_1764]]) + 1
                mem[_1764 + ceil32(return_data.size)] = _1786
                require _1771 + (32 * _1786) + 32 <= return_data.size
                t = _1764 + ceil32(return_data.size) + 32
                s = _1764 + _1771 + 32
                while s < _1764 + _1771 + (32 * _1786) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _1786:
                    revert with 0, 50
                _3529 = mem[_1764 + ceil32(return_data.size) + 64]
                if mem[_1764 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1764 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_1764 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_1764 + ceil32(return_data.size) + 64] < 100 * mem[_1764 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _3608 = mem[_739]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_835))
                staticcall address(_835).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3641 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3654 = mem[_3641]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _3679 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3654
                mem[mem[64] + 36] = _3529 - (100 * _3529 / 10000)
                mem[mem[64] + 68] = 160
                _3691 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _3691:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_3679 + 100] = this.address
                mem[_3679 + 132] = block.timestamp + 60
                require ext_code.size(address(_3608))
                call address(_3608).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3679 + (32 * _3691) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5308 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5324 = mem[_5308]
                require mem[_5308] <= test266151307()
                require _5308 + mem[_5308] + 31 < _5308 + return_data.size
                _5344 = mem[_5308 + mem[_5308]]
                if mem[_5308 + mem[_5308]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5308 + mem[_5308]]) + 1 < 0 or _5308 + ceil32(return_data.size) + ceil32(32 * mem[_5308 + mem[_5308]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5308 + ceil32(return_data.size) + ceil32(32 * mem[_5308 + mem[_5308]]) + 1
                mem[_5308 + ceil32(return_data.size)] = _5344
                require _5324 + (32 * _5344) + 32 <= return_data.size
                t = _5308 + ceil32(return_data.size) + 32
                s = _5308 + _5324 + 32
                while s < _5308 + _5324 + (32 * _5344) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _7053 = mem[_739]
                _7054 = mem[_739 + 192]
                _7055 = mem[_739 + 224]
                _7065 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_7065 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_7065]:
                    revert with 0, 50
                mem[_7065 + 32] = stor21
                if stor21 == address(_7054):
                    if stor21 == address(_7055):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[_7065 + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        mem[_7065 + ceil32(return_data.size) + 100] = address(_7053)
                        mem[_7065 + ceil32(return_data.size) + 132] = -1
                        require ext_code.size(address(_7054))
                        call address(_7054).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7053), -1
                        mem[_7065 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_7065 + (2 * ceil32(return_data.size)) + 100] = address(_7053)
                        mem[_7065 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_7055))
                        call address(_7055).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7053), -1
                        mem[_7065 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7065 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        _7301 = mem[_739 + 160]
                        _7302 = mem[_739 + 64]
                        _7303 = mem[_739 + 32]
                        mem[_7065 + (4 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7303))
                        staticcall address(_7303).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7065 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7065 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _7302 >= 999999:
                            mem[_7065 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_7301))
                            call address(_7301).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_7065 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _7418 = mem[_739 + 32]
                            mem[_7065 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_7418))
                            staticcall address(_7418).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_7065 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_739 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_7065 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_7065 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _7065 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7593 = mem[_739]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_7065 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_7065 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_7065 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_7065 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _7065 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_7065 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_7065 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_7593))
                            call address(_7593).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7065 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_7065 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _7065 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _8768 = mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7065 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _8788 = mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7065 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _7065 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_7065 + (10 * ceil32(return_data.size)) + 96] = mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _8768 + (32 * _8788) + 32 <= return_data.size
                            t = _7065 + (10 * ceil32(return_data.size)) + 128
                            s = _7065 + (8 * ceil32(return_data.size)) + _8768 + 128
                            while s < _7065 + (8 * ceil32(return_data.size)) + _8768 + (32 * _8788) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10120 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10120]
                        else:
                            mem[_7065 + (6 * ceil32(return_data.size)) + 100] = _7302
                            mem[_7065 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_7301))
                            call address(_7301).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _7302, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_7065 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _7419 = mem[_739 + 32]
                            mem[_7065 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_7419))
                            staticcall address(_7419).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_7065 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_739 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_7065 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_7065 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _7065 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7594 = mem[_739]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_7065 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_7065 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_7065 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_7065 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _7065 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_7065 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_7065 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_7594))
                            call address(_7594).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7065 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_7065 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _7065 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _8769 = mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7065 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _8789 = mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7065 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _7065 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_7065 + (10 * ceil32(return_data.size)) + 96] = mem[_7065 + (8 * ceil32(return_data.size)) + mem[_7065 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _8769 + (32 * _8789) + 32 <= return_data.size
                            t = _7065 + (10 * ceil32(return_data.size)) + 128
                            s = _7065 + (8 * ceil32(return_data.size)) + _8769 + 128
                            while s < _7065 + (8 * ceil32(return_data.size)) + _8769 + (32 * _8789) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10121 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10121]
                    else:
                        if 1 >= mem[_7065]:
                            revert with 0, 50
                        mem[_7065 + 64] = address(_7055)
                        mem[_7065 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_7065 + 100] = eth.balance(this.address) / 2
                        mem[_7065 + 132] = 64
                        mem[_7065 + 164] = mem[_7065]
                        s = 0
                        t = _7065 + 32
                        u = _7065 + 196
                        while s < mem[_7065]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_7053))
                        staticcall address(_7053).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _7065 + (32 * mem[_7065]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8756 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8778 = mem[_8756]
                        require mem[_8756] <= test266151307()
                        require _8756 + mem[_8756] + 31 < _8756 + return_data.size
                        _8798 = mem[_8756 + mem[_8756]]
                        if mem[_8756 + mem[_8756]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_8756 + mem[_8756]]) + 1 < 0 or _8756 + ceil32(return_data.size) + ceil32(32 * mem[_8756 + mem[_8756]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _8756 + ceil32(return_data.size) + ceil32(32 * mem[_8756 + mem[_8756]]) + 1
                        mem[_8756 + ceil32(return_data.size)] = _8798
                        require _8778 + (32 * _8798) + 32 <= return_data.size
                        t = _8756 + ceil32(return_data.size) + 32
                        s = _8756 + _8778 + 32
                        while s < _8756 + _8778 + (32 * _8798) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _8798:
                            revert with 0, 50
                        _10087 = mem[_8756 + ceil32(return_data.size) + 64]
                        if mem[_8756 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8756 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_8756 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _8798:
                            revert with 0, 50
                        _10154 = mem[_8756 + ceil32(return_data.size) + 64]
                        if mem[_8756 + ceil32(return_data.size) + 64] < 100 * mem[_8756 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10173 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10154 - (100 * _10087 / 10000)
                        mem[mem[64] + 36] = 128
                        _10183 = mem[_7065]
                        mem[mem[64] + 132] = mem[_7065]
                        s = 0
                        t = _7065 + 32
                        u = mem[64] + 164
                        while s < _10183:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10173 + 68] = this.address
                        mem[_10173 + 100] = block.timestamp + 60
                        require ext_code.size(address(_7053))
                        call address(_7053).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10173 + (32 * _10183) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11342 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11351 = mem[_11342]
                        require mem[_11342] <= test266151307()
                        require _11342 + mem[_11342] + 31 < _11342 + return_data.size
                        _11360 = mem[_11342 + mem[_11342]]
                        if mem[_11342 + mem[_11342]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11342 + mem[_11342]]) + 1 < 0 or _11342 + ceil32(return_data.size) + ceil32(32 * mem[_11342 + mem[_11342]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11342 + ceil32(return_data.size) + ceil32(32 * mem[_11342 + mem[_11342]]) + 1
                        mem[_11342 + ceil32(return_data.size)] = _11360
                        require _11351 + (32 * _11360) + 32 <= return_data.size
                        t = _11342 + ceil32(return_data.size) + 32
                        s = _11342 + _11351 + 32
                        while s < _11342 + _11351 + (32 * _11360) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12487 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_12487] == mem[_12487 + 18 len 14]
                        require mem[_12487 + 32] == mem[_12487 + 50 len 14]
                        require mem[_12487 + 64] == mem[_12487 + 92 len 4]
                        mem[mem[64] + 4] = address(_7053)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7054))
                        call address(_7054).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7053), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12564 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12564] == bool(mem[_12564])
                        mem[mem[64] + 4] = address(_7053)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7055))
                        call address(_7055).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7053), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12607 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12607] == bool(mem[_12607])
                        _12636 = mem[_739 + 160]
                        _12637 = mem[_739 + 64]
                        _12638 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12638))
                        staticcall address(_12638).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12673 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12687 = mem[_12673]
                        if _12637 >= 999999:
                            mem[mem[64] + 4] = mem[_12673]
                            require ext_code.size(address(_12636))
                            call address(_12636).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _12687
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _12687
                            emit Earn(_12687);
                            _12763 = mem[_739 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12763))
                            staticcall address(_12763).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_739 + 96] = mem[_12826]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12944 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12965 = mem[_12944]
                            _12982 = mem[_739]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13005 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _12965
                            mem[mem[64] + 36] = 128
                            _13030 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13030:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13005 + 68] = this.address
                            mem[_13005 + 100] = block.timestamp + 60
                            require ext_code.size(address(_12982))
                            call address(_12982).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13005 + (32 * _13030) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13577 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13598 = mem[_13577]
                            require mem[_13577] <= test266151307()
                            require _13577 + mem[_13577] + 31 < _13577 + return_data.size
                            _13619 = mem[_13577 + mem[_13577]]
                            if mem[_13577 + mem[_13577]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13577 + mem[_13577]]) + 1 < 0 or _13577 + ceil32(return_data.size) + ceil32(32 * mem[_13577 + mem[_13577]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13577 + ceil32(return_data.size) + ceil32(32 * mem[_13577 + mem[_13577]]) + 1
                            mem[_13577 + ceil32(return_data.size)] = _13619
                            require _13598 + (32 * _13619) + 32 <= return_data.size
                            t = _13577 + ceil32(return_data.size) + 32
                            s = _13577 + _13598 + 32
                            while s < _13577 + _13598 + (32 * _13619) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14191 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_14191]
                        else:
                            mem[mem[64] + 4] = _12637
                            mem[mem[64] + 36] = _12687
                            require ext_code.size(address(_12636))
                            call address(_12636).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _12637, _12687
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _12687
                            emit Earn(_12687);
                            _12764 = mem[_739 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12764))
                            staticcall address(_12764).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_739 + 96] = mem[_12827]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12945 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12966 = mem[_12945]
                            _12983 = mem[_739]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13006 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _12966
                            mem[mem[64] + 36] = 128
                            _13031 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_13006 + 100] = block.timestamp + 60
                            require ext_code.size(address(_12983))
                            call address(_12983).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13006 + (32 * _13031) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13578 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13599 = mem[_13578]
                            require mem[_13578] <= test266151307()
                            require _13578 + mem[_13578] + 31 < _13578 + return_data.size
                            _13620 = mem[_13578 + mem[_13578]]
                            if mem[_13578 + mem[_13578]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13578 + mem[_13578]]) + 1 < 0 or _13578 + ceil32(return_data.size) + ceil32(32 * mem[_13578 + mem[_13578]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13578 + ceil32(return_data.size) + ceil32(32 * mem[_13578 + mem[_13578]]) + 1
                            mem[_13578 + ceil32(return_data.size)] = _13620
                            require _13599 + (32 * _13620) + 32 <= return_data.size
                            t = _13578 + ceil32(return_data.size) + 32
                            s = _13578 + _13599 + 32
                            while s < _13578 + _13599 + (32 * _13620) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14192 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_14192]
                else:
                    if 1 >= mem[_7065]:
                        revert with 0, 50
                    mem[_7065 + 64] = address(_7054)
                    mem[_7065 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_7065 + 100] = eth.balance(this.address) / 2
                    mem[_7065 + 132] = 64
                    mem[_7065 + 164] = mem[_7065]
                    s = 0
                    t = _7065 + 32
                    u = _7065 + 196
                    while s < mem[_7065]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_7053))
                    staticcall address(_7053).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _7065 + (32 * mem[_7065]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8757 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8779 = mem[_8757]
                    require mem[_8757] <= test266151307()
                    require _8757 + mem[_8757] + 31 < _8757 + return_data.size
                    _8799 = mem[_8757 + mem[_8757]]
                    if mem[_8757 + mem[_8757]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8757 + mem[_8757]]) + 1 < 0 or _8757 + ceil32(return_data.size) + ceil32(32 * mem[_8757 + mem[_8757]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8757 + ceil32(return_data.size) + ceil32(32 * mem[_8757 + mem[_8757]]) + 1
                    mem[_8757 + ceil32(return_data.size)] = _8799
                    require _8779 + (32 * _8799) + 32 <= return_data.size
                    t = _8757 + ceil32(return_data.size) + 32
                    s = _8757 + _8779 + 32
                    while s < _8757 + _8779 + (32 * _8799) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8799:
                        revert with 0, 50
                    _10088 = mem[_8757 + ceil32(return_data.size) + 64]
                    if mem[_8757 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8757 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8757 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8799:
                        revert with 0, 50
                    _10155 = mem[_8757 + ceil32(return_data.size) + 64]
                    if mem[_8757 + ceil32(return_data.size) + 64] < 100 * mem[_8757 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10174 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10155 - (100 * _10088 / 10000)
                    mem[mem[64] + 36] = 128
                    _10184 = mem[_7065]
                    mem[mem[64] + 132] = mem[_7065]
                    s = 0
                    t = _7065 + 32
                    u = mem[64] + 164
                    while s < _10184:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10174 + 68] = this.address
                    mem[_10174 + 100] = block.timestamp + 60
                    require ext_code.size(address(_7053))
                    call address(_7053).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10174 + (32 * _10184) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11343 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11352 = mem[_11343]
                    require mem[_11343] <= test266151307()
                    require _11343 + mem[_11343] + 31 < _11343 + return_data.size
                    _11361 = mem[_11343 + mem[_11343]]
                    if mem[_11343 + mem[_11343]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11343 + mem[_11343]]) + 1 < 0 or _11343 + ceil32(return_data.size) + ceil32(32 * mem[_11343 + mem[_11343]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11343 + ceil32(return_data.size) + ceil32(32 * mem[_11343 + mem[_11343]]) + 1
                    mem[_11343 + ceil32(return_data.size)] = _11361
                    require _11352 + (32 * _11361) + 32 <= return_data.size
                    t = _11343 + ceil32(return_data.size) + 32
                    s = _11343 + _11352 + 32
                    while s < _11343 + _11352 + (32 * _11361) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_7055):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12493 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_12493] == mem[_12493 + 18 len 14]
                        require mem[_12493 + 32] == mem[_12493 + 50 len 14]
                        require mem[_12493 + 64] == mem[_12493 + 92 len 4]
                        mem[mem[64] + 4] = address(_7053)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7054))
                        call address(_7054).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7053), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12570 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12570] == bool(mem[_12570])
                        mem[mem[64] + 4] = address(_7053)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7055))
                        call address(_7055).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7053), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12615 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12615] == bool(mem[_12615])
                        _12654 = mem[_739 + 160]
                        _12655 = mem[_739 + 64]
                        _12656 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12656))
                        staticcall address(_12656).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12679 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12693 = mem[_12679]
                        if _12655 >= 999999:
                            mem[mem[64] + 4] = mem[_12679]
                            require ext_code.size(address(_12654))
                            call address(_12654).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _12693
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _12693
                            emit Earn(_12693);
                            _12793 = mem[_739 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12793))
                            staticcall address(_12793).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12836 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_739 + 96] = mem[_12836]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12955 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12974 = mem[_12955]
                            _12992 = mem[_739]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13018 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _12974
                            mem[mem[64] + 36] = 128
                            _13040 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13040:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13018 + 68] = this.address
                            mem[_13018 + 100] = block.timestamp + 60
                            require ext_code.size(address(_12992))
                            call address(_12992).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13018 + (32 * _13040) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13579 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13600 = mem[_13579]
                            require mem[_13579] <= test266151307()
                            require _13579 + mem[_13579] + 31 < _13579 + return_data.size
                            _13621 = mem[_13579 + mem[_13579]]
                            if mem[_13579 + mem[_13579]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13579 + mem[_13579]]) + 1 < 0 or _13579 + ceil32(return_data.size) + ceil32(32 * mem[_13579 + mem[_13579]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13579 + ceil32(return_data.size) + ceil32(32 * mem[_13579 + mem[_13579]]) + 1
                            mem[_13579 + ceil32(return_data.size)] = _13621
                            require _13600 + (32 * _13621) + 32 <= return_data.size
                            t = _13579 + ceil32(return_data.size) + 32
                            s = _13579 + _13600 + 32
                            while s < _13579 + _13600 + (32 * _13621) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14193 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_14193]
                        else:
                            mem[mem[64] + 4] = _12655
                            mem[mem[64] + 36] = _12693
                            require ext_code.size(address(_12654))
                            call address(_12654).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _12655, _12693
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _12693
                            emit Earn(_12693);
                            _12794 = mem[_739 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12794))
                            staticcall address(_12794).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_739 + 96] = mem[_12837]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12956 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12975 = mem[_12956]
                            _12993 = mem[_739]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13019 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _12975
                            mem[mem[64] + 36] = 128
                            _13041 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13041:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13019 + 68] = this.address
                            mem[_13019 + 100] = block.timestamp + 60
                            require ext_code.size(address(_12993))
                            call address(_12993).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13019 + (32 * _13041) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13580 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13601 = mem[_13580]
                            require mem[_13580] <= test266151307()
                            require _13580 + mem[_13580] + 31 < _13580 + return_data.size
                            _13622 = mem[_13580 + mem[_13580]]
                            if mem[_13580 + mem[_13580]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13580 + mem[_13580]]) + 1 < 0 or _13580 + ceil32(return_data.size) + ceil32(32 * mem[_13580 + mem[_13580]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13580 + ceil32(return_data.size) + ceil32(32 * mem[_13580 + mem[_13580]]) + 1
                            mem[_13580 + ceil32(return_data.size)] = _13622
                            require _13601 + (32 * _13622) + 32 <= return_data.size
                            t = _13580 + ceil32(return_data.size) + 32
                            s = _13580 + _13601 + 32
                            while s < _13580 + _13601 + (32 * _13622) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14194 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_14194]
                    else:
                        if 1 >= mem[_7065]:
                            revert with 0, 50
                        mem[_7065 + 64] = address(_7055)
                        _12481 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _12494 = mem[_7065]
                        mem[mem[64] + 68] = mem[_7065]
                        s = 0
                        t = _7065 + 32
                        u = mem[64] + 100
                        while s < _12494:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_7053))
                        staticcall address(_7053).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _12481 + (32 * _12494) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13587 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13608 = mem[_13587]
                        require mem[_13587] <= test266151307()
                        require _13587 + mem[_13587] + 31 < _13587 + return_data.size
                        _13629 = mem[_13587 + mem[_13587]]
                        if mem[_13587 + mem[_13587]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13587 + mem[_13587]]) + 1 < 0 or _13587 + ceil32(return_data.size) + ceil32(32 * mem[_13587 + mem[_13587]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13587 + ceil32(return_data.size) + ceil32(32 * mem[_13587 + mem[_13587]]) + 1
                        mem[_13587 + ceil32(return_data.size)] = _13629
                        require _13608 + (32 * _13629) + 32 <= return_data.size
                        t = _13587 + ceil32(return_data.size) + 32
                        s = _13587 + _13608 + 32
                        while s < _13587 + _13608 + (32 * _13629) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _13629:
                            revert with 0, 50
                        _14146 = mem[_13587 + ceil32(return_data.size) + 64]
                        if mem[_13587 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13587 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_13587 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _13629:
                            revert with 0, 50
                        _14223 = mem[_13587 + ceil32(return_data.size) + 64]
                        if mem[_13587 + ceil32(return_data.size) + 64] < 100 * mem[_13587 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _14231 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _14223 - (100 * _14146 / 10000)
                        mem[mem[64] + 36] = 128
                        _14236 = mem[_7065]
                        mem[mem[64] + 132] = mem[_7065]
                        s = 0
                        t = _7065 + 32
                        u = mem[64] + 164
                        while s < _14236:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_14231 + 68] = this.address
                        mem[_14231 + 100] = block.timestamp + 60
                        require ext_code.size(address(_7053))
                        call address(_7053).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _14231 + (32 * _14236) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14596 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14600 = mem[_14596]
                        require mem[_14596] <= test266151307()
                        require _14596 + mem[_14596] + 31 < _14596 + return_data.size
                        _14604 = mem[_14596 + mem[_14596]]
                        if mem[_14596 + mem[_14596]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14596 + mem[_14596]]) + 1 < 0 or _14596 + ceil32(return_data.size) + ceil32(32 * mem[_14596 + mem[_14596]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14596 + ceil32(return_data.size) + ceil32(32 * mem[_14596 + mem[_14596]]) + 1
                        mem[_14596 + ceil32(return_data.size)] = _14604
                        require _14600 + (32 * _14604) + 32 <= return_data.size
                        t = _14596 + ceil32(return_data.size) + 32
                        s = _14596 + _14600 + 32
                        while s < _14596 + _14600 + (32 * _14604) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14944 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_14944] == mem[_14944 + 18 len 14]
                        require mem[_14944 + 32] == mem[_14944 + 50 len 14]
                        require mem[_14944 + 64] == mem[_14944 + 92 len 4]
                        mem[mem[64] + 4] = address(_7053)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7054))
                        call address(_7054).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7053), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14968 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14968] == bool(mem[_14968])
                        mem[mem[64] + 4] = address(_7053)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7055))
                        call address(_7055).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7053), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14984 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14984] == bool(mem[_14984])
                        _14996 = mem[_739 + 160]
                        _14997 = mem[_739 + 64]
                        _14998 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_14998))
                        staticcall address(_14998).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15012 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15016 = mem[_15012]
                        if _14997 >= 999999:
                            mem[mem[64] + 4] = mem[_15012]
                            require ext_code.size(address(_14996))
                            call address(_14996).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _15016
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _15016
                            emit Earn(_15016);
                            _15054 = mem[_739 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15054))
                            staticcall address(_15054).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15078 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_739 + 96] = mem[_15078]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15126 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _15134 = mem[_15126]
                            _15142 = mem[_739]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _15150 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _15134
                            mem[mem[64] + 36] = 128
                            _15158 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_15150 + 100] = block.timestamp + 60
                            require ext_code.size(address(_15142))
                            call address(_15142).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _15150 + (32 * _15158) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15270 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _15278 = mem[_15270]
                            require mem[_15270] <= test266151307()
                            require _15270 + mem[_15270] + 31 < _15270 + return_data.size
                            _15286 = mem[_15270 + mem[_15270]]
                            if mem[_15270 + mem[_15270]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15270 + mem[_15270]]) + 1 < 0 or _15270 + ceil32(return_data.size) + ceil32(32 * mem[_15270 + mem[_15270]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _15270 + ceil32(return_data.size) + ceil32(32 * mem[_15270 + mem[_15270]]) + 1
                            mem[_15270 + ceil32(return_data.size)] = _15286
                            require _15278 + (32 * _15286) + 32 <= return_data.size
                            t = _15270 + ceil32(return_data.size) + 32
                            s = _15270 + _15278 + 32
                            while s < _15270 + _15278 + (32 * _15286) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15366 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_15366]
                        else:
                            mem[mem[64] + 4] = _14997
                            mem[mem[64] + 36] = _15016
                            require ext_code.size(address(_14996))
                            call address(_14996).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _14997, _15016
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _15016
                            emit Earn(_15016);
                            _15055 = mem[_739 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15055))
                            staticcall address(_15055).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15079 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_739 + 96] = mem[_15079]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15127 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _15135 = mem[_15127]
                            _15143 = mem[_739]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _15151 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _15135
                            mem[mem[64] + 36] = 128
                            _15159 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _15159:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15151 + 68] = this.address
                            mem[_15151 + 100] = block.timestamp + 60
                            require ext_code.size(address(_15143))
                            call address(_15143).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _15151 + (32 * _15159) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15271 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _15279 = mem[_15271]
                            require mem[_15271] <= test266151307()
                            require _15271 + mem[_15271] + 31 < _15271 + return_data.size
                            _15287 = mem[_15271 + mem[_15271]]
                            if mem[_15271 + mem[_15271]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15271 + mem[_15271]]) + 1 < 0 or _15271 + ceil32(return_data.size) + ceil32(32 * mem[_15271 + mem[_15271]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _15271 + ceil32(return_data.size) + ceil32(32 * mem[_15271 + mem[_15271]]) + 1
                            mem[_15271 + ceil32(return_data.size)] = _15287
                            require _15279 + (32 * _15287) + 32 <= return_data.size
                            t = _15271 + ceil32(return_data.size) + 32
                            s = _15271 + _15279 + 32
                            while s < _15271 + _15279 + (32 * _15287) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15367 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_15367]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _739
                s = _3529 - (100 * _3529 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _759
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _759
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _822 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _836 = mem[_822]
            require mem[_822] == mem[_822 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_822 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_836))
            staticcall address(_836).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _884 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _892 = mem[_884]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_836))
            staticcall address(_836).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _909 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _922 = mem[_909]
            if mem[_909] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _892:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _948 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _953 = mem[_948]
            if 10^12 * _922 / _892 and mem[_948] > -1 / 10^12 * _922 / _892:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _922 / _892 * _953 / 10^12
            mem[mem[64] + 36] = 64
            _987 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _987) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1765 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1772 = mem[_1765]
            require mem[_1765] <= test266151307()
            require _1765 + mem[_1765] + 31 < _1765 + return_data.size
            _1787 = mem[_1765 + mem[_1765]]
            if mem[_1765 + mem[_1765]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1765 + mem[_1765]]) + 1 < 0 or _1765 + ceil32(return_data.size) + ceil32(32 * mem[_1765 + mem[_1765]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1765 + ceil32(return_data.size) + ceil32(32 * mem[_1765 + mem[_1765]]) + 1
            mem[_1765 + ceil32(return_data.size)] = _1787
            require _1772 + (32 * _1787) + 32 <= return_data.size
            t = _1765 + ceil32(return_data.size) + 32
            s = _1765 + _1772 + 32
            while s < _1765 + _1772 + (32 * _1787) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1787:
                revert with 0, 50
            _3530 = mem[_1765 + ceil32(return_data.size) + 64]
            if mem[_1765 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1765 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1765 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1765 + ceil32(return_data.size) + 64] < 100 * mem[_1765 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _3609 = mem[_739]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_836))
            staticcall address(_836).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3642 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3655 = mem[_3642]
            if 60 > !block.timestamp:
                revert with 0, 17
            _3680 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3655
            mem[mem[64] + 36] = _3530 - (100 * _3530 / 10000)
            mem[mem[64] + 68] = 160
            _3692 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _3692:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_3680 + 100] = this.address
            mem[_3680 + 132] = block.timestamp + 60
            require ext_code.size(address(_3609))
            call address(_3609).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3680 + (32 * _3692) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5309 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5325 = mem[_5309]
            require mem[_5309] <= test266151307()
            require _5309 + mem[_5309] + 31 < _5309 + return_data.size
            _5345 = mem[_5309 + mem[_5309]]
            if mem[_5309 + mem[_5309]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5309 + mem[_5309]]) + 1 < 0 or _5309 + ceil32(return_data.size) + ceil32(32 * mem[_5309 + mem[_5309]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5309 + ceil32(return_data.size) + ceil32(32 * mem[_5309 + mem[_5309]]) + 1
            mem[_5309 + ceil32(return_data.size)] = _5345
            require _5325 + (32 * _5345) + 32 <= return_data.size
            t = _5309 + ceil32(return_data.size) + 32
            s = _5309 + _5325 + 32
            while s < _5309 + _5325 + (32 * _5345) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _7056 = mem[_739]
            _7057 = mem[_739 + 192]
            _7058 = mem[_739 + 224]
            _7067 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_7067 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_7067]:
                revert with 0, 50
            mem[_7067 + 32] = stor21
            if stor21 == address(_7057):
                if stor21 == address(_7058):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[_7067 + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    mem[_7067 + ceil32(return_data.size) + 100] = address(_7056)
                    mem[_7067 + ceil32(return_data.size) + 132] = -1
                    require ext_code.size(address(_7057))
                    call address(_7057).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7056), -1
                    mem[_7067 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_7067 + (2 * ceil32(return_data.size)) + 100] = address(_7056)
                    mem[_7067 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_7058))
                    call address(_7058).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7056), -1
                    mem[_7067 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7067 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    _7304 = mem[_739 + 160]
                    _7305 = mem[_739 + 64]
                    _7306 = mem[_739 + 32]
                    mem[_7067 + (4 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_7306))
                    staticcall address(_7306).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7067 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7067 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _7305 >= 999999:
                        mem[_7067 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_7304))
                        call address(_7304).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7067 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _7421 = mem[_739 + 32]
                        mem[_7067 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7421))
                        staticcall address(_7421).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7067 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_739 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_7067 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7067 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7067 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7596 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7067 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7067 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_7067 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_7067 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _7067 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7067 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_7067 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7596))
                        call address(_7596).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7067 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7067 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7067 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8770 = mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7067 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _8790 = mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7067 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _7067 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_7067 + (10 * ceil32(return_data.size)) + 96] = mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _8770 + (32 * _8790) + 32 <= return_data.size
                        t = _7067 + (10 * ceil32(return_data.size)) + 128
                        s = _7067 + (8 * ceil32(return_data.size)) + _8770 + 128
                        while s < _7067 + (8 * ceil32(return_data.size)) + _8770 + (32 * _8790) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10122 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10122]
                    else:
                        mem[_7067 + (6 * ceil32(return_data.size)) + 100] = _7305
                        mem[_7067 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_7304))
                        call address(_7304).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _7305, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7067 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _7422 = mem[_739 + 32]
                        mem[_7067 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7422))
                        staticcall address(_7422).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7067 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_739 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_7067 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7067 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7067 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7597 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7067 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7067 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_7067 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_7067 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _7067 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7067 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_7067 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7597))
                        call address(_7597).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7067 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7067 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7067 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8771 = mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7067 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _8791 = mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7067 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _7067 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_7067 + (10 * ceil32(return_data.size)) + 96] = mem[_7067 + (8 * ceil32(return_data.size)) + mem[_7067 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _8771 + (32 * _8791) + 32 <= return_data.size
                        t = _7067 + (10 * ceil32(return_data.size)) + 128
                        s = _7067 + (8 * ceil32(return_data.size)) + _8771 + 128
                        while s < _7067 + (8 * ceil32(return_data.size)) + _8771 + (32 * _8791) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10123 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10123]
                else:
                    if 1 >= mem[_7067]:
                        revert with 0, 50
                    mem[_7067 + 64] = address(_7058)
                    mem[_7067 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_7067 + 100] = eth.balance(this.address) / 2
                    mem[_7067 + 132] = 64
                    mem[_7067 + 164] = mem[_7067]
                    s = 0
                    t = _7067 + 32
                    u = _7067 + 196
                    while s < mem[_7067]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_7056))
                    staticcall address(_7056).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _7067 + (32 * mem[_7067]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8758 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8780 = mem[_8758]
                    require mem[_8758] <= test266151307()
                    require _8758 + mem[_8758] + 31 < _8758 + return_data.size
                    _8800 = mem[_8758 + mem[_8758]]
                    if mem[_8758 + mem[_8758]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8758 + mem[_8758]]) + 1 < 0 or _8758 + ceil32(return_data.size) + ceil32(32 * mem[_8758 + mem[_8758]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8758 + ceil32(return_data.size) + ceil32(32 * mem[_8758 + mem[_8758]]) + 1
                    mem[_8758 + ceil32(return_data.size)] = _8800
                    require _8780 + (32 * _8800) + 32 <= return_data.size
                    t = _8758 + ceil32(return_data.size) + 32
                    s = _8758 + _8780 + 32
                    while s < _8758 + _8780 + (32 * _8800) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8800:
                        revert with 0, 50
                    _10089 = mem[_8758 + ceil32(return_data.size) + 64]
                    if mem[_8758 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8758 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8758 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8800:
                        revert with 0, 50
                    _10156 = mem[_8758 + ceil32(return_data.size) + 64]
                    if mem[_8758 + ceil32(return_data.size) + 64] < 100 * mem[_8758 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10175 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10156 - (100 * _10089 / 10000)
                    mem[mem[64] + 36] = 128
                    _10185 = mem[_7067]
                    mem[mem[64] + 132] = mem[_7067]
                    s = 0
                    t = _7067 + 32
                    u = mem[64] + 164
                    while s < _10185:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10175 + 68] = this.address
                    mem[_10175 + 100] = block.timestamp + 60
                    require ext_code.size(address(_7056))
                    call address(_7056).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10175 + (32 * _10185) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11344 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11353 = mem[_11344]
                    require mem[_11344] <= test266151307()
                    require _11344 + mem[_11344] + 31 < _11344 + return_data.size
                    _11362 = mem[_11344 + mem[_11344]]
                    if mem[_11344 + mem[_11344]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11344 + mem[_11344]]) + 1 < 0 or _11344 + ceil32(return_data.size) + ceil32(32 * mem[_11344 + mem[_11344]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11344 + ceil32(return_data.size) + ceil32(32 * mem[_11344 + mem[_11344]]) + 1
                    mem[_11344 + ceil32(return_data.size)] = _11362
                    require _11353 + (32 * _11362) + 32 <= return_data.size
                    t = _11344 + ceil32(return_data.size) + 32
                    s = _11344 + _11353 + 32
                    while s < _11344 + _11353 + (32 * _11362) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12488 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_12488] == mem[_12488 + 18 len 14]
                    require mem[_12488 + 32] == mem[_12488 + 50 len 14]
                    require mem[_12488 + 64] == mem[_12488 + 92 len 4]
                    mem[mem[64] + 4] = address(_7056)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7057))
                    call address(_7057).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7056), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12566 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12566] == bool(mem[_12566])
                    mem[mem[64] + 4] = address(_7056)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7058))
                    call address(_7058).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7056), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12609 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12609] == bool(mem[_12609])
                    _12639 = mem[_739 + 160]
                    _12640 = mem[_739 + 64]
                    _12641 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12641))
                    staticcall address(_12641).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12674 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12689 = mem[_12674]
                    if _12640 >= 999999:
                        mem[mem[64] + 4] = mem[_12674]
                        require ext_code.size(address(_12639))
                        call address(_12639).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _12689
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12689
                        emit Earn(_12689);
                        _12769 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12769))
                        staticcall address(_12769).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12829 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_12829]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12946 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12967 = mem[_12946]
                        _12984 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13007 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12967
                        mem[mem[64] + 36] = 128
                        _13032 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13032:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13007 + 68] = this.address
                        mem[_13007 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12984))
                        call address(_12984).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13007 + (32 * _13032) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13581 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13602 = mem[_13581]
                        require mem[_13581] <= test266151307()
                        require _13581 + mem[_13581] + 31 < _13581 + return_data.size
                        _13623 = mem[_13581 + mem[_13581]]
                        if mem[_13581 + mem[_13581]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13581 + mem[_13581]]) + 1 < 0 or _13581 + ceil32(return_data.size) + ceil32(32 * mem[_13581 + mem[_13581]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13581 + ceil32(return_data.size) + ceil32(32 * mem[_13581 + mem[_13581]]) + 1
                        mem[_13581 + ceil32(return_data.size)] = _13623
                        require _13602 + (32 * _13623) + 32 <= return_data.size
                        t = _13581 + ceil32(return_data.size) + 32
                        s = _13581 + _13602 + 32
                        while s < _13581 + _13602 + (32 * _13623) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14195 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14195]
                    else:
                        mem[mem[64] + 4] = _12640
                        mem[mem[64] + 36] = _12689
                        require ext_code.size(address(_12639))
                        call address(_12639).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _12640, _12689
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12689
                        emit Earn(_12689);
                        _12770 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12770))
                        staticcall address(_12770).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12830 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_12830]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12947 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12968 = mem[_12947]
                        _12985 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13008 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12968
                        mem[mem[64] + 36] = 128
                        _13033 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13033:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13008 + 68] = this.address
                        mem[_13008 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12985))
                        call address(_12985).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13008 + (32 * _13033) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13582 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13603 = mem[_13582]
                        require mem[_13582] <= test266151307()
                        require _13582 + mem[_13582] + 31 < _13582 + return_data.size
                        _13624 = mem[_13582 + mem[_13582]]
                        if mem[_13582 + mem[_13582]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13582 + mem[_13582]]) + 1 < 0 or _13582 + ceil32(return_data.size) + ceil32(32 * mem[_13582 + mem[_13582]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13582 + ceil32(return_data.size) + ceil32(32 * mem[_13582 + mem[_13582]]) + 1
                        mem[_13582 + ceil32(return_data.size)] = _13624
                        require _13603 + (32 * _13624) + 32 <= return_data.size
                        t = _13582 + ceil32(return_data.size) + 32
                        s = _13582 + _13603 + 32
                        while s < _13582 + _13603 + (32 * _13624) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14196 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14196]
            else:
                if 1 >= mem[_7067]:
                    revert with 0, 50
                mem[_7067 + 64] = address(_7057)
                mem[_7067 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_7067 + 100] = eth.balance(this.address) / 2
                mem[_7067 + 132] = 64
                mem[_7067 + 164] = mem[_7067]
                s = 0
                t = _7067 + 32
                u = _7067 + 196
                while s < mem[_7067]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_7056))
                staticcall address(_7056).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _7067 + (32 * mem[_7067]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8759 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8781 = mem[_8759]
                require mem[_8759] <= test266151307()
                require _8759 + mem[_8759] + 31 < _8759 + return_data.size
                _8801 = mem[_8759 + mem[_8759]]
                if mem[_8759 + mem[_8759]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8759 + mem[_8759]]) + 1 < 0 or _8759 + ceil32(return_data.size) + ceil32(32 * mem[_8759 + mem[_8759]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8759 + ceil32(return_data.size) + ceil32(32 * mem[_8759 + mem[_8759]]) + 1
                mem[_8759 + ceil32(return_data.size)] = _8801
                require _8781 + (32 * _8801) + 32 <= return_data.size
                t = _8759 + ceil32(return_data.size) + 32
                s = _8759 + _8781 + 32
                while s < _8759 + _8781 + (32 * _8801) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8801:
                    revert with 0, 50
                _10090 = mem[_8759 + ceil32(return_data.size) + 64]
                if mem[_8759 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8759 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8759 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8801:
                    revert with 0, 50
                _10157 = mem[_8759 + ceil32(return_data.size) + 64]
                if mem[_8759 + ceil32(return_data.size) + 64] < 100 * mem[_8759 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _10176 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _10157 - (100 * _10090 / 10000)
                mem[mem[64] + 36] = 128
                _10186 = mem[_7067]
                mem[mem[64] + 132] = mem[_7067]
                s = 0
                t = _7067 + 32
                u = mem[64] + 164
                while s < _10186:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_10176 + 68] = this.address
                mem[_10176 + 100] = block.timestamp + 60
                require ext_code.size(address(_7056))
                call address(_7056).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _10176 + (32 * _10186) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11345 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11354 = mem[_11345]
                require mem[_11345] <= test266151307()
                require _11345 + mem[_11345] + 31 < _11345 + return_data.size
                _11363 = mem[_11345 + mem[_11345]]
                if mem[_11345 + mem[_11345]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11345 + mem[_11345]]) + 1 < 0 or _11345 + ceil32(return_data.size) + ceil32(32 * mem[_11345 + mem[_11345]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11345 + ceil32(return_data.size) + ceil32(32 * mem[_11345 + mem[_11345]]) + 1
                mem[_11345 + ceil32(return_data.size)] = _11363
                require _11354 + (32 * _11363) + 32 <= return_data.size
                t = _11345 + ceil32(return_data.size) + 32
                s = _11345 + _11354 + 32
                while s < _11345 + _11354 + (32 * _11363) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_7058):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12495 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_12495] == mem[_12495 + 18 len 14]
                    require mem[_12495 + 32] == mem[_12495 + 50 len 14]
                    require mem[_12495 + 64] == mem[_12495 + 92 len 4]
                    mem[mem[64] + 4] = address(_7056)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7057))
                    call address(_7057).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7056), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12571 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12571] == bool(mem[_12571])
                    mem[mem[64] + 4] = address(_7056)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7058))
                    call address(_7058).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7056), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12617 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12617] == bool(mem[_12617])
                    _12659 = mem[_739 + 160]
                    _12660 = mem[_739 + 64]
                    _12661 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12661))
                    staticcall address(_12661).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12681 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12694 = mem[_12681]
                    if _12660 >= 999999:
                        mem[mem[64] + 4] = mem[_12681]
                        require ext_code.size(address(_12659))
                        call address(_12659).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _12694
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12694
                        emit Earn(_12694);
                        _12800 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12800))
                        staticcall address(_12800).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12838 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_12838]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12958 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12976 = mem[_12958]
                        _12994 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13022 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12976
                        mem[mem[64] + 36] = 128
                        _13043 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13043:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13022 + 68] = this.address
                        mem[_13022 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12994))
                        call address(_12994).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13022 + (32 * _13043) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13583 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13604 = mem[_13583]
                        require mem[_13583] <= test266151307()
                        require _13583 + mem[_13583] + 31 < _13583 + return_data.size
                        _13625 = mem[_13583 + mem[_13583]]
                        if mem[_13583 + mem[_13583]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13583 + mem[_13583]]) + 1 < 0 or _13583 + ceil32(return_data.size) + ceil32(32 * mem[_13583 + mem[_13583]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13583 + ceil32(return_data.size) + ceil32(32 * mem[_13583 + mem[_13583]]) + 1
                        mem[_13583 + ceil32(return_data.size)] = _13625
                        require _13604 + (32 * _13625) + 32 <= return_data.size
                        t = _13583 + ceil32(return_data.size) + 32
                        s = _13583 + _13604 + 32
                        while s < _13583 + _13604 + (32 * _13625) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14197 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14197]
                    else:
                        mem[mem[64] + 4] = _12660
                        mem[mem[64] + 36] = _12694
                        require ext_code.size(address(_12659))
                        call address(_12659).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _12660, _12694
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12694
                        emit Earn(_12694);
                        _12801 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12801))
                        staticcall address(_12801).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12839 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_12839]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12959 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12977 = mem[_12959]
                        _12995 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13023 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12977
                        mem[mem[64] + 36] = 128
                        _13044 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13044:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13023 + 68] = this.address
                        mem[_13023 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12995))
                        call address(_12995).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13023 + (32 * _13044) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13584 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13605 = mem[_13584]
                        require mem[_13584] <= test266151307()
                        require _13584 + mem[_13584] + 31 < _13584 + return_data.size
                        _13626 = mem[_13584 + mem[_13584]]
                        if mem[_13584 + mem[_13584]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13584 + mem[_13584]]) + 1 < 0 or _13584 + ceil32(return_data.size) + ceil32(32 * mem[_13584 + mem[_13584]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13584 + ceil32(return_data.size) + ceil32(32 * mem[_13584 + mem[_13584]]) + 1
                        mem[_13584 + ceil32(return_data.size)] = _13626
                        require _13605 + (32 * _13626) + 32 <= return_data.size
                        t = _13584 + ceil32(return_data.size) + 32
                        s = _13584 + _13605 + 32
                        while s < _13584 + _13605 + (32 * _13626) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14198 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14198]
                else:
                    if 1 >= mem[_7067]:
                        revert with 0, 50
                    mem[_7067 + 64] = address(_7058)
                    _12484 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _12496 = mem[_7067]
                    mem[mem[64] + 68] = mem[_7067]
                    s = 0
                    t = _7067 + 32
                    u = mem[64] + 100
                    while s < _12496:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_7056))
                    staticcall address(_7056).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _12484 + (32 * _12496) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13588 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13609 = mem[_13588]
                    require mem[_13588] <= test266151307()
                    require _13588 + mem[_13588] + 31 < _13588 + return_data.size
                    _13630 = mem[_13588 + mem[_13588]]
                    if mem[_13588 + mem[_13588]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13588 + mem[_13588]]) + 1 < 0 or _13588 + ceil32(return_data.size) + ceil32(32 * mem[_13588 + mem[_13588]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13588 + ceil32(return_data.size) + ceil32(32 * mem[_13588 + mem[_13588]]) + 1
                    mem[_13588 + ceil32(return_data.size)] = _13630
                    require _13609 + (32 * _13630) + 32 <= return_data.size
                    t = _13588 + ceil32(return_data.size) + 32
                    s = _13588 + _13609 + 32
                    while s < _13588 + _13609 + (32 * _13630) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _13630:
                        revert with 0, 50
                    _14147 = mem[_13588 + ceil32(return_data.size) + 64]
                    if mem[_13588 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13588 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_13588 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _13630:
                        revert with 0, 50
                    _14224 = mem[_13588 + ceil32(return_data.size) + 64]
                    if mem[_13588 + ceil32(return_data.size) + 64] < 100 * mem[_13588 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _14232 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _14224 - (100 * _14147 / 10000)
                    mem[mem[64] + 36] = 128
                    _14237 = mem[_7067]
                    mem[mem[64] + 132] = mem[_7067]
                    s = 0
                    t = _7067 + 32
                    u = mem[64] + 164
                    while s < _14237:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_14232 + 68] = this.address
                    mem[_14232 + 100] = block.timestamp + 60
                    require ext_code.size(address(_7056))
                    call address(_7056).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _14232 + (32 * _14237) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14597 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14601 = mem[_14597]
                    require mem[_14597] <= test266151307()
                    require _14597 + mem[_14597] + 31 < _14597 + return_data.size
                    _14605 = mem[_14597 + mem[_14597]]
                    if mem[_14597 + mem[_14597]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14597 + mem[_14597]]) + 1 < 0 or _14597 + ceil32(return_data.size) + ceil32(32 * mem[_14597 + mem[_14597]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14597 + ceil32(return_data.size) + ceil32(32 * mem[_14597 + mem[_14597]]) + 1
                    mem[_14597 + ceil32(return_data.size)] = _14605
                    require _14601 + (32 * _14605) + 32 <= return_data.size
                    t = _14597 + ceil32(return_data.size) + 32
                    s = _14597 + _14601 + 32
                    while s < _14597 + _14601 + (32 * _14605) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14945 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_14945] == mem[_14945 + 18 len 14]
                    require mem[_14945 + 32] == mem[_14945 + 50 len 14]
                    require mem[_14945 + 64] == mem[_14945 + 92 len 4]
                    mem[mem[64] + 4] = address(_7056)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7057))
                    call address(_7057).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7056), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14969 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14969] == bool(mem[_14969])
                    mem[mem[64] + 4] = address(_7056)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7058))
                    call address(_7058).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7056), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14985 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14985] == bool(mem[_14985])
                    _14999 = mem[_739 + 160]
                    _15000 = mem[_739 + 64]
                    _15001 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15001))
                    staticcall address(_15001).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15013 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15017 = mem[_15013]
                    if _15000 >= 999999:
                        mem[mem[64] + 4] = mem[_15013]
                        require ext_code.size(address(_14999))
                        call address(_14999).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _15017
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _15017
                        emit Earn(_15017);
                        _15056 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15056))
                        staticcall address(_15056).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15080 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_15080]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15128 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15136 = mem[_15128]
                        _15144 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _15152 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _15136
                        mem[mem[64] + 36] = 128
                        _15160 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _15160:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15152 + 68] = this.address
                        mem[_15152 + 100] = block.timestamp + 60
                        require ext_code.size(address(_15144))
                        call address(_15144).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15152 + (32 * _15160) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15272 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15280 = mem[_15272]
                        require mem[_15272] <= test266151307()
                        require _15272 + mem[_15272] + 31 < _15272 + return_data.size
                        _15288 = mem[_15272 + mem[_15272]]
                        if mem[_15272 + mem[_15272]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15272 + mem[_15272]]) + 1 < 0 or _15272 + ceil32(return_data.size) + ceil32(32 * mem[_15272 + mem[_15272]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _15272 + ceil32(return_data.size) + ceil32(32 * mem[_15272 + mem[_15272]]) + 1
                        mem[_15272 + ceil32(return_data.size)] = _15288
                        require _15280 + (32 * _15288) + 32 <= return_data.size
                        t = _15272 + ceil32(return_data.size) + 32
                        s = _15272 + _15280 + 32
                        while s < _15272 + _15280 + (32 * _15288) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15368 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_15368]
                    else:
                        mem[mem[64] + 4] = _15000
                        mem[mem[64] + 36] = _15017
                        require ext_code.size(address(_14999))
                        call address(_14999).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _15000, _15017
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _15017
                        emit Earn(_15017);
                        _15057 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15057))
                        staticcall address(_15057).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15081 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_15081]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15137 = mem[_15129]
                        _15145 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _15153 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _15137
                        mem[mem[64] + 36] = 128
                        _15161 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _15161:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15153 + 68] = this.address
                        mem[_15153 + 100] = block.timestamp + 60
                        require ext_code.size(address(_15145))
                        call address(_15145).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15153 + (32 * _15161) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15273 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15281 = mem[_15273]
                        require mem[_15273] <= test266151307()
                        require _15273 + mem[_15273] + 31 < _15273 + return_data.size
                        _15289 = mem[_15273 + mem[_15273]]
                        if mem[_15273 + mem[_15273]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15273 + mem[_15273]]) + 1 < 0 or _15273 + ceil32(return_data.size) + ceil32(32 * mem[_15273 + mem[_15273]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _15273 + ceil32(return_data.size) + ceil32(32 * mem[_15273 + mem[_15273]]) + 1
                        mem[_15273 + ceil32(return_data.size)] = _15289
                        require _15281 + (32 * _15289) + 32 <= return_data.size
                        t = _15273 + ceil32(return_data.size) + 32
                        s = _15273 + _15281 + 32
                        while s < _15273 + _15281 + (32 * _15289) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15369 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_15369]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _739
            s = _3530 - (100 * _3530 / 10000)
            s = stor9[idx].field_0
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _749 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _758 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_758] = mem[_749]
        mem[_758 + 32] = mem[_749 + 32]
        mem[_758 + 64] = mem[_749 + 64]
        require return_data.size - 96 >= 96
        _772 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_772] = mem[_749 + 96]
        mem[_772 + 32] = mem[_749 + 128]
        mem[_772 + 64] = mem[_749 + 160]
        mem[_758 + 96] = _772
        mem[_758 + 128] = mem[_749 + 192]
        require return_data.size - 224 >= 96
        _792 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_792] = mem[_749 + 224]
        mem[_792 + 32] = mem[_749 + 256]
        mem[_792 + 64] = mem[_749 + 288]
        mem[_758 + 160] = _792
        _804 = mem[_758 + 64]
        if not mem[_758 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _739
            s = mem[_758 + 64]
            s = stor9[idx].field_0
            continue 
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _827 = mem[64]
        mem[64] = mem[64] + 256
        mem[_827] = strategyInfo[stor9[idx].field_0].field_0
        mem[_827 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_827 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_827 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_827 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_827 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_827 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_827 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 4] = _804
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                 gas gas_remaining wei
                args _804
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _865 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _872 = mem[_865]
            require mem[_865] == mem[_865 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_865 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_872))
            staticcall address(_872).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _925 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _930 = mem[_925]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_872))
            staticcall address(_872).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _938 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _944 = mem[_938]
            if mem[_938] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _930:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _971 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _984 = mem[_971]
            if 10^12 * _944 / _930 and mem[_971] > -1 / 10^12 * _944 / _930:
                revert with 0, 17
            _1020 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _944 / _930 * _984 / 10^12
            mem[mem[64] + 36] = 64
            _1036 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _1036:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1020 + (32 * _1036) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1762 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1769 = mem[_1762]
            require mem[_1762] <= test266151307()
            require _1762 + mem[_1762] + 31 < _1762 + return_data.size
            _1784 = mem[_1762 + mem[_1762]]
            if mem[_1762 + mem[_1762]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1762 + mem[_1762]]) + 1 < 0 or _1762 + ceil32(return_data.size) + ceil32(32 * mem[_1762 + mem[_1762]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1762 + ceil32(return_data.size) + ceil32(32 * mem[_1762 + mem[_1762]]) + 1
            mem[_1762 + ceil32(return_data.size)] = _1784
            require _1769 + (32 * _1784) + 32 <= return_data.size
            t = _1762 + ceil32(return_data.size) + 32
            s = _1762 + _1769 + 32
            while s < _1762 + _1769 + (32 * _1784) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1784:
                revert with 0, 50
            _3527 = mem[_1762 + ceil32(return_data.size) + 64]
            if mem[_1762 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1762 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1762 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1762 + ceil32(return_data.size) + 64] < 100 * mem[_1762 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _3606 = mem[_739]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_872))
            staticcall address(_872).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3639 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3652 = mem[_3639]
            if 60 > !block.timestamp:
                revert with 0, 17
            _3677 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3652
            mem[mem[64] + 36] = _3527 - (100 * _3527 / 10000)
            mem[mem[64] + 68] = 160
            _3689 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _3689:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_3677 + 100] = this.address
            mem[_3677 + 132] = block.timestamp + 60
            require ext_code.size(address(_3606))
            call address(_3606).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3677 + (32 * _3689) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5306 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5322 = mem[_5306]
            require mem[_5306] <= test266151307()
            require _5306 + mem[_5306] + 31 < _5306 + return_data.size
            _5342 = mem[_5306 + mem[_5306]]
            if mem[_5306 + mem[_5306]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5306 + mem[_5306]]) + 1 < 0 or _5306 + ceil32(return_data.size) + ceil32(32 * mem[_5306 + mem[_5306]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5306 + ceil32(return_data.size) + ceil32(32 * mem[_5306 + mem[_5306]]) + 1
            mem[_5306 + ceil32(return_data.size)] = _5342
            require _5322 + (32 * _5342) + 32 <= return_data.size
            t = _5306 + ceil32(return_data.size) + 32
            s = _5306 + _5322 + 32
            while s < _5306 + _5322 + (32 * _5342) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _7047 = mem[_739]
            _7048 = mem[_739 + 192]
            _7049 = mem[_739 + 224]
            _7061 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_7061 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_7061]:
                revert with 0, 50
            mem[_7061 + 32] = stor21
            if stor21 == address(_7048):
                if stor21 == address(_7049):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[_7061 + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    mem[_7061 + ceil32(return_data.size) + 100] = address(_7047)
                    mem[_7061 + ceil32(return_data.size) + 132] = -1
                    require ext_code.size(address(_7048))
                    call address(_7048).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7047), -1
                    mem[_7061 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_7061 + (2 * ceil32(return_data.size)) + 100] = address(_7047)
                    mem[_7061 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_7049))
                    call address(_7049).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7047), -1
                    mem[_7061 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7061 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    _7295 = mem[_739 + 160]
                    _7296 = mem[_739 + 64]
                    _7297 = mem[_739 + 32]
                    mem[_7061 + (4 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_7297))
                    staticcall address(_7297).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7061 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7061 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _7296 >= 999999:
                        mem[_7061 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_7295))
                        call address(_7295).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7061 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _7412 = mem[_739 + 32]
                        mem[_7061 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7412))
                        staticcall address(_7412).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7061 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_739 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_7061 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7061 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7061 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7587 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7061 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7061 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_7061 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_7061 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _7061 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7061 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_7061 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7587))
                        call address(_7587).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7061 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7061 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7061 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8764 = mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7061 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _8784 = mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7061 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _7061 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_7061 + (10 * ceil32(return_data.size)) + 96] = mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _8764 + (32 * _8784) + 32 <= return_data.size
                        t = _7061 + (10 * ceil32(return_data.size)) + 128
                        s = _7061 + (8 * ceil32(return_data.size)) + _8764 + 128
                        while s < _7061 + (8 * ceil32(return_data.size)) + _8764 + (32 * _8784) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10116 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10116]
                    else:
                        mem[_7061 + (6 * ceil32(return_data.size)) + 100] = _7296
                        mem[_7061 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_7295))
                        call address(_7295).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _7296, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7061 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _7413 = mem[_739 + 32]
                        mem[_7061 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_7413))
                        staticcall address(_7413).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7061 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_739 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_7061 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7061 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7061 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7588 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7061 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7061 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_7061 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_7061 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _7061 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7061 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_7061 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7588))
                        call address(_7588).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7061 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7061 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7061 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8765 = mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7061 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _8785 = mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7061 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _7061 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_7061 + (10 * ceil32(return_data.size)) + 96] = mem[_7061 + (8 * ceil32(return_data.size)) + mem[_7061 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _8765 + (32 * _8785) + 32 <= return_data.size
                        t = _7061 + (10 * ceil32(return_data.size)) + 128
                        s = _7061 + (8 * ceil32(return_data.size)) + _8765 + 128
                        while s < _7061 + (8 * ceil32(return_data.size)) + _8765 + (32 * _8785) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10117 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10117]
                else:
                    if 1 >= mem[_7061]:
                        revert with 0, 50
                    mem[_7061 + 64] = address(_7049)
                    mem[_7061 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_7061 + 100] = eth.balance(this.address) / 2
                    mem[_7061 + 132] = 64
                    mem[_7061 + 164] = mem[_7061]
                    s = 0
                    t = _7061 + 32
                    u = _7061 + 196
                    while s < mem[_7061]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_7047))
                    staticcall address(_7047).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _7061 + (32 * mem[_7061]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8752 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8774 = mem[_8752]
                    require mem[_8752] <= test266151307()
                    require _8752 + mem[_8752] + 31 < _8752 + return_data.size
                    _8794 = mem[_8752 + mem[_8752]]
                    if mem[_8752 + mem[_8752]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8752 + mem[_8752]]) + 1 < 0 or _8752 + ceil32(return_data.size) + ceil32(32 * mem[_8752 + mem[_8752]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8752 + ceil32(return_data.size) + ceil32(32 * mem[_8752 + mem[_8752]]) + 1
                    mem[_8752 + ceil32(return_data.size)] = _8794
                    require _8774 + (32 * _8794) + 32 <= return_data.size
                    t = _8752 + ceil32(return_data.size) + 32
                    s = _8752 + _8774 + 32
                    while s < _8752 + _8774 + (32 * _8794) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8794:
                        revert with 0, 50
                    _10083 = mem[_8752 + ceil32(return_data.size) + 64]
                    if mem[_8752 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8752 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8752 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8794:
                        revert with 0, 50
                    _10150 = mem[_8752 + ceil32(return_data.size) + 64]
                    if mem[_8752 + ceil32(return_data.size) + 64] < 100 * mem[_8752 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10169 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10150 - (100 * _10083 / 10000)
                    mem[mem[64] + 36] = 128
                    _10179 = mem[_7061]
                    mem[mem[64] + 132] = mem[_7061]
                    s = 0
                    t = _7061 + 32
                    u = mem[64] + 164
                    while s < _10179:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10169 + 68] = this.address
                    mem[_10169 + 100] = block.timestamp + 60
                    require ext_code.size(address(_7047))
                    call address(_7047).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10169 + (32 * _10179) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11338 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11347 = mem[_11338]
                    require mem[_11338] <= test266151307()
                    require _11338 + mem[_11338] + 31 < _11338 + return_data.size
                    _11356 = mem[_11338 + mem[_11338]]
                    if mem[_11338 + mem[_11338]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11338 + mem[_11338]]) + 1 < 0 or _11338 + ceil32(return_data.size) + ceil32(32 * mem[_11338 + mem[_11338]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11338 + ceil32(return_data.size) + ceil32(32 * mem[_11338 + mem[_11338]]) + 1
                    mem[_11338 + ceil32(return_data.size)] = _11356
                    require _11347 + (32 * _11356) + 32 <= return_data.size
                    t = _11338 + ceil32(return_data.size) + 32
                    s = _11338 + _11347 + 32
                    while s < _11338 + _11347 + (32 * _11356) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12485 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_12485] == mem[_12485 + 18 len 14]
                    require mem[_12485 + 32] == mem[_12485 + 50 len 14]
                    require mem[_12485 + 64] == mem[_12485 + 92 len 4]
                    mem[mem[64] + 4] = address(_7047)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7048))
                    call address(_7048).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7047), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12560 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12560] == bool(mem[_12560])
                    mem[mem[64] + 4] = address(_7047)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7049))
                    call address(_7049).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7047), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12603 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12603] == bool(mem[_12603])
                    _12630 = mem[_739 + 160]
                    _12631 = mem[_739 + 64]
                    _12632 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12632))
                    staticcall address(_12632).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12671 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12683 = mem[_12671]
                    if _12631 >= 999999:
                        mem[mem[64] + 4] = mem[_12671]
                        require ext_code.size(address(_12630))
                        call address(_12630).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _12683
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12683
                        emit Earn(_12683);
                        _12751 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12751))
                        staticcall address(_12751).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12820 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_12820]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12940 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12961 = mem[_12940]
                        _12978 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13001 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12961
                        mem[mem[64] + 36] = 128
                        _13026 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13026:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13001 + 68] = this.address
                        mem[_13001 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12978))
                        call address(_12978).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13001 + (32 * _13026) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13569 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13590 = mem[_13569]
                        require mem[_13569] <= test266151307()
                        require _13569 + mem[_13569] + 31 < _13569 + return_data.size
                        _13611 = mem[_13569 + mem[_13569]]
                        if mem[_13569 + mem[_13569]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13569 + mem[_13569]]) + 1 < 0 or _13569 + ceil32(return_data.size) + ceil32(32 * mem[_13569 + mem[_13569]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13569 + ceil32(return_data.size) + ceil32(32 * mem[_13569 + mem[_13569]]) + 1
                        mem[_13569 + ceil32(return_data.size)] = _13611
                        require _13590 + (32 * _13611) + 32 <= return_data.size
                        t = _13569 + ceil32(return_data.size) + 32
                        s = _13569 + _13590 + 32
                        while s < _13569 + _13590 + (32 * _13611) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14183]
                    else:
                        mem[mem[64] + 4] = _12631
                        mem[mem[64] + 36] = _12683
                        require ext_code.size(address(_12630))
                        call address(_12630).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _12631, _12683
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12683
                        emit Earn(_12683);
                        _12752 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12752))
                        staticcall address(_12752).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12821 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_12821]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12941 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12962 = mem[_12941]
                        _12979 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13002 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12962
                        mem[mem[64] + 36] = 128
                        _13027 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13027:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13002 + 68] = this.address
                        mem[_13002 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12979))
                        call address(_12979).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13002 + (32 * _13027) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13570 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13591 = mem[_13570]
                        require mem[_13570] <= test266151307()
                        require _13570 + mem[_13570] + 31 < _13570 + return_data.size
                        _13612 = mem[_13570 + mem[_13570]]
                        if mem[_13570 + mem[_13570]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13570 + mem[_13570]]) + 1 < 0 or _13570 + ceil32(return_data.size) + ceil32(32 * mem[_13570 + mem[_13570]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13570 + ceil32(return_data.size) + ceil32(32 * mem[_13570 + mem[_13570]]) + 1
                        mem[_13570 + ceil32(return_data.size)] = _13612
                        require _13591 + (32 * _13612) + 32 <= return_data.size
                        t = _13570 + ceil32(return_data.size) + 32
                        s = _13570 + _13591 + 32
                        while s < _13570 + _13591 + (32 * _13612) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14184 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14184]
            else:
                if 1 >= mem[_7061]:
                    revert with 0, 50
                mem[_7061 + 64] = address(_7048)
                mem[_7061 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_7061 + 100] = eth.balance(this.address) / 2
                mem[_7061 + 132] = 64
                mem[_7061 + 164] = mem[_7061]
                s = 0
                t = _7061 + 32
                u = _7061 + 196
                while s < mem[_7061]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_7047))
                staticcall address(_7047).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _7061 + (32 * mem[_7061]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8753 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8775 = mem[_8753]
                require mem[_8753] <= test266151307()
                require _8753 + mem[_8753] + 31 < _8753 + return_data.size
                _8795 = mem[_8753 + mem[_8753]]
                if mem[_8753 + mem[_8753]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8753 + mem[_8753]]) + 1 < 0 or _8753 + ceil32(return_data.size) + ceil32(32 * mem[_8753 + mem[_8753]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8753 + ceil32(return_data.size) + ceil32(32 * mem[_8753 + mem[_8753]]) + 1
                mem[_8753 + ceil32(return_data.size)] = _8795
                require _8775 + (32 * _8795) + 32 <= return_data.size
                t = _8753 + ceil32(return_data.size) + 32
                s = _8753 + _8775 + 32
                while s < _8753 + _8775 + (32 * _8795) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8795:
                    revert with 0, 50
                _10084 = mem[_8753 + ceil32(return_data.size) + 64]
                if mem[_8753 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8753 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8753 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8795:
                    revert with 0, 50
                _10151 = mem[_8753 + ceil32(return_data.size) + 64]
                if mem[_8753 + ceil32(return_data.size) + 64] < 100 * mem[_8753 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _10170 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _10151 - (100 * _10084 / 10000)
                mem[mem[64] + 36] = 128
                _10180 = mem[_7061]
                mem[mem[64] + 132] = mem[_7061]
                s = 0
                t = _7061 + 32
                u = mem[64] + 164
                while s < _10180:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_10170 + 68] = this.address
                mem[_10170 + 100] = block.timestamp + 60
                require ext_code.size(address(_7047))
                call address(_7047).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _10170 + (32 * _10180) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11339 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11348 = mem[_11339]
                require mem[_11339] <= test266151307()
                require _11339 + mem[_11339] + 31 < _11339 + return_data.size
                _11357 = mem[_11339 + mem[_11339]]
                if mem[_11339 + mem[_11339]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11339 + mem[_11339]]) + 1 < 0 or _11339 + ceil32(return_data.size) + ceil32(32 * mem[_11339 + mem[_11339]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11339 + ceil32(return_data.size) + ceil32(32 * mem[_11339 + mem[_11339]]) + 1
                mem[_11339 + ceil32(return_data.size)] = _11357
                require _11348 + (32 * _11357) + 32 <= return_data.size
                t = _11339 + ceil32(return_data.size) + 32
                s = _11339 + _11348 + 32
                while s < _11339 + _11348 + (32 * _11357) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_7049):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12489 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_12489] == mem[_12489 + 18 len 14]
                    require mem[_12489 + 32] == mem[_12489 + 50 len 14]
                    require mem[_12489 + 64] == mem[_12489 + 92 len 4]
                    mem[mem[64] + 4] = address(_7047)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7048))
                    call address(_7048).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7047), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12568 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12568] == bool(mem[_12568])
                    mem[mem[64] + 4] = address(_7047)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7049))
                    call address(_7049).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7047), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12611 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12611] == bool(mem[_12611])
                    _12644 = mem[_739 + 160]
                    _12645 = mem[_739 + 64]
                    _12646 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12646))
                    staticcall address(_12646).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12675 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12691 = mem[_12675]
                    if _12645 >= 999999:
                        mem[mem[64] + 4] = mem[_12675]
                        require ext_code.size(address(_12644))
                        call address(_12644).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _12691
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12691
                        emit Earn(_12691);
                        _12779 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12779))
                        staticcall address(_12779).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12832 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_12832]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12949 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12970 = mem[_12949]
                        _12988 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13010 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12970
                        mem[mem[64] + 36] = 128
                        _13034 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13034:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13010 + 68] = this.address
                        mem[_13010 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12988))
                        call address(_12988).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13010 + (32 * _13034) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13571 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13592 = mem[_13571]
                        require mem[_13571] <= test266151307()
                        require _13571 + mem[_13571] + 31 < _13571 + return_data.size
                        _13613 = mem[_13571 + mem[_13571]]
                        if mem[_13571 + mem[_13571]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13571 + mem[_13571]]) + 1 < 0 or _13571 + ceil32(return_data.size) + ceil32(32 * mem[_13571 + mem[_13571]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13571 + ceil32(return_data.size) + ceil32(32 * mem[_13571 + mem[_13571]]) + 1
                        mem[_13571 + ceil32(return_data.size)] = _13613
                        require _13592 + (32 * _13613) + 32 <= return_data.size
                        t = _13571 + ceil32(return_data.size) + 32
                        s = _13571 + _13592 + 32
                        while s < _13571 + _13592 + (32 * _13613) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14185]
                    else:
                        mem[mem[64] + 4] = _12645
                        mem[mem[64] + 36] = _12691
                        require ext_code.size(address(_12644))
                        call address(_12644).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _12645, _12691
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12691
                        emit Earn(_12691);
                        _12780 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12780))
                        staticcall address(_12780).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12833 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_12833]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12950 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12971 = mem[_12950]
                        _12989 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13011 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12971
                        mem[mem[64] + 36] = 128
                        _13035 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13035:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13011 + 68] = this.address
                        mem[_13011 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12989))
                        call address(_12989).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13011 + (32 * _13035) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13572 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13593 = mem[_13572]
                        require mem[_13572] <= test266151307()
                        require _13572 + mem[_13572] + 31 < _13572 + return_data.size
                        _13614 = mem[_13572 + mem[_13572]]
                        if mem[_13572 + mem[_13572]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13572 + mem[_13572]]) + 1 < 0 or _13572 + ceil32(return_data.size) + ceil32(32 * mem[_13572 + mem[_13572]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13572 + ceil32(return_data.size) + ceil32(32 * mem[_13572 + mem[_13572]]) + 1
                        mem[_13572 + ceil32(return_data.size)] = _13614
                        require _13593 + (32 * _13614) + 32 <= return_data.size
                        t = _13572 + ceil32(return_data.size) + 32
                        s = _13572 + _13593 + 32
                        while s < _13572 + _13593 + (32 * _13614) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14186 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_14186]
                else:
                    if 1 >= mem[_7061]:
                        revert with 0, 50
                    mem[_7061 + 64] = address(_7049)
                    _12475 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _12490 = mem[_7061]
                    mem[mem[64] + 68] = mem[_7061]
                    s = 0
                    t = _7061 + 32
                    u = mem[64] + 100
                    while s < _12490:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_7047))
                    staticcall address(_7047).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _12475 + (32 * _12490) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13585 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13606 = mem[_13585]
                    require mem[_13585] <= test266151307()
                    require _13585 + mem[_13585] + 31 < _13585 + return_data.size
                    _13627 = mem[_13585 + mem[_13585]]
                    if mem[_13585 + mem[_13585]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13585 + mem[_13585]]) + 1 < 0 or _13585 + ceil32(return_data.size) + ceil32(32 * mem[_13585 + mem[_13585]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13585 + ceil32(return_data.size) + ceil32(32 * mem[_13585 + mem[_13585]]) + 1
                    mem[_13585 + ceil32(return_data.size)] = _13627
                    require _13606 + (32 * _13627) + 32 <= return_data.size
                    t = _13585 + ceil32(return_data.size) + 32
                    s = _13585 + _13606 + 32
                    while s < _13585 + _13606 + (32 * _13627) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _13627:
                        revert with 0, 50
                    _14144 = mem[_13585 + ceil32(return_data.size) + 64]
                    if mem[_13585 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13585 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_13585 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _13627:
                        revert with 0, 50
                    _14221 = mem[_13585 + ceil32(return_data.size) + 64]
                    if mem[_13585 + ceil32(return_data.size) + 64] < 100 * mem[_13585 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _14229 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _14221 - (100 * _14144 / 10000)
                    mem[mem[64] + 36] = 128
                    _14234 = mem[_7061]
                    mem[mem[64] + 132] = mem[_7061]
                    s = 0
                    t = _7061 + 32
                    u = mem[64] + 164
                    while s < _14234:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_14229 + 68] = this.address
                    mem[_14229 + 100] = block.timestamp + 60
                    require ext_code.size(address(_7047))
                    call address(_7047).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _14229 + (32 * _14234) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14594 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14598 = mem[_14594]
                    require mem[_14594] <= test266151307()
                    require _14594 + mem[_14594] + 31 < _14594 + return_data.size
                    _14602 = mem[_14594 + mem[_14594]]
                    if mem[_14594 + mem[_14594]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14594 + mem[_14594]]) + 1 < 0 or _14594 + ceil32(return_data.size) + ceil32(32 * mem[_14594 + mem[_14594]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14594 + ceil32(return_data.size) + ceil32(32 * mem[_14594 + mem[_14594]]) + 1
                    mem[_14594 + ceil32(return_data.size)] = _14602
                    require _14598 + (32 * _14602) + 32 <= return_data.size
                    t = _14594 + ceil32(return_data.size) + 32
                    s = _14594 + _14598 + 32
                    while s < _14594 + _14598 + (32 * _14602) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14942 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_14942] == mem[_14942 + 18 len 14]
                    require mem[_14942 + 32] == mem[_14942 + 50 len 14]
                    require mem[_14942 + 64] == mem[_14942 + 92 len 4]
                    mem[mem[64] + 4] = address(_7047)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7048))
                    call address(_7048).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7047), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14966 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14966] == bool(mem[_14966])
                    mem[mem[64] + 4] = address(_7047)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7049))
                    call address(_7049).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7047), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14982 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14982] == bool(mem[_14982])
                    _14990 = mem[_739 + 160]
                    _14991 = mem[_739 + 64]
                    _14992 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_14992))
                    staticcall address(_14992).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15010 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15014 = mem[_15010]
                    if _14991 >= 999999:
                        mem[mem[64] + 4] = mem[_15010]
                        require ext_code.size(address(_14990))
                        call address(_14990).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _15014
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _15014
                        emit Earn(_15014);
                        _15050 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15050))
                        staticcall address(_15050).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15074 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_15074]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15122 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15130 = mem[_15122]
                        _15138 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _15146 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _15130
                        mem[mem[64] + 36] = 128
                        _15154 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _15154:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15146 + 68] = this.address
                        mem[_15146 + 100] = block.timestamp + 60
                        require ext_code.size(address(_15138))
                        call address(_15138).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15146 + (32 * _15154) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15266 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15274 = mem[_15266]
                        require mem[_15266] <= test266151307()
                        require _15266 + mem[_15266] + 31 < _15266 + return_data.size
                        _15282 = mem[_15266 + mem[_15266]]
                        if mem[_15266 + mem[_15266]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15266 + mem[_15266]]) + 1 < 0 or _15266 + ceil32(return_data.size) + ceil32(32 * mem[_15266 + mem[_15266]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _15266 + ceil32(return_data.size) + ceil32(32 * mem[_15266 + mem[_15266]]) + 1
                        mem[_15266 + ceil32(return_data.size)] = _15282
                        require _15274 + (32 * _15282) + 32 <= return_data.size
                        t = _15266 + ceil32(return_data.size) + 32
                        s = _15266 + _15274 + 32
                        while s < _15266 + _15274 + (32 * _15282) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15362 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_15362]
                    else:
                        mem[mem[64] + 4] = _14991
                        mem[mem[64] + 36] = _15014
                        require ext_code.size(address(_14990))
                        call address(_14990).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _14991, _15014
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _15014
                        emit Earn(_15014);
                        _15051 = mem[_739 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15051))
                        staticcall address(_15051).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15075 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_739 + 96] = mem[_15075]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15123 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15131 = mem[_15123]
                        _15139 = mem[_739]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _15147 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _15131
                        mem[mem[64] + 36] = 128
                        _15155 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_15147 + 100] = block.timestamp + 60
                        require ext_code.size(address(_15139))
                        call address(_15139).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15147 + (32 * _15155) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15267 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15275 = mem[_15267]
                        require mem[_15267] <= test266151307()
                        require _15267 + mem[_15267] + 31 < _15267 + return_data.size
                        _15283 = mem[_15267 + mem[_15267]]
                        if mem[_15267 + mem[_15267]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15267 + mem[_15267]]) + 1 < 0 or _15267 + ceil32(return_data.size) + ceil32(32 * mem[_15267 + mem[_15267]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _15267 + ceil32(return_data.size) + ceil32(32 * mem[_15267 + mem[_15267]]) + 1
                        mem[_15267 + ceil32(return_data.size)] = _15283
                        require _15275 + (32 * _15283) + 32 <= return_data.size
                        t = _15267 + ceil32(return_data.size) + 32
                        s = _15267 + _15275 + 32
                        while s < _15267 + _15275 + (32 * _15283) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15363 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_15363]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _739
            s = _3527 - (100 * _3527 / 10000)
            s = stor9[idx].field_0
            continue 
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
        mem[mem[64] + 36] = _804
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
             gas gas_remaining wei
            args strategyInfo[stor9[idx].field_0].field_512, _804
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _866 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _873 = mem[_866]
        require mem[_866] == mem[_866 + 12 len 20]
        if 0 >= mem[96]:
            revert with 0, 50
        mem[128] = mem[_866 + 12 len 20]
        if 1 >= mem[96]:
            revert with 0, 50
        mem[160] = stor21
        require ext_code.size(address(_873))
        staticcall address(_873).0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _926 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _931 = mem[_926]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_873))
        staticcall address(_873).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _939 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _945 = mem[_939]
        if mem[_939] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _931:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _972 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _985 = mem[_972]
        if 10^12 * _945 / _931 and mem[_972] > -1 / 10^12 * _945 / _931:
            revert with 0, 17
        _1021 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _945 / _931 * _985 / 10^12
        mem[mem[64] + 36] = 64
        _1037 = mem[96]
        mem[mem[64] + 68] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 100
        while s < _1037:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _1021 + (32 * _1037) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1763 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1770 = mem[_1763]
        require mem[_1763] <= test266151307()
        require _1763 + mem[_1763] + 31 < _1763 + return_data.size
        _1785 = mem[_1763 + mem[_1763]]
        if mem[_1763 + mem[_1763]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_1763 + mem[_1763]]) + 1 < 0 or _1763 + ceil32(return_data.size) + ceil32(32 * mem[_1763 + mem[_1763]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _1763 + ceil32(return_data.size) + ceil32(32 * mem[_1763 + mem[_1763]]) + 1
        mem[_1763 + ceil32(return_data.size)] = _1785
        require _1770 + (32 * _1785) + 32 <= return_data.size
        t = _1763 + ceil32(return_data.size) + 32
        s = _1763 + _1770 + 32
        while s < _1763 + _1770 + (32 * _1785) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        if 1 >= _1785:
            revert with 0, 50
        _3528 = mem[_1763 + ceil32(return_data.size) + 64]
        if mem[_1763 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1763 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_1763 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if mem[_1763 + ceil32(return_data.size) + 64] < 100 * mem[_1763 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        _3607 = mem[_739]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_873))
        staticcall address(_873).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3640 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3653 = mem[_3640]
        if 60 > !block.timestamp:
            revert with 0, 17
        _3678 = mem[64]
        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _3653
        mem[mem[64] + 36] = _3528 - (100 * _3528 / 10000)
        mem[mem[64] + 68] = 160
        _3690 = mem[96]
        mem[mem[64] + 164] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 196
        while s < _3690:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_3678 + 100] = this.address
        mem[_3678 + 132] = block.timestamp + 60
        require ext_code.size(address(_3607))
        call address(_3607).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _3678 + (32 * _3690) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5307 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5323 = mem[_5307]
        require mem[_5307] <= test266151307()
        require _5307 + mem[_5307] + 31 < _5307 + return_data.size
        _5343 = mem[_5307 + mem[_5307]]
        if mem[_5307 + mem[_5307]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5307 + mem[_5307]]) + 1 < 0 or _5307 + ceil32(return_data.size) + ceil32(32 * mem[_5307 + mem[_5307]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5307 + ceil32(return_data.size) + ceil32(32 * mem[_5307 + mem[_5307]]) + 1
        mem[_5307 + ceil32(return_data.size)] = _5343
        require _5323 + (32 * _5343) + 32 <= return_data.size
        t = _5307 + ceil32(return_data.size) + 32
        s = _5307 + _5323 + 32
        while s < _5307 + _5323 + (32 * _5343) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        _7050 = mem[_739]
        _7051 = mem[_739 + 192]
        _7052 = mem[_739 + 224]
        _7063 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_7063 + 32 len 64] = call.data[calldata.size len 64]
        if not mem[_7063]:
            revert with 0, 50
        mem[_7063 + 32] = stor21
        if stor21 == address(_7051):
            if stor21 == address(_7052):
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[_7063 + 96 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                mem[_7063 + ceil32(return_data.size) + 100] = address(_7050)
                mem[_7063 + ceil32(return_data.size) + 132] = -1
                require ext_code.size(address(_7051))
                call address(_7051).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7050), -1
                mem[_7063 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                mem[_7063 + (2 * ceil32(return_data.size)) + 100] = address(_7050)
                mem[_7063 + (2 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_7052))
                call address(_7052).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7050), -1
                mem[_7063 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _7063 + (4 * ceil32(return_data.size)) + 96
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                _7298 = mem[_739 + 160]
                _7299 = mem[_739 + 64]
                _7300 = mem[_739 + 32]
                mem[_7063 + (4 * ceil32(return_data.size)) + 100] = this.address
                require ext_code.size(address(_7300))
                staticcall address(_7300).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_7063 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _7063 + (6 * ceil32(return_data.size)) + 96
                require return_data.size >= 32
                if _7299 >= 999999:
                    mem[_7063 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(_7298))
                    call address(_7298).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7063 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _7415 = mem[_739 + 32]
                    mem[_7063 + (6 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_7415))
                    staticcall address(_7415).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7063 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_739 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_7063 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7063 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7063 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7590 = mem[_739]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7063 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_7063 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_7063 + (8 * ceil32(return_data.size)) + 132] = 128
                    mem[_7063 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _7063 + (8 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7063 + (8 * ceil32(return_data.size)) + 164] = this.address
                    mem[_7063 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_7590))
                    call address(_7590).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7063 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7063 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _7063 + (10 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _8766 = mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7063 + (8 * ceil32(return_data.size)) + return_data.size + 96
                    _8786 = mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7063 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _7063 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_7063 + (10 * ceil32(return_data.size)) + 96] = _8786
                    require _8766 + (32 * _8786) + 32 <= return_data.size
                    t = _7063 + (10 * ceil32(return_data.size)) + 128
                    s = _7063 + (8 * ceil32(return_data.size)) + _8766 + 128
                    while s < _7063 + (8 * ceil32(return_data.size)) + _8766 + (32 * _8786) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10118 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10118]
                else:
                    mem[_7063 + (6 * ceil32(return_data.size)) + 100] = _7299
                    mem[_7063 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                    require ext_code.size(address(_7298))
                    call address(_7298).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _7299, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7063 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _7416 = mem[_739 + 32]
                    mem[_7063 + (6 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_7416))
                    staticcall address(_7416).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7063 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_739 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_7063 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7063 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7063 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7591 = mem[_739]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7063 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_7063 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_7063 + (8 * ceil32(return_data.size)) + 132] = 128
                    mem[_7063 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _7063 + (8 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7063 + (8 * ceil32(return_data.size)) + 164] = this.address
                    mem[_7063 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_7591))
                    call address(_7591).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7063 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7063 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _7063 + (10 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _8767 = mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7063 + (8 * ceil32(return_data.size)) + return_data.size + 96
                    _8787 = mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7063 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _7063 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_7063 + (8 * ceil32(return_data.size)) + mem[_7063 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_7063 + (10 * ceil32(return_data.size)) + 96] = _8787
                    require _8767 + (32 * _8787) + 32 <= return_data.size
                    t = _7063 + (10 * ceil32(return_data.size)) + 128
                    s = _7063 + (8 * ceil32(return_data.size)) + _8767 + 128
                    while s < _7063 + (8 * ceil32(return_data.size)) + _8767 + (32 * _8787) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10119 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10119]
            else:
                if 1 >= mem[_7063]:
                    revert with 0, 50
                mem[_7063 + 64] = address(_7052)
                mem[_7063 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_7063 + 100] = eth.balance(this.address) / 2
                mem[_7063 + 132] = 64
                mem[_7063 + 164] = mem[_7063]
                s = 0
                t = _7063 + 32
                u = _7063 + 196
                while s < mem[_7063]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_7050))
                staticcall address(_7050).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _7063 + (32 * mem[_7063]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8754 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8776 = mem[_8754]
                require mem[_8754] <= test266151307()
                require _8754 + mem[_8754] + 31 < _8754 + return_data.size
                _8796 = mem[_8754 + mem[_8754]]
                if mem[_8754 + mem[_8754]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8754 + mem[_8754]]) + 1 < 0 or _8754 + ceil32(return_data.size) + ceil32(32 * mem[_8754 + mem[_8754]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8754 + ceil32(return_data.size) + ceil32(32 * mem[_8754 + mem[_8754]]) + 1
                mem[_8754 + ceil32(return_data.size)] = _8796
                require _8776 + (32 * _8796) + 32 <= return_data.size
                t = _8754 + ceil32(return_data.size) + 32
                s = _8754 + _8776 + 32
                while s < _8754 + _8776 + (32 * _8796) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8796:
                    revert with 0, 50
                _10085 = mem[_8754 + ceil32(return_data.size) + 64]
                if mem[_8754 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8754 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8754 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8796:
                    revert with 0, 50
                _10152 = mem[_8754 + ceil32(return_data.size) + 64]
                if mem[_8754 + ceil32(return_data.size) + 64] < 100 * mem[_8754 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _10171 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _10152 - (100 * _10085 / 10000)
                mem[mem[64] + 36] = 128
                _10181 = mem[_7063]
                mem[mem[64] + 132] = mem[_7063]
                s = 0
                t = _7063 + 32
                u = mem[64] + 164
                while s < _10181:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_10171 + 68] = this.address
                mem[_10171 + 100] = block.timestamp + 60
                require ext_code.size(address(_7050))
                call address(_7050).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _10171 + (32 * _10181) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11340 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11349 = mem[_11340]
                require mem[_11340] <= test266151307()
                require _11340 + mem[_11340] + 31 < _11340 + return_data.size
                _11358 = mem[_11340 + mem[_11340]]
                if mem[_11340 + mem[_11340]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11340 + mem[_11340]]) + 1 < 0 or _11340 + ceil32(return_data.size) + ceil32(32 * mem[_11340 + mem[_11340]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11340 + ceil32(return_data.size) + ceil32(32 * mem[_11340 + mem[_11340]]) + 1
                mem[_11340 + ceil32(return_data.size)] = _11358
                require _11349 + (32 * _11358) + 32 <= return_data.size
                t = _11340 + ceil32(return_data.size) + 32
                s = _11340 + _11349 + 32
                while s < _11340 + _11349 + (32 * _11358) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12486 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_12486] == mem[_12486 + 18 len 14]
                require mem[_12486 + 32] == mem[_12486 + 50 len 14]
                require mem[_12486 + 64] == mem[_12486 + 92 len 4]
                mem[mem[64] + 4] = address(_7050)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7051))
                call address(_7051).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7050), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12562 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12562] == bool(mem[_12562])
                mem[mem[64] + 4] = address(_7050)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7052))
                call address(_7052).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7050), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12605 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12605] == bool(mem[_12605])
                _12633 = mem[_739 + 160]
                _12634 = mem[_739 + 64]
                _12635 = mem[_739 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_12635))
                staticcall address(_12635).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12672 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12685 = mem[_12672]
                if _12634 >= 999999:
                    mem[mem[64] + 4] = mem[_12672]
                    require ext_code.size(address(_12633))
                    call address(_12633).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _12685
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _12685
                    emit Earn(_12685);
                    _12757 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12757))
                    staticcall address(_12757).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12823 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_739 + 96] = mem[_12823]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12942 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12963 = mem[_12942]
                    _12980 = mem[_739]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13003 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12963
                    mem[mem[64] + 36] = 128
                    _13028 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _13028:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_13003 + 68] = this.address
                    mem[_13003 + 100] = block.timestamp + 60
                    require ext_code.size(address(_12980))
                    call address(_12980).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13003 + (32 * _13028) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13573 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13594 = mem[_13573]
                    require mem[_13573] <= test266151307()
                    require _13573 + mem[_13573] + 31 < _13573 + return_data.size
                    _13615 = mem[_13573 + mem[_13573]]
                    if mem[_13573 + mem[_13573]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13573 + mem[_13573]]) + 1 < 0 or _13573 + ceil32(return_data.size) + ceil32(32 * mem[_13573 + mem[_13573]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13573 + ceil32(return_data.size) + ceil32(32 * mem[_13573 + mem[_13573]]) + 1
                    mem[_13573 + ceil32(return_data.size)] = _13615
                    require _13594 + (32 * _13615) + 32 <= return_data.size
                    t = _13573 + ceil32(return_data.size) + 32
                    s = _13573 + _13594 + 32
                    while s < _13573 + _13594 + (32 * _13615) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_14187]
                else:
                    mem[mem[64] + 4] = _12634
                    mem[mem[64] + 36] = _12685
                    require ext_code.size(address(_12633))
                    call address(_12633).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _12634, _12685
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _12685
                    emit Earn(_12685);
                    _12758 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12758))
                    staticcall address(_12758).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12824 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_739 + 96] = mem[_12824]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12943 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12964 = mem[_12943]
                    _12981 = mem[_739]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13004 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12964
                    mem[mem[64] + 36] = 128
                    _13029 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _13029:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_13004 + 68] = this.address
                    mem[_13004 + 100] = block.timestamp + 60
                    require ext_code.size(address(_12981))
                    call address(_12981).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13004 + (32 * _13029) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13574 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13595 = mem[_13574]
                    require mem[_13574] <= test266151307()
                    require _13574 + mem[_13574] + 31 < _13574 + return_data.size
                    _13616 = mem[_13574 + mem[_13574]]
                    if mem[_13574 + mem[_13574]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13574 + mem[_13574]]) + 1 < 0 or _13574 + ceil32(return_data.size) + ceil32(32 * mem[_13574 + mem[_13574]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13574 + ceil32(return_data.size) + ceil32(32 * mem[_13574 + mem[_13574]]) + 1
                    mem[_13574 + ceil32(return_data.size)] = _13616
                    require _13595 + (32 * _13616) + 32 <= return_data.size
                    t = _13574 + ceil32(return_data.size) + 32
                    s = _13574 + _13595 + 32
                    while s < _13574 + _13595 + (32 * _13616) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14188 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_14188]
        else:
            if 1 >= mem[_7063]:
                revert with 0, 50
            mem[_7063 + 64] = address(_7051)
            mem[_7063 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_7063 + 100] = eth.balance(this.address) / 2
            mem[_7063 + 132] = 64
            mem[_7063 + 164] = mem[_7063]
            s = 0
            t = _7063 + 32
            u = _7063 + 196
            while s < mem[_7063]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(address(_7050))
            staticcall address(_7050).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _7063 + (32 * mem[_7063]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8755 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8777 = mem[_8755]
            require mem[_8755] <= test266151307()
            require _8755 + mem[_8755] + 31 < _8755 + return_data.size
            _8797 = mem[_8755 + mem[_8755]]
            if mem[_8755 + mem[_8755]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8755 + mem[_8755]]) + 1 < 0 or _8755 + ceil32(return_data.size) + ceil32(32 * mem[_8755 + mem[_8755]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _8755 + ceil32(return_data.size) + ceil32(32 * mem[_8755 + mem[_8755]]) + 1
            mem[_8755 + ceil32(return_data.size)] = _8797
            require _8777 + (32 * _8797) + 32 <= return_data.size
            t = _8755 + ceil32(return_data.size) + 32
            s = _8755 + _8777 + 32
            while s < _8755 + _8777 + (32 * _8797) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _8797:
                revert with 0, 50
            _10086 = mem[_8755 + ceil32(return_data.size) + 64]
            if mem[_8755 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8755 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_8755 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _8797:
                revert with 0, 50
            _10153 = mem[_8755 + ceil32(return_data.size) + 64]
            if mem[_8755 + ceil32(return_data.size) + 64] < 100 * mem[_8755 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _10172 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _10153 - (100 * _10086 / 10000)
            mem[mem[64] + 36] = 128
            _10182 = mem[_7063]
            mem[mem[64] + 132] = mem[_7063]
            s = 0
            t = _7063 + 32
            u = mem[64] + 164
            while s < _10182:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_10172 + 68] = this.address
            mem[_10172 + 100] = block.timestamp + 60
            require ext_code.size(address(_7050))
            call address(_7050).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _10172 + (32 * _10182) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11341 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11350 = mem[_11341]
            require mem[_11341] <= test266151307()
            require _11341 + mem[_11341] + 31 < _11341 + return_data.size
            _11359 = mem[_11341 + mem[_11341]]
            if mem[_11341 + mem[_11341]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_11341 + mem[_11341]]) + 1 < 0 or _11341 + ceil32(return_data.size) + ceil32(32 * mem[_11341 + mem[_11341]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _11341 + ceil32(return_data.size) + ceil32(32 * mem[_11341 + mem[_11341]]) + 1
            mem[_11341 + ceil32(return_data.size)] = _11359
            require _11350 + (32 * _11359) + 32 <= return_data.size
            t = _11341 + ceil32(return_data.size) + 32
            s = _11341 + _11350 + 32
            while s < _11341 + _11350 + (32 * _11359) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if stor21 == address(_7052):
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12491 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_12491] == mem[_12491 + 18 len 14]
                require mem[_12491 + 32] == mem[_12491 + 50 len 14]
                require mem[_12491 + 64] == mem[_12491 + 92 len 4]
                mem[mem[64] + 4] = address(_7050)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7051))
                call address(_7051).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7050), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12569 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12569] == bool(mem[_12569])
                mem[mem[64] + 4] = address(_7050)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7052))
                call address(_7052).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7050), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12613 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12613] == bool(mem[_12613])
                _12649 = mem[_739 + 160]
                _12650 = mem[_739 + 64]
                _12651 = mem[_739 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_12651))
                staticcall address(_12651).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12677 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12692 = mem[_12677]
                if _12650 >= 999999:
                    mem[mem[64] + 4] = mem[_12677]
                    require ext_code.size(address(_12649))
                    call address(_12649).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _12692
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _12692
                    emit Earn(_12692);
                    _12786 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12786))
                    staticcall address(_12786).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12834 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_739 + 96] = mem[_12834]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12952 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12972 = mem[_12952]
                    _12990 = mem[_739]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13014 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12972
                    mem[mem[64] + 36] = 128
                    _13037 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _13037:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_13014 + 68] = this.address
                    mem[_13014 + 100] = block.timestamp + 60
                    require ext_code.size(address(_12990))
                    call address(_12990).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13014 + (32 * _13037) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13575 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13596 = mem[_13575]
                    require mem[_13575] <= test266151307()
                    require _13575 + mem[_13575] + 31 < _13575 + return_data.size
                    _13617 = mem[_13575 + mem[_13575]]
                    if mem[_13575 + mem[_13575]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13575 + mem[_13575]]) + 1 < 0 or _13575 + ceil32(return_data.size) + ceil32(32 * mem[_13575 + mem[_13575]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13575 + ceil32(return_data.size) + ceil32(32 * mem[_13575 + mem[_13575]]) + 1
                    mem[_13575 + ceil32(return_data.size)] = _13617
                    require _13596 + (32 * _13617) + 32 <= return_data.size
                    t = _13575 + ceil32(return_data.size) + 32
                    s = _13575 + _13596 + 32
                    while s < _13575 + _13596 + (32 * _13617) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14189 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_14189]
                else:
                    mem[mem[64] + 4] = _12650
                    mem[mem[64] + 36] = _12692
                    require ext_code.size(address(_12649))
                    call address(_12649).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _12650, _12692
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _12692
                    emit Earn(_12692);
                    _12787 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12787))
                    staticcall address(_12787).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12835 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_739 + 96] = mem[_12835]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12953 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12973 = mem[_12953]
                    _12991 = mem[_739]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13015 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12973
                    mem[mem[64] + 36] = 128
                    _13038 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _13038:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_13015 + 68] = this.address
                    mem[_13015 + 100] = block.timestamp + 60
                    require ext_code.size(address(_12991))
                    call address(_12991).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13015 + (32 * _13038) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13576 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13597 = mem[_13576]
                    require mem[_13576] <= test266151307()
                    require _13576 + mem[_13576] + 31 < _13576 + return_data.size
                    _13618 = mem[_13576 + mem[_13576]]
                    if mem[_13576 + mem[_13576]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13576 + mem[_13576]]) + 1 < 0 or _13576 + ceil32(return_data.size) + ceil32(32 * mem[_13576 + mem[_13576]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13576 + ceil32(return_data.size) + ceil32(32 * mem[_13576 + mem[_13576]]) + 1
                    mem[_13576 + ceil32(return_data.size)] = _13618
                    require _13597 + (32 * _13618) + 32 <= return_data.size
                    t = _13576 + ceil32(return_data.size) + 32
                    s = _13576 + _13597 + 32
                    while s < _13576 + _13597 + (32 * _13618) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14190 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_14190]
            else:
                if 1 >= mem[_7063]:
                    revert with 0, 50
                mem[_7063 + 64] = address(_7052)
                _12478 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _12492 = mem[_7063]
                mem[mem[64] + 68] = mem[_7063]
                s = 0
                t = _7063 + 32
                u = mem[64] + 100
                while s < _12492:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_7050))
                staticcall address(_7050).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _12478 + (32 * _12492) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13586 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13607 = mem[_13586]
                require mem[_13586] <= test266151307()
                require _13586 + mem[_13586] + 31 < _13586 + return_data.size
                _13628 = mem[_13586 + mem[_13586]]
                if mem[_13586 + mem[_13586]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_13586 + mem[_13586]]) + 1 < 0 or _13586 + ceil32(return_data.size) + ceil32(32 * mem[_13586 + mem[_13586]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _13586 + ceil32(return_data.size) + ceil32(32 * mem[_13586 + mem[_13586]]) + 1
                mem[_13586 + ceil32(return_data.size)] = _13628
                require _13607 + (32 * _13628) + 32 <= return_data.size
                t = _13586 + ceil32(return_data.size) + 32
                s = _13586 + _13607 + 32
                while s < _13586 + _13607 + (32 * _13628) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _13628:
                    revert with 0, 50
                _14145 = mem[_13586 + ceil32(return_data.size) + 64]
                if mem[_13586 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13586 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_13586 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _13628:
                    revert with 0, 50
                _14222 = mem[_13586 + ceil32(return_data.size) + 64]
                if mem[_13586 + ceil32(return_data.size) + 64] < 100 * mem[_13586 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _14230 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _14222 - (100 * _14145 / 10000)
                mem[mem[64] + 36] = 128
                _14235 = mem[_7063]
                mem[mem[64] + 132] = mem[_7063]
                s = 0
                t = _7063 + 32
                u = mem[64] + 164
                while s < _14235:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_14230 + 68] = this.address
                mem[_14230 + 100] = block.timestamp + 60
                require ext_code.size(address(_7050))
                call address(_7050).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _14230 + (32 * _14235) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14595 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _14599 = mem[_14595]
                require mem[_14595] <= test266151307()
                require _14595 + mem[_14595] + 31 < _14595 + return_data.size
                _14603 = mem[_14595 + mem[_14595]]
                if mem[_14595 + mem[_14595]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_14595 + mem[_14595]]) + 1 < 0 or _14595 + ceil32(return_data.size) + ceil32(32 * mem[_14595 + mem[_14595]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _14595 + ceil32(return_data.size) + ceil32(32 * mem[_14595 + mem[_14595]]) + 1
                mem[_14595 + ceil32(return_data.size)] = _14603
                require _14599 + (32 * _14603) + 32 <= return_data.size
                t = _14595 + ceil32(return_data.size) + 32
                s = _14595 + _14599 + 32
                while s < _14595 + _14599 + (32 * _14603) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14943 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_14943] == mem[_14943 + 18 len 14]
                require mem[_14943 + 32] == mem[_14943 + 50 len 14]
                require mem[_14943 + 64] == mem[_14943 + 92 len 4]
                mem[mem[64] + 4] = address(_7050)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7051))
                call address(_7051).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7050), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14967 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14967] == bool(mem[_14967])
                mem[mem[64] + 4] = address(_7050)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7052))
                call address(_7052).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7050), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14983 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14983] == bool(mem[_14983])
                _14993 = mem[_739 + 160]
                _14994 = mem[_739 + 64]
                _14995 = mem[_739 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_14995))
                staticcall address(_14995).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15011 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _15015 = mem[_15011]
                if _14994 >= 999999:
                    mem[mem[64] + 4] = mem[_15011]
                    require ext_code.size(address(_14993))
                    call address(_14993).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _15015
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _15015
                    emit Earn(_15015);
                    _15052 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15052))
                    staticcall address(_15052).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15076 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_739 + 96] = mem[_15076]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15124 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15132 = mem[_15124]
                    _15140 = mem[_739]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _15148 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _15132
                    mem[mem[64] + 36] = 128
                    _15156 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _15156:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_15148 + 68] = this.address
                    mem[_15148 + 100] = block.timestamp + 60
                    require ext_code.size(address(_15140))
                    call address(_15140).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _15148 + (32 * _15156) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15268 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15276 = mem[_15268]
                    require mem[_15268] <= test266151307()
                    require _15268 + mem[_15268] + 31 < _15268 + return_data.size
                    _15284 = mem[_15268 + mem[_15268]]
                    if mem[_15268 + mem[_15268]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_15268 + mem[_15268]]) + 1 < 0 or _15268 + ceil32(return_data.size) + ceil32(32 * mem[_15268 + mem[_15268]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _15268 + ceil32(return_data.size) + ceil32(32 * mem[_15268 + mem[_15268]]) + 1
                    mem[_15268 + ceil32(return_data.size)] = _15284
                    require _15276 + (32 * _15284) + 32 <= return_data.size
                    t = _15268 + ceil32(return_data.size) + 32
                    s = _15268 + _15276 + 32
                    while s < _15268 + _15276 + (32 * _15284) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15364 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_15364]
                else:
                    mem[mem[64] + 4] = _14994
                    mem[mem[64] + 36] = _15015
                    require ext_code.size(address(_14993))
                    call address(_14993).0xe2bbb158 with:
                         gas gas_remaining wei
                        args _14994, _15015
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _15015
                    emit Earn(_15015);
                    _15053 = mem[_739 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15053))
                    staticcall address(_15053).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15077 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_739 + 96] = mem[_15077]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15125 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15133 = mem[_15125]
                    _15141 = mem[_739]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _15149 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _15133
                    mem[mem[64] + 36] = 128
                    _15157 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _15157:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_15149 + 68] = this.address
                    mem[_15149 + 100] = block.timestamp + 60
                    require ext_code.size(address(_15141))
                    call address(_15141).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _15149 + (32 * _15157) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15269 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15277 = mem[_15269]
                    require mem[_15269] <= test266151307()
                    require _15269 + mem[_15269] + 31 < _15269 + return_data.size
                    _15285 = mem[_15269 + mem[_15269]]
                    if mem[_15269 + mem[_15269]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_15269 + mem[_15269]]) + 1 < 0 or _15269 + ceil32(return_data.size) + ceil32(32 * mem[_15269 + mem[_15269]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _15269 + ceil32(return_data.size) + ceil32(32 * mem[_15269 + mem[_15269]]) + 1
                    mem[_15269 + ceil32(return_data.size)] = _15285
                    require _15277 + (32 * _15285) + 32 <= return_data.size
                    t = _15269 + ceil32(return_data.size) + 32
                    s = _15269 + _15277 + 32
                    while s < _15269 + _15277 + (32 * _15285) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15365 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_15365]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = _739
        s = _3528 - (100 * _3528 / 10000)
        s = stor9[idx].field_0
        continue 
    _740 = mem[64]
    mem[64] = mem[64] + 256
    mem[_740] = 0
    mem[_740 + 32] = 0
    mem[_740 + 64] = 0
    mem[_740 + 96] = 0
    mem[_740 + 128] = 0
    mem[_740 + 160] = 0
    mem[_740 + 192] = 0
    mem[_740 + 224] = 0
    _744 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_744 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _740
    w = 0
    w = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _1746 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1746] = strategyInfo[stor9[idx].field_0].field_0
        mem[_1746 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_1746 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_1746 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_1746 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_1746 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_1746 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_1746 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1761 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1767 = mem[_1761]
            if not mem[_1761]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_1761]
                v = _1746
                w = stor9[idx].field_0
                w = w
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1819 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1840 = mem[_1819]
            require mem[_1819] == mem[_1819 + 18 len 14]
            _1853 = mem[_1819 + 32]
            require mem[_1819 + 32] == mem[_1819 + 50 len 14]
            require mem[_1819 + 64] == mem[_1819 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1881 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1889 = mem[_1881]
            if _1767 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_1881]:
                revert with 0, 18
            if 10^12 * _1767 / mem[_1881] and Mask(112, 0, _1840) > -1 / 10^12 * _1767 / mem[_1881]:
                revert with 0, 17
            if 10^12 * _1767 / mem[_1881] and Mask(112, 0, _1853) > -1 / 10^12 * _1767 / mem[_1881]:
                revert with 0, 17
            if 1 >= mem[_744]:
                revert with 0, 50
            mem[_744 + 64] = stor21
            if 0 >= mem[_744]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_744 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _1978 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1767 / _1889 * Mask(112, 0, _1853) / 10^12
                mem[mem[64] + 36] = 64
                _1991 = mem[_744]
                mem[mem[64] + 68] = mem[_744]
                s = 0
                t = _744 + 32
                u = mem[64] + 100
                while s < _1991:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1978 + (32 * _1991) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3548 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3558 = mem[_3548]
                require mem[_3548] <= test266151307()
                require _3548 + mem[_3548] + 31 < _3548 + return_data.size
                _3572 = mem[_3548 + mem[_3548]]
                if mem[_3548 + mem[_3548]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3548 + mem[_3548]]) + 1 < 0 or _3548 + ceil32(return_data.size) + ceil32(32 * mem[_3548 + mem[_3548]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3548 + ceil32(return_data.size) + ceil32(32 * mem[_3548 + mem[_3548]]) + 1
                mem[_3548 + ceil32(return_data.size)] = _3572
                require _3558 + (32 * _3572) + 32 <= return_data.size
                t = _3548 + ceil32(return_data.size) + 32
                s = _3548 + _3558 + 32
                while s < _3548 + _3558 + (32 * _3572) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3572:
                    revert with 0, 50
                _5293 = mem[_3548 + ceil32(return_data.size) + 64]
                if 10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12 > !mem[_3548 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1746 + 128] = (10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12) + mem[_3548 + ceil32(return_data.size) + 64]
                if w > !((10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12) + _5293):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3548 + ceil32(return_data.size)
                t = 10^12 * _1767 / _1889 * Mask(112, 0, _1853) / 10^12
                u = 10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12
                v = _1767
                v = _1746
                w = stor9[idx].field_0
                w = w + (10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12) + _5293
                continue 
            mem[_744 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12
                mem[mem[64] + 36] = 64
                _1997 = mem[_744]
                mem[mem[64] + 68] = mem[_744]
                s = 0
                t = _744 + 32
                u = mem[64] + 100
                while s < _1997:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12, 64, mem[mem[64] + 68 len (32 * _1997) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3547 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3557 = mem[_3547]
                require mem[_3547] <= test266151307()
                require _3547 + mem[_3547] + 31 < _3547 + return_data.size
                _3571 = mem[_3547 + mem[_3547]]
                if mem[_3547 + mem[_3547]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3547 + mem[_3547]]) + 1 < 0 or _3547 + ceil32(return_data.size) + ceil32(32 * mem[_3547 + mem[_3547]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3547 + ceil32(return_data.size) + ceil32(32 * mem[_3547 + mem[_3547]]) + 1
                mem[_3547 + ceil32(return_data.size)] = _3571
                require _3557 + (32 * _3571) + 32 <= return_data.size
                t = _3547 + ceil32(return_data.size) + 32
                s = _3547 + _3557 + 32
                while s < _3547 + _3557 + (32 * _3571) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3571:
                    revert with 0, 50
                _5292 = mem[_3547 + ceil32(return_data.size) + 64]
                if 10^12 * _1767 / _1889 * Mask(112, 0, _1853) / 10^12 > !mem[_3547 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1746 + 128] = (10^12 * _1767 / _1889 * Mask(112, 0, _1853) / 10^12) + mem[_3547 + ceil32(return_data.size) + 64]
                if w > !((10^12 * _1767 / _1889 * Mask(112, 0, _1853) / 10^12) + _5292):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3547 + ceil32(return_data.size)
                t = 10^12 * _1767 / _1889 * Mask(112, 0, _1853) / 10^12
                u = 10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12
                v = _1767
                v = _1746
                w = stor9[idx].field_0
                w = w + (10^12 * _1767 / _1889 * Mask(112, 0, _1853) / 10^12) + _5292
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2000 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2010 = mem[_2000]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2064 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2084 = mem[_2064]
            if mem[_2064] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _2010:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2201 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2223 = mem[_2201]
            if 10^12 * _2084 / _2010 and mem[_2201] > -1 / 10^12 * _2084 / _2010:
                revert with 0, 17
            _2295 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _2084 / _2010 * _2223 / 10^12
            mem[mem[64] + 36] = 64
            _2318 = mem[_744]
            mem[mem[64] + 68] = mem[_744]
            t = 0
            u = _744 + 32
            v = mem[64] + 100
            while t < _2318:
                mem[v] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                v = v + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2295 + (32 * _2318) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3546 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3556 = mem[_3546]
            require mem[_3546] <= test266151307()
            require _3546 + mem[_3546] + 31 < _3546 + return_data.size
            _3570 = mem[_3546 + mem[_3546]]
            if mem[_3546 + mem[_3546]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3546 + mem[_3546]]) + 1 < 0 or _3546 + ceil32(return_data.size) + ceil32(32 * mem[_3546 + mem[_3546]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3546 + ceil32(return_data.size) + ceil32(32 * mem[_3546 + mem[_3546]]) + 1
            mem[_3546 + ceil32(return_data.size)] = _3570
            require _3556 + (32 * _3570) + 32 <= return_data.size
            u = _3546 + ceil32(return_data.size) + 32
            t = _3546 + _3556 + 32
            while t < _3546 + _3556 + (32 * _3570) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _3570:
                revert with 0, 50
            _5291 = mem[_3546 + ceil32(return_data.size) + 64]
            mem[_1746 + 128] = mem[_3546 + ceil32(return_data.size) + 64]
            if w > !_5291:
                revert with 0, 17
            if 0 >= mem[_744]:
                revert with 0, 50
            mem[_744 + 32] = mem[_1746 + 236 len 20]
            _5336 = mem[_1746 + 224]
            _5337 = mem[_1746]
            require ext_code.size(mem[_1746 + 236 len 20])
            staticcall mem[_1746 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5355 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5369 = mem[_5355]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_5336))
            staticcall address(_5336).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5387 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5417 = mem[_5387]
            if mem[_5387] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _5369:
                revert with 0, 18
            mem[mem[64] + 4] = address(_5337)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_5337)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5487 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5501 = mem[_5487]
            if 10^12 * _5417 / _5369 and mem[_5487] > -1 / 10^12 * _5417 / _5369:
                revert with 0, 17
            _5547 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _5417 / _5369 * _5501 / 10^12
            mem[mem[64] + 36] = 64
            _5559 = mem[_744]
            mem[mem[64] + 68] = mem[_744]
            t = 0
            u = _744 + 32
            v = mem[64] + 100
            while t < _5559:
                mem[v] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                v = v + 32
                continue 
            require ext_code.size(address(_5337))
            staticcall address(_5337).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _5547 + (32 * _5559) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7070 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7080 = mem[_7070]
            require mem[_7070] <= test266151307()
            require _7070 + mem[_7070] + 31 < _7070 + return_data.size
            _7090 = mem[_7070 + mem[_7070]]
            if mem[_7070 + mem[_7070]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_7070 + mem[_7070]]) + 1 < 0 or _7070 + ceil32(return_data.size) + ceil32(32 * mem[_7070 + mem[_7070]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _7070 + ceil32(return_data.size) + ceil32(32 * mem[_7070 + mem[_7070]]) + 1
            mem[_7070 + ceil32(return_data.size)] = _7090
            require _7080 + (32 * _7090) + 32 <= return_data.size
            u = _7070 + ceil32(return_data.size) + 32
            t = _7070 + _7080 + 32
            while t < _7070 + _7080 + (32 * _7090) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7090:
                revert with 0, 50
            if mem[_1746 + 128] > !mem[_7070 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1746 + 128] = mem[_1746 + 128] + mem[_7070 + ceil32(return_data.size) + 64]
            if w + _5291 > !mem[_1746 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _1767 / _1889 * Mask(112, 0, _1853) / 10^12
            u = 10^12 * _1767 / _1889 * Mask(112, 0, _1840) / 10^12
            v = _1767
            v = _1746
            w = stor9[idx].field_0
            w = w + _5291 + mem[_1746 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1760 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _1766 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_1766] = mem[_1760]
        mem[_1766 + 32] = mem[_1760 + 32]
        mem[_1766 + 64] = mem[_1760 + 64]
        require return_data.size - 96 >= 96
        _1792 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1792] = mem[_1760 + 96]
        mem[_1792 + 32] = mem[_1760 + 128]
        mem[_1792 + 64] = mem[_1760 + 160]
        mem[_1766 + 96] = _1792
        mem[_1766 + 128] = mem[_1760 + 192]
        require return_data.size - 224 >= 96
        _1810 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1810] = mem[_1760 + 224]
        mem[_1810 + 32] = mem[_1760 + 256]
        mem[_1810 + 64] = mem[_1760 + 288]
        mem[_1766 + 160] = _1810
        _1829 = mem[_1766 + 64]
        if not mem[_1766 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_1766 + 64]
            v = _1746
            w = stor9[idx].field_0
            w = w
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1866 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1873 = mem[_1866]
        require mem[_1866] == mem[_1866 + 18 len 14]
        _1886 = mem[_1866 + 32]
        require mem[_1866 + 32] == mem[_1866 + 50 len 14]
        require mem[_1866 + 64] == mem[_1866 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1926 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1933 = mem[_1926]
        if _1829 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_1926]:
            revert with 0, 18
        if 10^12 * _1829 / mem[_1926] and Mask(112, 0, _1873) > -1 / 10^12 * _1829 / mem[_1926]:
            revert with 0, 17
        if 10^12 * _1829 / mem[_1926] and Mask(112, 0, _1886) > -1 / 10^12 * _1829 / mem[_1926]:
            revert with 0, 17
        if 1 >= mem[_744]:
            revert with 0, 50
        mem[_744 + 64] = stor21
        if 0 >= mem[_744]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_744 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            _2044 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1829 / _1933 * Mask(112, 0, _1886) / 10^12
            mem[mem[64] + 36] = 64
            _2079 = mem[_744]
            mem[mem[64] + 68] = mem[_744]
            s = 0
            t = _744 + 32
            u = mem[64] + 100
            while s < _2079:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2044 + (32 * _2079) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3545 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3555 = mem[_3545]
            require mem[_3545] <= test266151307()
            require _3545 + mem[_3545] + 31 < _3545 + return_data.size
            _3569 = mem[_3545 + mem[_3545]]
            if mem[_3545 + mem[_3545]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3545 + mem[_3545]]) + 1 < 0 or _3545 + ceil32(return_data.size) + ceil32(32 * mem[_3545 + mem[_3545]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3545 + ceil32(return_data.size) + ceil32(32 * mem[_3545 + mem[_3545]]) + 1
            mem[_3545 + ceil32(return_data.size)] = _3569
            require _3555 + (32 * _3569) + 32 <= return_data.size
            t = _3545 + ceil32(return_data.size) + 32
            s = _3545 + _3555 + 32
            while s < _3545 + _3555 + (32 * _3569) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3569:
                revert with 0, 50
            _5290 = mem[_3545 + ceil32(return_data.size) + 64]
            if 10^12 * _1829 / _1933 * Mask(112, 0, _1873) / 10^12 > !mem[_3545 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1746 + 128] = (10^12 * _1829 / _1933 * Mask(112, 0, _1873) / 10^12) + mem[_3545 + ceil32(return_data.size) + 64]
            if w > !((10^12 * _1829 / _1933 * Mask(112, 0, _1873) / 10^12) + _5290):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3545 + ceil32(return_data.size)
            t = 10^12 * _1829 / _1933 * Mask(112, 0, _1886) / 10^12
            u = 10^12 * _1829 / _1933 * Mask(112, 0, _1873) / 10^12
            v = _1829
            v = _1746
            w = stor9[idx].field_0
            w = w + (10^12 * _1829 / _1933 * Mask(112, 0, _1873) / 10^12) + _5290
            continue 
        mem[_744 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            _2063 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1829 / _1933 * Mask(112, 0, _1873) / 10^12
            mem[mem[64] + 36] = 64
            _2083 = mem[_744]
            mem[mem[64] + 68] = mem[_744]
            s = 0
            t = _744 + 32
            v = mem[64] + 100
            while s < _2083:
                mem[v] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                v = v + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2063 + (32 * _2083) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3544 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3554 = mem[_3544]
            require mem[_3544] <= test266151307()
            require _3544 + mem[_3544] + 31 < _3544 + return_data.size
            _3568 = mem[_3544 + mem[_3544]]
            if mem[_3544 + mem[_3544]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3544 + mem[_3544]]) + 1 < 0 or _3544 + ceil32(return_data.size) + ceil32(32 * mem[_3544 + mem[_3544]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3544 + ceil32(return_data.size) + ceil32(32 * mem[_3544 + mem[_3544]]) + 1
            mem[_3544 + ceil32(return_data.size)] = _3568
            require _3554 + (32 * _3568) + 32 <= return_data.size
            t = _3544 + ceil32(return_data.size) + 32
            s = _3544 + _3554 + 32
            while s < _3544 + _3554 + (32 * _3568) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3568:
                revert with 0, 50
            _5289 = mem[_3544 + ceil32(return_data.size) + 64]
            if 10^12 * _1829 / _1933 * Mask(112, 0, _1886) / 10^12 > !mem[_3544 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1746 + 128] = (10^12 * _1829 / _1933 * Mask(112, 0, _1886) / 10^12) + mem[_3544 + ceil32(return_data.size) + 64]
            if w > !((10^12 * _1829 / _1933 * Mask(112, 0, _1886) / 10^12) + _5289):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3544 + ceil32(return_data.size)
            t = 10^12 * _1829 / _1933 * Mask(112, 0, _1886) / 10^12
            s = 10^12 * _1829 / _1933 * Mask(112, 0, _1873) / 10^12
            v = _1829
            v = _1746
            w = stor9[idx].field_0
            w = w + (10^12 * _1829 / _1933 * Mask(112, 0, _1886) / 10^12) + _5289
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2089 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2103 = mem[_2089]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2161 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2185 = mem[_2161]
        if mem[_2161] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _2103:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2292 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2317 = mem[_2292]
        if 10^12 * _2185 / _2103 and mem[_2292] > -1 / 10^12 * _2185 / _2103:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _2185 / _2103 * _2317 / 10^12
        mem[mem[64] + 36] = 64
        _2399 = mem[_744]
        mem[mem[64] + 68] = mem[_744]
        t = 0
        u = _744 + 32
        v = mem[64] + 100
        while t < _2399:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _2185 / _2103 * _2317 / 10^12, 64, mem[mem[64] + 68 len (32 * _2399) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3543 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3553 = mem[_3543]
        require mem[_3543] <= test266151307()
        require _3543 + mem[_3543] + 31 < _3543 + return_data.size
        _3567 = mem[_3543 + mem[_3543]]
        if mem[_3543 + mem[_3543]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_3543 + mem[_3543]]) + 1 < 0 or _3543 + ceil32(return_data.size) + ceil32(32 * mem[_3543 + mem[_3543]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _3543 + ceil32(return_data.size) + ceil32(32 * mem[_3543 + mem[_3543]]) + 1
        mem[_3543 + ceil32(return_data.size)] = _3567
        require _3553 + (32 * _3567) + 32 <= return_data.size
        u = _3543 + ceil32(return_data.size) + 32
        t = _3543 + _3553 + 32
        while t < _3543 + _3553 + (32 * _3567) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _3567:
            revert with 0, 50
        _5288 = mem[_3543 + ceil32(return_data.size) + 64]
        mem[_1746 + 128] = mem[_3543 + ceil32(return_data.size) + 64]
        if w > !_5288:
            revert with 0, 17
        if 0 >= mem[_744]:
            revert with 0, 50
        mem[_744 + 32] = mem[_1746 + 236 len 20]
        _5334 = mem[_1746 + 224]
        _5335 = mem[_1746]
        require ext_code.size(mem[_1746 + 236 len 20])
        staticcall mem[_1746 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5354 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5368 = mem[_5354]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_5334))
        staticcall address(_5334).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5386 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5416 = mem[_5386]
        if mem[_5386] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _5368:
            revert with 0, 18
        mem[mem[64] + 4] = address(_5335)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_5335)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5486 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5500 = mem[_5486]
        if 10^12 * _5416 / _5368 and mem[_5486] > -1 / 10^12 * _5416 / _5368:
            revert with 0, 17
        _5546 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _5416 / _5368 * _5500 / 10^12
        mem[mem[64] + 36] = 64
        _5558 = mem[_744]
        mem[mem[64] + 68] = mem[_744]
        t = 0
        u = _744 + 32
        v = mem[64] + 100
        while t < _5558:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        require ext_code.size(address(_5335))
        staticcall address(_5335).mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _5546 + (32 * _5558) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7069 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7079 = mem[_7069]
        require mem[_7069] <= test266151307()
        require _7069 + mem[_7069] + 31 < _7069 + return_data.size
        _7089 = mem[_7069 + mem[_7069]]
        if mem[_7069 + mem[_7069]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_7069 + mem[_7069]]) + 1 < 0 or _7069 + ceil32(return_data.size) + ceil32(32 * mem[_7069 + mem[_7069]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _7069 + ceil32(return_data.size) + ceil32(32 * mem[_7069 + mem[_7069]]) + 1
        mem[_7069 + ceil32(return_data.size)] = _7089
        require _7079 + (32 * _7089) + 32 <= return_data.size
        u = _7069 + ceil32(return_data.size) + 32
        t = _7069 + _7079 + 32
        while t < _7069 + _7079 + (32 * _7089) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _7089:
            revert with 0, 50
        if mem[_1746 + 128] > !mem[_7069 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_1746 + 128] = mem[_1746 + 128] + mem[_7069 + ceil32(return_data.size) + 64]
        if w + _5288 > !mem[_1746 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _1829 / _1933 * Mask(112, 0, _1886) / 10^12
        u = 10^12 * _1829 / _1933 * Mask(112, 0, _1873) / 10^12
        v = _1829
        v = _1746
        w = stor9[idx].field_0
        w = w + _5288 + mem[_1746 + 128]
        continue 
    emit 0xf9ede3d1 
    _1758 = mem[64]
    mem[64] = mem[64] + 256
    mem[_1758] = 0
    mem[_1758 + 32] = 0
    mem[_1758 + 64] = 0
    mem[_1758 + 96] = 0
    mem[_1758 + 128] = 0
    mem[_1758 + 160] = 0
    mem[_1758 + 192] = 0
    mem[_1758 + 224] = 0
    _1759 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_1759 + 32 len 64] = call.data[calldata.size len 64]
    s = 0
    t = 96
    u = 0
    w = 0
    x = 0
    x = _1758
    x = 0
    x = 0
    while s < stor9.length:
        mem[0] = stor9[s].field_0
        mem[32] = 6
        _3517 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3517] = strategyInfo[stor9[s].field_0].field_0
        mem[_3517 + 32] = strategyInfo[stor9[s].field_0].field_256
        mem[_3517 + 64] = strategyInfo[stor9[s].field_0].field_512
        mem[_3517 + 96] = strategyInfo[stor9[s].field_0].field_768
        mem[_3517 + 128] = strategyInfo[stor9[s].field_0].field_1024
        mem[_3517 + 160] = strategyInfo[stor9[s].field_0].field_1280
        mem[_3517 + 192] = strategyInfo[stor9[s].field_0].field_1536
        mem[_3517 + 224] = strategyInfo[stor9[s].field_0].field_1792
        if 999999 > strategyInfo[stor9[s].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[s].field_0].field_1280)
            staticcall strategyInfo[stor9[s].field_0].field_1280.0x93f1a40b with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[s].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3542 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _3551 = mem[_3542]
            if not mem[_3542]:
                if s == -1:
                    revert with 0, 17
                s = s + 1
                t = t
                u = u
                w = w
                x = mem[_3542]
                x = _3517
                x = stor9[s].field_0
                x = x
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_256)
            staticcall strategyInfo[stor9[s].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3598 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3620 = mem[_3598]
            require mem[_3598] == mem[_3598 + 18 len 14]
            _3644 = mem[_3598 + 32]
            require mem[_3598 + 32] == mem[_3598 + 50 len 14]
            require mem[_3598 + 64] == mem[_3598 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[s].field_0].field_256)
            staticcall strategyInfo[stor9[s].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3688 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3702 = mem[_3688]
            if _3551 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_3688]:
                revert with 0, 18
            if 10^12 * _3551 / mem[_3688] and Mask(112, 0, _3620) > -1 / 10^12 * _3551 / mem[_3688]:
                revert with 0, 17
            if 10^12 * _3551 / mem[_3688] and Mask(112, 0, _3644) > -1 / 10^12 * _3551 / mem[_3688]:
                revert with 0, 17
            if 1 >= mem[_1759]:
                revert with 0, 50
            mem[_1759 + 64] = stor21
            if 0 >= mem[_1759]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[s].field_0].field_1536:
                mem[_1759 + 32] = strategyInfo[stor9[s].field_0].field_1792
                _3798 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3551 / _3702 * Mask(112, 0, _3644) / 10^12
                mem[mem[64] + 36] = 64
                _3829 = mem[_1759]
                mem[mem[64] + 68] = mem[_1759]
                idx = 0
                t = _1759 + 32
                u = mem[64] + 100
                while idx < _3829:
                    mem[u] = mem[t + 12 len 20]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
                staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _3798 + (32 * _3829) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5317 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5333 = mem[_5317]
                require mem[_5317] <= test266151307()
                require _5317 + mem[_5317] + 31 < _5317 + return_data.size
                _5353 = mem[_5317 + mem[_5317]]
                if mem[_5317 + mem[_5317]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5317 + mem[_5317]]) + 1 < 0 or _5317 + ceil32(return_data.size) + ceil32(32 * mem[_5317 + mem[_5317]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5317 + ceil32(return_data.size) + ceil32(32 * mem[_5317 + mem[_5317]]) + 1
                mem[_5317 + ceil32(return_data.size)] = _5353
                require _5333 + (32 * _5353) + 32 <= return_data.size
                t = _5317 + ceil32(return_data.size) + 32
                idx = _5317 + _5333 + 32
                while idx < _5317 + _5333 + (32 * _5353) + 32:
                    mem[t] = mem[idx]
                    t = t + 32
                    idx = idx + 32
                    continue 
                if 1 >= _5353:
                    revert with 0, 50
                _7046 = mem[_5317 + ceil32(return_data.size) + 64]
                if 10^12 * _3551 / _3702 * Mask(112, 0, _3620) / 10^12 > !mem[_5317 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3517 + 128] = (10^12 * _3551 / _3702 * Mask(112, 0, _3620) / 10^12) + mem[_5317 + ceil32(return_data.size) + 64]
                if x > !((10^12 * _3551 / _3702 * Mask(112, 0, _3620) / 10^12) + _7046):
                    revert with 0, 17
                if s == -1:
                    revert with 0, 17
                s = s + 1
                t = _5317 + ceil32(return_data.size)
                u = 10^12 * _3551 / _3702 * Mask(112, 0, _3644) / 10^12
                w = 10^12 * _3551 / _3702 * Mask(112, 0, _3620) / 10^12
                x = _3551
                x = _3517
                x = stor9[s].field_0
                x = x + (10^12 * _3551 / _3702 * Mask(112, 0, _3620) / 10^12) + _7046
                continue 
            mem[_1759 + 32] = strategyInfo[stor9[s].field_0].field_1536
            if stor21 == strategyInfo[stor9[s].field_0].field_1792:
                _3813 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3551 / _3702 * Mask(112, 0, _3620) / 10^12
                mem[mem[64] + 36] = 64
                _3837 = mem[_1759]
                mem[mem[64] + 68] = mem[_1759]
                idx = 0
                t = _1759 + 32
                u = mem[64] + 100
                while idx < _3837:
                    mem[u] = mem[t + 12 len 20]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
                staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _3813 + (32 * _3837) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5316 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5332 = mem[_5316]
                require mem[_5316] <= test266151307()
                require _5316 + mem[_5316] + 31 < _5316 + return_data.size
                _5352 = mem[_5316 + mem[_5316]]
                if mem[_5316 + mem[_5316]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5316 + mem[_5316]]) + 1 < 0 or _5316 + ceil32(return_data.size) + ceil32(32 * mem[_5316 + mem[_5316]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5316 + ceil32(return_data.size) + ceil32(32 * mem[_5316 + mem[_5316]]) + 1
                mem[_5316 + ceil32(return_data.size)] = _5352
                require _5332 + (32 * _5352) + 32 <= return_data.size
                t = _5316 + ceil32(return_data.size) + 32
                idx = _5316 + _5332 + 32
                while idx < _5316 + _5332 + (32 * _5352) + 32:
                    mem[t] = mem[idx]
                    t = t + 32
                    idx = idx + 32
                    continue 
                if 1 >= _5352:
                    revert with 0, 50
                _7045 = mem[_5316 + ceil32(return_data.size) + 64]
                if 10^12 * _3551 / _3702 * Mask(112, 0, _3644) / 10^12 > !mem[_5316 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3517 + 128] = (10^12 * _3551 / _3702 * Mask(112, 0, _3644) / 10^12) + mem[_5316 + ceil32(return_data.size) + 64]
                if x > !((10^12 * _3551 / _3702 * Mask(112, 0, _3644) / 10^12) + _7045):
                    revert with 0, 17
                if s == -1:
                    revert with 0, 17
                s = s + 1
                t = _5316 + ceil32(return_data.size)
                u = 10^12 * _3551 / _3702 * Mask(112, 0, _3644) / 10^12
                w = 10^12 * _3551 / _3702 * Mask(112, 0, _3620) / 10^12
                x = _3551
                x = _3517
                x = stor9[s].field_0
                x = x + (10^12 * _3551 / _3702 * Mask(112, 0, _3644) / 10^12) + _7045
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_1536)
            staticcall strategyInfo[stor9[s].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3847 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3863 = mem[_3847]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[s].field_0].field_1536)
            staticcall strategyInfo[stor9[s].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3908 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3931 = mem[_3908]
            if mem[_3908] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _3863:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[s].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[s].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4036 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4061 = mem[_4036]
            if 10^12 * _3931 / _3863 and mem[_4036] > -1 / 10^12 * _3931 / _3863:
                revert with 0, 17
            _4108 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3931 / _3863 * _4061 / 10^12
            mem[mem[64] + 36] = 64
            _4129 = mem[_1759]
            mem[mem[64] + 68] = mem[_1759]
            idx = 0
            u = _1759 + 32
            v = mem[64] + 100
            while idx < _4129:
                mem[v] = mem[u + 12 len 20]
                idx = idx + 1
                u = u + 32
                v = v + 32
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
            staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4108 + (32 * _4129) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5315 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5331 = mem[_5315]
            require mem[_5315] <= test266151307()
            require _5315 + mem[_5315] + 31 < _5315 + return_data.size
            _5351 = mem[_5315 + mem[_5315]]
            if mem[_5315 + mem[_5315]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5315 + mem[_5315]]) + 1 < 0 or _5315 + ceil32(return_data.size) + ceil32(32 * mem[_5315 + mem[_5315]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5315 + ceil32(return_data.size) + ceil32(32 * mem[_5315 + mem[_5315]]) + 1
            mem[_5315 + ceil32(return_data.size)] = _5351
            require _5331 + (32 * _5351) + 32 <= return_data.size
            u = _5315 + ceil32(return_data.size) + 32
            idx = _5315 + _5331 + 32
            while idx < _5315 + _5331 + (32 * _5351) + 32:
                mem[u] = mem[idx]
                u = u + 32
                idx = idx + 32
                continue 
            if 1 >= _5351:
                revert with 0, 50
            _7044 = mem[_5315 + ceil32(return_data.size) + 64]
            mem[_3517 + 128] = mem[_5315 + ceil32(return_data.size) + 64]
            if x > !_7044:
                revert with 0, 17
            if 0 >= mem[_1759]:
                revert with 0, 50
            mem[_1759 + 32] = mem[_3517 + 236 len 20]
            _7077 = mem[_3517 + 224]
            _7078 = mem[_3517]
            require ext_code.size(mem[_3517 + 236 len 20])
            staticcall mem[_3517 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7100 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7124 = mem[_7100]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_7077))
            staticcall address(_7077).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7150 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7164 = mem[_7150]
            if mem[_7150] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _7124:
                revert with 0, 18
            mem[mem[64] + 4] = address(_7078)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_7078)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7238 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7250 = mem[_7238]
            if 10^12 * _7164 / _7124 and mem[_7238] > -1 / 10^12 * _7164 / _7124:
                revert with 0, 17
            _7292 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _7164 / _7124 * _7250 / 10^12
            mem[mem[64] + 36] = 64
            _7308 = mem[_1759]
            mem[mem[64] + 68] = mem[_1759]
            idx = 0
            u = _1759 + 32
            v = mem[64] + 100
            while idx < _7308:
                mem[v] = mem[u + 12 len 20]
                idx = idx + 1
                u = u + 32
                v = v + 32
                continue 
            require ext_code.size(address(_7078))
            staticcall address(_7078).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _7292 + (32 * _7308) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8751 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8773 = mem[_8751]
            require mem[_8751] <= test266151307()
            require _8751 + mem[_8751] + 31 < _8751 + return_data.size
            _8793 = mem[_8751 + mem[_8751]]
            if mem[_8751 + mem[_8751]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8751 + mem[_8751]]) + 1 < 0 or _8751 + ceil32(return_data.size) + ceil32(32 * mem[_8751 + mem[_8751]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _8751 + ceil32(return_data.size) + ceil32(32 * mem[_8751 + mem[_8751]]) + 1
            mem[_8751 + ceil32(return_data.size)] = _8793
            require _8773 + (32 * _8793) + 32 <= return_data.size
            u = _8751 + ceil32(return_data.size) + 32
            idx = _8751 + _8773 + 32
            while idx < _8751 + _8773 + (32 * _8793) + 32:
                mem[u] = mem[idx]
                u = u + 32
                idx = idx + 32
                continue 
            if 1 >= _8793:
                revert with 0, 50
            if mem[_3517 + 128] > !mem[_8751 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3517 + 128] = mem[_3517 + 128] + mem[_8751 + ceil32(return_data.size) + 64]
            if x + _7044 > !mem[_3517 + 128]:
                revert with 0, 17
            if s == -1:
                revert with 0, 17
            s = s + 1
            t = t
            u = 10^12 * _3551 / _3702 * Mask(112, 0, _3644) / 10^12
            w = 10^12 * _3551 / _3702 * Mask(112, 0, _3620) / 10^12
            x = _3551
            x = _3517
            x = stor9[s].field_0
            x = x + _7044 + mem[_3517 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[s].field_0].field_1280)
        staticcall strategyInfo[stor9[s].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3541 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _3550 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_3550] = mem[_3541]
        mem[_3550 + 32] = mem[_3541 + 32]
        mem[_3550 + 64] = mem[_3541 + 64]
        require return_data.size - 96 >= 96
        _3574 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_3574] = mem[_3541 + 96]
        mem[_3574 + 32] = mem[_3541 + 128]
        mem[_3574 + 64] = mem[_3541 + 160]
        mem[_3550 + 96] = _3574
        mem[_3550 + 128] = mem[_3541 + 192]
        require return_data.size - 224 >= 96
        _3593 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_3593] = mem[_3541 + 224]
        mem[_3593 + 32] = mem[_3541 + 256]
        mem[_3593 + 64] = mem[_3541 + 288]
        mem[_3550 + 160] = _3593
        _3612 = mem[_3550 + 64]
        if not mem[_3550 + 64]:
            if s == -1:
                revert with 0, 17
            s = s + 1
            t = t
            u = u
            w = w
            x = mem[_3550 + 64]
            x = _3517
            x = stor9[s].field_0
            x = x
            continue 
        require ext_code.size(strategyInfo[stor9[s].field_0].field_256)
        staticcall strategyInfo[stor9[s].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3665 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _3674 = mem[_3665]
        require mem[_3665] == mem[_3665 + 18 len 14]
        _3695 = mem[_3665 + 32]
        require mem[_3665 + 32] == mem[_3665 + 50 len 14]
        require mem[_3665 + 64] == mem[_3665 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[s].field_0].field_256)
        staticcall strategyInfo[stor9[s].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3727 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3735 = mem[_3727]
        if _3612 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_3727]:
            revert with 0, 18
        if 10^12 * _3612 / mem[_3727] and Mask(112, 0, _3674) > -1 / 10^12 * _3612 / mem[_3727]:
            revert with 0, 17
        if 10^12 * _3612 / mem[_3727] and Mask(112, 0, _3695) > -1 / 10^12 * _3612 / mem[_3727]:
            revert with 0, 17
        if 1 >= mem[_1759]:
            revert with 0, 50
        mem[_1759 + 64] = stor21
        if 0 >= mem[_1759]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[s].field_0].field_1536:
            mem[_1759 + 32] = strategyInfo[stor9[s].field_0].field_1792
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12
            mem[mem[64] + 36] = 64
            _3917 = mem[_1759]
            mem[mem[64] + 68] = mem[_1759]
            idx = 0
            t = _1759 + 32
            u = mem[64] + 100
            while idx < _3917:
                mem[u] = mem[t + 12 len 20]
                idx = idx + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
            staticcall strategyInfo[stor9[s].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12, 64, mem[mem[64] + 68 len (32 * _3917) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5314 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5330 = mem[_5314]
            require mem[_5314] <= test266151307()
            require _5314 + mem[_5314] + 31 < _5314 + return_data.size
            _5350 = mem[_5314 + mem[_5314]]
            if mem[_5314 + mem[_5314]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5314 + mem[_5314]]) + 1 < 0 or _5314 + ceil32(return_data.size) + ceil32(32 * mem[_5314 + mem[_5314]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5314 + ceil32(return_data.size) + ceil32(32 * mem[_5314 + mem[_5314]]) + 1
            mem[_5314 + ceil32(return_data.size)] = _5350
            require _5330 + (32 * _5350) + 32 <= return_data.size
            t = _5314 + ceil32(return_data.size) + 32
            idx = _5314 + _5330 + 32
            while idx < _5314 + _5330 + (32 * _5350) + 32:
                mem[t] = mem[idx]
                t = t + 32
                idx = idx + 32
                continue 
            if 1 >= _5350:
                revert with 0, 50
            _7043 = mem[_5314 + ceil32(return_data.size) + 64]
            if 10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12 > !mem[_5314 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3517 + 128] = (10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12) + mem[_5314 + ceil32(return_data.size) + 64]
            if x > !((10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12) + _7043):
                revert with 0, 17
            if s == -1:
                revert with 0, 17
            s = s + 1
            t = _5314 + ceil32(return_data.size)
            u = 10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12
            w = 10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12
            x = _3612
            x = _3517
            x = stor9[s].field_0
            x = x + (10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12) + _7043
            continue 
        mem[_1759 + 32] = strategyInfo[stor9[s].field_0].field_1536
        if stor21 == strategyInfo[stor9[s].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12
            mem[mem[64] + 36] = 64
            _3930 = mem[_1759]
            mem[mem[64] + 68] = mem[_1759]
            idx = 0
            t = _1759 + 32
            u = mem[64] + 100
            while idx < _3930:
                mem[u] = mem[t + 12 len 20]
                idx = idx + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
            staticcall strategyInfo[stor9[s].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12, 64, mem[mem[64] + 68 len (32 * _3930) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5313 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5329 = mem[_5313]
            require mem[_5313] <= test266151307()
            require _5313 + mem[_5313] + 31 < _5313 + return_data.size
            _5349 = mem[_5313 + mem[_5313]]
            if mem[_5313 + mem[_5313]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5313 + mem[_5313]]) + 1 < 0 or _5313 + ceil32(return_data.size) + ceil32(32 * mem[_5313 + mem[_5313]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5313 + ceil32(return_data.size) + ceil32(32 * mem[_5313 + mem[_5313]]) + 1
            mem[_5313 + ceil32(return_data.size)] = _5349
            require _5329 + (32 * _5349) + 32 <= return_data.size
            t = _5313 + ceil32(return_data.size) + 32
            idx = _5313 + _5329 + 32
            while idx < _5313 + _5329 + (32 * _5349) + 32:
                mem[t] = mem[idx]
                t = t + 32
                idx = idx + 32
                continue 
            if 1 >= _5349:
                revert with 0, 50
            _7042 = mem[_5313 + ceil32(return_data.size) + 64]
            if 10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12 > !mem[_5313 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3517 + 128] = (10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12) + mem[_5313 + ceil32(return_data.size) + 64]
            if x > !((10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12) + _7042):
                revert with 0, 17
            if s == -1:
                revert with 0, 17
            s = s + 1
            t = _5313 + ceil32(return_data.size)
            u = 10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12
            idx = 10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12
            x = _3612
            x = _3517
            x = stor9[s].field_0
            x = x + (10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12) + _7042
            continue 
        require ext_code.size(strategyInfo[stor9[s].field_0].field_1536)
        staticcall strategyInfo[stor9[s].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3937 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3958 = mem[_3937]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[s].field_0].field_1536)
        staticcall strategyInfo[stor9[s].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3992 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4012 = mem[_3992]
        if mem[_3992] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _3958:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[s].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[s].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4105 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4128 = mem[_4105]
        if 10^12 * _4012 / _3958 and mem[_4105] > -1 / 10^12 * _4012 / _3958:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _4012 / _3958 * _4128 / 10^12
        mem[mem[64] + 36] = 64
        _4197 = mem[_1759]
        mem[mem[64] + 68] = mem[_1759]
        idx = 0
        u = _1759 + 32
        v = mem[64] + 100
        while idx < _4197:
            mem[v] = mem[u + 12 len 20]
            idx = idx + 1
            u = u + 32
            v = v + 32
            continue 
        require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
        staticcall strategyInfo[stor9[s].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _4012 / _3958 * _4128 / 10^12, 64, mem[mem[64] + 68 len (32 * _4197) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5312 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5328 = mem[_5312]
        require mem[_5312] <= test266151307()
        require _5312 + mem[_5312] + 31 < _5312 + return_data.size
        _5348 = mem[_5312 + mem[_5312]]
        if mem[_5312 + mem[_5312]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5312 + mem[_5312]]) + 1 < 0 or _5312 + ceil32(return_data.size) + ceil32(32 * mem[_5312 + mem[_5312]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5312 + ceil32(return_data.size) + ceil32(32 * mem[_5312 + mem[_5312]]) + 1
        mem[_5312 + ceil32(return_data.size)] = _5348
        require _5328 + (32 * _5348) + 32 <= return_data.size
        u = _5312 + ceil32(return_data.size) + 32
        idx = _5312 + _5328 + 32
        while idx < _5312 + _5328 + (32 * _5348) + 32:
            mem[u] = mem[idx]
            u = u + 32
            idx = idx + 32
            continue 
        if 1 >= _5348:
            revert with 0, 50
        _7041 = mem[_5312 + ceil32(return_data.size) + 64]
        mem[_3517 + 128] = mem[_5312 + ceil32(return_data.size) + 64]
        if x > !_7041:
            revert with 0, 17
        if 0 >= mem[_1759]:
            revert with 0, 50
        mem[_1759 + 32] = mem[_3517 + 236 len 20]
        _7075 = mem[_3517 + 224]
        _7076 = mem[_3517]
        require ext_code.size(mem[_3517 + 236 len 20])
        staticcall mem[_3517 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7099 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7123 = mem[_7099]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_7075))
        staticcall address(_7075).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7149 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7163 = mem[_7149]
        if mem[_7149] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _7123:
            revert with 0, 18
        mem[mem[64] + 4] = address(_7076)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_7076)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7237 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7249 = mem[_7237]
        if 10^12 * _7163 / _7123 and mem[_7237] > -1 / 10^12 * _7163 / _7123:
            revert with 0, 17
        _7291 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _7163 / _7123 * _7249 / 10^12
        mem[mem[64] + 36] = 64
        _7307 = mem[_1759]
        mem[mem[64] + 68] = mem[_1759]
        idx = 0
        u = _1759 + 32
        v = mem[64] + 100
        while idx < _7307:
            mem[v] = mem[u + 12 len 20]
            idx = idx + 1
            u = u + 32
            v = v + 32
            continue 
        require ext_code.size(address(_7076))
        staticcall address(_7076).mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _7291 + (32 * _7307) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8750 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8772 = mem[_8750]
        require mem[_8750] <= test266151307()
        require _8750 + mem[_8750] + 31 < _8750 + return_data.size
        _8792 = mem[_8750 + mem[_8750]]
        if mem[_8750 + mem[_8750]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_8750 + mem[_8750]]) + 1 < 0 or _8750 + ceil32(return_data.size) + ceil32(32 * mem[_8750 + mem[_8750]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _8750 + ceil32(return_data.size) + ceil32(32 * mem[_8750 + mem[_8750]]) + 1
        mem[_8750 + ceil32(return_data.size)] = _8792
        require _8772 + (32 * _8792) + 32 <= return_data.size
        u = _8750 + ceil32(return_data.size) + 32
        idx = _8750 + _8772 + 32
        while idx < _8750 + _8772 + (32 * _8792) + 32:
            mem[u] = mem[idx]
            u = u + 32
            idx = idx + 32
            continue 
        if 1 >= _8792:
            revert with 0, 50
        if mem[_3517 + 128] > !mem[_8750 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_3517 + 128] = mem[_3517 + 128] + mem[_8750 + ceil32(return_data.size) + 64]
        if x + _7041 > !mem[_3517 + 128]:
            revert with 0, 17
        if s == -1:
            revert with 0, 17
        s = s + 1
        t = t
        u = 10^12 * _3612 / _3735 * Mask(112, 0, _3695) / 10^12
        w = 10^12 * _3612 / _3735 * Mask(112, 0, _3674) / 10^12
        x = _3612
        x = _3517
        x = stor9[s].field_0
        x = x + _7041 + mem[_3517 + 128]
        continue 
    _3522 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    if not mem[_3522]:
        revert with 0, 50
    mem[_3522 + 32] = stor21
    if stor21 == stor19:
        if stor21 == stor20:
            require ext_code.size(stor23)
            staticcall stor23.getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if 1 >= mem[_3522]:
                revert with 0, 50
            mem[_3522 + 64] = stor20
            mem[_3522 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_3522 + 100] = eth.balance(this.address) / 2
            mem[_3522 + 132] = 64
            mem[_3522 + 164] = mem[_3522]
            idx = 0
            s = _3522 + 32
            t = _3522 + 196
            while idx < mem[_3522]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor22)
            staticcall stor22.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _3522 + (32 * mem[_3522]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5310 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5326 = mem[_5310]
            require mem[_5310] <= test266151307()
            require _5310 + mem[_5310] + 31 < _5310 + return_data.size
            _5346 = mem[_5310 + mem[_5310]]
            if mem[_5310 + mem[_5310]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5310 + mem[_5310]]) + 1 < 0 or _5310 + ceil32(return_data.size) + ceil32(32 * mem[_5310 + mem[_5310]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5310 + ceil32(return_data.size) + ceil32(32 * mem[_5310 + mem[_5310]]) + 1
            mem[_5310 + ceil32(return_data.size)] = _5346
            require _5326 + (32 * _5346) + 32 <= return_data.size
            mem[_5310 + ceil32(return_data.size) + 32 len ceil32(32 * _5346)] = mem[_5310 + _5326 + 32 len ceil32(32 * _5346)]
            if 1 >= _5346:
                revert with 0, 50
            _7039 = mem[_5310 + ceil32(return_data.size) + 64]
            if mem[_5310 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_5310 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_5310 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _5346:
                revert with 0, 50
            _7121 = mem[_5310 + ceil32(return_data.size) + 64]
            if mem[_5310 + ceil32(return_data.size) + 64] < 100 * mem[_5310 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _7175 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7121 - (100 * _7039 / 10000)
            mem[mem[64] + 36] = 128
            _7191 = mem[_3522]
            mem[mem[64] + 132] = mem[_3522]
            idx = 0
            s = _3522 + 32
            t = mem[64] + 164
            while idx < _7191:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_7175 + 68] = this.address
            mem[_7175 + 100] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _7175 + (32 * _7191) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8740 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8760 = mem[_8740]
            require mem[_8740] <= test266151307()
            require _8740 + mem[_8740] + 31 < _8740 + return_data.size
            _8782 = mem[_8740 + mem[_8740]]
            if mem[_8740 + mem[_8740]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8740 + mem[_8740]]) + 1 < 0 or _8740 + ceil32(return_data.size) + ceil32(32 * mem[_8740 + mem[_8740]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _8740 + ceil32(return_data.size) + ceil32(32 * mem[_8740 + mem[_8740]]) + 1
            mem[_8740 + ceil32(return_data.size)] = _8782
            require _8760 + (32 * _8782) + 32 <= return_data.size
            mem[_8740 + ceil32(return_data.size) + 32 len ceil32(32 * _8782)] = mem[_8740 + _8760 + 32 len ceil32(32 * _8782)]
            require ext_code.size(stor23)
            staticcall stor23.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10115 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_10115] == mem[_10115 + 18 len 14]
            require mem[_10115 + 32] == mem[_10115 + 50 len 14]
            require mem[_10115 + 64] == mem[_10115 + 92 len 4]
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10167 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10167] == bool(mem[_10167])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10201 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10201] == bool(mem[_10201])
    else:
        if 1 >= mem[_3522]:
            revert with 0, 50
        mem[_3522 + 64] = stor19
        mem[_3522 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[_3522 + 100] = eth.balance(this.address) / 2
        mem[_3522 + 132] = 64
        mem[_3522 + 164] = mem[_3522]
        s = 0
        t = _3522 + 32
        u = _3522 + 196
        while s < mem[_3522]:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(stor22)
        staticcall stor22.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _3522 + (32 * mem[_3522]) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5311 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5327 = mem[_5311]
        require mem[_5311] <= test266151307()
        require _5311 + mem[_5311] + 31 < _5311 + return_data.size
        _5347 = mem[_5311 + mem[_5311]]
        if mem[_5311 + mem[_5311]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5311 + mem[_5311]]) + 1 < 0 or _5311 + ceil32(return_data.size) + ceil32(32 * mem[_5311 + mem[_5311]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5311 + ceil32(return_data.size) + ceil32(32 * mem[_5311 + mem[_5311]]) + 1
        mem[_5311 + ceil32(return_data.size)] = _5347
        require _5327 + (32 * _5347) + 32 <= return_data.size
        mem[_5311 + ceil32(return_data.size) + 32 len ceil32(32 * _5347)] = mem[_5311 + _5327 + 32 len ceil32(32 * _5347)]
        if 1 >= _5347:
            revert with 0, 50
        _7040 = mem[_5311 + ceil32(return_data.size) + 64]
        if mem[_5311 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_5311 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_5311 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if 1 >= _5347:
            revert with 0, 50
        _7122 = mem[_5311 + ceil32(return_data.size) + 64]
        if mem[_5311 + ceil32(return_data.size) + 64] < 100 * mem[_5311 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        if 60 > !block.timestamp:
            revert with 0, 17
        _7176 = mem[64]
        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _7122 - (100 * _7040 / 10000)
        mem[mem[64] + 36] = 128
        _7192 = mem[_3522]
        mem[mem[64] + 132] = mem[_3522]
        s = 0
        t = _3522 + 32
        u = mem[64] + 164
        while s < _7192:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_7176 + 68] = this.address
        mem[_7176 + 100] = block.timestamp + 60
        require ext_code.size(stor22)
        call stor22.mem[mem[64] len 4] with:
           value eth.balance(this.address) / 2 wei
             gas gas_remaining wei
            args mem[mem[64] + 4 len _7176 + (32 * _7192) + -mem[64] + 160]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8741 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8761 = mem[_8741]
        require mem[_8741] <= test266151307()
        require _8741 + mem[_8741] + 31 < _8741 + return_data.size
        _8783 = mem[_8741 + mem[_8741]]
        if mem[_8741 + mem[_8741]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_8741 + mem[_8741]]) + 1 < 0 or _8741 + ceil32(return_data.size) + ceil32(32 * mem[_8741 + mem[_8741]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _8741 + ceil32(return_data.size) + ceil32(32 * mem[_8741 + mem[_8741]]) + 1
        mem[_8741 + ceil32(return_data.size)] = _8783
        require _8761 + (32 * _8783) + 32 <= return_data.size
        mem[_8741 + ceil32(return_data.size) + 32 len ceil32(32 * _8783)] = mem[_8741 + _8761 + 32 len ceil32(32 * _8783)]
        if stor21 == stor20:
            require ext_code.size(stor23)
            staticcall stor23.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10124 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_10124] == mem[_10124 + 18 len 14]
            require mem[_10124 + 32] == mem[_10124 + 50 len 14]
            require mem[_10124 + 64] == mem[_10124 + 92 len 4]
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10177 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10177] == bool(mem[_10177])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10211 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10211] == bool(mem[_10211])
        else:
            if 1 >= mem[_3522]:
                revert with 0, 50
            mem[_3522 + 64] = stor20
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = eth.balance(this.address) / 2
            mem[mem[64] + 36] = 64
            _10125 = mem[_3522]
            mem[mem[64] + 68] = mem[_3522]
            s = 0
            t = _3522 + 32
            u = mem[64] + 100
            while s < _10125:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(stor22)
            staticcall stor22.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _10125) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11346 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11355 = mem[_11346]
            require mem[_11346] <= test266151307()
            require _11346 + mem[_11346] + 31 < _11346 + return_data.size
            _11364 = mem[_11346 + mem[_11346]]
            if mem[_11346 + mem[_11346]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_11346 + mem[_11346]]) + 1 < 0 or _11346 + ceil32(return_data.size) + ceil32(32 * mem[_11346 + mem[_11346]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _11346 + ceil32(return_data.size) + ceil32(32 * mem[_11346 + mem[_11346]]) + 1
            mem[_11346 + ceil32(return_data.size)] = _11364
            require _11355 + (32 * _11364) + 32 <= return_data.size
            mem[_11346 + ceil32(return_data.size) + 32 len ceil32(32 * _11364)] = mem[_11346 + _11355 + 32 len ceil32(32 * _11364)]
            if 1 >= _11364:
                revert with 0, 50
            _12460 = mem[_11346 + ceil32(return_data.size) + 64]
            if mem[_11346 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11346 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_11346 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _11364:
                revert with 0, 50
            _12518 = mem[_11346 + ceil32(return_data.size) + 64]
            if mem[_11346 + ceil32(return_data.size) + 64] < 100 * mem[_11346 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _12518 - (100 * _12460 / 10000)
            mem[mem[64] + 36] = 128
            _12572 = mem[_3522]
            mem[mem[64] + 132] = mem[_3522]
            idx = 0
            s = _3522 + 32
            t = mem[64] + 164
            while idx < _12572:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 68] = this.address
            mem[mem[64] + 100] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args _12518 - (100 * _12460 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _12572) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13568 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _13589 = mem[_13568]
            require mem[_13568] <= test266151307()
            require _13568 + mem[_13568] + 31 < _13568 + return_data.size
            _13610 = mem[_13568 + mem[_13568]]
            if mem[_13568 + mem[_13568]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_13568 + mem[_13568]]) + 1 < 0 or _13568 + ceil32(return_data.size) + ceil32(32 * mem[_13568 + mem[_13568]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _13568 + ceil32(return_data.size) + ceil32(32 * mem[_13568 + mem[_13568]]) + 1
            mem[_13568 + ceil32(return_data.size)] = _13610
            require _13589 + (32 * _13610) + 32 <= return_data.size
            mem[_13568 + ceil32(return_data.size) + 32 len ceil32(32 * _13610)] = mem[_13568 + _13589 + 32 len ceil32(32 * _13610)]
            require ext_code.size(stor23)
            staticcall stor23.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14182 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_14182] == mem[_14182 + 18 len 14]
            require mem[_14182 + 32] == mem[_14182 + 50 len 14]
            require mem[_14182 + 64] == mem[_14182 + 92 len 4]
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14228 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_14228] == bool(mem[_14228])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14244 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_14244] == bool(mem[_14244])
}

function migrate(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if msg.sender == owner:
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'The _contract can not be a zero address'
        mem[96] = 2
        mem[128 len 64] = call.data[calldata.size len 64]
        mem[64] = 448
        mem[192] = 0
        mem[224] = 0
        mem[256] = 0
        mem[288] = 0
        mem[320] = 0
        mem[352] = 0
        mem[384] = 0
        mem[416] = 0
        idx = 0
        s = 192
        s = 0
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1451 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1451] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1451 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1451 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1451 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1451 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1451 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1451 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1451 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1474 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1491 = mem[_1474]
                if not mem[_1474]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1451
                    s = mem[_1474]
                    s = stor9[idx].field_0
                    continue 
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _1536 = mem[64]
                mem[64] = mem[64] + 256
                mem[_1536] = strategyInfo[stor9[idx].field_0].field_0
                mem[_1536 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_1536 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_1536 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_1536 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_1536 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_1536 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_1536 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64] + 4] = _1491
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _1491
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1612 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1631 = mem[_1612]
                    require mem[_1612] == mem[_1612 + 12 len 20]
                    if 0 >= mem[96]:
                        revert with 0, 50
                    mem[128] = mem[_1612 + 12 len 20]
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = stor21
                    require ext_code.size(address(_1631))
                    staticcall address(_1631).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1714 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1734 = mem[_1714]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1631))
                    staticcall address(_1631).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1780 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1805 = mem[_1780]
                    if mem[_1780] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not _1734:
                        revert with 0, 18
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1895 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1903 = mem[_1895]
                    if 10^12 * _1805 / _1734 and mem[_1895] > -1 / 10^12 * _1805 / _1734:
                        revert with 0, 17
                    _1957 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _1805 / _1734 * _1903 / 10^12
                    mem[mem[64] + 36] = 64
                    _1991 = mem[96]
                    mem[mem[64] + 68] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 100
                    while s < _1991:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _1957 + (32 * _1991) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3677 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3692 = mem[_3677]
                    require mem[_3677] <= test266151307()
                    require _3677 + mem[_3677] + 31 < _3677 + return_data.size
                    _3710 = mem[_3677 + mem[_3677]]
                    if mem[_3677 + mem[_3677]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_3677 + mem[_3677]]) + 1 < 0 or _3677 + ceil32(return_data.size) + ceil32(32 * mem[_3677 + mem[_3677]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _3677 + ceil32(return_data.size) + ceil32(32 * mem[_3677 + mem[_3677]]) + 1
                    mem[_3677 + ceil32(return_data.size)] = _3710
                    require _3692 + (32 * _3710) + 32 <= return_data.size
                    t = _3677 + ceil32(return_data.size) + 32
                    s = _3677 + _3692 + 32
                    while s < _3677 + _3692 + (32 * _3710) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _3710:
                        revert with 0, 50
                    _6936 = mem[_3677 + ceil32(return_data.size) + 64]
                    if mem[_3677 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3677 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_3677 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if mem[_3677 + ceil32(return_data.size) + 64] < 100 * mem[_3677 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    _7110 = mem[_1451]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1631))
                    staticcall address(_1631).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7174 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7202 = mem[_7174]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _7254 = mem[64]
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7202
                    mem[mem[64] + 36] = _6936 - (100 * _6936 / 10000)
                    mem[mem[64] + 68] = 160
                    _7284 = mem[96]
                    mem[mem[64] + 164] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 196
                    while s < _7284:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7254 + 100] = this.address
                    mem[_7254 + 132] = block.timestamp + 60
                    require ext_code.size(address(_7110))
                    call address(_7110).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _7254 + (32 * _7284) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10685 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10701 = mem[_10685]
                    require mem[_10685] <= test266151307()
                    require _10685 + mem[_10685] + 31 < _10685 + return_data.size
                    _10727 = mem[_10685 + mem[_10685]]
                    if mem[_10685 + mem[_10685]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10685 + mem[_10685]]) + 1 < 0 or _10685 + ceil32(return_data.size) + ceil32(32 * mem[_10685 + mem[_10685]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10685 + ceil32(return_data.size) + ceil32(32 * mem[_10685 + mem[_10685]]) + 1
                    mem[_10685 + ceil32(return_data.size)] = _10727
                    require _10701 + (32 * _10727) + 32 <= return_data.size
                    t = _10685 + ceil32(return_data.size) + 32
                    s = _10685 + _10701 + 32
                    while s < _10685 + _10701 + (32 * _10727) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _14523 = mem[_1451]
                    _14524 = mem[_1451 + 192]
                    _14525 = mem[_1451 + 224]
                    _14552 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    mem[_14552 + 32 len 64] = call.data[calldata.size len 64]
                    if not mem[_14552]:
                        revert with 0, 50
                    mem[_14552 + 32] = stor21
                    if stor21 == address(_14524):
                        if stor21 == address(_14525):
                            require ext_code.size(stor23)
                            staticcall stor23.getReserves() with:
                                    gas gas_remaining wei
                            mem[_14552 + 96 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            mem[_14552 + ceil32(return_data.size) + 100] = address(_14523)
                            mem[_14552 + ceil32(return_data.size) + 132] = -1
                            require ext_code.size(address(_14524))
                            call address(_14524).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14523), -1
                            mem[_14552 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[_14552 + (2 * ceil32(return_data.size)) + 100] = address(_14523)
                            mem[_14552 + (2 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_14525))
                            call address(_14525).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14523), -1
                            mem[_14552 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14552 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            _15026 = mem[_1451 + 160]
                            _15027 = mem[_1451 + 64]
                            _15028 = mem[_1451 + 32]
                            mem[_14552 + (4 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15028))
                            staticcall address(_15028).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14552 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14552 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if _15027 >= 999999:
                                mem[_14552 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                require ext_code.size(address(_15026))
                                call address(_15026).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_14552 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _15256 = mem[_1451 + 32]
                                mem[_14552 + (6 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(address(_15256))
                                staticcall address(_15256).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_14552 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1451 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_14552 + (7 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_14552 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _14552 + (8 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _15606 = mem[_1451]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_14552 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_14552 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_14552 + (8 * ceil32(return_data.size)) + 132] = 128
                                mem[_14552 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _14552 + (8 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_14552 + (8 * ceil32(return_data.size)) + 164] = this.address
                                mem[_14552 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_15606))
                                call address(_15606).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14552 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_14552 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _14552 + (10 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _18351 = mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14552 + (8 * ceil32(return_data.size)) + return_data.size + 96
                                _18385 = mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14552 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _14552 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_14552 + (10 * ceil32(return_data.size)) + 96] = _18385
                                require _18351 + (32 * _18385) + 32 <= return_data.size
                                t = _14552 + (10 * ceil32(return_data.size)) + 128
                                s = _14552 + (8 * ceil32(return_data.size)) + _18351 + 128
                                while s < _14552 + (8 * ceil32(return_data.size)) + _18351 + (32 * _18385) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21499 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_21499]
                            else:
                                mem[_14552 + (6 * ceil32(return_data.size)) + 100] = _15027
                                mem[_14552 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                require ext_code.size(address(_15026))
                                call address(_15026).0xe2bbb158 with:
                                     gas gas_remaining wei
                                    args _15027, ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_14552 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _15257 = mem[_1451 + 32]
                                mem[_14552 + (6 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(address(_15257))
                                staticcall address(_15257).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_14552 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1451 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_14552 + (7 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_14552 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _14552 + (8 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _15607 = mem[_1451]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_14552 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_14552 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_14552 + (8 * ceil32(return_data.size)) + 132] = 128
                                mem[_14552 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _14552 + (8 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_14552 + (8 * ceil32(return_data.size)) + 164] = this.address
                                mem[_14552 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_15607))
                                call address(_15607).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14552 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_14552 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _14552 + (10 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _18352 = mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14552 + (8 * ceil32(return_data.size)) + return_data.size + 96
                                _18386 = mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14552 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _14552 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14552 + (8 * ceil32(return_data.size)) + mem[_14552 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_14552 + (10 * ceil32(return_data.size)) + 96] = _18386
                                require _18352 + (32 * _18386) + 32 <= return_data.size
                                t = _14552 + (10 * ceil32(return_data.size)) + 128
                                s = _14552 + (8 * ceil32(return_data.size)) + _18352 + 128
                                while s < _14552 + (8 * ceil32(return_data.size)) + _18352 + (32 * _18386) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21500 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_21500]
                        else:
                            if 1 >= mem[_14552]:
                                revert with 0, 50
                            mem[_14552 + 64] = address(_14525)
                            mem[_14552 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_14552 + 100] = eth.balance(this.address) / 2
                            mem[_14552 + 132] = 64
                            mem[_14552 + 164] = mem[_14552]
                            s = 0
                            t = _14552 + 32
                            u = _14552 + 196
                            while s < mem[_14552]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            require ext_code.size(address(_14523))
                            staticcall address(_14523).mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _14552 + (32 * mem[_14552]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18333 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _18369 = mem[_18333]
                            require mem[_18333] <= test266151307()
                            require _18333 + mem[_18333] + 31 < _18333 + return_data.size
                            _18401 = mem[_18333 + mem[_18333]]
                            if mem[_18333 + mem[_18333]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_18333 + mem[_18333]]) + 1 < 0 or _18333 + ceil32(return_data.size) + ceil32(32 * mem[_18333 + mem[_18333]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _18333 + ceil32(return_data.size) + ceil32(32 * mem[_18333 + mem[_18333]]) + 1
                            mem[_18333 + ceil32(return_data.size)] = _18401
                            require _18369 + (32 * _18401) + 32 <= return_data.size
                            t = _18333 + ceil32(return_data.size) + 32
                            s = _18333 + _18369 + 32
                            while s < _18333 + _18369 + (32 * _18401) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            if 1 >= _18401:
                                revert with 0, 50
                            _21436 = mem[_18333 + ceil32(return_data.size) + 64]
                            if mem[_18333 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18333 + ceil32(return_data.size) + 64]:
                                revert with 0, 17
                            if mem[_18333 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                revert with 0, 17
                            if 1 >= _18401:
                                revert with 0, 50
                            _21577 = mem[_18333 + ceil32(return_data.size) + 64]
                            if mem[_18333 + ceil32(return_data.size) + 64] < 100 * mem[_18333 + ceil32(return_data.size) + 64] / 10000:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _21615 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _21577 - (100 * _21436 / 10000)
                            mem[mem[64] + 36] = 128
                            _21649 = mem[_14552]
                            mem[mem[64] + 132] = mem[_14552]
                            s = 0
                            t = _14552 + 32
                            u = mem[64] + 164
                            while s < _21649:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_21615 + 68] = this.address
                            mem[_21615 + 100] = block.timestamp + 60
                            require ext_code.size(address(_14523))
                            call address(_14523).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _21615 + (32 * _21649) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24393 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24427 = mem[_24393]
                            require mem[_24393] <= test266151307()
                            require _24393 + mem[_24393] + 31 < _24393 + return_data.size
                            _24455 = mem[_24393 + mem[_24393]]
                            if mem[_24393 + mem[_24393]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_24393 + mem[_24393]]) + 1 < 0 or _24393 + ceil32(return_data.size) + ceil32(32 * mem[_24393 + mem[_24393]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _24393 + ceil32(return_data.size) + ceil32(32 * mem[_24393 + mem[_24393]]) + 1
                            mem[_24393 + ceil32(return_data.size)] = _24455
                            require _24427 + (32 * _24455) + 32 <= return_data.size
                            t = _24393 + ceil32(return_data.size) + 32
                            s = _24393 + _24427 + 32
                            while s < _24393 + _24427 + (32 * _24455) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            require ext_code.size(stor23)
                            staticcall stor23.getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27149 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            require mem[_27149] == mem[_27149 + 18 len 14]
                            require mem[_27149 + 32] == mem[_27149 + 50 len 14]
                            require mem[_27149 + 64] == mem[_27149 + 92 len 4]
                            mem[mem[64] + 4] = address(_14523)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14524))
                            call address(_14524).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14523), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27347 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27347] == bool(mem[_27347])
                            mem[mem[64] + 4] = address(_14523)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14525))
                            call address(_14525).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14523), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27427 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27427] == bool(mem[_27427])
                            _27481 = mem[_1451 + 160]
                            _27482 = mem[_1451 + 64]
                            _27483 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27483))
                            staticcall address(_27483).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27567 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27604 = mem[_27567]
                            if _27482 >= 999999:
                                mem[mem[64] + 4] = mem[_27567]
                                require ext_code.size(address(_27481))
                                call address(_27481).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _27604
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27604
                                emit Earn(_27604);
                                _27763 = mem[_1451 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27763))
                                staticcall address(_27763).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27905 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1451 + 96] = mem[_27905]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28167 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28217 = mem[_28167]
                                _28251 = mem[_1451]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _28299 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _28217
                                mem[mem[64] + 36] = 128
                                _28350 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _28350:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_28299 + 68] = this.address
                                mem[_28299 + 100] = block.timestamp + 60
                                require ext_code.size(address(_28251))
                                call address(_28251).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _28299 + (32 * _28350) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29587 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _29627 = mem[_29587]
                                require mem[_29587] <= test266151307()
                                require _29587 + mem[_29587] + 31 < _29587 + return_data.size
                                _29667 = mem[_29587 + mem[_29587]]
                                if mem[_29587 + mem[_29587]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_29587 + mem[_29587]]) + 1 < 0 or _29587 + ceil32(return_data.size) + ceil32(32 * mem[_29587 + mem[_29587]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _29587 + ceil32(return_data.size) + ceil32(32 * mem[_29587 + mem[_29587]]) + 1
                                mem[_29587 + ceil32(return_data.size)] = _29667
                                require _29627 + (32 * _29667) + 32 <= return_data.size
                                t = _29587 + ceil32(return_data.size) + 32
                                s = _29587 + _29627 + 32
                                while s < _29587 + _29627 + (32 * _29667) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31039 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_31039]
                            else:
                                mem[mem[64] + 4] = _27482
                                mem[mem[64] + 36] = _27604
                                require ext_code.size(address(_27481))
                                call address(_27481).0xe2bbb158 with:
                                     gas gas_remaining wei
                                    args _27482, _27604
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27604
                                emit Earn(_27604);
                                _27764 = mem[_1451 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27764))
                                staticcall address(_27764).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27906 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1451 + 96] = mem[_27906]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28168 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28218 = mem[_28168]
                                _28252 = mem[_1451]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _28300 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _28218
                                mem[mem[64] + 36] = 128
                                _28351 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _28351:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_28300 + 68] = this.address
                                mem[_28300 + 100] = block.timestamp + 60
                                require ext_code.size(address(_28252))
                                call address(_28252).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _28300 + (32 * _28351) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29588 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _29628 = mem[_29588]
                                require mem[_29588] <= test266151307()
                                require _29588 + mem[_29588] + 31 < _29588 + return_data.size
                                _29668 = mem[_29588 + mem[_29588]]
                                if mem[_29588 + mem[_29588]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_29588 + mem[_29588]]) + 1 < 0 or _29588 + ceil32(return_data.size) + ceil32(32 * mem[_29588 + mem[_29588]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _29588 + ceil32(return_data.size) + ceil32(32 * mem[_29588 + mem[_29588]]) + 1
                                mem[_29588 + ceil32(return_data.size)] = _29668
                                require _29628 + (32 * _29668) + 32 <= return_data.size
                                t = _29588 + ceil32(return_data.size) + 32
                                s = _29588 + _29628 + 32
                                while s < _29588 + _29628 + (32 * _29668) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31040 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_31040]
                    else:
                        if 1 >= mem[_14552]:
                            revert with 0, 50
                        mem[_14552 + 64] = address(_14524)
                        mem[_14552 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_14552 + 100] = eth.balance(this.address) / 2
                        mem[_14552 + 132] = 64
                        mem[_14552 + 164] = mem[_14552]
                        s = 0
                        t = _14552 + 32
                        u = _14552 + 196
                        while s < mem[_14552]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14523))
                        staticcall address(_14523).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _14552 + (32 * mem[_14552]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18334 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18370 = mem[_18334]
                        require mem[_18334] <= test266151307()
                        require _18334 + mem[_18334] + 31 < _18334 + return_data.size
                        _18402 = mem[_18334 + mem[_18334]]
                        if mem[_18334 + mem[_18334]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_18334 + mem[_18334]]) + 1 < 0 or _18334 + ceil32(return_data.size) + ceil32(32 * mem[_18334 + mem[_18334]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _18334 + ceil32(return_data.size) + ceil32(32 * mem[_18334 + mem[_18334]]) + 1
                        mem[_18334 + ceil32(return_data.size)] = _18402
                        require _18370 + (32 * _18402) + 32 <= return_data.size
                        t = _18334 + ceil32(return_data.size) + 32
                        s = _18334 + _18370 + 32
                        while s < _18334 + _18370 + (32 * _18402) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _18402:
                            revert with 0, 50
                        _21437 = mem[_18334 + ceil32(return_data.size) + 64]
                        if mem[_18334 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18334 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_18334 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _18402:
                            revert with 0, 50
                        _21578 = mem[_18334 + ceil32(return_data.size) + 64]
                        if mem[_18334 + ceil32(return_data.size) + 64] < 100 * mem[_18334 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _21616 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _21578 - (100 * _21437 / 10000)
                        mem[mem[64] + 36] = 128
                        _21650 = mem[_14552]
                        mem[mem[64] + 132] = mem[_14552]
                        s = 0
                        t = _14552 + 32
                        u = mem[64] + 164
                        while s < _21650:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_21616 + 68] = this.address
                        mem[_21616 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14523))
                        call address(_14523).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _21616 + (32 * _21650) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24394 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24428 = mem[_24394]
                        require mem[_24394] <= test266151307()
                        require _24394 + mem[_24394] + 31 < _24394 + return_data.size
                        _24456 = mem[_24394 + mem[_24394]]
                        if mem[_24394 + mem[_24394]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24394 + mem[_24394]]) + 1 < 0 or _24394 + ceil32(return_data.size) + ceil32(32 * mem[_24394 + mem[_24394]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _24394 + ceil32(return_data.size) + ceil32(32 * mem[_24394 + mem[_24394]]) + 1
                        mem[_24394 + ceil32(return_data.size)] = _24456
                        require _24428 + (32 * _24456) + 32 <= return_data.size
                        t = _24394 + ceil32(return_data.size) + 32
                        s = _24394 + _24428 + 32
                        while s < _24394 + _24428 + (32 * _24456) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if stor21 == address(_14525):
                            require ext_code.size(stor23)
                            staticcall stor23.getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27163 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            require mem[_27163] == mem[_27163 + 18 len 14]
                            require mem[_27163 + 32] == mem[_27163 + 50 len 14]
                            require mem[_27163 + 64] == mem[_27163 + 92 len 4]
                            mem[mem[64] + 4] = address(_14523)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14524))
                            call address(_14524).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14523), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27361 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27361] == bool(mem[_27361])
                            mem[mem[64] + 4] = address(_14523)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14525))
                            call address(_14525).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14523), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27443 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27443] == bool(mem[_27443])
                            _27513 = mem[_1451 + 160]
                            _27514 = mem[_1451 + 64]
                            _27515 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27515))
                            staticcall address(_27515).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27584 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27622 = mem[_27584]
                            if _27514 >= 999999:
                                mem[mem[64] + 4] = mem[_27584]
                                require ext_code.size(address(_27513))
                                call address(_27513).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _27622
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27622
                                emit Earn(_27622);
                                _27821 = mem[_1451 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27821))
                                staticcall address(_27821).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27931 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1451 + 96] = mem[_27931]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28190 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28234 = mem[_28190]
                                _28267 = mem[_1451]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _28320 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _28234
                                mem[mem[64] + 36] = 128
                                _28372 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _28372:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_28320 + 68] = this.address
                                mem[_28320 + 100] = block.timestamp + 60
                                require ext_code.size(address(_28267))
                                call address(_28267).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _28320 + (32 * _28372) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29589 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _29629 = mem[_29589]
                                require mem[_29589] <= test266151307()
                                require _29589 + mem[_29589] + 31 < _29589 + return_data.size
                                _29669 = mem[_29589 + mem[_29589]]
                                if mem[_29589 + mem[_29589]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_29589 + mem[_29589]]) + 1 < 0 or _29589 + ceil32(return_data.size) + ceil32(32 * mem[_29589 + mem[_29589]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _29589 + ceil32(return_data.size) + ceil32(32 * mem[_29589 + mem[_29589]]) + 1
                                mem[_29589 + ceil32(return_data.size)] = _29669
                                require _29629 + (32 * _29669) + 32 <= return_data.size
                                t = _29589 + ceil32(return_data.size) + 32
                                s = _29589 + _29629 + 32
                                while s < _29589 + _29629 + (32 * _29669) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31041 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_31041]
                            else:
                                mem[mem[64] + 4] = _27514
                                mem[mem[64] + 36] = _27622
                                require ext_code.size(address(_27513))
                                call address(_27513).0xe2bbb158 with:
                                     gas gas_remaining wei
                                    args _27514, _27622
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27622
                                emit Earn(_27622);
                                _27822 = mem[_1451 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27822))
                                staticcall address(_27822).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27932 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1451 + 96] = mem[_27932]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28191 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28235 = mem[_28191]
                                _28268 = mem[_1451]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _28321 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _28235
                                mem[mem[64] + 36] = 128
                                _28373 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _28373:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_28321 + 68] = this.address
                                mem[_28321 + 100] = block.timestamp + 60
                                require ext_code.size(address(_28268))
                                call address(_28268).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _28321 + (32 * _28373) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29590 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _29630 = mem[_29590]
                                require mem[_29590] <= test266151307()
                                require _29590 + mem[_29590] + 31 < _29590 + return_data.size
                                _29670 = mem[_29590 + mem[_29590]]
                                if mem[_29590 + mem[_29590]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_29590 + mem[_29590]]) + 1 < 0 or _29590 + ceil32(return_data.size) + ceil32(32 * mem[_29590 + mem[_29590]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _29590 + ceil32(return_data.size) + ceil32(32 * mem[_29590 + mem[_29590]]) + 1
                                mem[_29590 + ceil32(return_data.size)] = _29670
                                require _29630 + (32 * _29670) + 32 <= return_data.size
                                t = _29590 + ceil32(return_data.size) + 32
                                s = _29590 + _29630 + 32
                                while s < _29590 + _29630 + (32 * _29670) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31042 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_31042]
                        else:
                            if 1 >= mem[_14552]:
                                revert with 0, 50
                            mem[_14552 + 64] = address(_14525)
                            _27127 = mem[64]
                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = eth.balance(this.address) / 2
                            mem[mem[64] + 36] = 64
                            _27164 = mem[_14552]
                            mem[mem[64] + 68] = mem[_14552]
                            s = 0
                            t = _14552 + 32
                            u = mem[64] + 100
                            while s < _27164:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            require ext_code.size(address(_14523))
                            staticcall address(_14523).mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _27127 + (32 * _27164) + -mem[64] + 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29613 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29653 = mem[_29613]
                            require mem[_29613] <= test266151307()
                            require _29613 + mem[_29613] + 31 < _29613 + return_data.size
                            _29693 = mem[_29613 + mem[_29613]]
                            if mem[_29613 + mem[_29613]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29613 + mem[_29613]]) + 1 < 0 or _29613 + ceil32(return_data.size) + ceil32(32 * mem[_29613 + mem[_29613]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29613 + ceil32(return_data.size) + ceil32(32 * mem[_29613 + mem[_29613]]) + 1
                            mem[_29613 + ceil32(return_data.size)] = _29693
                            require _29653 + (32 * _29693) + 32 <= return_data.size
                            t = _29613 + ceil32(return_data.size) + 32
                            s = _29613 + _29653 + 32
                            while s < _29613 + _29653 + (32 * _29693) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            if 1 >= _29693:
                                revert with 0, 50
                            _30949 = mem[_29613 + ceil32(return_data.size) + 64]
                            if mem[_29613 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_29613 + ceil32(return_data.size) + 64]:
                                revert with 0, 17
                            if mem[_29613 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                revert with 0, 17
                            if 1 >= _29693:
                                revert with 0, 50
                            _31129 = mem[_29613 + ceil32(return_data.size) + 64]
                            if mem[_29613 + ceil32(return_data.size) + 64] < 100 * mem[_29613 + ceil32(return_data.size) + 64] / 10000:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _31150 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _31129 - (100 * _30949 / 10000)
                            mem[mem[64] + 36] = 128
                            _31165 = mem[_14552]
                            mem[mem[64] + 132] = mem[_14552]
                            s = 0
                            t = _14552 + 32
                            u = mem[64] + 164
                            while s < _31165:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_31150 + 68] = this.address
                            mem[_31150 + 100] = block.timestamp + 60
                            require ext_code.size(address(_14523))
                            call address(_14523).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _31150 + (32 * _31165) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32018 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _32033 = mem[_32018]
                            require mem[_32018] <= test266151307()
                            require _32018 + mem[_32018] + 31 < _32018 + return_data.size
                            _32044 = mem[_32018 + mem[_32018]]
                            if mem[_32018 + mem[_32018]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_32018 + mem[_32018]]) + 1 < 0 or _32018 + ceil32(return_data.size) + ceil32(32 * mem[_32018 + mem[_32018]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _32018 + ceil32(return_data.size) + ceil32(32 * mem[_32018 + mem[_32018]]) + 1
                            mem[_32018 + ceil32(return_data.size)] = _32044
                            require _32033 + (32 * _32044) + 32 <= return_data.size
                            t = _32018 + ceil32(return_data.size) + 32
                            s = _32018 + _32033 + 32
                            while s < _32018 + _32033 + (32 * _32044) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            require ext_code.size(stor23)
                            staticcall stor23.getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            require mem[_32854] == mem[_32854 + 18 len 14]
                            require mem[_32854 + 32] == mem[_32854 + 50 len 14]
                            require mem[_32854 + 64] == mem[_32854 + 92 len 4]
                            mem[mem[64] + 4] = address(_14523)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14524))
                            call address(_14524).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14523), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32915 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_32915] == bool(mem[_32915])
                            mem[mem[64] + 4] = address(_14523)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14525))
                            call address(_14525).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14523), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32947 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_32947] == bool(mem[_32947])
                            _32967 = mem[_1451 + 160]
                            _32968 = mem[_1451 + 64]
                            _32969 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_32969))
                            staticcall address(_32969).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33007 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33018 = mem[_33007]
                            if _32968 >= 999999:
                                mem[mem[64] + 4] = mem[_33007]
                                require ext_code.size(address(_32967))
                                call address(_32967).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _33018
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _33018
                                emit Earn(_33018);
                                _33097 = mem[_1451 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_33097))
                                staticcall address(_33097).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33148 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1451 + 96] = mem[_33148]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33253 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _33271 = mem[_33253]
                                _33287 = mem[_1451]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _33305 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _33271
                                mem[mem[64] + 36] = 128
                                _33321 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _33321:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_33305 + 68] = this.address
                                mem[_33305 + 100] = block.timestamp + 60
                                require ext_code.size(address(_33287))
                                call address(_33287).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _33305 + (32 * _33321) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33551 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _33567 = mem[_33551]
                                require mem[_33551] <= test266151307()
                                require _33551 + mem[_33551] + 31 < _33551 + return_data.size
                                _33583 = mem[_33551 + mem[_33551]]
                                if mem[_33551 + mem[_33551]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_33551 + mem[_33551]]) + 1 < 0 or _33551 + ceil32(return_data.size) + ceil32(32 * mem[_33551 + mem[_33551]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _33551 + ceil32(return_data.size) + ceil32(32 * mem[_33551 + mem[_33551]]) + 1
                                mem[_33551 + ceil32(return_data.size)] = _33583
                                require _33567 + (32 * _33583) + 32 <= return_data.size
                                t = _33551 + ceil32(return_data.size) + 32
                                s = _33551 + _33567 + 32
                                while s < _33551 + _33567 + (32 * _33583) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33777 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_33777]
                            else:
                                mem[mem[64] + 4] = _32968
                                mem[mem[64] + 36] = _33018
                                require ext_code.size(address(_32967))
                                call address(_32967).0xe2bbb158 with:
                                     gas gas_remaining wei
                                    args _32968, _33018
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _33018
                                emit Earn(_33018);
                                _33098 = mem[_1451 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_33098))
                                staticcall address(_33098).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33149 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1451 + 96] = mem[_33149]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33254 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _33272 = mem[_33254]
                                _33288 = mem[_1451]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _33306 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _33272
                                mem[mem[64] + 36] = 128
                                _33322 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _33322:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_33306 + 68] = this.address
                                mem[_33306 + 100] = block.timestamp + 60
                                require ext_code.size(address(_33288))
                                call address(_33288).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _33306 + (32 * _33322) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33552 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _33568 = mem[_33552]
                                require mem[_33552] <= test266151307()
                                require _33552 + mem[_33552] + 31 < _33552 + return_data.size
                                _33584 = mem[_33552 + mem[_33552]]
                                if mem[_33552 + mem[_33552]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_33552 + mem[_33552]]) + 1 < 0 or _33552 + ceil32(return_data.size) + ceil32(32 * mem[_33552 + mem[_33552]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _33552 + ceil32(return_data.size) + ceil32(32 * mem[_33552 + mem[_33552]]) + 1
                                mem[_33552 + ceil32(return_data.size)] = _33584
                                require _33568 + (32 * _33584) + 32 <= return_data.size
                                t = _33552 + ceil32(return_data.size) + 32
                                s = _33552 + _33568 + 32
                                while s < _33552 + _33568 + (32 * _33584) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33778 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_33778]
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1451
                    s = _6936 - (100 * _6936 / 10000)
                    s = stor9[idx].field_0
                    continue 
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _1491
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _1491
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1613 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1632 = mem[_1613]
                require mem[_1613] == mem[_1613 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1613 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1632))
                staticcall address(_1632).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1715 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1735 = mem[_1715]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1632))
                staticcall address(_1632).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1781 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1806 = mem[_1781]
                if mem[_1781] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1735:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1896 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1904 = mem[_1896]
                if 10^12 * _1806 / _1735 and mem[_1896] > -1 / 10^12 * _1806 / _1735:
                    revert with 0, 17
                _1958 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1806 / _1735 * _1904 / 10^12
                mem[mem[64] + 36] = 64
                _1992 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _1992:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1958 + (32 * _1992) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3678 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3693 = mem[_3678]
                require mem[_3678] <= test266151307()
                require _3678 + mem[_3678] + 31 < _3678 + return_data.size
                _3711 = mem[_3678 + mem[_3678]]
                if mem[_3678 + mem[_3678]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3678 + mem[_3678]]) + 1 < 0 or _3678 + ceil32(return_data.size) + ceil32(32 * mem[_3678 + mem[_3678]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3678 + ceil32(return_data.size) + ceil32(32 * mem[_3678 + mem[_3678]]) + 1
                mem[_3678 + ceil32(return_data.size)] = _3711
                require _3693 + (32 * _3711) + 32 <= return_data.size
                t = _3678 + ceil32(return_data.size) + 32
                s = _3678 + _3693 + 32
                while s < _3678 + _3693 + (32 * _3711) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3711:
                    revert with 0, 50
                _6937 = mem[_3678 + ceil32(return_data.size) + 64]
                if mem[_3678 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3678 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_3678 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_3678 + ceil32(return_data.size) + 64] < 100 * mem[_3678 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _7111 = mem[_1451]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1632))
                staticcall address(_1632).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7175 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7203 = mem[_7175]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _7255 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7203
                mem[mem[64] + 36] = _6937 - (100 * _6937 / 10000)
                mem[mem[64] + 68] = 160
                _7285 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _7285:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7255 + 100] = this.address
                mem[_7255 + 132] = block.timestamp + 60
                require ext_code.size(address(_7111))
                call address(_7111).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7255 + (32 * _7285) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10686 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10702 = mem[_10686]
                require mem[_10686] <= test266151307()
                require _10686 + mem[_10686] + 31 < _10686 + return_data.size
                _10728 = mem[_10686 + mem[_10686]]
                if mem[_10686 + mem[_10686]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10686 + mem[_10686]]) + 1 < 0 or _10686 + ceil32(return_data.size) + ceil32(32 * mem[_10686 + mem[_10686]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10686 + ceil32(return_data.size) + ceil32(32 * mem[_10686 + mem[_10686]]) + 1
                mem[_10686 + ceil32(return_data.size)] = _10728
                require _10702 + (32 * _10728) + 32 <= return_data.size
                t = _10686 + ceil32(return_data.size) + 32
                s = _10686 + _10702 + 32
                while s < _10686 + _10702 + (32 * _10728) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _14526 = mem[_1451]
                _14527 = mem[_1451 + 192]
                _14528 = mem[_1451 + 224]
                _14554 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_14554 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_14554]:
                    revert with 0, 50
                mem[_14554 + 32] = stor21
                if stor21 == address(_14527):
                    if stor21 == address(_14528):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[_14554 + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        mem[_14554 + ceil32(return_data.size) + 100] = address(_14526)
                        mem[_14554 + ceil32(return_data.size) + 132] = -1
                        require ext_code.size(address(_14527))
                        call address(_14527).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14526), -1
                        mem[_14554 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_14554 + (2 * ceil32(return_data.size)) + 100] = address(_14526)
                        mem[_14554 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_14528))
                        call address(_14528).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14526), -1
                        mem[_14554 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14554 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        _15029 = mem[_1451 + 160]
                        _15030 = mem[_1451 + 64]
                        _15031 = mem[_1451 + 32]
                        mem[_14554 + (4 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_15031))
                        staticcall address(_15031).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14554 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14554 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _15030 >= 999999:
                            mem[_14554 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_15029))
                            call address(_15029).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14554 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _15259 = mem[_1451 + 32]
                            mem[_14554 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15259))
                            staticcall address(_15259).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14554 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1451 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_14554 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14554 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14554 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _15609 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_14554 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_14554 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_14554 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_14554 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _14554 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_14554 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_14554 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_15609))
                            call address(_15609).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14554 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14554 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _14554 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _18353 = mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14554 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _18387 = mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14554 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _14554 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_14554 + (10 * ceil32(return_data.size)) + 96] = mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _18353 + (32 * _18387) + 32 <= return_data.size
                            t = _14554 + (10 * ceil32(return_data.size)) + 128
                            s = _14554 + (8 * ceil32(return_data.size)) + _18353 + 128
                            while s < _14554 + (8 * ceil32(return_data.size)) + _18353 + (32 * _18387) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21501 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_21501]
                        else:
                            mem[_14554 + (6 * ceil32(return_data.size)) + 100] = _15030
                            mem[_14554 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_15029))
                            call address(_15029).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _15030, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14554 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _15260 = mem[_1451 + 32]
                            mem[_14554 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15260))
                            staticcall address(_15260).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14554 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1451 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_14554 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14554 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14554 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _15610 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_14554 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_14554 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_14554 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_14554 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _14554 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_14554 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_14554 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_15610))
                            call address(_15610).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14554 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14554 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _14554 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _18354 = mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14554 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _18388 = mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14554 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _14554 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_14554 + (10 * ceil32(return_data.size)) + 96] = mem[_14554 + (8 * ceil32(return_data.size)) + mem[_14554 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _18354 + (32 * _18388) + 32 <= return_data.size
                            t = _14554 + (10 * ceil32(return_data.size)) + 128
                            s = _14554 + (8 * ceil32(return_data.size)) + _18354 + 128
                            while s < _14554 + (8 * ceil32(return_data.size)) + _18354 + (32 * _18388) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21502 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_21502]
                    else:
                        if 1 >= mem[_14554]:
                            revert with 0, 50
                        mem[_14554 + 64] = address(_14528)
                        mem[_14554 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_14554 + 100] = eth.balance(this.address) / 2
                        mem[_14554 + 132] = 64
                        mem[_14554 + 164] = mem[_14554]
                        s = 0
                        t = _14554 + 32
                        u = _14554 + 196
                        while s < mem[_14554]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14526))
                        staticcall address(_14526).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _14554 + (32 * mem[_14554]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18335 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18371 = mem[_18335]
                        require mem[_18335] <= test266151307()
                        require _18335 + mem[_18335] + 31 < _18335 + return_data.size
                        _18403 = mem[_18335 + mem[_18335]]
                        if mem[_18335 + mem[_18335]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_18335 + mem[_18335]]) + 1 < 0 or _18335 + ceil32(return_data.size) + ceil32(32 * mem[_18335 + mem[_18335]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _18335 + ceil32(return_data.size) + ceil32(32 * mem[_18335 + mem[_18335]]) + 1
                        mem[_18335 + ceil32(return_data.size)] = _18403
                        require _18371 + (32 * _18403) + 32 <= return_data.size
                        t = _18335 + ceil32(return_data.size) + 32
                        s = _18335 + _18371 + 32
                        while s < _18335 + _18371 + (32 * _18403) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _18403:
                            revert with 0, 50
                        _21438 = mem[_18335 + ceil32(return_data.size) + 64]
                        if mem[_18335 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18335 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_18335 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _18403:
                            revert with 0, 50
                        _21579 = mem[_18335 + ceil32(return_data.size) + 64]
                        if mem[_18335 + ceil32(return_data.size) + 64] < 100 * mem[_18335 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _21617 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _21579 - (100 * _21438 / 10000)
                        mem[mem[64] + 36] = 128
                        _21651 = mem[_14554]
                        mem[mem[64] + 132] = mem[_14554]
                        s = 0
                        t = _14554 + 32
                        u = mem[64] + 164
                        while s < _21651:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_21617 + 68] = this.address
                        mem[_21617 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14526))
                        call address(_14526).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _21617 + (32 * _21651) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24395 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24429 = mem[_24395]
                        require mem[_24395] <= test266151307()
                        require _24395 + mem[_24395] + 31 < _24395 + return_data.size
                        _24457 = mem[_24395 + mem[_24395]]
                        if mem[_24395 + mem[_24395]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24395 + mem[_24395]]) + 1 < 0 or _24395 + ceil32(return_data.size) + ceil32(32 * mem[_24395 + mem[_24395]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _24395 + ceil32(return_data.size) + ceil32(32 * mem[_24395 + mem[_24395]]) + 1
                        mem[_24395 + ceil32(return_data.size)] = _24457
                        require _24429 + (32 * _24457) + 32 <= return_data.size
                        t = _24395 + ceil32(return_data.size) + 32
                        s = _24395 + _24429 + 32
                        while s < _24395 + _24429 + (32 * _24457) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27150 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_27150] == mem[_27150 + 18 len 14]
                        require mem[_27150 + 32] == mem[_27150 + 50 len 14]
                        require mem[_27150 + 64] == mem[_27150 + 92 len 4]
                        mem[mem[64] + 4] = address(_14526)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14527))
                        call address(_14527).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14526), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27349 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27349] == bool(mem[_27349])
                        mem[mem[64] + 4] = address(_14526)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14528))
                        call address(_14528).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14526), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27429 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27429] == bool(mem[_27429])
                        _27484 = mem[_1451 + 160]
                        _27485 = mem[_1451 + 64]
                        _27486 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27486))
                        staticcall address(_27486).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27568 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27606 = mem[_27568]
                        if _27485 >= 999999:
                            mem[mem[64] + 4] = mem[_27568]
                            require ext_code.size(address(_27484))
                            call address(_27484).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27606
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27606
                            emit Earn(_27606);
                            _27769 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27769))
                            staticcall address(_27769).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27908 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_27908]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28169 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28219 = mem[_28169]
                            _28253 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28301 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28219
                            mem[mem[64] + 36] = 128
                            _28352 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28352:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28301 + 68] = this.address
                            mem[_28301 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28253))
                            call address(_28253).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28301 + (32 * _28352) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29591 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29631 = mem[_29591]
                            require mem[_29591] <= test266151307()
                            require _29591 + mem[_29591] + 31 < _29591 + return_data.size
                            _29671 = mem[_29591 + mem[_29591]]
                            if mem[_29591 + mem[_29591]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29591 + mem[_29591]]) + 1 < 0 or _29591 + ceil32(return_data.size) + ceil32(32 * mem[_29591 + mem[_29591]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29591 + ceil32(return_data.size) + ceil32(32 * mem[_29591 + mem[_29591]]) + 1
                            mem[_29591 + ceil32(return_data.size)] = _29671
                            require _29631 + (32 * _29671) + 32 <= return_data.size
                            t = _29591 + ceil32(return_data.size) + 32
                            s = _29591 + _29631 + 32
                            while s < _29591 + _29631 + (32 * _29671) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31043]
                        else:
                            mem[mem[64] + 4] = _27485
                            mem[mem[64] + 36] = _27606
                            require ext_code.size(address(_27484))
                            call address(_27484).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _27485, _27606
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27606
                            emit Earn(_27606);
                            _27770 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27770))
                            staticcall address(_27770).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27909 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_27909]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28170 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28220 = mem[_28170]
                            _28254 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28302 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28220
                            mem[mem[64] + 36] = 128
                            _28353 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28353:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28302 + 68] = this.address
                            mem[_28302 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28254))
                            call address(_28254).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28302 + (32 * _28353) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29592 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29632 = mem[_29592]
                            require mem[_29592] <= test266151307()
                            require _29592 + mem[_29592] + 31 < _29592 + return_data.size
                            _29672 = mem[_29592 + mem[_29592]]
                            if mem[_29592 + mem[_29592]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29592 + mem[_29592]]) + 1 < 0 or _29592 + ceil32(return_data.size) + ceil32(32 * mem[_29592 + mem[_29592]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29592 + ceil32(return_data.size) + ceil32(32 * mem[_29592 + mem[_29592]]) + 1
                            mem[_29592 + ceil32(return_data.size)] = _29672
                            require _29632 + (32 * _29672) + 32 <= return_data.size
                            t = _29592 + ceil32(return_data.size) + 32
                            s = _29592 + _29632 + 32
                            while s < _29592 + _29632 + (32 * _29672) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31044 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31044]
                else:
                    if 1 >= mem[_14554]:
                        revert with 0, 50
                    mem[_14554 + 64] = address(_14527)
                    mem[_14554 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_14554 + 100] = eth.balance(this.address) / 2
                    mem[_14554 + 132] = 64
                    mem[_14554 + 164] = mem[_14554]
                    s = 0
                    t = _14554 + 32
                    u = _14554 + 196
                    while s < mem[_14554]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_14526))
                    staticcall address(_14526).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _14554 + (32 * mem[_14554]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18336 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _18372 = mem[_18336]
                    require mem[_18336] <= test266151307()
                    require _18336 + mem[_18336] + 31 < _18336 + return_data.size
                    _18404 = mem[_18336 + mem[_18336]]
                    if mem[_18336 + mem[_18336]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_18336 + mem[_18336]]) + 1 < 0 or _18336 + ceil32(return_data.size) + ceil32(32 * mem[_18336 + mem[_18336]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _18336 + ceil32(return_data.size) + ceil32(32 * mem[_18336 + mem[_18336]]) + 1
                    mem[_18336 + ceil32(return_data.size)] = _18404
                    require _18372 + (32 * _18404) + 32 <= return_data.size
                    t = _18336 + ceil32(return_data.size) + 32
                    s = _18336 + _18372 + 32
                    while s < _18336 + _18372 + (32 * _18404) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _18404:
                        revert with 0, 50
                    _21439 = mem[_18336 + ceil32(return_data.size) + 64]
                    if mem[_18336 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18336 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_18336 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _18404:
                        revert with 0, 50
                    _21580 = mem[_18336 + ceil32(return_data.size) + 64]
                    if mem[_18336 + ceil32(return_data.size) + 64] < 100 * mem[_18336 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _21618 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _21580 - (100 * _21439 / 10000)
                    mem[mem[64] + 36] = 128
                    _21652 = mem[_14554]
                    mem[mem[64] + 132] = mem[_14554]
                    s = 0
                    t = _14554 + 32
                    u = mem[64] + 164
                    while s < _21652:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_21618 + 68] = this.address
                    mem[_21618 + 100] = block.timestamp + 60
                    require ext_code.size(address(_14526))
                    call address(_14526).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _21618 + (32 * _21652) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24396 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24430 = mem[_24396]
                    require mem[_24396] <= test266151307()
                    require _24396 + mem[_24396] + 31 < _24396 + return_data.size
                    _24458 = mem[_24396 + mem[_24396]]
                    if mem[_24396 + mem[_24396]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_24396 + mem[_24396]]) + 1 < 0 or _24396 + ceil32(return_data.size) + ceil32(32 * mem[_24396 + mem[_24396]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _24396 + ceil32(return_data.size) + ceil32(32 * mem[_24396 + mem[_24396]]) + 1
                    mem[_24396 + ceil32(return_data.size)] = _24458
                    require _24430 + (32 * _24458) + 32 <= return_data.size
                    t = _24396 + ceil32(return_data.size) + 32
                    s = _24396 + _24430 + 32
                    while s < _24396 + _24430 + (32 * _24458) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_14528):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27165 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_27165] == mem[_27165 + 18 len 14]
                        require mem[_27165 + 32] == mem[_27165 + 50 len 14]
                        require mem[_27165 + 64] == mem[_27165 + 92 len 4]
                        mem[mem[64] + 4] = address(_14526)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14527))
                        call address(_14527).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14526), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27362 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27362] == bool(mem[_27362])
                        mem[mem[64] + 4] = address(_14526)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14528))
                        call address(_14528).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14526), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27445 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27445] == bool(mem[_27445])
                        _27518 = mem[_1451 + 160]
                        _27519 = mem[_1451 + 64]
                        _27520 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27520))
                        staticcall address(_27520).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27586 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27623 = mem[_27586]
                        if _27519 >= 999999:
                            mem[mem[64] + 4] = mem[_27586]
                            require ext_code.size(address(_27518))
                            call address(_27518).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27623
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27623
                            emit Earn(_27623);
                            _27828 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27828))
                            staticcall address(_27828).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27933 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_27933]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28193 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28236 = mem[_28193]
                            _28269 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28324 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28236
                            mem[mem[64] + 36] = 128
                            _28375 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28375:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28324 + 68] = this.address
                            mem[_28324 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28269))
                            call address(_28269).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28324 + (32 * _28375) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29593 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29633 = mem[_29593]
                            require mem[_29593] <= test266151307()
                            require _29593 + mem[_29593] + 31 < _29593 + return_data.size
                            _29673 = mem[_29593 + mem[_29593]]
                            if mem[_29593 + mem[_29593]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29593 + mem[_29593]]) + 1 < 0 or _29593 + ceil32(return_data.size) + ceil32(32 * mem[_29593 + mem[_29593]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29593 + ceil32(return_data.size) + ceil32(32 * mem[_29593 + mem[_29593]]) + 1
                            mem[_29593 + ceil32(return_data.size)] = _29673
                            require _29633 + (32 * _29673) + 32 <= return_data.size
                            t = _29593 + ceil32(return_data.size) + 32
                            s = _29593 + _29633 + 32
                            while s < _29593 + _29633 + (32 * _29673) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31045 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31045]
                        else:
                            mem[mem[64] + 4] = _27519
                            mem[mem[64] + 36] = _27623
                            require ext_code.size(address(_27518))
                            call address(_27518).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _27519, _27623
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27623
                            emit Earn(_27623);
                            _27829 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27829))
                            staticcall address(_27829).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27934 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_27934]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28194 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28237 = mem[_28194]
                            _28270 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28325 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28237
                            mem[mem[64] + 36] = 128
                            _28376 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28376:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28325 + 68] = this.address
                            mem[_28325 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28270))
                            call address(_28270).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28325 + (32 * _28376) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29594 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29634 = mem[_29594]
                            require mem[_29594] <= test266151307()
                            require _29594 + mem[_29594] + 31 < _29594 + return_data.size
                            _29674 = mem[_29594 + mem[_29594]]
                            if mem[_29594 + mem[_29594]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29594 + mem[_29594]]) + 1 < 0 or _29594 + ceil32(return_data.size) + ceil32(32 * mem[_29594 + mem[_29594]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29594 + ceil32(return_data.size) + ceil32(32 * mem[_29594 + mem[_29594]]) + 1
                            mem[_29594 + ceil32(return_data.size)] = _29674
                            require _29634 + (32 * _29674) + 32 <= return_data.size
                            t = _29594 + ceil32(return_data.size) + 32
                            s = _29594 + _29634 + 32
                            while s < _29594 + _29634 + (32 * _29674) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31046 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31046]
                    else:
                        if 1 >= mem[_14554]:
                            revert with 0, 50
                        mem[_14554 + 64] = address(_14528)
                        _27130 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _27166 = mem[_14554]
                        mem[mem[64] + 68] = mem[_14554]
                        s = 0
                        t = _14554 + 32
                        u = mem[64] + 100
                        while s < _27166:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14526))
                        staticcall address(_14526).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _27130 + (32 * _27166) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29614 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29654 = mem[_29614]
                        require mem[_29614] <= test266151307()
                        require _29614 + mem[_29614] + 31 < _29614 + return_data.size
                        _29694 = mem[_29614 + mem[_29614]]
                        if mem[_29614 + mem[_29614]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29614 + mem[_29614]]) + 1 < 0 or _29614 + ceil32(return_data.size) + ceil32(32 * mem[_29614 + mem[_29614]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29614 + ceil32(return_data.size) + ceil32(32 * mem[_29614 + mem[_29614]]) + 1
                        mem[_29614 + ceil32(return_data.size)] = _29694
                        require _29654 + (32 * _29694) + 32 <= return_data.size
                        t = _29614 + ceil32(return_data.size) + 32
                        s = _29614 + _29654 + 32
                        while s < _29614 + _29654 + (32 * _29694) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _29694:
                            revert with 0, 50
                        _30950 = mem[_29614 + ceil32(return_data.size) + 64]
                        if mem[_29614 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_29614 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_29614 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _29694:
                            revert with 0, 50
                        _31130 = mem[_29614 + ceil32(return_data.size) + 64]
                        if mem[_29614 + ceil32(return_data.size) + 64] < 100 * mem[_29614 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _31151 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _31130 - (100 * _30950 / 10000)
                        mem[mem[64] + 36] = 128
                        _31166 = mem[_14554]
                        mem[mem[64] + 132] = mem[_14554]
                        s = 0
                        t = _14554 + 32
                        u = mem[64] + 164
                        while s < _31166:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_31151 + 68] = this.address
                        mem[_31151 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14526))
                        call address(_14526).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _31151 + (32 * _31166) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32019 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32034 = mem[_32019]
                        require mem[_32019] <= test266151307()
                        require _32019 + mem[_32019] + 31 < _32019 + return_data.size
                        _32045 = mem[_32019 + mem[_32019]]
                        if mem[_32019 + mem[_32019]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_32019 + mem[_32019]]) + 1 < 0 or _32019 + ceil32(return_data.size) + ceil32(32 * mem[_32019 + mem[_32019]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _32019 + ceil32(return_data.size) + ceil32(32 * mem[_32019 + mem[_32019]]) + 1
                        mem[_32019 + ceil32(return_data.size)] = _32045
                        require _32034 + (32 * _32045) + 32 <= return_data.size
                        t = _32019 + ceil32(return_data.size) + 32
                        s = _32019 + _32034 + 32
                        while s < _32019 + _32034 + (32 * _32045) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32855 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_32855] == mem[_32855 + 18 len 14]
                        require mem[_32855 + 32] == mem[_32855 + 50 len 14]
                        require mem[_32855 + 64] == mem[_32855 + 92 len 4]
                        mem[mem[64] + 4] = address(_14526)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14527))
                        call address(_14527).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14526), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32916 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32916] == bool(mem[_32916])
                        mem[mem[64] + 4] = address(_14526)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14528))
                        call address(_14528).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14526), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32948 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32948] == bool(mem[_32948])
                        _32970 = mem[_1451 + 160]
                        _32971 = mem[_1451 + 64]
                        _32972 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_32972))
                        staticcall address(_32972).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33008 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33019 = mem[_33008]
                        if _32971 >= 999999:
                            mem[mem[64] + 4] = mem[_33008]
                            require ext_code.size(address(_32970))
                            call address(_32970).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _33019
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _33019
                            emit Earn(_33019);
                            _33099 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_33099))
                            staticcall address(_33099).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33150 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_33150]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33255 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33273 = mem[_33255]
                            _33289 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _33307 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _33273
                            mem[mem[64] + 36] = 128
                            _33323 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_33307 + 100] = block.timestamp + 60
                            require ext_code.size(address(_33289))
                            call address(_33289).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _33307 + (32 * _33323) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33553 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33569 = mem[_33553]
                            require mem[_33553] <= test266151307()
                            require _33553 + mem[_33553] + 31 < _33553 + return_data.size
                            _33585 = mem[_33553 + mem[_33553]]
                            if mem[_33553 + mem[_33553]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_33553 + mem[_33553]]) + 1 < 0 or _33553 + ceil32(return_data.size) + ceil32(32 * mem[_33553 + mem[_33553]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _33553 + ceil32(return_data.size) + ceil32(32 * mem[_33553 + mem[_33553]]) + 1
                            mem[_33553 + ceil32(return_data.size)] = _33585
                            require _33569 + (32 * _33585) + 32 <= return_data.size
                            t = _33553 + ceil32(return_data.size) + 32
                            s = _33553 + _33569 + 32
                            while s < _33553 + _33569 + (32 * _33585) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33779 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_33779]
                        else:
                            mem[mem[64] + 4] = _32971
                            mem[mem[64] + 36] = _33019
                            require ext_code.size(address(_32970))
                            call address(_32970).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _32971, _33019
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _33019
                            emit Earn(_33019);
                            _33100 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_33100))
                            staticcall address(_33100).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33151 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_33151]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33256 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33274 = mem[_33256]
                            _33290 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _33308 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _33274
                            mem[mem[64] + 36] = 128
                            _33324 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_33308 + 100] = block.timestamp + 60
                            require ext_code.size(address(_33290))
                            call address(_33290).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _33308 + (32 * _33324) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33554 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33570 = mem[_33554]
                            require mem[_33554] <= test266151307()
                            require _33554 + mem[_33554] + 31 < _33554 + return_data.size
                            _33586 = mem[_33554 + mem[_33554]]
                            if mem[_33554 + mem[_33554]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_33554 + mem[_33554]]) + 1 < 0 or _33554 + ceil32(return_data.size) + ceil32(32 * mem[_33554 + mem[_33554]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _33554 + ceil32(return_data.size) + ceil32(32 * mem[_33554 + mem[_33554]]) + 1
                            mem[_33554 + ceil32(return_data.size)] = _33586
                            require _33570 + (32 * _33586) + 32 <= return_data.size
                            t = _33554 + ceil32(return_data.size) + 32
                            s = _33554 + _33570 + 32
                            while s < _33554 + _33570 + (32 * _33586) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33780 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_33780]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1451
                s = _6937 - (100 * _6937 / 10000)
                s = stor9[idx].field_0
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1473 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _1490 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_1490] = mem[_1473]
            mem[_1490 + 32] = mem[_1473 + 32]
            mem[_1490 + 64] = mem[_1473 + 64]
            require return_data.size - 96 >= 96
            _1519 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1519] = mem[_1473 + 96]
            mem[_1519 + 32] = mem[_1473 + 128]
            mem[_1519 + 64] = mem[_1473 + 160]
            mem[_1490 + 96] = _1519
            mem[_1490 + 128] = mem[_1473 + 192]
            require return_data.size - 224 >= 96
            _1560 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1560] = mem[_1473 + 224]
            mem[_1560 + 32] = mem[_1473 + 256]
            mem[_1560 + 64] = mem[_1473 + 288]
            mem[_1490 + 160] = _1560
            _1585 = mem[_1490 + 64]
            if not mem[_1490 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1451
                s = mem[_1490 + 64]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1622 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1622] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1622 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1622 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1622 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1622 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1622 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1622 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1622 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _1585
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _1585
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1683 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1693 = mem[_1683]
                require mem[_1683] == mem[_1683 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1683 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1693))
                staticcall address(_1693).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1812 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1832 = mem[_1812]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1693))
                staticcall address(_1693).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1876 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1891 = mem[_1876]
                if mem[_1876] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1832:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1955 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1989 = mem[_1955]
                if 10^12 * _1891 / _1832 and mem[_1955] > -1 / 10^12 * _1891 / _1832:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1891 / _1832 * _1989 / 10^12
                mem[mem[64] + 36] = 64
                _2097 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _2097) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3675 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3690 = mem[_3675]
                require mem[_3675] <= test266151307()
                require _3675 + mem[_3675] + 31 < _3675 + return_data.size
                _3708 = mem[_3675 + mem[_3675]]
                if mem[_3675 + mem[_3675]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3675 + mem[_3675]]) + 1 < 0 or _3675 + ceil32(return_data.size) + ceil32(32 * mem[_3675 + mem[_3675]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3675 + ceil32(return_data.size) + ceil32(32 * mem[_3675 + mem[_3675]]) + 1
                mem[_3675 + ceil32(return_data.size)] = _3708
                require _3690 + (32 * _3708) + 32 <= return_data.size
                t = _3675 + ceil32(return_data.size) + 32
                s = _3675 + _3690 + 32
                while s < _3675 + _3690 + (32 * _3708) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3708:
                    revert with 0, 50
                _6934 = mem[_3675 + ceil32(return_data.size) + 64]
                if mem[_3675 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3675 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_3675 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_3675 + ceil32(return_data.size) + 64] < 100 * mem[_3675 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _7108 = mem[_1451]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1693))
                staticcall address(_1693).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7172 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7200 = mem[_7172]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7200
                mem[mem[64] + 36] = _6934 - (100 * _6934 / 10000)
                mem[mem[64] + 68] = 160
                _7282 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_7108))
                call address(_7108).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7282) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10683 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10699 = mem[_10683]
                require mem[_10683] <= test266151307()
                require _10683 + mem[_10683] + 31 < _10683 + return_data.size
                _10725 = mem[_10683 + mem[_10683]]
                if mem[_10683 + mem[_10683]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10683 + mem[_10683]]) + 1 < 0 or _10683 + ceil32(return_data.size) + ceil32(32 * mem[_10683 + mem[_10683]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10683 + ceil32(return_data.size) + ceil32(32 * mem[_10683 + mem[_10683]]) + 1
                mem[_10683 + ceil32(return_data.size)] = _10725
                require _10699 + (32 * _10725) + 32 <= return_data.size
                t = _10683 + ceil32(return_data.size) + 32
                s = _10683 + _10699 + 32
                while s < _10683 + _10699 + (32 * _10725) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _14517 = mem[_1451]
                _14518 = mem[_1451 + 192]
                _14519 = mem[_1451 + 224]
                _14548 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_14548 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_14548]:
                    revert with 0, 50
                mem[_14548 + 32] = stor21
                if stor21 == address(_14518):
                    if stor21 == address(_14519):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[_14548 + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        mem[_14548 + ceil32(return_data.size) + 100] = address(_14517)
                        mem[_14548 + ceil32(return_data.size) + 132] = -1
                        require ext_code.size(address(_14518))
                        call address(_14518).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14517), -1
                        mem[_14548 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_14548 + (2 * ceil32(return_data.size)) + 100] = address(_14517)
                        mem[_14548 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_14519))
                        call address(_14519).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14517), -1
                        mem[_14548 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14548 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        _15020 = mem[_1451 + 160]
                        _15021 = mem[_1451 + 64]
                        _15022 = mem[_1451 + 32]
                        mem[_14548 + (4 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_15022))
                        staticcall address(_15022).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14548 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14548 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _15021 >= 999999:
                            mem[_14548 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_15020))
                            call address(_15020).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14548 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _15250 = mem[_1451 + 32]
                            mem[_14548 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15250))
                            staticcall address(_15250).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14548 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1451 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_14548 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14548 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14548 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _15600 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_14548 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_14548 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_14548 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_14548 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _14548 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_14548 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_14548 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_15600))
                            call address(_15600).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14548 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14548 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _14548 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _18347 = mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14548 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _18381 = mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14548 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _14548 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_14548 + (10 * ceil32(return_data.size)) + 96] = _18381
                            require _18347 + (32 * _18381) + 32 <= return_data.size
                            t = _14548 + (10 * ceil32(return_data.size)) + 128
                            s = _14548 + (8 * ceil32(return_data.size)) + _18347 + 128
                            while s < _14548 + (8 * ceil32(return_data.size)) + _18347 + (32 * _18381) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21495 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_21495]
                        else:
                            mem[_14548 + (6 * ceil32(return_data.size)) + 100] = _15021
                            mem[_14548 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_15020))
                            call address(_15020).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _15021, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14548 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _15251 = mem[_1451 + 32]
                            mem[_14548 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15251))
                            staticcall address(_15251).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14548 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1451 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_14548 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14548 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14548 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _15601 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_14548 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_14548 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_14548 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_14548 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _14548 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_14548 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_14548 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_15601))
                            call address(_15601).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14548 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14548 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _14548 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _18348 = mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14548 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _18382 = mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14548 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _14548 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14548 + (8 * ceil32(return_data.size)) + mem[_14548 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_14548 + (10 * ceil32(return_data.size)) + 96] = _18382
                            require _18348 + (32 * _18382) + 32 <= return_data.size
                            t = _14548 + (10 * ceil32(return_data.size)) + 128
                            s = _14548 + (8 * ceil32(return_data.size)) + _18348 + 128
                            while s < _14548 + (8 * ceil32(return_data.size)) + _18348 + (32 * _18382) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21496 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_21496]
                    else:
                        if 1 >= mem[_14548]:
                            revert with 0, 50
                        mem[_14548 + 64] = address(_14519)
                        mem[_14548 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_14548 + 100] = eth.balance(this.address) / 2
                        mem[_14548 + 132] = 64
                        mem[_14548 + 164] = mem[_14548]
                        s = 0
                        t = _14548 + 32
                        u = _14548 + 196
                        while s < mem[_14548]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14517))
                        staticcall address(_14517).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _14548 + (32 * mem[_14548]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18329 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18365 = mem[_18329]
                        require mem[_18329] <= test266151307()
                        require _18329 + mem[_18329] + 31 < _18329 + return_data.size
                        _18397 = mem[_18329 + mem[_18329]]
                        if mem[_18329 + mem[_18329]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_18329 + mem[_18329]]) + 1 < 0 or _18329 + ceil32(return_data.size) + ceil32(32 * mem[_18329 + mem[_18329]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _18329 + ceil32(return_data.size) + ceil32(32 * mem[_18329 + mem[_18329]]) + 1
                        mem[_18329 + ceil32(return_data.size)] = _18397
                        require _18365 + (32 * _18397) + 32 <= return_data.size
                        t = _18329 + ceil32(return_data.size) + 32
                        s = _18329 + _18365 + 32
                        while s < _18329 + _18365 + (32 * _18397) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _18397:
                            revert with 0, 50
                        _21432 = mem[_18329 + ceil32(return_data.size) + 64]
                        if mem[_18329 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18329 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_18329 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _18397:
                            revert with 0, 50
                        _21573 = mem[_18329 + ceil32(return_data.size) + 64]
                        if mem[_18329 + ceil32(return_data.size) + 64] < 100 * mem[_18329 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _21611 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _21573 - (100 * _21432 / 10000)
                        mem[mem[64] + 36] = 128
                        _21645 = mem[_14548]
                        mem[mem[64] + 132] = mem[_14548]
                        s = 0
                        t = _14548 + 32
                        u = mem[64] + 164
                        while s < _21645:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_21611 + 68] = this.address
                        mem[_21611 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14517))
                        call address(_14517).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _21611 + (32 * _21645) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24389 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24423 = mem[_24389]
                        require mem[_24389] <= test266151307()
                        require _24389 + mem[_24389] + 31 < _24389 + return_data.size
                        _24451 = mem[_24389 + mem[_24389]]
                        if mem[_24389 + mem[_24389]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24389 + mem[_24389]]) + 1 < 0 or _24389 + ceil32(return_data.size) + ceil32(32 * mem[_24389 + mem[_24389]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _24389 + ceil32(return_data.size) + ceil32(32 * mem[_24389 + mem[_24389]]) + 1
                        mem[_24389 + ceil32(return_data.size)] = _24451
                        require _24423 + (32 * _24451) + 32 <= return_data.size
                        t = _24389 + ceil32(return_data.size) + 32
                        s = _24389 + _24423 + 32
                        while s < _24389 + _24423 + (32 * _24451) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27147 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_27147] == mem[_27147 + 18 len 14]
                        require mem[_27147 + 32] == mem[_27147 + 50 len 14]
                        require mem[_27147 + 64] == mem[_27147 + 92 len 4]
                        mem[mem[64] + 4] = address(_14517)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14518))
                        call address(_14518).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14517), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27343 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27343] == bool(mem[_27343])
                        mem[mem[64] + 4] = address(_14517)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14519))
                        call address(_14519).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14517), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27423 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27423] == bool(mem[_27423])
                        _27475 = mem[_1451 + 160]
                        _27476 = mem[_1451 + 64]
                        _27477 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27477))
                        staticcall address(_27477).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27565 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27600 = mem[_27565]
                        if _27476 >= 999999:
                            mem[mem[64] + 4] = mem[_27565]
                            require ext_code.size(address(_27475))
                            call address(_27475).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27600
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27600
                            emit Earn(_27600);
                            _27751 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27751))
                            staticcall address(_27751).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27899 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_27899]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28163 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28213 = mem[_28163]
                            _28247 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28295 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28213
                            mem[mem[64] + 36] = 128
                            _28346 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28346:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28295 + 68] = this.address
                            mem[_28295 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28247))
                            call address(_28247).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28295 + (32 * _28346) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29579 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29619 = mem[_29579]
                            require mem[_29579] <= test266151307()
                            require _29579 + mem[_29579] + 31 < _29579 + return_data.size
                            _29659 = mem[_29579 + mem[_29579]]
                            if mem[_29579 + mem[_29579]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29579 + mem[_29579]]) + 1 < 0 or _29579 + ceil32(return_data.size) + ceil32(32 * mem[_29579 + mem[_29579]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29579 + ceil32(return_data.size) + ceil32(32 * mem[_29579 + mem[_29579]]) + 1
                            mem[_29579 + ceil32(return_data.size)] = _29659
                            require _29619 + (32 * _29659) + 32 <= return_data.size
                            t = _29579 + ceil32(return_data.size) + 32
                            s = _29579 + _29619 + 32
                            while s < _29579 + _29619 + (32 * _29659) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31031 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31031]
                        else:
                            mem[mem[64] + 4] = _27476
                            mem[mem[64] + 36] = _27600
                            require ext_code.size(address(_27475))
                            call address(_27475).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _27476, _27600
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27600
                            emit Earn(_27600);
                            _27752 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27752))
                            staticcall address(_27752).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27900 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_27900]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28164 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28214 = mem[_28164]
                            _28248 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28296 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28214
                            mem[mem[64] + 36] = 128
                            _28347 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28347:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28296 + 68] = this.address
                            mem[_28296 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28248))
                            call address(_28248).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28296 + (32 * _28347) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29580 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29620 = mem[_29580]
                            require mem[_29580] <= test266151307()
                            require _29580 + mem[_29580] + 31 < _29580 + return_data.size
                            _29660 = mem[_29580 + mem[_29580]]
                            if mem[_29580 + mem[_29580]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29580 + mem[_29580]]) + 1 < 0 or _29580 + ceil32(return_data.size) + ceil32(32 * mem[_29580 + mem[_29580]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29580 + ceil32(return_data.size) + ceil32(32 * mem[_29580 + mem[_29580]]) + 1
                            mem[_29580 + ceil32(return_data.size)] = _29660
                            require _29620 + (32 * _29660) + 32 <= return_data.size
                            t = _29580 + ceil32(return_data.size) + 32
                            s = _29580 + _29620 + 32
                            while s < _29580 + _29620 + (32 * _29660) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31032 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31032]
                else:
                    if 1 >= mem[_14548]:
                        revert with 0, 50
                    mem[_14548 + 64] = address(_14518)
                    mem[_14548 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_14548 + 100] = eth.balance(this.address) / 2
                    mem[_14548 + 132] = 64
                    mem[_14548 + 164] = mem[_14548]
                    s = 0
                    t = _14548 + 32
                    u = _14548 + 196
                    while s < mem[_14548]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_14517))
                    staticcall address(_14517).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _14548 + (32 * mem[_14548]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18330 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _18366 = mem[_18330]
                    require mem[_18330] <= test266151307()
                    require _18330 + mem[_18330] + 31 < _18330 + return_data.size
                    _18398 = mem[_18330 + mem[_18330]]
                    if mem[_18330 + mem[_18330]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_18330 + mem[_18330]]) + 1 < 0 or _18330 + ceil32(return_data.size) + ceil32(32 * mem[_18330 + mem[_18330]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _18330 + ceil32(return_data.size) + ceil32(32 * mem[_18330 + mem[_18330]]) + 1
                    mem[_18330 + ceil32(return_data.size)] = _18398
                    require _18366 + (32 * _18398) + 32 <= return_data.size
                    t = _18330 + ceil32(return_data.size) + 32
                    s = _18330 + _18366 + 32
                    while s < _18330 + _18366 + (32 * _18398) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _18398:
                        revert with 0, 50
                    _21433 = mem[_18330 + ceil32(return_data.size) + 64]
                    if mem[_18330 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18330 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_18330 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _18398:
                        revert with 0, 50
                    _21574 = mem[_18330 + ceil32(return_data.size) + 64]
                    if mem[_18330 + ceil32(return_data.size) + 64] < 100 * mem[_18330 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _21612 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _21574 - (100 * _21433 / 10000)
                    mem[mem[64] + 36] = 128
                    _21646 = mem[_14548]
                    mem[mem[64] + 132] = mem[_14548]
                    s = 0
                    t = _14548 + 32
                    u = mem[64] + 164
                    while s < _21646:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_21612 + 68] = this.address
                    mem[_21612 + 100] = block.timestamp + 60
                    require ext_code.size(address(_14517))
                    call address(_14517).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _21612 + (32 * _21646) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24390 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24424 = mem[_24390]
                    require mem[_24390] <= test266151307()
                    require _24390 + mem[_24390] + 31 < _24390 + return_data.size
                    _24452 = mem[_24390 + mem[_24390]]
                    if mem[_24390 + mem[_24390]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_24390 + mem[_24390]]) + 1 < 0 or _24390 + ceil32(return_data.size) + ceil32(32 * mem[_24390 + mem[_24390]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _24390 + ceil32(return_data.size) + ceil32(32 * mem[_24390 + mem[_24390]]) + 1
                    mem[_24390 + ceil32(return_data.size)] = _24452
                    require _24424 + (32 * _24452) + 32 <= return_data.size
                    t = _24390 + ceil32(return_data.size) + 32
                    s = _24390 + _24424 + 32
                    while s < _24390 + _24424 + (32 * _24452) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_14519):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27159 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_27159] == mem[_27159 + 18 len 14]
                        require mem[_27159 + 32] == mem[_27159 + 50 len 14]
                        require mem[_27159 + 64] == mem[_27159 + 92 len 4]
                        mem[mem[64] + 4] = address(_14517)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14518))
                        call address(_14518).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14517), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27359 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27359] == bool(mem[_27359])
                        mem[mem[64] + 4] = address(_14517)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14519))
                        call address(_14519).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14517), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27439 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27439] == bool(mem[_27439])
                        _27503 = mem[_1451 + 160]
                        _27504 = mem[_1451 + 64]
                        _27505 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27505))
                        staticcall address(_27505).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27580 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27620 = mem[_27580]
                        if _27504 >= 999999:
                            mem[mem[64] + 4] = mem[_27580]
                            require ext_code.size(address(_27503))
                            call address(_27503).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27620
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27620
                            emit Earn(_27620);
                            _27807 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27807))
                            staticcall address(_27807).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27927 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_27927]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28184 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28230 = mem[_28184]
                            _28263 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28312 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28230
                            mem[mem[64] + 36] = 128
                            _28366 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28366:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28312 + 68] = this.address
                            mem[_28312 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28263))
                            call address(_28263).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28312 + (32 * _28366) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29581 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29621 = mem[_29581]
                            require mem[_29581] <= test266151307()
                            require _29581 + mem[_29581] + 31 < _29581 + return_data.size
                            _29661 = mem[_29581 + mem[_29581]]
                            if mem[_29581 + mem[_29581]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29581 + mem[_29581]]) + 1 < 0 or _29581 + ceil32(return_data.size) + ceil32(32 * mem[_29581 + mem[_29581]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29581 + ceil32(return_data.size) + ceil32(32 * mem[_29581 + mem[_29581]]) + 1
                            mem[_29581 + ceil32(return_data.size)] = _29661
                            require _29621 + (32 * _29661) + 32 <= return_data.size
                            t = _29581 + ceil32(return_data.size) + 32
                            s = _29581 + _29621 + 32
                            while s < _29581 + _29621 + (32 * _29661) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31033 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31033]
                        else:
                            mem[mem[64] + 4] = _27504
                            mem[mem[64] + 36] = _27620
                            require ext_code.size(address(_27503))
                            call address(_27503).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _27504, _27620
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27620
                            emit Earn(_27620);
                            _27808 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27808))
                            staticcall address(_27808).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27928 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_27928]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28185 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28231 = mem[_28185]
                            _28264 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28313 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28231
                            mem[mem[64] + 36] = 128
                            _28367 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28367:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28313 + 68] = this.address
                            mem[_28313 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28264))
                            call address(_28264).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28313 + (32 * _28367) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29582 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29622 = mem[_29582]
                            require mem[_29582] <= test266151307()
                            require _29582 + mem[_29582] + 31 < _29582 + return_data.size
                            _29662 = mem[_29582 + mem[_29582]]
                            if mem[_29582 + mem[_29582]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29582 + mem[_29582]]) + 1 < 0 or _29582 + ceil32(return_data.size) + ceil32(32 * mem[_29582 + mem[_29582]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29582 + ceil32(return_data.size) + ceil32(32 * mem[_29582 + mem[_29582]]) + 1
                            mem[_29582 + ceil32(return_data.size)] = _29662
                            require _29622 + (32 * _29662) + 32 <= return_data.size
                            t = _29582 + ceil32(return_data.size) + 32
                            s = _29582 + _29622 + 32
                            while s < _29582 + _29622 + (32 * _29662) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31034 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31034]
                    else:
                        if 1 >= mem[_14548]:
                            revert with 0, 50
                        mem[_14548 + 64] = address(_14519)
                        _27121 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _27160 = mem[_14548]
                        mem[mem[64] + 68] = mem[_14548]
                        s = 0
                        t = _14548 + 32
                        u = mem[64] + 100
                        while s < _27160:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14517))
                        staticcall address(_14517).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _27121 + (32 * _27160) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29611 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29651 = mem[_29611]
                        require mem[_29611] <= test266151307()
                        require _29611 + mem[_29611] + 31 < _29611 + return_data.size
                        _29691 = mem[_29611 + mem[_29611]]
                        if mem[_29611 + mem[_29611]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29611 + mem[_29611]]) + 1 < 0 or _29611 + ceil32(return_data.size) + ceil32(32 * mem[_29611 + mem[_29611]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29611 + ceil32(return_data.size) + ceil32(32 * mem[_29611 + mem[_29611]]) + 1
                        mem[_29611 + ceil32(return_data.size)] = _29691
                        require _29651 + (32 * _29691) + 32 <= return_data.size
                        t = _29611 + ceil32(return_data.size) + 32
                        s = _29611 + _29651 + 32
                        while s < _29611 + _29651 + (32 * _29691) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _29691:
                            revert with 0, 50
                        _30947 = mem[_29611 + ceil32(return_data.size) + 64]
                        if mem[_29611 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_29611 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_29611 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _29691:
                            revert with 0, 50
                        _31127 = mem[_29611 + ceil32(return_data.size) + 64]
                        if mem[_29611 + ceil32(return_data.size) + 64] < 100 * mem[_29611 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _31148 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _31127 - (100 * _30947 / 10000)
                        mem[mem[64] + 36] = 128
                        _31163 = mem[_14548]
                        mem[mem[64] + 132] = mem[_14548]
                        s = 0
                        t = _14548 + 32
                        u = mem[64] + 164
                        while s < _31163:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_31148 + 68] = this.address
                        mem[_31148 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14517))
                        call address(_14517).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _31148 + (32 * _31163) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32016 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32031 = mem[_32016]
                        require mem[_32016] <= test266151307()
                        require _32016 + mem[_32016] + 31 < _32016 + return_data.size
                        _32042 = mem[_32016 + mem[_32016]]
                        if mem[_32016 + mem[_32016]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_32016 + mem[_32016]]) + 1 < 0 or _32016 + ceil32(return_data.size) + ceil32(32 * mem[_32016 + mem[_32016]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _32016 + ceil32(return_data.size) + ceil32(32 * mem[_32016 + mem[_32016]]) + 1
                        mem[_32016 + ceil32(return_data.size)] = _32042
                        require _32031 + (32 * _32042) + 32 <= return_data.size
                        t = _32016 + ceil32(return_data.size) + 32
                        s = _32016 + _32031 + 32
                        while s < _32016 + _32031 + (32 * _32042) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32852 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_32852] == mem[_32852 + 18 len 14]
                        require mem[_32852 + 32] == mem[_32852 + 50 len 14]
                        require mem[_32852 + 64] == mem[_32852 + 92 len 4]
                        mem[mem[64] + 4] = address(_14517)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14518))
                        call address(_14518).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14517), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32913 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32913] == bool(mem[_32913])
                        mem[mem[64] + 4] = address(_14517)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14519))
                        call address(_14519).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14517), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32945 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32945] == bool(mem[_32945])
                        _32961 = mem[_1451 + 160]
                        _32962 = mem[_1451 + 64]
                        _32963 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_32963))
                        staticcall address(_32963).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33005 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33016 = mem[_33005]
                        if _32962 >= 999999:
                            mem[mem[64] + 4] = mem[_33005]
                            require ext_code.size(address(_32961))
                            call address(_32961).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _33016
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _33016
                            emit Earn(_33016);
                            _33093 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_33093))
                            staticcall address(_33093).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33144 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_33144]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33249 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33267 = mem[_33249]
                            _33283 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _33301 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _33267
                            mem[mem[64] + 36] = 128
                            _33317 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _33317:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_33301 + 68] = this.address
                            mem[_33301 + 100] = block.timestamp + 60
                            require ext_code.size(address(_33283))
                            call address(_33283).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _33301 + (32 * _33317) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33547 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33563 = mem[_33547]
                            require mem[_33547] <= test266151307()
                            require _33547 + mem[_33547] + 31 < _33547 + return_data.size
                            _33579 = mem[_33547 + mem[_33547]]
                            if mem[_33547 + mem[_33547]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_33547 + mem[_33547]]) + 1 < 0 or _33547 + ceil32(return_data.size) + ceil32(32 * mem[_33547 + mem[_33547]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _33547 + ceil32(return_data.size) + ceil32(32 * mem[_33547 + mem[_33547]]) + 1
                            mem[_33547 + ceil32(return_data.size)] = _33579
                            require _33563 + (32 * _33579) + 32 <= return_data.size
                            t = _33547 + ceil32(return_data.size) + 32
                            s = _33547 + _33563 + 32
                            while s < _33547 + _33563 + (32 * _33579) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33773 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_33773]
                        else:
                            mem[mem[64] + 4] = _32962
                            mem[mem[64] + 36] = _33016
                            require ext_code.size(address(_32961))
                            call address(_32961).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _32962, _33016
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _33016
                            emit Earn(_33016);
                            _33094 = mem[_1451 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_33094))
                            staticcall address(_33094).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33145 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1451 + 96] = mem[_33145]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33250 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33268 = mem[_33250]
                            _33284 = mem[_1451]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _33302 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _33268
                            mem[mem[64] + 36] = 128
                            _33318 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _33318:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_33302 + 68] = this.address
                            mem[_33302 + 100] = block.timestamp + 60
                            require ext_code.size(address(_33284))
                            call address(_33284).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _33302 + (32 * _33318) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33548 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33564 = mem[_33548]
                            require mem[_33548] <= test266151307()
                            require _33548 + mem[_33548] + 31 < _33548 + return_data.size
                            _33580 = mem[_33548 + mem[_33548]]
                            if mem[_33548 + mem[_33548]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_33548 + mem[_33548]]) + 1 < 0 or _33548 + ceil32(return_data.size) + ceil32(32 * mem[_33548 + mem[_33548]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _33548 + ceil32(return_data.size) + ceil32(32 * mem[_33548 + mem[_33548]]) + 1
                            mem[_33548 + ceil32(return_data.size)] = _33580
                            require _33564 + (32 * _33580) + 32 <= return_data.size
                            t = _33548 + ceil32(return_data.size) + 32
                            s = _33548 + _33564 + 32
                            while s < _33548 + _33564 + (32 * _33580) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33774 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_33774]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1451
                s = _6934 - (100 * _6934 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _1585
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _1585
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1684 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1694 = mem[_1684]
            require mem[_1684] == mem[_1684 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_1684 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_1694))
            staticcall address(_1694).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1813 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1833 = mem[_1813]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1694))
            staticcall address(_1694).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1877 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1892 = mem[_1877]
            if mem[_1877] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1833:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1956 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1990 = mem[_1956]
            if 10^12 * _1892 / _1833 and mem[_1956] > -1 / 10^12 * _1892 / _1833:
                revert with 0, 17
            _2061 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1892 / _1833 * _1990 / 10^12
            mem[mem[64] + 36] = 64
            _2098 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _2098:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2061 + (32 * _2098) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3676 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3691 = mem[_3676]
            require mem[_3676] <= test266151307()
            require _3676 + mem[_3676] + 31 < _3676 + return_data.size
            _3709 = mem[_3676 + mem[_3676]]
            if mem[_3676 + mem[_3676]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3676 + mem[_3676]]) + 1 < 0 or _3676 + ceil32(return_data.size) + ceil32(32 * mem[_3676 + mem[_3676]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3676 + ceil32(return_data.size) + ceil32(32 * mem[_3676 + mem[_3676]]) + 1
            mem[_3676 + ceil32(return_data.size)] = _3709
            require _3691 + (32 * _3709) + 32 <= return_data.size
            t = _3676 + ceil32(return_data.size) + 32
            s = _3676 + _3691 + 32
            while s < _3676 + _3691 + (32 * _3709) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3709:
                revert with 0, 50
            _6935 = mem[_3676 + ceil32(return_data.size) + 64]
            if mem[_3676 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3676 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_3676 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_3676 + ceil32(return_data.size) + 64] < 100 * mem[_3676 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _7109 = mem[_1451]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1694))
            staticcall address(_1694).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7173 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7201 = mem[_7173]
            if 60 > !block.timestamp:
                revert with 0, 17
            _7253 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7201
            mem[mem[64] + 36] = _6935 - (100 * _6935 / 10000)
            mem[mem[64] + 68] = 160
            _7283 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _7283:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_7253 + 100] = this.address
            mem[_7253 + 132] = block.timestamp + 60
            require ext_code.size(address(_7109))
            call address(_7109).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _7253 + (32 * _7283) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10684 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10700 = mem[_10684]
            require mem[_10684] <= test266151307()
            require _10684 + mem[_10684] + 31 < _10684 + return_data.size
            _10726 = mem[_10684 + mem[_10684]]
            if mem[_10684 + mem[_10684]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_10684 + mem[_10684]]) + 1 < 0 or _10684 + ceil32(return_data.size) + ceil32(32 * mem[_10684 + mem[_10684]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _10684 + ceil32(return_data.size) + ceil32(32 * mem[_10684 + mem[_10684]]) + 1
            mem[_10684 + ceil32(return_data.size)] = _10726
            require _10700 + (32 * _10726) + 32 <= return_data.size
            t = _10684 + ceil32(return_data.size) + 32
            s = _10684 + _10700 + 32
            while s < _10684 + _10700 + (32 * _10726) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _14520 = mem[_1451]
            _14521 = mem[_1451 + 192]
            _14522 = mem[_1451 + 224]
            _14550 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_14550 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_14550]:
                revert with 0, 50
            mem[_14550 + 32] = stor21
            if stor21 == address(_14521):
                if stor21 == address(_14522):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[_14550 + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    mem[_14550 + ceil32(return_data.size) + 100] = address(_14520)
                    mem[_14550 + ceil32(return_data.size) + 132] = -1
                    require ext_code.size(address(_14521))
                    call address(_14521).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14520), -1
                    mem[_14550 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_14550 + (2 * ceil32(return_data.size)) + 100] = address(_14520)
                    mem[_14550 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_14522))
                    call address(_14522).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14520), -1
                    mem[_14550 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _14550 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    _15023 = mem[_1451 + 160]
                    _15024 = mem[_1451 + 64]
                    _15025 = mem[_1451 + 32]
                    mem[_14550 + (4 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_15025))
                    staticcall address(_15025).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_14550 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _14550 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _15024 >= 999999:
                        mem[_14550 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_15023))
                        call address(_15023).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_14550 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _15253 = mem[_1451 + 32]
                        mem[_14550 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_15253))
                        staticcall address(_15253).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14550 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1451 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_14550 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14550 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14550 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _15603 = mem[_1451]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_14550 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_14550 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_14550 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_14550 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _14550 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_14550 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_14550 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_15603))
                        call address(_15603).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14550 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_14550 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _14550 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _18349 = mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14550 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _18383 = mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14550 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _14550 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_14550 + (10 * ceil32(return_data.size)) + 96] = _18383
                        require _18349 + (32 * _18383) + 32 <= return_data.size
                        t = _14550 + (10 * ceil32(return_data.size)) + 128
                        s = _14550 + (8 * ceil32(return_data.size)) + _18349 + 128
                        while s < _14550 + (8 * ceil32(return_data.size)) + _18349 + (32 * _18383) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21497 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_21497]
                    else:
                        mem[_14550 + (6 * ceil32(return_data.size)) + 100] = _15024
                        mem[_14550 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_15023))
                        call address(_15023).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _15024, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_14550 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _15254 = mem[_1451 + 32]
                        mem[_14550 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_15254))
                        staticcall address(_15254).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14550 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1451 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_14550 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14550 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14550 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _15604 = mem[_1451]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_14550 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_14550 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_14550 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_14550 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _14550 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_14550 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_14550 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_15604))
                        call address(_15604).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14550 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_14550 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _14550 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _18350 = mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14550 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _18384 = mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14550 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _14550 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14550 + (8 * ceil32(return_data.size)) + mem[_14550 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_14550 + (10 * ceil32(return_data.size)) + 96] = _18384
                        require _18350 + (32 * _18384) + 32 <= return_data.size
                        t = _14550 + (10 * ceil32(return_data.size)) + 128
                        s = _14550 + (8 * ceil32(return_data.size)) + _18350 + 128
                        while s < _14550 + (8 * ceil32(return_data.size)) + _18350 + (32 * _18384) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_21498]
                else:
                    if 1 >= mem[_14550]:
                        revert with 0, 50
                    mem[_14550 + 64] = address(_14522)
                    mem[_14550 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_14550 + 100] = eth.balance(this.address) / 2
                    mem[_14550 + 132] = 64
                    mem[_14550 + 164] = mem[_14550]
                    s = 0
                    t = _14550 + 32
                    u = _14550 + 196
                    while s < mem[_14550]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_14520))
                    staticcall address(_14520).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _14550 + (32 * mem[_14550]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18331 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _18367 = mem[_18331]
                    require mem[_18331] <= test266151307()
                    require _18331 + mem[_18331] + 31 < _18331 + return_data.size
                    _18399 = mem[_18331 + mem[_18331]]
                    if mem[_18331 + mem[_18331]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_18331 + mem[_18331]]) + 1 < 0 or _18331 + ceil32(return_data.size) + ceil32(32 * mem[_18331 + mem[_18331]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _18331 + ceil32(return_data.size) + ceil32(32 * mem[_18331 + mem[_18331]]) + 1
                    mem[_18331 + ceil32(return_data.size)] = _18399
                    require _18367 + (32 * _18399) + 32 <= return_data.size
                    t = _18331 + ceil32(return_data.size) + 32
                    s = _18331 + _18367 + 32
                    while s < _18331 + _18367 + (32 * _18399) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _18399:
                        revert with 0, 50
                    _21434 = mem[_18331 + ceil32(return_data.size) + 64]
                    if mem[_18331 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18331 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_18331 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _18399:
                        revert with 0, 50
                    _21575 = mem[_18331 + ceil32(return_data.size) + 64]
                    if mem[_18331 + ceil32(return_data.size) + 64] < 100 * mem[_18331 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _21613 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _21575 - (100 * _21434 / 10000)
                    mem[mem[64] + 36] = 128
                    _21647 = mem[_14550]
                    mem[mem[64] + 132] = mem[_14550]
                    s = 0
                    t = _14550 + 32
                    u = mem[64] + 164
                    while s < _21647:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_21613 + 68] = this.address
                    mem[_21613 + 100] = block.timestamp + 60
                    require ext_code.size(address(_14520))
                    call address(_14520).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _21613 + (32 * _21647) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24391 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24425 = mem[_24391]
                    require mem[_24391] <= test266151307()
                    require _24391 + mem[_24391] + 31 < _24391 + return_data.size
                    _24453 = mem[_24391 + mem[_24391]]
                    if mem[_24391 + mem[_24391]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_24391 + mem[_24391]]) + 1 < 0 or _24391 + ceil32(return_data.size) + ceil32(32 * mem[_24391 + mem[_24391]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _24391 + ceil32(return_data.size) + ceil32(32 * mem[_24391 + mem[_24391]]) + 1
                    mem[_24391 + ceil32(return_data.size)] = _24453
                    require _24425 + (32 * _24453) + 32 <= return_data.size
                    t = _24391 + ceil32(return_data.size) + 32
                    s = _24391 + _24425 + 32
                    while s < _24391 + _24425 + (32 * _24453) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27148 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_27148] == mem[_27148 + 18 len 14]
                    require mem[_27148 + 32] == mem[_27148 + 50 len 14]
                    require mem[_27148 + 64] == mem[_27148 + 92 len 4]
                    mem[mem[64] + 4] = address(_14520)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14521))
                    call address(_14521).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14520), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27345 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27345] == bool(mem[_27345])
                    mem[mem[64] + 4] = address(_14520)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14522))
                    call address(_14522).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14520), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27425 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27425] == bool(mem[_27425])
                    _27478 = mem[_1451 + 160]
                    _27479 = mem[_1451 + 64]
                    _27480 = mem[_1451 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_27480))
                    staticcall address(_27480).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27566 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27602 = mem[_27566]
                    if _27479 >= 999999:
                        mem[mem[64] + 4] = mem[_27566]
                        require ext_code.size(address(_27478))
                        call address(_27478).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _27602
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27602
                        emit Earn(_27602);
                        _27757 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27757))
                        staticcall address(_27757).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27902 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1451 + 96] = mem[_27902]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28165 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28215 = mem[_28165]
                        _28249 = mem[_1451]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28297 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28215
                        mem[mem[64] + 36] = 128
                        _28348 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _28348:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28297 + 68] = this.address
                        mem[_28297 + 100] = block.timestamp + 60
                        require ext_code.size(address(_28249))
                        call address(_28249).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28297 + (32 * _28348) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29583 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29623 = mem[_29583]
                        require mem[_29583] <= test266151307()
                        require _29583 + mem[_29583] + 31 < _29583 + return_data.size
                        _29663 = mem[_29583 + mem[_29583]]
                        if mem[_29583 + mem[_29583]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29583 + mem[_29583]]) + 1 < 0 or _29583 + ceil32(return_data.size) + ceil32(32 * mem[_29583 + mem[_29583]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29583 + ceil32(return_data.size) + ceil32(32 * mem[_29583 + mem[_29583]]) + 1
                        mem[_29583 + ceil32(return_data.size)] = _29663
                        require _29623 + (32 * _29663) + 32 <= return_data.size
                        t = _29583 + ceil32(return_data.size) + 32
                        s = _29583 + _29623 + 32
                        while s < _29583 + _29623 + (32 * _29663) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31035 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_31035]
                    else:
                        mem[mem[64] + 4] = _27479
                        mem[mem[64] + 36] = _27602
                        require ext_code.size(address(_27478))
                        call address(_27478).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _27479, _27602
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27602
                        emit Earn(_27602);
                        _27758 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27758))
                        staticcall address(_27758).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27903 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1451 + 96] = mem[_27903]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28166 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28216 = mem[_28166]
                        _28250 = mem[_1451]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28298 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28216
                        mem[mem[64] + 36] = 128
                        _28349 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_28298 + 100] = block.timestamp + 60
                        require ext_code.size(address(_28250))
                        call address(_28250).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28298 + (32 * _28349) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29584 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29624 = mem[_29584]
                        require mem[_29584] <= test266151307()
                        require _29584 + mem[_29584] + 31 < _29584 + return_data.size
                        _29664 = mem[_29584 + mem[_29584]]
                        if mem[_29584 + mem[_29584]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29584 + mem[_29584]]) + 1 < 0 or _29584 + ceil32(return_data.size) + ceil32(32 * mem[_29584 + mem[_29584]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29584 + ceil32(return_data.size) + ceil32(32 * mem[_29584 + mem[_29584]]) + 1
                        mem[_29584 + ceil32(return_data.size)] = _29664
                        require _29624 + (32 * _29664) + 32 <= return_data.size
                        t = _29584 + ceil32(return_data.size) + 32
                        s = _29584 + _29624 + 32
                        while s < _29584 + _29624 + (32 * _29664) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31036 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_31036]
            else:
                if 1 >= mem[_14550]:
                    revert with 0, 50
                mem[_14550 + 64] = address(_14521)
                mem[_14550 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_14550 + 100] = eth.balance(this.address) / 2
                mem[_14550 + 132] = 64
                mem[_14550 + 164] = mem[_14550]
                s = 0
                t = _14550 + 32
                u = _14550 + 196
                while s < mem[_14550]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_14520))
                staticcall address(_14520).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _14550 + (32 * mem[_14550]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18332 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _18368 = mem[_18332]
                require mem[_18332] <= test266151307()
                require _18332 + mem[_18332] + 31 < _18332 + return_data.size
                _18400 = mem[_18332 + mem[_18332]]
                if mem[_18332 + mem[_18332]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_18332 + mem[_18332]]) + 1 < 0 or _18332 + ceil32(return_data.size) + ceil32(32 * mem[_18332 + mem[_18332]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _18332 + ceil32(return_data.size) + ceil32(32 * mem[_18332 + mem[_18332]]) + 1
                mem[_18332 + ceil32(return_data.size)] = _18400
                require _18368 + (32 * _18400) + 32 <= return_data.size
                t = _18332 + ceil32(return_data.size) + 32
                s = _18332 + _18368 + 32
                while s < _18332 + _18368 + (32 * _18400) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _18400:
                    revert with 0, 50
                _21435 = mem[_18332 + ceil32(return_data.size) + 64]
                if mem[_18332 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18332 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_18332 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _18400:
                    revert with 0, 50
                _21576 = mem[_18332 + ceil32(return_data.size) + 64]
                if mem[_18332 + ceil32(return_data.size) + 64] < 100 * mem[_18332 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _21614 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _21576 - (100 * _21435 / 10000)
                mem[mem[64] + 36] = 128
                _21648 = mem[_14550]
                mem[mem[64] + 132] = mem[_14550]
                s = 0
                t = _14550 + 32
                u = mem[64] + 164
                while s < _21648:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_21614 + 68] = this.address
                mem[_21614 + 100] = block.timestamp + 60
                require ext_code.size(address(_14520))
                call address(_14520).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _21614 + (32 * _21648) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24392 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24426 = mem[_24392]
                require mem[_24392] <= test266151307()
                require _24392 + mem[_24392] + 31 < _24392 + return_data.size
                _24454 = mem[_24392 + mem[_24392]]
                if mem[_24392 + mem[_24392]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_24392 + mem[_24392]]) + 1 < 0 or _24392 + ceil32(return_data.size) + ceil32(32 * mem[_24392 + mem[_24392]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _24392 + ceil32(return_data.size) + ceil32(32 * mem[_24392 + mem[_24392]]) + 1
                mem[_24392 + ceil32(return_data.size)] = _24454
                require _24426 + (32 * _24454) + 32 <= return_data.size
                t = _24392 + ceil32(return_data.size) + 32
                s = _24392 + _24426 + 32
                while s < _24392 + _24426 + (32 * _24454) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_14522):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27161 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_27161] == mem[_27161 + 18 len 14]
                    require mem[_27161 + 32] == mem[_27161 + 50 len 14]
                    require mem[_27161 + 64] == mem[_27161 + 92 len 4]
                    mem[mem[64] + 4] = address(_14520)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14521))
                    call address(_14521).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14520), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27360 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27360] == bool(mem[_27360])
                    mem[mem[64] + 4] = address(_14520)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14522))
                    call address(_14522).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14520), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27441 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27441] == bool(mem[_27441])
                    _27508 = mem[_1451 + 160]
                    _27509 = mem[_1451 + 64]
                    _27510 = mem[_1451 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_27510))
                    staticcall address(_27510).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27582 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27621 = mem[_27582]
                    if _27509 >= 999999:
                        mem[mem[64] + 4] = mem[_27582]
                        require ext_code.size(address(_27508))
                        call address(_27508).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _27621
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27621
                        emit Earn(_27621);
                        _27814 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27814))
                        staticcall address(_27814).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27929 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1451 + 96] = mem[_27929]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28187 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28232 = mem[_28187]
                        _28265 = mem[_1451]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28316 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28232
                        mem[mem[64] + 36] = 128
                        _28369 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _28369:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28316 + 68] = this.address
                        mem[_28316 + 100] = block.timestamp + 60
                        require ext_code.size(address(_28265))
                        call address(_28265).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28316 + (32 * _28369) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29585 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29625 = mem[_29585]
                        require mem[_29585] <= test266151307()
                        require _29585 + mem[_29585] + 31 < _29585 + return_data.size
                        _29665 = mem[_29585 + mem[_29585]]
                        if mem[_29585 + mem[_29585]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29585 + mem[_29585]]) + 1 < 0 or _29585 + ceil32(return_data.size) + ceil32(32 * mem[_29585 + mem[_29585]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29585 + ceil32(return_data.size) + ceil32(32 * mem[_29585 + mem[_29585]]) + 1
                        mem[_29585 + ceil32(return_data.size)] = _29665
                        require _29625 + (32 * _29665) + 32 <= return_data.size
                        t = _29585 + ceil32(return_data.size) + 32
                        s = _29585 + _29625 + 32
                        while s < _29585 + _29625 + (32 * _29665) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31037 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_31037]
                    else:
                        mem[mem[64] + 4] = _27509
                        mem[mem[64] + 36] = _27621
                        require ext_code.size(address(_27508))
                        call address(_27508).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _27509, _27621
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27621
                        emit Earn(_27621);
                        _27815 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27815))
                        staticcall address(_27815).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27930 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1451 + 96] = mem[_27930]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28188 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28233 = mem[_28188]
                        _28266 = mem[_1451]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28317 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28233
                        mem[mem[64] + 36] = 128
                        _28370 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _28370:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28317 + 68] = this.address
                        mem[_28317 + 100] = block.timestamp + 60
                        require ext_code.size(address(_28266))
                        call address(_28266).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28317 + (32 * _28370) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29586 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29626 = mem[_29586]
                        require mem[_29586] <= test266151307()
                        require _29586 + mem[_29586] + 31 < _29586 + return_data.size
                        _29666 = mem[_29586 + mem[_29586]]
                        if mem[_29586 + mem[_29586]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29586 + mem[_29586]]) + 1 < 0 or _29586 + ceil32(return_data.size) + ceil32(32 * mem[_29586 + mem[_29586]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29586 + ceil32(return_data.size) + ceil32(32 * mem[_29586 + mem[_29586]]) + 1
                        mem[_29586 + ceil32(return_data.size)] = _29666
                        require _29626 + (32 * _29666) + 32 <= return_data.size
                        t = _29586 + ceil32(return_data.size) + 32
                        s = _29586 + _29626 + 32
                        while s < _29586 + _29626 + (32 * _29666) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31038 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_31038]
                else:
                    if 1 >= mem[_14550]:
                        revert with 0, 50
                    mem[_14550 + 64] = address(_14522)
                    _27124 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _27162 = mem[_14550]
                    mem[mem[64] + 68] = mem[_14550]
                    s = 0
                    t = _14550 + 32
                    u = mem[64] + 100
                    while s < _27162:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_14520))
                    staticcall address(_14520).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _27124 + (32 * _27162) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29612 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29652 = mem[_29612]
                    require mem[_29612] <= test266151307()
                    require _29612 + mem[_29612] + 31 < _29612 + return_data.size
                    _29692 = mem[_29612 + mem[_29612]]
                    if mem[_29612 + mem[_29612]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_29612 + mem[_29612]]) + 1 < 0 or _29612 + ceil32(return_data.size) + ceil32(32 * mem[_29612 + mem[_29612]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _29612 + ceil32(return_data.size) + ceil32(32 * mem[_29612 + mem[_29612]]) + 1
                    mem[_29612 + ceil32(return_data.size)] = _29692
                    require _29652 + (32 * _29692) + 32 <= return_data.size
                    t = _29612 + ceil32(return_data.size) + 32
                    s = _29612 + _29652 + 32
                    while s < _29612 + _29652 + (32 * _29692) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _29692:
                        revert with 0, 50
                    _30948 = mem[_29612 + ceil32(return_data.size) + 64]
                    if mem[_29612 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_29612 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_29612 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _29692:
                        revert with 0, 50
                    _31128 = mem[_29612 + ceil32(return_data.size) + 64]
                    if mem[_29612 + ceil32(return_data.size) + 64] < 100 * mem[_29612 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _31149 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _31128 - (100 * _30948 / 10000)
                    mem[mem[64] + 36] = 128
                    _31164 = mem[_14550]
                    mem[mem[64] + 132] = mem[_14550]
                    s = 0
                    t = _14550 + 32
                    u = mem[64] + 164
                    while s < _31164:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_31149 + 68] = this.address
                    mem[_31149 + 100] = block.timestamp + 60
                    require ext_code.size(address(_14520))
                    call address(_14520).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _31149 + (32 * _31164) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32017 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32032 = mem[_32017]
                    require mem[_32017] <= test266151307()
                    require _32017 + mem[_32017] + 31 < _32017 + return_data.size
                    _32043 = mem[_32017 + mem[_32017]]
                    if mem[_32017 + mem[_32017]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_32017 + mem[_32017]]) + 1 < 0 or _32017 + ceil32(return_data.size) + ceil32(32 * mem[_32017 + mem[_32017]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _32017 + ceil32(return_data.size) + ceil32(32 * mem[_32017 + mem[_32017]]) + 1
                    mem[_32017 + ceil32(return_data.size)] = _32043
                    require _32032 + (32 * _32043) + 32 <= return_data.size
                    t = _32017 + ceil32(return_data.size) + 32
                    s = _32017 + _32032 + 32
                    while s < _32017 + _32032 + (32 * _32043) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32853 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_32853] == mem[_32853 + 18 len 14]
                    require mem[_32853 + 32] == mem[_32853 + 50 len 14]
                    require mem[_32853 + 64] == mem[_32853 + 92 len 4]
                    mem[mem[64] + 4] = address(_14520)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14521))
                    call address(_14521).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14520), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32914 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_32914] == bool(mem[_32914])
                    mem[mem[64] + 4] = address(_14520)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14522))
                    call address(_14522).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14520), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32946 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_32946] == bool(mem[_32946])
                    _32964 = mem[_1451 + 160]
                    _32965 = mem[_1451 + 64]
                    _32966 = mem[_1451 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_32966))
                    staticcall address(_32966).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33006 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _33017 = mem[_33006]
                    if _32965 >= 999999:
                        mem[mem[64] + 4] = mem[_33006]
                        require ext_code.size(address(_32964))
                        call address(_32964).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _33017
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _33017
                        emit Earn(_33017);
                        _33095 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_33095))
                        staticcall address(_33095).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33146 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1451 + 96] = mem[_33146]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33251 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33269 = mem[_33251]
                        _33285 = mem[_1451]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _33303 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _33269
                        mem[mem[64] + 36] = 128
                        _33319 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _33319:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_33303 + 68] = this.address
                        mem[_33303 + 100] = block.timestamp + 60
                        require ext_code.size(address(_33285))
                        call address(_33285).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _33303 + (32 * _33319) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33549 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33565 = mem[_33549]
                        require mem[_33549] <= test266151307()
                        require _33549 + mem[_33549] + 31 < _33549 + return_data.size
                        _33581 = mem[_33549 + mem[_33549]]
                        if mem[_33549 + mem[_33549]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_33549 + mem[_33549]]) + 1 < 0 or _33549 + ceil32(return_data.size) + ceil32(32 * mem[_33549 + mem[_33549]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _33549 + ceil32(return_data.size) + ceil32(32 * mem[_33549 + mem[_33549]]) + 1
                        mem[_33549 + ceil32(return_data.size)] = _33581
                        require _33565 + (32 * _33581) + 32 <= return_data.size
                        t = _33549 + ceil32(return_data.size) + 32
                        s = _33549 + _33565 + 32
                        while s < _33549 + _33565 + (32 * _33581) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33775 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_33775]
                    else:
                        mem[mem[64] + 4] = _32965
                        mem[mem[64] + 36] = _33017
                        require ext_code.size(address(_32964))
                        call address(_32964).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _32965, _33017
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _33017
                        emit Earn(_33017);
                        _33096 = mem[_1451 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_33096))
                        staticcall address(_33096).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33147 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1451 + 96] = mem[_33147]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33252 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33270 = mem[_33252]
                        _33286 = mem[_1451]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _33304 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _33270
                        mem[mem[64] + 36] = 128
                        _33320 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _33320:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_33304 + 68] = this.address
                        mem[_33304 + 100] = block.timestamp + 60
                        require ext_code.size(address(_33286))
                        call address(_33286).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _33304 + (32 * _33320) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33550 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33566 = mem[_33550]
                        require mem[_33550] <= test266151307()
                        require _33550 + mem[_33550] + 31 < _33550 + return_data.size
                        _33582 = mem[_33550 + mem[_33550]]
                        if mem[_33550 + mem[_33550]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_33550 + mem[_33550]]) + 1 < 0 or _33550 + ceil32(return_data.size) + ceil32(32 * mem[_33550 + mem[_33550]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _33550 + ceil32(return_data.size) + ceil32(32 * mem[_33550 + mem[_33550]]) + 1
                        mem[_33550 + ceil32(return_data.size)] = _33582
                        require _33566 + (32 * _33582) + 32 <= return_data.size
                        t = _33550 + ceil32(return_data.size) + 32
                        s = _33550 + _33566 + 32
                        while s < _33550 + _33566 + (32 * _33582) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33776 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_33776]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _1451
            s = _6935 - (100 * _6935 / 10000)
            s = stor9[idx].field_0
            continue 
        _1455 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1455] = 0
        mem[_1455 + 32] = 0
        mem[_1455 + 64] = 0
        mem[_1455 + 96] = 0
        mem[_1455 + 128] = 0
        mem[_1455 + 160] = 0
        mem[_1455 + 192] = 0
        mem[_1455 + 224] = 0
        _1463 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_1463 + 32 len 64] = call.data[calldata.size len 64]
        idx = 0
        s = 96
        t = 0
        u = 0
        v = 0
        v = _1455
        v = 0
        v = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _3640 = mem[64]
            mem[64] = mem[64] + 256
            mem[_3640] = strategyInfo[stor9[idx].field_0].field_0
            mem[_3640 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_3640 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_3640 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_3640 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_3640 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_3640 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_3640 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3674 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _3688 = mem[_3674]
                if not mem[_3674]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    t = t
                    u = u
                    v = mem[_3674]
                    v = _3640
                    v = stor9[idx].field_0
                    v = v
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3749 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _3774 = mem[_3749]
                require mem[_3749] == mem[_3749 + 18 len 14]
                _3788 = mem[_3749 + 32]
                require mem[_3749 + 32] == mem[_3749 + 50 len 14]
                require mem[_3749 + 64] == mem[_3749 + 92 len 4]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3816 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3833 = mem[_3816]
                if _3688 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not mem[_3816]:
                    revert with 0, 18
                if 10^12 * _3688 / mem[_3816] and Mask(112, 0, _3774) > -1 / 10^12 * _3688 / mem[_3816]:
                    revert with 0, 17
                if 10^12 * _3688 / mem[_3816] and Mask(112, 0, _3788) > -1 / 10^12 * _3688 / mem[_3816]:
                    revert with 0, 17
                if 1 >= mem[_1463]:
                    revert with 0, 50
                mem[_1463 + 64] = stor21
                if 0 >= mem[_1463]:
                    revert with 0, 50
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    mem[_1463 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                    _4046 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3688 / _3833 * Mask(112, 0, _3788) / 10^12
                    mem[mem[64] + 36] = 64
                    _4080 = mem[_1463]
                    mem[mem[64] + 68] = mem[_1463]
                    s = 0
                    t = _1463 + 32
                    u = mem[64] + 100
                    while s < _4080:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _4046 + (32 * _4080) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6980 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7005 = mem[_6980]
                    require mem[_6980] <= test266151307()
                    require _6980 + mem[_6980] + 31 < _6980 + return_data.size
                    _7030 = mem[_6980 + mem[_6980]]
                    if mem[_6980 + mem[_6980]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6980 + mem[_6980]]) + 1 < 0 or _6980 + ceil32(return_data.size) + ceil32(32 * mem[_6980 + mem[_6980]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6980 + ceil32(return_data.size) + ceil32(32 * mem[_6980 + mem[_6980]]) + 1
                    mem[_6980 + ceil32(return_data.size)] = _7030
                    require _7005 + (32 * _7030) + 32 <= return_data.size
                    t = _6980 + ceil32(return_data.size) + 32
                    s = _6980 + _7005 + 32
                    while s < _6980 + _7005 + (32 * _7030) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7030:
                        revert with 0, 50
                    _10660 = mem[_6980 + ceil32(return_data.size) + 64]
                    if 10^12 * _3688 / _3833 * Mask(112, 0, _3774) / 10^12 > !mem[_6980 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3640 + 128] = (10^12 * _3688 / _3833 * Mask(112, 0, _3774) / 10^12) + mem[_6980 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3688 / _3833 * Mask(112, 0, _3774) / 10^12) + _10660):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _6980 + ceil32(return_data.size)
                    t = 10^12 * _3688 / _3833 * Mask(112, 0, _3788) / 10^12
                    u = 10^12 * _3688 / _3833 * Mask(112, 0, _3774) / 10^12
                    v = _3688
                    v = _3640
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3688 / _3833 * Mask(112, 0, _3774) / 10^12) + _10660
                    continue 
                mem[_1463 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                    _4069 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3688 / _3833 * Mask(112, 0, _3774) / 10^12
                    mem[mem[64] + 36] = 64
                    _4095 = mem[_1463]
                    mem[mem[64] + 68] = mem[_1463]
                    s = 0
                    t = _1463 + 32
                    u = mem[64] + 100
                    while s < _4095:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _4069 + (32 * _4095) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6979 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7004 = mem[_6979]
                    require mem[_6979] <= test266151307()
                    require _6979 + mem[_6979] + 31 < _6979 + return_data.size
                    _7029 = mem[_6979 + mem[_6979]]
                    if mem[_6979 + mem[_6979]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6979 + mem[_6979]]) + 1 < 0 or _6979 + ceil32(return_data.size) + ceil32(32 * mem[_6979 + mem[_6979]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6979 + ceil32(return_data.size) + ceil32(32 * mem[_6979 + mem[_6979]]) + 1
                    mem[_6979 + ceil32(return_data.size)] = _7029
                    require _7004 + (32 * _7029) + 32 <= return_data.size
                    t = _6979 + ceil32(return_data.size) + 32
                    s = _6979 + _7004 + 32
                    while s < _6979 + _7004 + (32 * _7029) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7029:
                        revert with 0, 50
                    _10659 = mem[_6979 + ceil32(return_data.size) + 64]
                    if 10^12 * _3688 / _3833 * Mask(112, 0, _3788) / 10^12 > !mem[_6979 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3640 + 128] = (10^12 * _3688 / _3833 * Mask(112, 0, _3788) / 10^12) + mem[_6979 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3688 / _3833 * Mask(112, 0, _3788) / 10^12) + _10659):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _6979 + ceil32(return_data.size)
                    t = 10^12 * _3688 / _3833 * Mask(112, 0, _3788) / 10^12
                    u = 10^12 * _3688 / _3833 * Mask(112, 0, _3774) / 10^12
                    v = _3688
                    v = _3640
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3688 / _3833 * Mask(112, 0, _3788) / 10^12) + _10659
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4100 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4111 = mem[_4100]
                mem[mem[64] + 4] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4190 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4229 = mem[_4190]
                if mem[_4190] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _4111:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4398 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4432 = mem[_4398]
                if 10^12 * _4229 / _4111 and mem[_4398] > -1 / 10^12 * _4229 / _4111:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _4229 / _4111 * _4432 / 10^12
                mem[mem[64] + 36] = 64
                _4577 = mem[_1463]
                mem[mem[64] + 68] = mem[_1463]
                t = 0
                u = _1463 + 32
                w = mem[64] + 100
                while t < _4577:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _4229 / _4111 * _4432 / 10^12, 64, mem[mem[64] + 68 len (32 * _4577) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6978 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7003 = mem[_6978]
                require mem[_6978] <= test266151307()
                require _6978 + mem[_6978] + 31 < _6978 + return_data.size
                _7028 = mem[_6978 + mem[_6978]]
                if mem[_6978 + mem[_6978]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6978 + mem[_6978]]) + 1 < 0 or _6978 + ceil32(return_data.size) + ceil32(32 * mem[_6978 + mem[_6978]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6978 + ceil32(return_data.size) + ceil32(32 * mem[_6978 + mem[_6978]]) + 1
                mem[_6978 + ceil32(return_data.size)] = _7028
                require _7003 + (32 * _7028) + 32 <= return_data.size
                u = _6978 + ceil32(return_data.size) + 32
                t = _6978 + _7003 + 32
                while t < _6978 + _7003 + (32 * _7028) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _7028:
                    revert with 0, 50
                _10658 = mem[_6978 + ceil32(return_data.size) + 64]
                mem[_3640 + 128] = mem[_6978 + ceil32(return_data.size) + 64]
                if v > !_10658:
                    revert with 0, 17
                if 0 >= mem[_1463]:
                    revert with 0, 50
                mem[_1463 + 32] = mem[_3640 + 236 len 20]
                _10714 = mem[_3640 + 224]
                _10715 = mem[_3640]
                require ext_code.size(mem[_3640 + 236 len 20])
                staticcall mem[_3640 + 236 len 20].0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10745 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10762 = mem[_10745]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_10714))
                staticcall address(_10714).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10789 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10820 = mem[_10789]
                if mem[_10789] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _10762:
                    revert with 0, 18
                mem[mem[64] + 4] = address(_10715)
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args address(_10715)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10968 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10999 = mem[_10968]
                if 10^12 * _10820 / _10762 and mem[_10968] > -1 / 10^12 * _10820 / _10762:
                    revert with 0, 17
                _11118 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _10820 / _10762 * _10999 / 10^12
                mem[mem[64] + 36] = 64
                _11145 = mem[_1463]
                mem[mem[64] + 68] = mem[_1463]
                t = 0
                u = _1463 + 32
                w = mem[64] + 100
                while t < _11145:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(address(_10715))
                staticcall address(_10715).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _11118 + (32 * _11145) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14577 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _14591 = mem[_14577]
                require mem[_14577] <= test266151307()
                require _14577 + mem[_14577] + 31 < _14577 + return_data.size
                _14613 = mem[_14577 + mem[_14577]]
                if mem[_14577 + mem[_14577]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_14577 + mem[_14577]]) + 1 < 0 or _14577 + ceil32(return_data.size) + ceil32(32 * mem[_14577 + mem[_14577]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _14577 + ceil32(return_data.size) + ceil32(32 * mem[_14577 + mem[_14577]]) + 1
                mem[_14577 + ceil32(return_data.size)] = _14613
                require _14591 + (32 * _14613) + 32 <= return_data.size
                u = _14577 + ceil32(return_data.size) + 32
                t = _14577 + _14591 + 32
                while t < _14577 + _14591 + (32 * _14613) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _14613:
                    revert with 0, 50
                if mem[_3640 + 128] > !mem[_14577 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3640 + 128] = mem[_3640 + 128] + mem[_14577 + ceil32(return_data.size) + 64]
                if v + _10658 > !mem[_3640 + 128]:
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = 10^12 * _3688 / _3833 * Mask(112, 0, _3788) / 10^12
                u = 10^12 * _3688 / _3833 * Mask(112, 0, _3774) / 10^12
                v = _3688
                v = _3640
                v = stor9[idx].field_0
                v = v + _10658 + mem[_3640 + 128]
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3673 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _3687 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_3687] = mem[_3673]
            mem[_3687 + 32] = mem[_3673 + 32]
            mem[_3687 + 64] = mem[_3673 + 64]
            require return_data.size - 96 >= 96
            _3717 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3717] = mem[_3673 + 96]
            mem[_3717 + 32] = mem[_3673 + 128]
            mem[_3717 + 64] = mem[_3673 + 160]
            mem[_3687 + 96] = _3717
            mem[_3687 + 128] = mem[_3673 + 192]
            require return_data.size - 224 >= 96
            _3743 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3743] = mem[_3673 + 224]
            mem[_3743 + 32] = mem[_3673 + 256]
            mem[_3743 + 64] = mem[_3673 + 288]
            mem[_3687 + 160] = _3743
            _3763 = mem[_3687 + 64]
            if not mem[_3687 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_3687 + 64]
                v = _3640
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3798 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3801 = mem[_3798]
            require mem[_3798] == mem[_3798 + 18 len 14]
            _3825 = mem[_3798 + 32]
            require mem[_3798 + 32] == mem[_3798 + 50 len 14]
            require mem[_3798 + 64] == mem[_3798 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3901 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3930 = mem[_3901]
            if _3763 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_3901]:
                revert with 0, 18
            if 10^12 * _3763 / mem[_3901] and Mask(112, 0, _3801) > -1 / 10^12 * _3763 / mem[_3901]:
                revert with 0, 17
            if 10^12 * _3763 / mem[_3901] and Mask(112, 0, _3825) > -1 / 10^12 * _3763 / mem[_3901]:
                revert with 0, 17
            if 1 >= mem[_1463]:
                revert with 0, 50
            mem[_1463 + 64] = stor21
            if 0 >= mem[_1463]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_1463 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _4150 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3763 / _3930 * Mask(112, 0, _3825) / 10^12
                mem[mem[64] + 36] = 64
                _4219 = mem[_1463]
                mem[mem[64] + 68] = mem[_1463]
                s = 0
                t = _1463 + 32
                u = mem[64] + 100
                while s < _4219:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4150 + (32 * _4219) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6977 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7002 = mem[_6977]
                require mem[_6977] <= test266151307()
                require _6977 + mem[_6977] + 31 < _6977 + return_data.size
                _7027 = mem[_6977 + mem[_6977]]
                if mem[_6977 + mem[_6977]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6977 + mem[_6977]]) + 1 < 0 or _6977 + ceil32(return_data.size) + ceil32(32 * mem[_6977 + mem[_6977]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6977 + ceil32(return_data.size) + ceil32(32 * mem[_6977 + mem[_6977]]) + 1
                mem[_6977 + ceil32(return_data.size)] = _7027
                require _7002 + (32 * _7027) + 32 <= return_data.size
                t = _6977 + ceil32(return_data.size) + 32
                s = _6977 + _7002 + 32
                while s < _6977 + _7002 + (32 * _7027) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7027:
                    revert with 0, 50
                _10657 = mem[_6977 + ceil32(return_data.size) + 64]
                if 10^12 * _3763 / _3930 * Mask(112, 0, _3801) / 10^12 > !mem[_6977 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3640 + 128] = (10^12 * _3763 / _3930 * Mask(112, 0, _3801) / 10^12) + mem[_6977 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3763 / _3930 * Mask(112, 0, _3801) / 10^12) + _10657):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6977 + ceil32(return_data.size)
                t = 10^12 * _3763 / _3930 * Mask(112, 0, _3825) / 10^12
                u = 10^12 * _3763 / _3930 * Mask(112, 0, _3801) / 10^12
                v = _3763
                v = _3640
                v = stor9[idx].field_0
                v = v + (10^12 * _3763 / _3930 * Mask(112, 0, _3801) / 10^12) + _10657
                continue 
            mem[_1463 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _4189 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3763 / _3930 * Mask(112, 0, _3801) / 10^12
                mem[mem[64] + 36] = 64
                _4228 = mem[_1463]
                mem[mem[64] + 68] = mem[_1463]
                s = 0
                t = _1463 + 32
                w = mem[64] + 100
                while s < _4228:
                    mem[w] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4189 + (32 * _4228) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6976 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7001 = mem[_6976]
                require mem[_6976] <= test266151307()
                require _6976 + mem[_6976] + 31 < _6976 + return_data.size
                _7026 = mem[_6976 + mem[_6976]]
                if mem[_6976 + mem[_6976]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6976 + mem[_6976]]) + 1 < 0 or _6976 + ceil32(return_data.size) + ceil32(32 * mem[_6976 + mem[_6976]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6976 + ceil32(return_data.size) + ceil32(32 * mem[_6976 + mem[_6976]]) + 1
                mem[_6976 + ceil32(return_data.size)] = _7026
                require _7001 + (32 * _7026) + 32 <= return_data.size
                t = _6976 + ceil32(return_data.size) + 32
                s = _6976 + _7001 + 32
                while s < _6976 + _7001 + (32 * _7026) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7026:
                    revert with 0, 50
                _10656 = mem[_6976 + ceil32(return_data.size) + 64]
                if 10^12 * _3763 / _3930 * Mask(112, 0, _3825) / 10^12 > !mem[_6976 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3640 + 128] = (10^12 * _3763 / _3930 * Mask(112, 0, _3825) / 10^12) + mem[_6976 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3763 / _3930 * Mask(112, 0, _3825) / 10^12) + _10656):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6976 + ceil32(return_data.size)
                t = 10^12 * _3763 / _3930 * Mask(112, 0, _3825) / 10^12
                s = 10^12 * _3763 / _3930 * Mask(112, 0, _3801) / 10^12
                v = _3763
                v = _3640
                v = stor9[idx].field_0
                v = v + (10^12 * _3763 / _3930 * Mask(112, 0, _3825) / 10^12) + _10656
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4236 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4252 = mem[_4236]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4332 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4375 = mem[_4332]
            if mem[_4332] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4252:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4526 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4576 = mem[_4526]
            if 10^12 * _4375 / _4252 and mem[_4526] > -1 / 10^12 * _4375 / _4252:
                revert with 0, 17
            _4685 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4375 / _4252 * _4576 / 10^12
            mem[mem[64] + 36] = 64
            _4704 = mem[_1463]
            mem[mem[64] + 68] = mem[_1463]
            t = 0
            u = _1463 + 32
            w = mem[64] + 100
            while t < _4704:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4685 + (32 * _4704) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6975 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7000 = mem[_6975]
            require mem[_6975] <= test266151307()
            require _6975 + mem[_6975] + 31 < _6975 + return_data.size
            _7025 = mem[_6975 + mem[_6975]]
            if mem[_6975 + mem[_6975]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_6975 + mem[_6975]]) + 1 < 0 or _6975 + ceil32(return_data.size) + ceil32(32 * mem[_6975 + mem[_6975]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _6975 + ceil32(return_data.size) + ceil32(32 * mem[_6975 + mem[_6975]]) + 1
            mem[_6975 + ceil32(return_data.size)] = _7025
            require _7000 + (32 * _7025) + 32 <= return_data.size
            u = _6975 + ceil32(return_data.size) + 32
            t = _6975 + _7000 + 32
            while t < _6975 + _7000 + (32 * _7025) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7025:
                revert with 0, 50
            _10655 = mem[_6975 + ceil32(return_data.size) + 64]
            mem[_3640 + 128] = mem[_6975 + ceil32(return_data.size) + 64]
            if v > !_10655:
                revert with 0, 17
            if 0 >= mem[_1463]:
                revert with 0, 50
            mem[_1463 + 32] = mem[_3640 + 236 len 20]
            _10712 = mem[_3640 + 224]
            _10713 = mem[_3640]
            require ext_code.size(mem[_3640 + 236 len 20])
            staticcall mem[_3640 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10744 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10761 = mem[_10744]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_10712))
            staticcall address(_10712).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10788 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10819 = mem[_10788]
            if mem[_10788] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _10761:
                revert with 0, 18
            mem[mem[64] + 4] = address(_10713)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_10713)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10967 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10998 = mem[_10967]
            if 10^12 * _10819 / _10761 and mem[_10967] > -1 / 10^12 * _10819 / _10761:
                revert with 0, 17
            _11117 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _10819 / _10761 * _10998 / 10^12
            mem[mem[64] + 36] = 64
            _11144 = mem[_1463]
            mem[mem[64] + 68] = mem[_1463]
            t = 0
            u = _1463 + 32
            w = mem[64] + 100
            while t < _11144:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_10713))
            staticcall address(_10713).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _11117 + (32 * _11144) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14576 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _14590 = mem[_14576]
            require mem[_14576] <= test266151307()
            require _14576 + mem[_14576] + 31 < _14576 + return_data.size
            _14612 = mem[_14576 + mem[_14576]]
            if mem[_14576 + mem[_14576]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_14576 + mem[_14576]]) + 1 < 0 or _14576 + ceil32(return_data.size) + ceil32(32 * mem[_14576 + mem[_14576]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _14576 + ceil32(return_data.size) + ceil32(32 * mem[_14576 + mem[_14576]]) + 1
            mem[_14576 + ceil32(return_data.size)] = _14612
            require _14590 + (32 * _14612) + 32 <= return_data.size
            u = _14576 + ceil32(return_data.size) + 32
            t = _14576 + _14590 + 32
            while t < _14576 + _14590 + (32 * _14612) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _14612:
                revert with 0, 50
            if mem[_3640 + 128] > !mem[_14576 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3640 + 128] = mem[_3640 + 128] + mem[_14576 + ceil32(return_data.size) + 64]
            if v + _10655 > !mem[_3640 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _3763 / _3930 * Mask(112, 0, _3825) / 10^12
            u = 10^12 * _3763 / _3930 * Mask(112, 0, _3801) / 10^12
            v = _3763
            v = _3640
            v = stor9[idx].field_0
            v = v + _10655 + mem[_3640 + 128]
            continue 
        emit 0xf9ede3d1 
        require ext_code.size(arg1)
        staticcall arg1.0x83249ef9 with:
                gas gas_remaining wei
        mem[mem[64] len 192] = ext_call.return_data[0 len 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3671 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 192
        _3685 = mem[_3671]
        require mem[_3671] == mem[_3671 + 12 len 20]
        _3707 = mem[_3671 + 32]
        require mem[_3671 + 32] == mem[_3671 + 44 len 20]
        require mem[_3671 + 64] == mem[_3671 + 76 len 20]
        require mem[_3671 + 96] == mem[_3671 + 108 len 20]
        require mem[_3671 + 128] == mem[_3671 + 140 len 20]
        _3797 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3797] = 0
        mem[_3797 + 32] = 0
        mem[_3797 + 64] = 0
        mem[_3797 + 96] = 0
        mem[_3797 + 128] = 0
        mem[_3797 + 160] = 0
        mem[_3797 + 192] = 0
        mem[_3797 + 224] = 0
        idx = 0
        s = _3797
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _6919 = mem[64]
            mem[64] = mem[64] + 256
            mem[_6919] = strategyInfo[stor9[idx].field_0].field_0
            mem[_6919 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_6919 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_6919 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_6919 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_6919 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_6919 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_6919 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6974 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _6998 = mem[_6974]
                if idx >= stor9.length:
                    revert with 0, 50
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _7065 = mem[64]
                mem[64] = mem[64] + 256
                mem[_7065] = strategyInfo[stor9[idx].field_0].field_0
                mem[_7065 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_7065 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_7065 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_7065 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_7065 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_7065 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_7065 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _6998
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _6998
                else:
                    mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                    mem[mem[64] + 36] = _6998
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                         gas gas_remaining wei
                        args strategyInfo[stor9[idx].field_0].field_512, _6998
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6919
                s = _6998
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6973 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _6997 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_6997] = mem[_6973]
            mem[_6997 + 32] = mem[_6973 + 32]
            mem[_6997 + 64] = mem[_6973 + 64]
            require return_data.size - 96 >= 96
            _7038 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7038] = mem[_6973 + 96]
            mem[_7038 + 32] = mem[_6973 + 128]
            mem[_7038 + 64] = mem[_6973 + 160]
            mem[_6997 + 96] = _7038
            mem[_6997 + 128] = mem[_6973 + 192]
            require return_data.size - 224 >= 96
            _7088 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7088] = mem[_6973 + 224]
            mem[_7088 + 32] = mem[_6973 + 256]
            mem[_7088 + 64] = mem[_6973 + 288]
            mem[_6997 + 160] = _7088
            _7125 = mem[_6997 + 64]
            if idx >= stor9.length:
                revert with 0, 50
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _7184 = mem[64]
            mem[64] = mem[64] + 256
            mem[_7184] = strategyInfo[stor9[idx].field_0].field_0
            mem[_7184 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_7184 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_7184 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_7184 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_7184 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_7184 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_7184 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7125
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _7125
            else:
                mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _7125
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _7125
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _6919
            s = _7125
            continue 
        idx = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _10654 = mem[64]
            mem[64] = mem[64] + 256
            mem[_10654] = strategyInfo[stor9[idx].field_0].field_0
            mem[_10654 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_10654 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_10654 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_10654 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_10654 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_10654 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_10654 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10692 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10711 = mem[_10692]
            if mem[_10692]:
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 36] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64] + 68] = _10711
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = 0
                mem[mem[64] + 164] = this.address
                mem[mem[64] + 196] = block.timestamp + 60
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                call strategyInfo[stor9[idx].field_0].field_0.removeLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, address arg6, uint256 arg7) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_1536, strategyInfo[stor9[idx].field_0].field_1792, _10711, 0, 0, address(this.address), block.timestamp + 60
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _10845 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_10845 + 32 len 64] = call.data[calldata.size len 64]
                if 1 >= mem[_10845]:
                    revert with 0, 50
                mem[_10845 + 64] = stor21
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                                gas gas_remaining wei
                        mem[_10845 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_10845 + ceil32(return_data.size) + 96] = 2
                        mem[_10845 + ceil32(return_data.size) + 128] = address(ext_call.return_data[0])
                        mem[_10845 + ceil32(return_data.size) + 160] = stor21
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_10845 + ceil32(return_data.size) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_10845 + (2 * ceil32(return_data.size)) + 196] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_10845 + (2 * ceil32(return_data.size)) + 196 len ceil32(return_data.size) + 32]
                        mem[_10845 + (2 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_10845 + (4 * ceil32(return_data.size)) + 196] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_10845 + (4 * ceil32(return_data.size)) + 196 len (5 * ceil32(return_data.size)) + 32]
                        mem[_10845 + (4 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_10845 + (6 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_10845 + (6 * ceil32(return_data.size)) + 196] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_10845 + (6 * ceil32(return_data.size)) + 228] = 64
                        mem[_10845 + (6 * ceil32(return_data.size)) + 260] = 2
                        s = 0
                        t = _10845 + ceil32(return_data.size) + 128
                        u = _10845 + (6 * ceil32(return_data.size)) + 292
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, Array(len=2, data=mem[_10845 + (6 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_10845 + (6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _10845 + (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _14587 = mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _10845 + (6 * ceil32(return_data.size)) + mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 223 < _10845 + (6 * ceil32(return_data.size)) + return_data.size + 192
                        _14609 = mem[_10845 + (6 * ceil32(return_data.size)) + mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]
                        if mem[_10845 + (6 * ceil32(return_data.size)) + mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10845 + (6 * ceil32(return_data.size)) + mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 1 < 0 or _10845 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_10845 + (6 * ceil32(return_data.size)) + mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193 > test266151307():
                            revert with 0, 65
                        mem[64] = _10845 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_10845 + (6 * ceil32(return_data.size)) + mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193
                        mem[_10845 + (7 * ceil32(return_data.size)) + 192] = mem[_10845 + (6 * ceil32(return_data.size)) + mem[_10845 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]
                        require _14587 + (32 * _14609) + 32 <= return_data.size
                        t = _10845 + (7 * ceil32(return_data.size)) + 224
                        s = _10845 + (6 * ceil32(return_data.size)) + _14587 + 224
                        while s < _10845 + (6 * ceil32(return_data.size)) + _14587 + (32 * _14609) + 224:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14609:
                            revert with 0, 50
                        _18265 = mem[_10845 + (7 * ceil32(return_data.size)) + 256]
                        if mem[_10845 + (7 * ceil32(return_data.size)) + 256] and 1 > -1 / mem[_10845 + (7 * ceil32(return_data.size)) + 256]:
                            revert with 0, 17
                        if mem[_10845 + (7 * ceil32(return_data.size)) + 256] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_10845 + (7 * ceil32(return_data.size)) + 256] < 100 * mem[_10845 + (7 * ceil32(return_data.size)) + 256] / 10000:
                            revert with 0, 17
                        _18469 = mem[_10654]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18567 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18593 = mem[_18567]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _18593
                        mem[mem[64] + 36] = _18265 - (100 * _18265 / 10000)
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        s = 0
                        t = _10845 + ceil32(return_data.size) + 128
                        u = mem[64] + 196
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_18469))
                        call address(_18469).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _18593, _18265 - (100 * _18265 / 10000), Array(len=2, data=mem[mem[64] + 196 len 64]), address(this.address), block.timestamp + 60
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21487 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _21513 = mem[_21487]
                        require mem[_21487] <= test266151307()
                        require _21487 + mem[_21487] + 31 < _21487 + return_data.size
                        _21539 = mem[_21487 + mem[_21487]]
                        if mem[_21487 + mem[_21487]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_21487 + mem[_21487]]) + 1 < 0 or _21487 + ceil32(return_data.size) + ceil32(32 * mem[_21487 + mem[_21487]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _21487 + ceil32(return_data.size) + ceil32(32 * mem[_21487 + mem[_21487]]) + 1
                        mem[_21487 + ceil32(return_data.size)] = _21539
                        require _21513 + (32 * _21539) + 32 <= return_data.size
                        t = _21487 + ceil32(return_data.size) + 32
                        s = _21487 + _21513 + 32
                        while s < _21487 + _21513 + (32 * _21539) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_10845]:
                            revert with 0, 50
                        mem[_10845 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[_10845 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_10845 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_10845 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_10845 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[_10845 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _10845 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_10845 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_10845 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_10845 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_10845 + (4 * ceil32(return_data.size)) + 164] = mem[_10845]
                        s = 0
                        t = _10845 + 32
                        u = _10845 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_10845]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_10845 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_10845]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_10845 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _10845 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _14588 = mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _10845 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _14610 = mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _10845 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _10845 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_10845 + (6 * ceil32(return_data.size)) + 96] = mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _14588 + (32 * _14610) + 32 <= return_data.size
                        t = _10845 + (6 * ceil32(return_data.size)) + 128
                        s = _10845 + (4 * ceil32(return_data.size)) + _14588 + 128
                        while s < _10845 + (4 * ceil32(return_data.size)) + _14588 + (32 * _14610) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14610:
                            revert with 0, 50
                        _18266 = mem[_10845 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_10845 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_10845 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_10845 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_10845 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_10845 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18568 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18594 = mem[_18568]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _18626 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _18594
                        mem[mem[64] + 36] = _18266 - (100 * _18266 / 10000)
                        mem[mem[64] + 68] = 160
                        _18668 = mem[_10845]
                        mem[mem[64] + 164] = mem[_10845]
                        s = 0
                        t = _10845 + 32
                        u = mem[64] + 196
                        while s < _18668:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18626 + 100] = this.address
                        mem[_18626 + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18626 + (32 * _18668) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21488 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _21514 = mem[_21488]
                        require mem[_21488] <= test266151307()
                        require _21488 + mem[_21488] + 31 < _21488 + return_data.size
                        _21540 = mem[_21488 + mem[_21488]]
                        if mem[_21488 + mem[_21488]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_21488 + mem[_21488]]) + 1 < 0 or _21488 + ceil32(return_data.size) + ceil32(32 * mem[_21488 + mem[_21488]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _21488 + ceil32(return_data.size) + ceil32(32 * mem[_21488 + mem[_21488]]) + 1
                        mem[_21488 + ceil32(return_data.size)] = _21540
                        require _21514 + (32 * _21540) + 32 <= return_data.size
                        t = _21488 + ceil32(return_data.size) + 32
                        s = _21488 + _21514 + 32
                        while s < _21488 + _21514 + (32 * _21540) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_10654 + 172 len 20])
                        staticcall mem[_10654 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24445 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24472 = mem[_24445]
                        require mem[_24445] == mem[_24445 + 12 len 20]
                        _24510 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_24510]:
                            revert with 0, 50
                        mem[_24510 + 32] = address(_24472)
                        if 1 >= mem[_24510]:
                            revert with 0, 50
                        mem[_24510 + 64] = stor21
                        _24541 = mem[_10654]
                        require ext_code.size(address(_24472))
                        staticcall address(_24472).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_24510 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_24510 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_24472))
                        staticcall address(_24472).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_24510 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_24510 + (2 * ceil32(return_data.size)) + 100] = address(_24541)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_24541)
                        mem[_24510 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _24510 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_24510 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_24510 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_24510 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_24510 + (4 * ceil32(return_data.size)) + 164] = mem[_24510]
                        s = 0
                        t = _24510 + 32
                        u = _24510 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_24510]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_24541))
                        staticcall address(_24541).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_24510 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_24510]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_24510 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _24510 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _27176 = mem[_24510 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_24510 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _24510 + (4 * ceil32(return_data.size)) + mem[_24510 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _24510 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _27200 = mem[_24510 + (4 * ceil32(return_data.size)) + mem[_24510 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_24510 + (4 * ceil32(return_data.size)) + mem[_24510 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24510 + (4 * ceil32(return_data.size)) + mem[_24510 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _24510 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_24510 + (4 * ceil32(return_data.size)) + mem[_24510 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _24510 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_24510 + (4 * ceil32(return_data.size)) + mem[_24510 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_24510 + (6 * ceil32(return_data.size)) + 96] = _27200
                        require _27176 + (32 * _27200) + 32 <= return_data.size
                        t = _24510 + (6 * ceil32(return_data.size)) + 128
                        s = _24510 + (4 * ceil32(return_data.size)) + _27176 + 128
                        while s < _24510 + (4 * ceil32(return_data.size)) + _27176 + (32 * _27200) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27200:
                            revert with 0, 50
                        _29532 = mem[_24510 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_24510 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_24510 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_24510 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_24510 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_24510 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        _29775 = mem[_10654]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24472))
                        staticcall address(_24472).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29881 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29921 = mem[_29881]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _29964 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _29921
                        mem[mem[64] + 36] = _29532 - (100 * _29532 / 10000)
                        mem[mem[64] + 68] = 160
                        _29988 = mem[_24510]
                        mem[mem[64] + 164] = mem[_24510]
                        s = 0
                        t = _24510 + 32
                        u = mem[64] + 196
                        while s < _29988:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_29964 + 100] = this.address
                        mem[_29964 + 132] = block.timestamp + 60
                        require ext_code.size(address(_29775))
                        call address(_29775).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _29964 + (32 * _29988) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31024 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _31064 = mem[_31024]
                        require mem[_31024] <= test266151307()
                        require _31024 + mem[_31024] + 31 < _31024 + return_data.size
                        _31104 = mem[_31024 + mem[_31024]]
                        if mem[_31024 + mem[_31024]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_31024 + mem[_31024]]) + 1 < 0 or _31024 + ceil32(return_data.size) + ceil32(32 * mem[_31024 + mem[_31024]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _31024 + ceil32(return_data.size) + ceil32(32 * mem[_31024 + mem[_31024]]) + 1
                        mem[_31024 + ceil32(return_data.size)] = _31104
                        require _31064 + (32 * _31104) + 32 <= return_data.size
                        t = _31024 + ceil32(return_data.size) + 32
                        s = _31024 + _31064 + 32
                        while s < _31024 + _31064 + (32 * _31104) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                else:
                    if 0 >= mem[_10845]:
                        revert with 0, 50
                    mem[_10845 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                            gas gas_remaining wei
                    mem[_10845 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_10845 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_10845 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not ext_call.return_data[0]:
                        revert with 0, 18
                    mem[_10845 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[_10845 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _10845 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[_10845 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_10845 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                    mem[_10845 + (4 * ceil32(return_data.size)) + 132] = 64
                    mem[_10845 + (4 * ceil32(return_data.size)) + 164] = mem[_10845]
                    s = 0
                    t = _10845 + 32
                    u = _10845 + (4 * ceil32(return_data.size)) + 196
                    while s < mem[_10845]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_10845 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_10845]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_10845 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _10845 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _14589 = mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                    require mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                    require _10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _10845 + (4 * ceil32(return_data.size)) + return_data.size + 96
                    _14611 = mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                    if mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _10845 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _10845 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                    mem[_10845 + (6 * ceil32(return_data.size)) + 96] = mem[_10845 + (4 * ceil32(return_data.size)) + mem[_10845 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                    require _14589 + (32 * _14611) + 32 <= return_data.size
                    t = _10845 + (6 * ceil32(return_data.size)) + 128
                    s = _10845 + (4 * ceil32(return_data.size)) + _14589 + 128
                    while s < _10845 + (4 * ceil32(return_data.size)) + _14589 + (32 * _14611) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _14611:
                        revert with 0, 50
                    _18267 = mem[_10845 + (6 * ceil32(return_data.size)) + 160]
                    if mem[_10845 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_10845 + (6 * ceil32(return_data.size)) + 160]:
                        revert with 0, 17
                    if mem[_10845 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if mem[_10845 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_10845 + (6 * ceil32(return_data.size)) + 160] / 10000:
                        revert with 0, 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18569 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _18595 = mem[_18569]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _18627 = mem[64]
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _18595
                    mem[mem[64] + 36] = _18267 - (100 * _18267 / 10000)
                    mem[mem[64] + 68] = 160
                    _18669 = mem[_10845]
                    mem[mem[64] + 164] = mem[_10845]
                    s = 0
                    t = _10845 + 32
                    u = mem[64] + 196
                    while s < _18669:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_18627 + 100] = this.address
                    mem[_18627 + 132] = block.timestamp + 60
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _18627 + (32 * _18669) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _21489 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _21515 = mem[_21489]
                    require mem[_21489] <= test266151307()
                    require _21489 + mem[_21489] + 31 < _21489 + return_data.size
                    _21541 = mem[_21489 + mem[_21489]]
                    if mem[_21489 + mem[_21489]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_21489 + mem[_21489]]) + 1 < 0 or _21489 + ceil32(return_data.size) + ceil32(32 * mem[_21489 + mem[_21489]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _21489 + ceil32(return_data.size) + ceil32(32 * mem[_21489 + mem[_21489]]) + 1
                    mem[_21489 + ceil32(return_data.size)] = _21541
                    require _21515 + (32 * _21541) + 32 <= return_data.size
                    t = _21489 + ceil32(return_data.size) + 32
                    s = _21489 + _21515 + 32
                    while s < _21489 + _21515 + (32 * _21541) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(mem[_10654 + 172 len 20])
                        staticcall mem[_10654 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24449 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24475 = mem[_24449]
                        require mem[_24449] == mem[_24449 + 12 len 20]
                        _24519 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_24519]:
                            revert with 0, 50
                        mem[_24519 + 32] = address(_24475)
                        if 1 >= mem[_24519]:
                            revert with 0, 50
                        mem[_24519 + 64] = stor21
                        _24550 = mem[_10654]
                        require ext_code.size(address(_24475))
                        staticcall address(_24475).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_24519 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_24519 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_24475))
                        staticcall address(_24475).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_24519 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_24519 + (2 * ceil32(return_data.size)) + 100] = address(_24550)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_24550)
                        mem[_24519 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _24519 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_24519 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_24519 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_24519 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_24519 + (4 * ceil32(return_data.size)) + 164] = mem[_24519]
                        s = 0
                        t = _24519 + 32
                        u = _24519 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_24519]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_24550))
                        staticcall address(_24550).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _24519 + (4 * ceil32(return_data.size)) + (32 * mem[_24519]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27145 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27177 = mem[_27145]
                        require mem[_27145] <= test266151307()
                        require _27145 + mem[_27145] + 31 < _27145 + return_data.size
                        _27201 = mem[_27145 + mem[_27145]]
                        if mem[_27145 + mem[_27145]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27145 + mem[_27145]]) + 1 < 0 or _27145 + ceil32(return_data.size) + ceil32(32 * mem[_27145 + mem[_27145]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27145 + ceil32(return_data.size) + ceil32(32 * mem[_27145 + mem[_27145]]) + 1
                        mem[_27145 + ceil32(return_data.size)] = _27201
                        require _27177 + (32 * _27201) + 32 <= return_data.size
                        t = _27145 + ceil32(return_data.size) + 32
                        s = _27145 + _27177 + 32
                        while s < _27145 + _27177 + (32 * _27201) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27201:
                            revert with 0, 50
                        _29533 = mem[_27145 + ceil32(return_data.size) + 64]
                        if mem[_27145 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27145 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_27145 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_27145 + ceil32(return_data.size) + 64] < 100 * mem[_27145 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        _29776 = mem[_10654]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24475))
                        staticcall address(_24475).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29882 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29922 = mem[_29882]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _29965 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _29922
                        mem[mem[64] + 36] = _29533 - (100 * _29533 / 10000)
                        mem[mem[64] + 68] = 160
                        _29989 = mem[_24519]
                        mem[mem[64] + 164] = mem[_24519]
                        s = 0
                        t = _24519 + 32
                        u = mem[64] + 196
                        while s < _29989:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_29965 + 100] = this.address
                        mem[_29965 + 132] = block.timestamp + 60
                        require ext_code.size(address(_29776))
                        call address(_29776).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _29965 + (32 * _29989) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31025 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _31065 = mem[_31025]
                        require mem[_31025] <= test266151307()
                        require _31025 + mem[_31025] + 31 < _31025 + return_data.size
                        _31105 = mem[_31025 + mem[_31025]]
                        if mem[_31025 + mem[_31025]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_31025 + mem[_31025]]) + 1 < 0 or _31025 + ceil32(return_data.size) + ceil32(32 * mem[_31025 + mem[_31025]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _31025 + ceil32(return_data.size) + ceil32(32 * mem[_31025 + mem[_31025]]) + 1
                        mem[_31025 + ceil32(return_data.size)] = _31105
                        require _31065 + (32 * _31105) + 32 <= return_data.size
                        t = _31025 + ceil32(return_data.size) + 32
                        s = _31025 + _31065 + 32
                        while s < _31025 + _31065 + (32 * _31105) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_10845]:
                            revert with 0, 50
                        mem[_10845 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24450 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24476 = mem[_24450]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24512 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24543 = mem[_24512]
                        if mem[_24512] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not _24476:
                            revert with 0, 18
                        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24710 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24745 = mem[_24710]
                        if 10^12 * _24543 / _24476 and mem[_24710] > -1 / 10^12 * _24543 / _24476:
                            revert with 0, 17
                        _24851 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 10^12 * _24543 / _24476 * _24745 / 10^12
                        mem[mem[64] + 36] = 64
                        _24882 = mem[_10845]
                        mem[mem[64] + 68] = mem[_10845]
                        s = 0
                        t = _10845 + 32
                        u = mem[64] + 100
                        while s < _24882:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _24851 + (32 * _24882) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27146 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27178 = mem[_27146]
                        require mem[_27146] <= test266151307()
                        require _27146 + mem[_27146] + 31 < _27146 + return_data.size
                        _27202 = mem[_27146 + mem[_27146]]
                        if mem[_27146 + mem[_27146]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27146 + mem[_27146]]) + 1 < 0 or _27146 + ceil32(return_data.size) + ceil32(32 * mem[_27146 + mem[_27146]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27146 + ceil32(return_data.size) + ceil32(32 * mem[_27146 + mem[_27146]]) + 1
                        mem[_27146 + ceil32(return_data.size)] = _27202
                        require _27178 + (32 * _27202) + 32 <= return_data.size
                        t = _27146 + ceil32(return_data.size) + 32
                        s = _27146 + _27178 + 32
                        while s < _27146 + _27178 + (32 * _27202) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27202:
                            revert with 0, 50
                        _29534 = mem[_27146 + ceil32(return_data.size) + 64]
                        if mem[_27146 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27146 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_27146 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_27146 + ceil32(return_data.size) + 64] < 100 * mem[_27146 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29883 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29923 = mem[_29883]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _29966 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _29923
                        mem[mem[64] + 36] = _29534 - (100 * _29534 / 10000)
                        mem[mem[64] + 68] = 160
                        _29990 = mem[_10845]
                        mem[mem[64] + 164] = mem[_10845]
                        s = 0
                        t = _10845 + 32
                        u = mem[64] + 196
                        while s < _29990:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_29966 + 100] = this.address
                        mem[_29966 + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _29966 + (32 * _29990) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31026 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _31066 = mem[_31026]
                        require mem[_31026] <= test266151307()
                        require _31026 + mem[_31026] + 31 < _31026 + return_data.size
                        _31106 = mem[_31026 + mem[_31026]]
                        if mem[_31026 + mem[_31026]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_31026 + mem[_31026]]) + 1 < 0 or _31026 + ceil32(return_data.size) + ceil32(32 * mem[_31026 + mem[_31026]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _31026 + ceil32(return_data.size) + ceil32(32 * mem[_31026 + mem[_31026]]) + 1
                        mem[_31026 + ceil32(return_data.size)] = _31106
                        require _31066 + (32 * _31106) + 32 <= return_data.size
                        t = _31026 + ceil32(return_data.size) + 32
                        s = _31026 + _31066 + 32
                        while s < _31026 + _31066 + (32 * _31106) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_10654 + 172 len 20])
                        staticcall mem[_10654 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32039 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32051 = mem[_32039]
                        require mem[_32039] == mem[_32039 + 12 len 20]
                        _32065 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_32065]:
                            revert with 0, 50
                        mem[_32065 + 32] = address(_32051)
                        if 1 >= mem[_32065]:
                            revert with 0, 50
                        mem[_32065 + 64] = stor21
                        _32079 = mem[_10654]
                        require ext_code.size(address(_32051))
                        staticcall address(_32051).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_32065 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_32065 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_32051))
                        staticcall address(_32051).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_32065 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_32065 + (2 * ceil32(return_data.size)) + 100] = address(_32079)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_32079)
                        mem[_32065 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _32065 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_32065 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_32065 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_32065 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_32065 + (4 * ceil32(return_data.size)) + 164] = mem[_32065]
                        s = 0
                        t = _32065 + 32
                        u = _32065 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_32065]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_32079))
                        staticcall address(_32079).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _32065 + (4 * ceil32(return_data.size)) + (32 * mem[_32065]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32851 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32861 = mem[_32851]
                        require mem[_32851] <= test266151307()
                        require _32851 + mem[_32851] + 31 < _32851 + return_data.size
                        _32871 = mem[_32851 + mem[_32851]]
                        if mem[_32851 + mem[_32851]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_32851 + mem[_32851]]) + 1 < 0 or _32851 + ceil32(return_data.size) + ceil32(32 * mem[_32851 + mem[_32851]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _32851 + ceil32(return_data.size) + ceil32(32 * mem[_32851 + mem[_32851]]) + 1
                        mem[_32851 + ceil32(return_data.size)] = _32871
                        require _32861 + (32 * _32871) + 32 <= return_data.size
                        t = _32851 + ceil32(return_data.size) + 32
                        s = _32851 + _32861 + 32
                        while s < _32851 + _32861 + (32 * _32871) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _32871:
                            revert with 0, 50
                        _33529 = mem[_32851 + ceil32(return_data.size) + 64]
                        if mem[_32851 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_32851 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_32851 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_32851 + ceil32(return_data.size) + 64] < 100 * mem[_32851 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        _33627 = mem[_10654]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_32051))
                        staticcall address(_32051).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33665 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33683 = mem[_33665]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _33701 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _33683
                        mem[mem[64] + 36] = _33529 - (100 * _33529 / 10000)
                        mem[mem[64] + 68] = 160
                        _33703 = mem[_32065]
                        mem[mem[64] + 164] = mem[_32065]
                        s = 0
                        t = _32065 + 32
                        u = mem[64] + 196
                        while s < _33703:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_33701 + 100] = this.address
                        mem[_33701 + 132] = block.timestamp + 60
                        require ext_code.size(address(_33627))
                        call address(_33627).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _33701 + (32 * _33703) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33771 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33789 = mem[_33771]
                        require mem[_33771] <= test266151307()
                        require _33771 + mem[_33771] + 31 < _33771 + return_data.size
                        _33807 = mem[_33771 + mem[_33771]]
                        if mem[_33771 + mem[_33771]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_33771 + mem[_33771]]) + 1 < 0 or _33771 + ceil32(return_data.size) + ceil32(32 * mem[_33771 + mem[_33771]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _33771 + ceil32(return_data.size) + ceil32(32 * mem[_33771 + mem[_33771]]) + 1
                        mem[_33771 + ceil32(return_data.size)] = _33807
                        require _33789 + (32 * _33807) + 32 <= return_data.size
                        t = _33771 + ceil32(return_data.size) + 32
                        s = _33771 + _33789 + 32
                        while s < _33771 + _33789 + (32 * _33807) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        require ext_code.size(address(_3685))
        staticcall address(_3685).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _10677 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _10691 = mem[_10677]
        require mem[_10677] == mem[_10677 + 12 len 20]
        require ext_code.size(address(_3685))
        staticcall address(_3685).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _10759 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _10765 = mem[_10759]
        require mem[_10759] == mem[_10759 + 12 len 20]
        _10841 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        if not mem[_10841]:
            revert with 0, 50
        mem[_10841 + 32] = stor21
        if stor21 == address(_10765):
            if stor21 == address(_3707):
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require ext_code.size(address(_10765))
                call address(_10765).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10691), -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(address(_3707))
                call address(_3707).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10691), -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(address(_3685))
                staticcall address(_3685).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(_3685))
                call address(_3685).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if 1 >= mem[_10841]:
                    revert with 0, 50
                mem[_10841 + 64] = address(_3707)
                mem[_10841 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_10841 + 100] = eth.balance(this.address) / 2
                mem[_10841 + 132] = 64
                mem[_10841 + 164] = mem[_10841]
                idx = 0
                s = _10841 + 32
                t = _10841 + 196
                while idx < mem[_10841]:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(address(_10691))
                staticcall address(_10691).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _10841 + (32 * mem[_10841]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14571 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _14585 = mem[_14571]
                require mem[_14571] <= test266151307()
                require _14571 + mem[_14571] + 31 < _14571 + return_data.size
                _14607 = mem[_14571 + mem[_14571]]
                if mem[_14571 + mem[_14571]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_14571 + mem[_14571]]) + 1 < 0 or _14571 + ceil32(return_data.size) + ceil32(32 * mem[_14571 + mem[_14571]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _14571 + ceil32(return_data.size) + ceil32(32 * mem[_14571 + mem[_14571]]) + 1
                mem[_14571 + ceil32(return_data.size)] = _14607
                require _14585 + (32 * _14607) + 32 <= return_data.size
                mem[_14571 + ceil32(return_data.size) + 32 len ceil32(32 * _14607)] = mem[_14571 + _14585 + 32 len ceil32(32 * _14607)]
                if 1 >= _14607:
                    revert with 0, 50
                _18263 = mem[_14571 + ceil32(return_data.size) + 64]
                if mem[_14571 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14571 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_14571 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _14607:
                    revert with 0, 50
                _18449 = mem[_14571 + ceil32(return_data.size) + 64]
                if mem[_14571 + ceil32(return_data.size) + 64] < 100 * mem[_14571 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _18563 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _18449 - (100 * _18263 / 10000)
                mem[mem[64] + 36] = 128
                _18589 = mem[_10841]
                mem[mem[64] + 132] = mem[_10841]
                idx = 0
                s = _10841 + 32
                t = mem[64] + 164
                while idx < _18589:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_18563 + 68] = this.address
                mem[_18563 + 100] = block.timestamp + 60
                require ext_code.size(address(_10691))
                call address(_10691).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _18563 + (32 * _18589) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _21485 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _21511 = mem[_21485]
                require mem[_21485] <= test266151307()
                require _21485 + mem[_21485] + 31 < _21485 + return_data.size
                _21537 = mem[_21485 + mem[_21485]]
                if mem[_21485 + mem[_21485]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_21485 + mem[_21485]]) + 1 < 0 or _21485 + ceil32(return_data.size) + ceil32(32 * mem[_21485 + mem[_21485]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _21485 + ceil32(return_data.size) + ceil32(32 * mem[_21485 + mem[_21485]]) + 1
                mem[_21485 + ceil32(return_data.size)] = _21537
                require _21511 + (32 * _21537) + 32 <= return_data.size
                mem[_21485 + ceil32(return_data.size) + 32 len ceil32(32 * _21537)] = mem[_21485 + _21511 + 32 len ceil32(32 * _21537)]
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24409 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_24409] == mem[_24409 + 18 len 14]
                require mem[_24409 + 32] == mem[_24409 + 50 len 14]
                require mem[_24409 + 64] == mem[_24409 + 92 len 4]
                mem[mem[64] + 4] = address(_10691)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_10765))
                call address(_10765).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10691), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24587 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24587] == bool(mem[_24587])
                mem[mem[64] + 4] = address(_10691)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3707))
                call address(_3707).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10691), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24699 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24699] == bool(mem[_24699])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3685))
                staticcall address(_3685).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24831 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24863 = mem[_24831]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _24863
                require ext_code.size(address(_3685))
                call address(_3685).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _24863
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24949 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24949] == bool(mem[_24949])
        else:
            if 1 >= mem[_10841]:
                revert with 0, 50
            mem[_10841 + 64] = address(_10765)
            mem[_10841 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_10841 + 100] = eth.balance(this.address) / 2
            mem[_10841 + 132] = 64
            mem[_10841 + 164] = mem[_10841]
            idx = 0
            s = _10841 + 32
            t = _10841 + 196
            while idx < mem[_10841]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(_10691))
            staticcall address(_10691).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _10841 + (32 * mem[_10841]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14572 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _14586 = mem[_14572]
            require mem[_14572] <= test266151307()
            require _14572 + mem[_14572] + 31 < _14572 + return_data.size
            _14608 = mem[_14572 + mem[_14572]]
            if mem[_14572 + mem[_14572]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_14572 + mem[_14572]]) + 1 < 0 or _14572 + ceil32(return_data.size) + ceil32(32 * mem[_14572 + mem[_14572]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _14572 + ceil32(return_data.size) + ceil32(32 * mem[_14572 + mem[_14572]]) + 1
            mem[_14572 + ceil32(return_data.size)] = _14608
            require _14586 + (32 * _14608) + 32 <= return_data.size
            mem[_14572 + ceil32(return_data.size) + 32 len ceil32(32 * _14608)] = mem[_14572 + _14586 + 32 len ceil32(32 * _14608)]
            if 1 >= _14608:
                revert with 0, 50
            _18264 = mem[_14572 + ceil32(return_data.size) + 64]
            if mem[_14572 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14572 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_14572 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _14608:
                revert with 0, 50
            _18450 = mem[_14572 + ceil32(return_data.size) + 64]
            if mem[_14572 + ceil32(return_data.size) + 64] < 100 * mem[_14572 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _18564 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _18450 - (100 * _18264 / 10000)
            mem[mem[64] + 36] = 128
            _18590 = mem[_10841]
            mem[mem[64] + 132] = mem[_10841]
            idx = 0
            s = _10841 + 32
            t = mem[64] + 164
            while idx < _18590:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_18564 + 68] = this.address
            mem[_18564 + 100] = block.timestamp + 60
            require ext_code.size(address(_10691))
            call address(_10691).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _18564 + (32 * _18590) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _21486 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _21512 = mem[_21486]
            require mem[_21486] <= test266151307()
            require _21486 + mem[_21486] + 31 < _21486 + return_data.size
            _21538 = mem[_21486 + mem[_21486]]
            if mem[_21486 + mem[_21486]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_21486 + mem[_21486]]) + 1 < 0 or _21486 + ceil32(return_data.size) + ceil32(32 * mem[_21486 + mem[_21486]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _21486 + ceil32(return_data.size) + ceil32(32 * mem[_21486 + mem[_21486]]) + 1
            mem[_21486 + ceil32(return_data.size)] = _21538
            require _21512 + (32 * _21538) + 32 <= return_data.size
            mem[_21486 + ceil32(return_data.size) + 32 len ceil32(32 * _21538)] = mem[_21486 + _21512 + 32 len ceil32(32 * _21538)]
            if stor21 == address(_3707):
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24417 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_24417] == mem[_24417 + 18 len 14]
                require mem[_24417 + 32] == mem[_24417 + 50 len 14]
                require mem[_24417 + 64] == mem[_24417 + 92 len 4]
                mem[mem[64] + 4] = address(_10691)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_10765))
                call address(_10765).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10691), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24619 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24619] == bool(mem[_24619])
                mem[mem[64] + 4] = address(_10691)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3707))
                call address(_3707).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10691), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24707 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24707] == bool(mem[_24707])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3685))
                staticcall address(_3685).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24849 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24879 = mem[_24849]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _24879
                require ext_code.size(address(_3685))
                call address(_3685).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _24879
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24969 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24969] == bool(mem[_24969])
            else:
                if 1 >= mem[_10841]:
                    revert with 0, 50
                mem[_10841 + 64] = address(_3707)
                _24387 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _24418 = mem[_10841]
                mem[mem[64] + 68] = mem[_10841]
                idx = 0
                s = _10841 + 32
                t = mem[64] + 100
                while idx < _24418:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(address(_10691))
                staticcall address(_10691).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _24387 + (32 * _24418) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27143 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27175 = mem[_27143]
                require mem[_27143] <= test266151307()
                require _27143 + mem[_27143] + 31 < _27143 + return_data.size
                _27199 = mem[_27143 + mem[_27143]]
                if mem[_27143 + mem[_27143]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_27143 + mem[_27143]]) + 1 < 0 or _27143 + ceil32(return_data.size) + ceil32(32 * mem[_27143 + mem[_27143]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _27143 + ceil32(return_data.size) + ceil32(32 * mem[_27143 + mem[_27143]]) + 1
                mem[_27143 + ceil32(return_data.size)] = _27199
                require _27175 + (32 * _27199) + 32 <= return_data.size
                mem[_27143 + ceil32(return_data.size) + 32 len ceil32(32 * _27199)] = mem[_27143 + _27175 + 32 len ceil32(32 * _27199)]
                if 1 >= _27199:
                    revert with 0, 50
                _29531 = mem[_27143 + ceil32(return_data.size) + 64]
                if mem[_27143 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27143 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_27143 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _27199:
                    revert with 0, 50
                _29741 = mem[_27143 + ceil32(return_data.size) + 64]
                if mem[_27143 + ceil32(return_data.size) + 64] < 100 * mem[_27143 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _29879 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _29741 - (100 * _29531 / 10000)
                mem[mem[64] + 36] = 128
                _29919 = mem[_10841]
                mem[mem[64] + 132] = mem[_10841]
                idx = 0
                s = _10841 + 32
                t = mem[64] + 164
                while idx < _29919:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_29879 + 68] = this.address
                mem[_29879 + 100] = block.timestamp + 60
                require ext_code.size(address(_10691))
                call address(_10691).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _29879 + (32 * _29919) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31023 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _31063 = mem[_31023]
                require mem[_31023] <= test266151307()
                require _31023 + mem[_31023] + 31 < _31023 + return_data.size
                _31103 = mem[_31023 + mem[_31023]]
                if mem[_31023 + mem[_31023]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_31023 + mem[_31023]]) + 1 < 0 or _31023 + ceil32(return_data.size) + ceil32(32 * mem[_31023 + mem[_31023]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _31023 + ceil32(return_data.size) + ceil32(32 * mem[_31023 + mem[_31023]]) + 1
                mem[_31023 + ceil32(return_data.size)] = _31103
                require _31063 + (32 * _31103) + 32 <= return_data.size
                mem[_31023 + ceil32(return_data.size) + 32 len ceil32(32 * _31103)] = mem[_31023 + _31063 + 32 len ceil32(32 * _31103)]
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32025 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_32025] == mem[_32025 + 18 len 14]
                require mem[_32025 + 32] == mem[_32025 + 50 len 14]
                require mem[_32025 + 64] == mem[_32025 + 92 len 4]
                mem[mem[64] + 4] = address(_10691)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_10765))
                call address(_10765).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10691), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32105 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_32105] == bool(mem[_32105])
                mem[mem[64] + 4] = address(_10691)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3707))
                call address(_3707).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10691), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32137 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_32137] == bool(mem[_32137])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3685))
                staticcall address(_3685).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32181 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32191 = mem[_32181]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _32191
                require ext_code.size(address(_3685))
                call address(_3685).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _32191
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32227 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_32227] == bool(mem[_32227])
    else:
        if governmentAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: caller is not the owner or government'
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'The _contract can not be a zero address'
        mem[96] = 2
        mem[128 len 64] = call.data[calldata.size len 64]
        mem[64] = 448
        mem[192] = 0
        mem[224] = 0
        mem[256] = 0
        mem[288] = 0
        mem[320] = 0
        mem[352] = 0
        mem[384] = 0
        mem[416] = 0
        idx = 0
        s = 192
        s = 0
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1454 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1454] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1454 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1454 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1454 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1454 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1454 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1454 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1454 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1476 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1499 = mem[_1476]
                if not mem[_1476]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1454
                    s = mem[_1476]
                    s = stor9[idx].field_0
                    continue 
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _1542 = mem[64]
                mem[64] = mem[64] + 256
                mem[_1542] = strategyInfo[stor9[idx].field_0].field_0
                mem[_1542 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_1542 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_1542 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_1542 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_1542 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_1542 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_1542 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64] + 4] = _1499
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _1499
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1619 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1639 = mem[_1619]
                    require mem[_1619] == mem[_1619 + 12 len 20]
                    if 0 >= mem[96]:
                        revert with 0, 50
                    mem[128] = mem[_1619 + 12 len 20]
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = stor21
                    require ext_code.size(address(_1639))
                    staticcall address(_1639).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1719 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1741 = mem[_1719]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1639))
                    staticcall address(_1639).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1809 = mem[_1785]
                    if mem[_1785] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not _1741:
                        revert with 0, 18
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1897 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1907 = mem[_1897]
                    if 10^12 * _1809 / _1741 and mem[_1897] > -1 / 10^12 * _1809 / _1741:
                        revert with 0, 17
                    _1969 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _1809 / _1741 * _1907 / 10^12
                    mem[mem[64] + 36] = 64
                    _1999 = mem[96]
                    mem[mem[64] + 68] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 100
                    while s < _1999:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _1969 + (32 * _1999) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3683 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3699 = mem[_3683]
                    require mem[_3683] <= test266151307()
                    require _3683 + mem[_3683] + 31 < _3683 + return_data.size
                    _3715 = mem[_3683 + mem[_3683]]
                    if mem[_3683 + mem[_3683]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_3683 + mem[_3683]]) + 1 < 0 or _3683 + ceil32(return_data.size) + ceil32(32 * mem[_3683 + mem[_3683]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _3683 + ceil32(return_data.size) + ceil32(32 * mem[_3683 + mem[_3683]]) + 1
                    mem[_3683 + ceil32(return_data.size)] = _3715
                    require _3699 + (32 * _3715) + 32 <= return_data.size
                    t = _3683 + ceil32(return_data.size) + 32
                    s = _3683 + _3699 + 32
                    while s < _3683 + _3699 + (32 * _3715) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _3715:
                        revert with 0, 50
                    _6943 = mem[_3683 + ceil32(return_data.size) + 64]
                    if mem[_3683 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3683 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_3683 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if mem[_3683 + ceil32(return_data.size) + 64] < 100 * mem[_3683 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    _7121 = mem[_1454]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1639))
                    staticcall address(_1639).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7179 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7217 = mem[_7179]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _7259 = mem[64]
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7217
                    mem[mem[64] + 36] = _6943 - (100 * _6943 / 10000)
                    mem[mem[64] + 68] = 160
                    _7295 = mem[96]
                    mem[mem[64] + 164] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 196
                    while s < _7295:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7259 + 100] = this.address
                    mem[_7259 + 132] = block.timestamp + 60
                    require ext_code.size(address(_7121))
                    call address(_7121).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _7259 + (32 * _7295) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10689 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10709 = mem[_10689]
                    require mem[_10689] <= test266151307()
                    require _10689 + mem[_10689] + 31 < _10689 + return_data.size
                    _10735 = mem[_10689 + mem[_10689]]
                    if mem[_10689 + mem[_10689]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10689 + mem[_10689]]) + 1 < 0 or _10689 + ceil32(return_data.size) + ceil32(32 * mem[_10689 + mem[_10689]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10689 + ceil32(return_data.size) + ceil32(32 * mem[_10689 + mem[_10689]]) + 1
                    mem[_10689 + ceil32(return_data.size)] = _10735
                    require _10709 + (32 * _10735) + 32 <= return_data.size
                    t = _10689 + ceil32(return_data.size) + 32
                    s = _10689 + _10709 + 32
                    while s < _10689 + _10709 + (32 * _10735) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _14535 = mem[_1454]
                    _14536 = mem[_1454 + 192]
                    _14537 = mem[_1454 + 224]
                    _14567 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    mem[_14567 + 32 len 64] = call.data[calldata.size len 64]
                    if not mem[_14567]:
                        revert with 0, 50
                    mem[_14567 + 32] = stor21
                    if stor21 == address(_14536):
                        if stor21 == address(_14537):
                            require ext_code.size(stor23)
                            staticcall stor23.getReserves() with:
                                    gas gas_remaining wei
                            mem[_14567 + 96 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            mem[_14567 + ceil32(return_data.size) + 100] = address(_14535)
                            mem[_14567 + ceil32(return_data.size) + 132] = -1
                            require ext_code.size(address(_14536))
                            call address(_14536).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14535), -1
                            mem[_14567 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[_14567 + (2 * ceil32(return_data.size)) + 100] = address(_14535)
                            mem[_14567 + (2 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_14537))
                            call address(_14537).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14535), -1
                            mem[_14567 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14567 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            _15041 = mem[_1454 + 160]
                            _15042 = mem[_1454 + 64]
                            _15043 = mem[_1454 + 32]
                            mem[_14567 + (4 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15043))
                            staticcall address(_15043).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14567 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14567 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if _15042 >= 999999:
                                mem[_14567 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                require ext_code.size(address(_15041))
                                call address(_15041).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_14567 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _15271 = mem[_1454 + 32]
                                mem[_14567 + (6 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(address(_15271))
                                staticcall address(_15271).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_14567 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1454 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_14567 + (7 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_14567 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _14567 + (8 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _15623 = mem[_1454]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_14567 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_14567 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_14567 + (8 * ceil32(return_data.size)) + 132] = 128
                                mem[_14567 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _14567 + (8 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_14567 + (8 * ceil32(return_data.size)) + 164] = this.address
                                mem[_14567 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_15623))
                                call address(_15623).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14567 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_14567 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _14567 + (10 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _18361 = mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14567 + (8 * ceil32(return_data.size)) + return_data.size + 96
                                _18393 = mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14567 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _14567 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_14567 + (10 * ceil32(return_data.size)) + 96] = mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                require _18361 + (32 * _18393) + 32 <= return_data.size
                                t = _14567 + (10 * ceil32(return_data.size)) + 128
                                s = _14567 + (8 * ceil32(return_data.size)) + _18361 + 128
                                while s < _14567 + (8 * ceil32(return_data.size)) + _18361 + (32 * _18393) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21507 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_21507]
                            else:
                                mem[_14567 + (6 * ceil32(return_data.size)) + 100] = _15042
                                mem[_14567 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                require ext_code.size(address(_15041))
                                call address(_15041).0xe2bbb158 with:
                                     gas gas_remaining wei
                                    args _15042, ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_14567 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _15272 = mem[_1454 + 32]
                                mem[_14567 + (6 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(address(_15272))
                                staticcall address(_15272).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_14567 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1454 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_14567 + (7 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_14567 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _14567 + (8 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _15624 = mem[_1454]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_14567 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_14567 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_14567 + (8 * ceil32(return_data.size)) + 132] = 128
                                mem[_14567 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _14567 + (8 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_14567 + (8 * ceil32(return_data.size)) + 164] = this.address
                                mem[_14567 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_15624))
                                call address(_15624).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14567 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_14567 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _14567 + (10 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _18362 = mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14567 + (8 * ceil32(return_data.size)) + return_data.size + 96
                                _18394 = mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14567 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _14567 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_14567 + (10 * ceil32(return_data.size)) + 96] = mem[_14567 + (8 * ceil32(return_data.size)) + mem[_14567 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                require _18362 + (32 * _18394) + 32 <= return_data.size
                                t = _14567 + (10 * ceil32(return_data.size)) + 128
                                s = _14567 + (8 * ceil32(return_data.size)) + _18362 + 128
                                while s < _14567 + (8 * ceil32(return_data.size)) + _18362 + (32 * _18394) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21508 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_21508]
                        else:
                            if 1 >= mem[_14567]:
                                revert with 0, 50
                            mem[_14567 + 64] = address(_14537)
                            mem[_14567 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_14567 + 100] = eth.balance(this.address) / 2
                            mem[_14567 + 132] = 64
                            mem[_14567 + 164] = mem[_14567]
                            s = 0
                            t = _14567 + 32
                            u = _14567 + 196
                            while s < mem[_14567]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            require ext_code.size(address(_14535))
                            staticcall address(_14535).mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _14567 + (32 * mem[_14567]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18341 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _18377 = mem[_18341]
                            require mem[_18341] <= test266151307()
                            require _18341 + mem[_18341] + 31 < _18341 + return_data.size
                            _18409 = mem[_18341 + mem[_18341]]
                            if mem[_18341 + mem[_18341]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_18341 + mem[_18341]]) + 1 < 0 or _18341 + ceil32(return_data.size) + ceil32(32 * mem[_18341 + mem[_18341]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _18341 + ceil32(return_data.size) + ceil32(32 * mem[_18341 + mem[_18341]]) + 1
                            mem[_18341 + ceil32(return_data.size)] = _18409
                            require _18377 + (32 * _18409) + 32 <= return_data.size
                            t = _18341 + ceil32(return_data.size) + 32
                            s = _18341 + _18377 + 32
                            while s < _18341 + _18377 + (32 * _18409) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            if 1 >= _18409:
                                revert with 0, 50
                            _21449 = mem[_18341 + ceil32(return_data.size) + 64]
                            if mem[_18341 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18341 + ceil32(return_data.size) + 64]:
                                revert with 0, 17
                            if mem[_18341 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                revert with 0, 17
                            if 1 >= _18409:
                                revert with 0, 50
                            _21585 = mem[_18341 + ceil32(return_data.size) + 64]
                            if mem[_18341 + ceil32(return_data.size) + 64] < 100 * mem[_18341 + ceil32(return_data.size) + 64] / 10000:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _21585 - (100 * _21449 / 10000)
                            mem[mem[64] + 36] = 128
                            _21663 = mem[_14567]
                            mem[mem[64] + 132] = mem[_14567]
                            s = 0
                            t = _14567 + 32
                            u = mem[64] + 164
                            while s < _21663:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[mem[64] + 100] = block.timestamp + 60
                            require ext_code.size(address(_14535))
                            call address(_14535).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args _21585 - (100 * _21449 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _21663) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24405 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24441 = mem[_24405]
                            require mem[_24405] <= test266151307()
                            require _24405 + mem[_24405] + 31 < _24405 + return_data.size
                            _24467 = mem[_24405 + mem[_24405]]
                            if mem[_24405 + mem[_24405]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_24405 + mem[_24405]]) + 1 < 0 or _24405 + ceil32(return_data.size) + ceil32(32 * mem[_24405 + mem[_24405]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _24405 + ceil32(return_data.size) + ceil32(32 * mem[_24405 + mem[_24405]]) + 1
                            mem[_24405 + ceil32(return_data.size)] = _24467
                            require _24441 + (32 * _24467) + 32 <= return_data.size
                            t = _24405 + ceil32(return_data.size) + 32
                            s = _24405 + _24441 + 32
                            while s < _24405 + _24441 + (32 * _24467) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            require ext_code.size(stor23)
                            staticcall stor23.getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27157 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            require mem[_27157] == mem[_27157 + 18 len 14]
                            require mem[_27157 + 32] == mem[_27157 + 50 len 14]
                            require mem[_27157 + 64] == mem[_27157 + 92 len 4]
                            mem[mem[64] + 4] = address(_14535)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14536))
                            call address(_14536).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14535), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27355 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27355] == bool(mem[_27355])
                            mem[mem[64] + 4] = address(_14535)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14537))
                            call address(_14537).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14535), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27435 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27435] == bool(mem[_27435])
                            _27493 = mem[_1454 + 160]
                            _27494 = mem[_1454 + 64]
                            _27495 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27495))
                            staticcall address(_27495).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27577 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27615 = mem[_27577]
                            if _27494 >= 999999:
                                mem[mem[64] + 4] = mem[_27577]
                                require ext_code.size(address(_27493))
                                call address(_27493).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _27615
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27615
                                emit Earn(_27615);
                                _27787 = mem[_1454 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27787))
                                staticcall address(_27787).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27921 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1454 + 96] = mem[_27921]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28175 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28225 = mem[_28175]
                                _28259 = mem[_1454]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _28307 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _28225
                                mem[mem[64] + 36] = 128
                                _28359 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _28359:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_28307 + 68] = this.address
                                mem[_28307 + 100] = block.timestamp + 60
                                require ext_code.size(address(_28259))
                                call address(_28259).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _28307 + (32 * _28359) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29603 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _29643 = mem[_29603]
                                require mem[_29603] <= test266151307()
                                require _29603 + mem[_29603] + 31 < _29603 + return_data.size
                                _29683 = mem[_29603 + mem[_29603]]
                                if mem[_29603 + mem[_29603]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_29603 + mem[_29603]]) + 1 < 0 or _29603 + ceil32(return_data.size) + ceil32(32 * mem[_29603 + mem[_29603]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _29603 + ceil32(return_data.size) + ceil32(32 * mem[_29603 + mem[_29603]]) + 1
                                mem[_29603 + ceil32(return_data.size)] = _29683
                                require _29643 + (32 * _29683) + 32 <= return_data.size
                                t = _29603 + ceil32(return_data.size) + 32
                                s = _29603 + _29643 + 32
                                while s < _29603 + _29643 + (32 * _29683) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31055 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_31055]
                            else:
                                mem[mem[64] + 4] = _27494
                                mem[mem[64] + 36] = _27615
                                require ext_code.size(address(_27493))
                                call address(_27493).0xe2bbb158 with:
                                     gas gas_remaining wei
                                    args _27494, _27615
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27615
                                emit Earn(_27615);
                                _27788 = mem[_1454 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27788))
                                staticcall address(_27788).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27922 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1454 + 96] = mem[_27922]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28176 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28226 = mem[_28176]
                                _28260 = mem[_1454]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _28308 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _28226
                                mem[mem[64] + 36] = 128
                                _28360 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _28360:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_28308 + 68] = this.address
                                mem[_28308 + 100] = block.timestamp + 60
                                require ext_code.size(address(_28260))
                                call address(_28260).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _28308 + (32 * _28360) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29604 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _29644 = mem[_29604]
                                require mem[_29604] <= test266151307()
                                require _29604 + mem[_29604] + 31 < _29604 + return_data.size
                                _29684 = mem[_29604 + mem[_29604]]
                                if mem[_29604 + mem[_29604]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_29604 + mem[_29604]]) + 1 < 0 or _29604 + ceil32(return_data.size) + ceil32(32 * mem[_29604 + mem[_29604]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _29604 + ceil32(return_data.size) + ceil32(32 * mem[_29604 + mem[_29604]]) + 1
                                mem[_29604 + ceil32(return_data.size)] = _29684
                                require _29644 + (32 * _29684) + 32 <= return_data.size
                                t = _29604 + ceil32(return_data.size) + 32
                                s = _29604 + _29644 + 32
                                while s < _29604 + _29644 + (32 * _29684) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31056 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_31056]
                    else:
                        if 1 >= mem[_14567]:
                            revert with 0, 50
                        mem[_14567 + 64] = address(_14536)
                        mem[_14567 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_14567 + 100] = eth.balance(this.address) / 2
                        mem[_14567 + 132] = 64
                        mem[_14567 + 164] = mem[_14567]
                        s = 0
                        t = _14567 + 32
                        u = _14567 + 196
                        while s < mem[_14567]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14535))
                        staticcall address(_14535).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _14567 + (32 * mem[_14567]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18342 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18378 = mem[_18342]
                        require mem[_18342] <= test266151307()
                        require _18342 + mem[_18342] + 31 < _18342 + return_data.size
                        _18410 = mem[_18342 + mem[_18342]]
                        if mem[_18342 + mem[_18342]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_18342 + mem[_18342]]) + 1 < 0 or _18342 + ceil32(return_data.size) + ceil32(32 * mem[_18342 + mem[_18342]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _18342 + ceil32(return_data.size) + ceil32(32 * mem[_18342 + mem[_18342]]) + 1
                        mem[_18342 + ceil32(return_data.size)] = _18410
                        require _18378 + (32 * _18410) + 32 <= return_data.size
                        t = _18342 + ceil32(return_data.size) + 32
                        s = _18342 + _18378 + 32
                        while s < _18342 + _18378 + (32 * _18410) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _18410:
                            revert with 0, 50
                        _21450 = mem[_18342 + ceil32(return_data.size) + 64]
                        if mem[_18342 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18342 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_18342 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _18410:
                            revert with 0, 50
                        _21586 = mem[_18342 + ceil32(return_data.size) + 64]
                        if mem[_18342 + ceil32(return_data.size) + 64] < 100 * mem[_18342 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _21628 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _21586 - (100 * _21450 / 10000)
                        mem[mem[64] + 36] = 128
                        _21664 = mem[_14567]
                        mem[mem[64] + 132] = mem[_14567]
                        s = 0
                        t = _14567 + 32
                        u = mem[64] + 164
                        while s < _21664:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_21628 + 68] = this.address
                        mem[_21628 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14535))
                        call address(_14535).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _21628 + (32 * _21664) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24406 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24442 = mem[_24406]
                        require mem[_24406] <= test266151307()
                        require _24406 + mem[_24406] + 31 < _24406 + return_data.size
                        _24468 = mem[_24406 + mem[_24406]]
                        if mem[_24406 + mem[_24406]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24406 + mem[_24406]]) + 1 < 0 or _24406 + ceil32(return_data.size) + ceil32(32 * mem[_24406 + mem[_24406]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _24406 + ceil32(return_data.size) + ceil32(32 * mem[_24406 + mem[_24406]]) + 1
                        mem[_24406 + ceil32(return_data.size)] = _24468
                        require _24442 + (32 * _24468) + 32 <= return_data.size
                        t = _24406 + ceil32(return_data.size) + 32
                        s = _24406 + _24442 + 32
                        while s < _24406 + _24442 + (32 * _24468) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if stor21 == address(_14537):
                            require ext_code.size(stor23)
                            staticcall stor23.getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27171 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            require mem[_27171] == mem[_27171 + 18 len 14]
                            require mem[_27171 + 32] == mem[_27171 + 50 len 14]
                            require mem[_27171 + 64] == mem[_27171 + 92 len 4]
                            mem[mem[64] + 4] = address(_14535)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14536))
                            call address(_14536).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14535), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27365 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27365] == bool(mem[_27365])
                            mem[mem[64] + 4] = address(_14535)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14537))
                            call address(_14537).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14535), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27451 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27451] == bool(mem[_27451])
                            _27535 = mem[_1454 + 160]
                            _27536 = mem[_1454 + 64]
                            _27537 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27537))
                            staticcall address(_27537).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27593 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27627 = mem[_27593]
                            if _27536 >= 999999:
                                mem[mem[64] + 4] = mem[_27593]
                                require ext_code.size(address(_27535))
                                call address(_27535).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _27627
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27627
                                emit Earn(_27627);
                                _27853 = mem[_1454 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27853))
                                staticcall address(_27853).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27939 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1454 + 96] = mem[_27939]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28207 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28243 = mem[_28207]
                                _28275 = mem[_1454]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _28337 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _28243
                                mem[mem[64] + 36] = 128
                                _28387 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _28387:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_28337 + 68] = this.address
                                mem[_28337 + 100] = block.timestamp + 60
                                require ext_code.size(address(_28275))
                                call address(_28275).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _28337 + (32 * _28387) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29605 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _29645 = mem[_29605]
                                require mem[_29605] <= test266151307()
                                require _29605 + mem[_29605] + 31 < _29605 + return_data.size
                                _29685 = mem[_29605 + mem[_29605]]
                                if mem[_29605 + mem[_29605]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_29605 + mem[_29605]]) + 1 < 0 or _29605 + ceil32(return_data.size) + ceil32(32 * mem[_29605 + mem[_29605]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _29605 + ceil32(return_data.size) + ceil32(32 * mem[_29605 + mem[_29605]]) + 1
                                mem[_29605 + ceil32(return_data.size)] = _29685
                                require _29645 + (32 * _29685) + 32 <= return_data.size
                                t = _29605 + ceil32(return_data.size) + 32
                                s = _29605 + _29645 + 32
                                while s < _29605 + _29645 + (32 * _29685) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31057 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_31057]
                            else:
                                mem[mem[64] + 4] = _27536
                                mem[mem[64] + 36] = _27627
                                require ext_code.size(address(_27535))
                                call address(_27535).0xe2bbb158 with:
                                     gas gas_remaining wei
                                    args _27536, _27627
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27627
                                emit Earn(_27627);
                                _27854 = mem[_1454 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27854))
                                staticcall address(_27854).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27940 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1454 + 96] = mem[_27940]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28208 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28244 = mem[_28208]
                                _28276 = mem[_1454]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _28338 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _28244
                                mem[mem[64] + 36] = 128
                                _28388 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_28338 + 100] = block.timestamp + 60
                                require ext_code.size(address(_28276))
                                call address(_28276).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _28338 + (32 * _28388) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29606 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _29646 = mem[_29606]
                                require mem[_29606] <= test266151307()
                                require _29606 + mem[_29606] + 31 < _29606 + return_data.size
                                _29686 = mem[_29606 + mem[_29606]]
                                if mem[_29606 + mem[_29606]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_29606 + mem[_29606]]) + 1 < 0 or _29606 + ceil32(return_data.size) + ceil32(32 * mem[_29606 + mem[_29606]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _29606 + ceil32(return_data.size) + ceil32(32 * mem[_29606 + mem[_29606]]) + 1
                                mem[_29606 + ceil32(return_data.size)] = _29686
                                require _29646 + (32 * _29686) + 32 <= return_data.size
                                t = _29606 + ceil32(return_data.size) + 32
                                s = _29606 + _29646 + 32
                                while s < _29606 + _29646 + (32 * _29686) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31058 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_31058]
                        else:
                            if 1 >= mem[_14567]:
                                revert with 0, 50
                            mem[_14567 + 64] = address(_14537)
                            _27139 = mem[64]
                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = eth.balance(this.address) / 2
                            mem[mem[64] + 36] = 64
                            _27172 = mem[_14567]
                            mem[mem[64] + 68] = mem[_14567]
                            s = 0
                            t = _14567 + 32
                            u = mem[64] + 100
                            while s < _27172:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            require ext_code.size(address(_14535))
                            staticcall address(_14535).mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _27139 + (32 * _27172) + -mem[64] + 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29617 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29657 = mem[_29617]
                            require mem[_29617] <= test266151307()
                            require _29617 + mem[_29617] + 31 < _29617 + return_data.size
                            _29697 = mem[_29617 + mem[_29617]]
                            if mem[_29617 + mem[_29617]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29617 + mem[_29617]]) + 1 < 0 or _29617 + ceil32(return_data.size) + ceil32(32 * mem[_29617 + mem[_29617]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29617 + ceil32(return_data.size) + ceil32(32 * mem[_29617 + mem[_29617]]) + 1
                            mem[_29617 + ceil32(return_data.size)] = _29697
                            require _29657 + (32 * _29697) + 32 <= return_data.size
                            t = _29617 + ceil32(return_data.size) + 32
                            s = _29617 + _29657 + 32
                            while s < _29617 + _29657 + (32 * _29697) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            if 1 >= _29697:
                                revert with 0, 50
                            _30957 = mem[_29617 + ceil32(return_data.size) + 64]
                            if mem[_29617 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_29617 + ceil32(return_data.size) + 64]:
                                revert with 0, 17
                            if mem[_29617 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                revert with 0, 17
                            if 1 >= _29697:
                                revert with 0, 50
                            _31133 = mem[_29617 + ceil32(return_data.size) + 64]
                            if mem[_29617 + ceil32(return_data.size) + 64] < 100 * mem[_29617 + ceil32(return_data.size) + 64] / 10000:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _31155 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _31133 - (100 * _30957 / 10000)
                            mem[mem[64] + 36] = 128
                            _31169 = mem[_14567]
                            mem[mem[64] + 132] = mem[_14567]
                            s = 0
                            t = _14567 + 32
                            u = mem[64] + 164
                            while s < _31169:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_31155 + 68] = this.address
                            mem[_31155 + 100] = block.timestamp + 60
                            require ext_code.size(address(_14535))
                            call address(_14535).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _31155 + (32 * _31169) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32023 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _32037 = mem[_32023]
                            require mem[_32023] <= test266151307()
                            require _32023 + mem[_32023] + 31 < _32023 + return_data.size
                            _32049 = mem[_32023 + mem[_32023]]
                            if mem[_32023 + mem[_32023]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_32023 + mem[_32023]]) + 1 < 0 or _32023 + ceil32(return_data.size) + ceil32(32 * mem[_32023 + mem[_32023]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _32023 + ceil32(return_data.size) + ceil32(32 * mem[_32023 + mem[_32023]]) + 1
                            mem[_32023 + ceil32(return_data.size)] = _32049
                            require _32037 + (32 * _32049) + 32 <= return_data.size
                            t = _32023 + ceil32(return_data.size) + 32
                            s = _32023 + _32037 + 32
                            while s < _32023 + _32037 + (32 * _32049) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            require ext_code.size(stor23)
                            staticcall stor23.getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32859 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            require mem[_32859] == mem[_32859 + 18 len 14]
                            require mem[_32859 + 32] == mem[_32859 + 50 len 14]
                            require mem[_32859 + 64] == mem[_32859 + 92 len 4]
                            mem[mem[64] + 4] = address(_14535)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14536))
                            call address(_14536).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14535), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32919 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_32919] == bool(mem[_32919])
                            mem[mem[64] + 4] = address(_14535)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_14537))
                            call address(_14537).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_14535), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32951 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_32951] == bool(mem[_32951])
                            _32979 = mem[_1454 + 160]
                            _32980 = mem[_1454 + 64]
                            _32981 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_32981))
                            staticcall address(_32981).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33013 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33023 = mem[_33013]
                            if _32980 >= 999999:
                                mem[mem[64] + 4] = mem[_33013]
                                require ext_code.size(address(_32979))
                                call address(_32979).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _33023
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _33023
                                emit Earn(_33023);
                                _33105 = mem[_1454 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_33105))
                                staticcall address(_33105).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33157 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1454 + 96] = mem[_33157]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33261 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _33279 = mem[_33261]
                                _33295 = mem[_1454]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _33313 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _33279
                                mem[mem[64] + 36] = 128
                                _33329 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _33329:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_33313 + 68] = this.address
                                mem[_33313 + 100] = block.timestamp + 60
                                require ext_code.size(address(_33295))
                                call address(_33295).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _33313 + (32 * _33329) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33559 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _33575 = mem[_33559]
                                require mem[_33559] <= test266151307()
                                require _33559 + mem[_33559] + 31 < _33559 + return_data.size
                                _33591 = mem[_33559 + mem[_33559]]
                                if mem[_33559 + mem[_33559]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_33559 + mem[_33559]]) + 1 < 0 or _33559 + ceil32(return_data.size) + ceil32(32 * mem[_33559 + mem[_33559]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _33559 + ceil32(return_data.size) + ceil32(32 * mem[_33559 + mem[_33559]]) + 1
                                mem[_33559 + ceil32(return_data.size)] = _33591
                                require _33575 + (32 * _33591) + 32 <= return_data.size
                                t = _33559 + ceil32(return_data.size) + 32
                                s = _33559 + _33575 + 32
                                while s < _33559 + _33575 + (32 * _33591) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33785 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_33785]
                            else:
                                mem[mem[64] + 4] = _32980
                                mem[mem[64] + 36] = _33023
                                require ext_code.size(address(_32979))
                                call address(_32979).0xe2bbb158 with:
                                     gas gas_remaining wei
                                    args _32980, _33023
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _33023
                                emit Earn(_33023);
                                _33106 = mem[_1454 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_33106))
                                staticcall address(_33106).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33158 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1454 + 96] = mem[_33158]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33262 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _33280 = mem[_33262]
                                _33296 = mem[_1454]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _33314 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _33280
                                mem[mem[64] + 36] = 128
                                _33330 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _33330:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_33314 + 68] = this.address
                                mem[_33314 + 100] = block.timestamp + 60
                                require ext_code.size(address(_33296))
                                call address(_33296).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _33314 + (32 * _33330) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33560 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _33576 = mem[_33560]
                                require mem[_33560] <= test266151307()
                                require _33560 + mem[_33560] + 31 < _33560 + return_data.size
                                _33592 = mem[_33560 + mem[_33560]]
                                if mem[_33560 + mem[_33560]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_33560 + mem[_33560]]) + 1 < 0 or _33560 + ceil32(return_data.size) + ceil32(32 * mem[_33560 + mem[_33560]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _33560 + ceil32(return_data.size) + ceil32(32 * mem[_33560 + mem[_33560]]) + 1
                                mem[_33560 + ceil32(return_data.size)] = _33592
                                require _33576 + (32 * _33592) + 32 <= return_data.size
                                t = _33560 + ceil32(return_data.size) + 32
                                s = _33560 + _33576 + 32
                                while s < _33560 + _33576 + (32 * _33592) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33786 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_33786]
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1454
                    s = _6943 - (100 * _6943 / 10000)
                    s = stor9[idx].field_0
                    continue 
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _1499
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _1499
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1620 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1640 = mem[_1620]
                require mem[_1620] == mem[_1620 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1620 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1640))
                staticcall address(_1640).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1720 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1742 = mem[_1720]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1640))
                staticcall address(_1640).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1786 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1810 = mem[_1786]
                if mem[_1786] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1742:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1898 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1908 = mem[_1898]
                if 10^12 * _1810 / _1742 and mem[_1898] > -1 / 10^12 * _1810 / _1742:
                    revert with 0, 17
                _1970 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1810 / _1742 * _1908 / 10^12
                mem[mem[64] + 36] = 64
                _2000 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _2000:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1970 + (32 * _2000) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3684 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3700 = mem[_3684]
                require mem[_3684] <= test266151307()
                require _3684 + mem[_3684] + 31 < _3684 + return_data.size
                _3716 = mem[_3684 + mem[_3684]]
                if mem[_3684 + mem[_3684]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3684 + mem[_3684]]) + 1 < 0 or _3684 + ceil32(return_data.size) + ceil32(32 * mem[_3684 + mem[_3684]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3684 + ceil32(return_data.size) + ceil32(32 * mem[_3684 + mem[_3684]]) + 1
                mem[_3684 + ceil32(return_data.size)] = _3716
                require _3700 + (32 * _3716) + 32 <= return_data.size
                t = _3684 + ceil32(return_data.size) + 32
                s = _3684 + _3700 + 32
                while s < _3684 + _3700 + (32 * _3716) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3716:
                    revert with 0, 50
                _6944 = mem[_3684 + ceil32(return_data.size) + 64]
                if mem[_3684 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3684 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_3684 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_3684 + ceil32(return_data.size) + 64] < 100 * mem[_3684 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _7122 = mem[_1454]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1640))
                staticcall address(_1640).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7180 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7218 = mem[_7180]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _7260 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7218
                mem[mem[64] + 36] = _6944 - (100 * _6944 / 10000)
                mem[mem[64] + 68] = 160
                _7296 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _7296:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7260 + 100] = this.address
                mem[_7260 + 132] = block.timestamp + 60
                require ext_code.size(address(_7122))
                call address(_7122).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7260 + (32 * _7296) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10690 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10710 = mem[_10690]
                require mem[_10690] <= test266151307()
                require _10690 + mem[_10690] + 31 < _10690 + return_data.size
                _10736 = mem[_10690 + mem[_10690]]
                if mem[_10690 + mem[_10690]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10690 + mem[_10690]]) + 1 < 0 or _10690 + ceil32(return_data.size) + ceil32(32 * mem[_10690 + mem[_10690]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10690 + ceil32(return_data.size) + ceil32(32 * mem[_10690 + mem[_10690]]) + 1
                mem[_10690 + ceil32(return_data.size)] = _10736
                require _10710 + (32 * _10736) + 32 <= return_data.size
                t = _10690 + ceil32(return_data.size) + 32
                s = _10690 + _10710 + 32
                while s < _10690 + _10710 + (32 * _10736) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _14538 = mem[_1454]
                _14539 = mem[_1454 + 192]
                _14540 = mem[_1454 + 224]
                _14569 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_14569 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_14569]:
                    revert with 0, 50
                mem[_14569 + 32] = stor21
                if stor21 == address(_14539):
                    if stor21 == address(_14540):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[_14569 + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        mem[_14569 + ceil32(return_data.size) + 100] = address(_14538)
                        mem[_14569 + ceil32(return_data.size) + 132] = -1
                        require ext_code.size(address(_14539))
                        call address(_14539).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14538), -1
                        mem[_14569 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_14569 + (2 * ceil32(return_data.size)) + 100] = address(_14538)
                        mem[_14569 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_14540))
                        call address(_14540).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14538), -1
                        mem[_14569 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14569 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        _15044 = mem[_1454 + 160]
                        _15045 = mem[_1454 + 64]
                        _15046 = mem[_1454 + 32]
                        mem[_14569 + (4 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_15046))
                        staticcall address(_15046).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14569 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14569 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _15045 >= 999999:
                            mem[_14569 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_15044))
                            call address(_15044).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14569 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _15274 = mem[_1454 + 32]
                            mem[_14569 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15274))
                            staticcall address(_15274).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14569 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1454 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_14569 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14569 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14569 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _15626 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_14569 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_14569 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_14569 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_14569 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _14569 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_14569 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_14569 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_15626))
                            call address(_15626).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14569 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14569 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _14569 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _18363 = mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14569 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _18395 = mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14569 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _14569 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_14569 + (10 * ceil32(return_data.size)) + 96] = mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _18363 + (32 * _18395) + 32 <= return_data.size
                            t = _14569 + (10 * ceil32(return_data.size)) + 128
                            s = _14569 + (8 * ceil32(return_data.size)) + _18363 + 128
                            while s < _14569 + (8 * ceil32(return_data.size)) + _18363 + (32 * _18395) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21509 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_21509]
                        else:
                            mem[_14569 + (6 * ceil32(return_data.size)) + 100] = _15045
                            mem[_14569 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_15044))
                            call address(_15044).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _15045, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14569 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _15275 = mem[_1454 + 32]
                            mem[_14569 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15275))
                            staticcall address(_15275).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14569 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1454 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_14569 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14569 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14569 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _15627 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_14569 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_14569 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_14569 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_14569 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _14569 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_14569 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_14569 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_15627))
                            call address(_15627).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14569 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14569 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _14569 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _18364 = mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14569 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _18396 = mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14569 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _14569 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_14569 + (10 * ceil32(return_data.size)) + 96] = mem[_14569 + (8 * ceil32(return_data.size)) + mem[_14569 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _18364 + (32 * _18396) + 32 <= return_data.size
                            t = _14569 + (10 * ceil32(return_data.size)) + 128
                            s = _14569 + (8 * ceil32(return_data.size)) + _18364 + 128
                            while s < _14569 + (8 * ceil32(return_data.size)) + _18364 + (32 * _18396) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21510 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_21510]
                    else:
                        if 1 >= mem[_14569]:
                            revert with 0, 50
                        mem[_14569 + 64] = address(_14540)
                        mem[_14569 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_14569 + 100] = eth.balance(this.address) / 2
                        mem[_14569 + 132] = 64
                        mem[_14569 + 164] = mem[_14569]
                        s = 0
                        t = _14569 + 32
                        u = _14569 + 196
                        while s < mem[_14569]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14538))
                        staticcall address(_14538).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _14569 + (32 * mem[_14569]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18343 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18379 = mem[_18343]
                        require mem[_18343] <= test266151307()
                        require _18343 + mem[_18343] + 31 < _18343 + return_data.size
                        _18411 = mem[_18343 + mem[_18343]]
                        if mem[_18343 + mem[_18343]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_18343 + mem[_18343]]) + 1 < 0 or _18343 + ceil32(return_data.size) + ceil32(32 * mem[_18343 + mem[_18343]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _18343 + ceil32(return_data.size) + ceil32(32 * mem[_18343 + mem[_18343]]) + 1
                        mem[_18343 + ceil32(return_data.size)] = _18411
                        require _18379 + (32 * _18411) + 32 <= return_data.size
                        t = _18343 + ceil32(return_data.size) + 32
                        s = _18343 + _18379 + 32
                        while s < _18343 + _18379 + (32 * _18411) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _18411:
                            revert with 0, 50
                        _21451 = mem[_18343 + ceil32(return_data.size) + 64]
                        if mem[_18343 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18343 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_18343 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _18411:
                            revert with 0, 50
                        _21587 = mem[_18343 + ceil32(return_data.size) + 64]
                        if mem[_18343 + ceil32(return_data.size) + 64] < 100 * mem[_18343 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _21629 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _21587 - (100 * _21451 / 10000)
                        mem[mem[64] + 36] = 128
                        _21665 = mem[_14569]
                        mem[mem[64] + 132] = mem[_14569]
                        s = 0
                        t = _14569 + 32
                        u = mem[64] + 164
                        while s < _21665:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_21629 + 68] = this.address
                        mem[_21629 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14538))
                        call address(_14538).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _21629 + (32 * _21665) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24407 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24443 = mem[_24407]
                        require mem[_24407] <= test266151307()
                        require _24407 + mem[_24407] + 31 < _24407 + return_data.size
                        _24469 = mem[_24407 + mem[_24407]]
                        if mem[_24407 + mem[_24407]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24407 + mem[_24407]]) + 1 < 0 or _24407 + ceil32(return_data.size) + ceil32(32 * mem[_24407 + mem[_24407]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _24407 + ceil32(return_data.size) + ceil32(32 * mem[_24407 + mem[_24407]]) + 1
                        mem[_24407 + ceil32(return_data.size)] = _24469
                        require _24443 + (32 * _24469) + 32 <= return_data.size
                        t = _24407 + ceil32(return_data.size) + 32
                        s = _24407 + _24443 + 32
                        while s < _24407 + _24443 + (32 * _24469) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27158 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_27158] == mem[_27158 + 18 len 14]
                        require mem[_27158 + 32] == mem[_27158 + 50 len 14]
                        require mem[_27158 + 64] == mem[_27158 + 92 len 4]
                        mem[mem[64] + 4] = address(_14538)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14539))
                        call address(_14539).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14538), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27357 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27357] == bool(mem[_27357])
                        mem[mem[64] + 4] = address(_14538)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14540))
                        call address(_14540).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14538), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27437 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27437] == bool(mem[_27437])
                        _27496 = mem[_1454 + 160]
                        _27497 = mem[_1454 + 64]
                        _27498 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27498))
                        staticcall address(_27498).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27578 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27617 = mem[_27578]
                        if _27497 >= 999999:
                            mem[mem[64] + 4] = mem[_27578]
                            require ext_code.size(address(_27496))
                            call address(_27496).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27617
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27617
                            emit Earn(_27617);
                            _27793 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27793))
                            staticcall address(_27793).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27924 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_27924]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28177 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28227 = mem[_28177]
                            _28261 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28309 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28227
                            mem[mem[64] + 36] = 128
                            _28361 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28361:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28309 + 68] = this.address
                            mem[_28309 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28261))
                            call address(_28261).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28309 + (32 * _28361) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29607 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29647 = mem[_29607]
                            require mem[_29607] <= test266151307()
                            require _29607 + mem[_29607] + 31 < _29607 + return_data.size
                            _29687 = mem[_29607 + mem[_29607]]
                            if mem[_29607 + mem[_29607]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29607 + mem[_29607]]) + 1 < 0 or _29607 + ceil32(return_data.size) + ceil32(32 * mem[_29607 + mem[_29607]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29607 + ceil32(return_data.size) + ceil32(32 * mem[_29607 + mem[_29607]]) + 1
                            mem[_29607 + ceil32(return_data.size)] = _29687
                            require _29647 + (32 * _29687) + 32 <= return_data.size
                            t = _29607 + ceil32(return_data.size) + 32
                            s = _29607 + _29647 + 32
                            while s < _29607 + _29647 + (32 * _29687) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31059 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31059]
                        else:
                            mem[mem[64] + 4] = _27497
                            mem[mem[64] + 36] = _27617
                            require ext_code.size(address(_27496))
                            call address(_27496).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _27497, _27617
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27617
                            emit Earn(_27617);
                            _27794 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27794))
                            staticcall address(_27794).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27925 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_27925]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28178 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28228 = mem[_28178]
                            _28262 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28310 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28228
                            mem[mem[64] + 36] = 128
                            _28362 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28362:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28310 + 68] = this.address
                            mem[_28310 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28262))
                            call address(_28262).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28310 + (32 * _28362) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29608 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29648 = mem[_29608]
                            require mem[_29608] <= test266151307()
                            require _29608 + mem[_29608] + 31 < _29608 + return_data.size
                            _29688 = mem[_29608 + mem[_29608]]
                            if mem[_29608 + mem[_29608]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29608 + mem[_29608]]) + 1 < 0 or _29608 + ceil32(return_data.size) + ceil32(32 * mem[_29608 + mem[_29608]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29608 + ceil32(return_data.size) + ceil32(32 * mem[_29608 + mem[_29608]]) + 1
                            mem[_29608 + ceil32(return_data.size)] = _29688
                            require _29648 + (32 * _29688) + 32 <= return_data.size
                            t = _29608 + ceil32(return_data.size) + 32
                            s = _29608 + _29648 + 32
                            while s < _29608 + _29648 + (32 * _29688) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31060 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31060]
                else:
                    if 1 >= mem[_14569]:
                        revert with 0, 50
                    mem[_14569 + 64] = address(_14539)
                    mem[_14569 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_14569 + 100] = eth.balance(this.address) / 2
                    mem[_14569 + 132] = 64
                    mem[_14569 + 164] = mem[_14569]
                    s = 0
                    t = _14569 + 32
                    u = _14569 + 196
                    while s < mem[_14569]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_14538))
                    staticcall address(_14538).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _14569 + (32 * mem[_14569]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18344 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _18380 = mem[_18344]
                    require mem[_18344] <= test266151307()
                    require _18344 + mem[_18344] + 31 < _18344 + return_data.size
                    _18412 = mem[_18344 + mem[_18344]]
                    if mem[_18344 + mem[_18344]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_18344 + mem[_18344]]) + 1 < 0 or _18344 + ceil32(return_data.size) + ceil32(32 * mem[_18344 + mem[_18344]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _18344 + ceil32(return_data.size) + ceil32(32 * mem[_18344 + mem[_18344]]) + 1
                    mem[_18344 + ceil32(return_data.size)] = _18412
                    require _18380 + (32 * _18412) + 32 <= return_data.size
                    t = _18344 + ceil32(return_data.size) + 32
                    s = _18344 + _18380 + 32
                    while s < _18344 + _18380 + (32 * _18412) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _18412:
                        revert with 0, 50
                    _21452 = mem[_18344 + ceil32(return_data.size) + 64]
                    if mem[_18344 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18344 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_18344 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _18412:
                        revert with 0, 50
                    _21588 = mem[_18344 + ceil32(return_data.size) + 64]
                    if mem[_18344 + ceil32(return_data.size) + 64] < 100 * mem[_18344 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _21630 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _21588 - (100 * _21452 / 10000)
                    mem[mem[64] + 36] = 128
                    _21666 = mem[_14569]
                    mem[mem[64] + 132] = mem[_14569]
                    s = 0
                    t = _14569 + 32
                    u = mem[64] + 164
                    while s < _21666:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_21630 + 68] = this.address
                    mem[_21630 + 100] = block.timestamp + 60
                    require ext_code.size(address(_14538))
                    call address(_14538).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _21630 + (32 * _21666) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24408 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24444 = mem[_24408]
                    require mem[_24408] <= test266151307()
                    require _24408 + mem[_24408] + 31 < _24408 + return_data.size
                    _24470 = mem[_24408 + mem[_24408]]
                    if mem[_24408 + mem[_24408]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_24408 + mem[_24408]]) + 1 < 0 or _24408 + ceil32(return_data.size) + ceil32(32 * mem[_24408 + mem[_24408]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _24408 + ceil32(return_data.size) + ceil32(32 * mem[_24408 + mem[_24408]]) + 1
                    mem[_24408 + ceil32(return_data.size)] = _24470
                    require _24444 + (32 * _24470) + 32 <= return_data.size
                    t = _24408 + ceil32(return_data.size) + 32
                    s = _24408 + _24444 + 32
                    while s < _24408 + _24444 + (32 * _24470) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_14540):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27173 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_27173] == mem[_27173 + 18 len 14]
                        require mem[_27173 + 32] == mem[_27173 + 50 len 14]
                        require mem[_27173 + 64] == mem[_27173 + 92 len 4]
                        mem[mem[64] + 4] = address(_14538)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14539))
                        call address(_14539).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14538), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27366 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27366] == bool(mem[_27366])
                        mem[mem[64] + 4] = address(_14538)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14540))
                        call address(_14540).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14538), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27453 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27453] == bool(mem[_27453])
                        _27540 = mem[_1454 + 160]
                        _27541 = mem[_1454 + 64]
                        _27542 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27542))
                        staticcall address(_27542).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27595 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27628 = mem[_27595]
                        if _27541 >= 999999:
                            mem[mem[64] + 4] = mem[_27595]
                            require ext_code.size(address(_27540))
                            call address(_27540).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27628
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27628
                            emit Earn(_27628);
                            _27860 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27860))
                            staticcall address(_27860).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27941 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_27941]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28210 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28245 = mem[_28210]
                            _28277 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28341 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28245
                            mem[mem[64] + 36] = 128
                            _28390 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28390:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28341 + 68] = this.address
                            mem[_28341 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28277))
                            call address(_28277).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28341 + (32 * _28390) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29609 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29649 = mem[_29609]
                            require mem[_29609] <= test266151307()
                            require _29609 + mem[_29609] + 31 < _29609 + return_data.size
                            _29689 = mem[_29609 + mem[_29609]]
                            if mem[_29609 + mem[_29609]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29609 + mem[_29609]]) + 1 < 0 or _29609 + ceil32(return_data.size) + ceil32(32 * mem[_29609 + mem[_29609]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29609 + ceil32(return_data.size) + ceil32(32 * mem[_29609 + mem[_29609]]) + 1
                            mem[_29609 + ceil32(return_data.size)] = _29689
                            require _29649 + (32 * _29689) + 32 <= return_data.size
                            t = _29609 + ceil32(return_data.size) + 32
                            s = _29609 + _29649 + 32
                            while s < _29609 + _29649 + (32 * _29689) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31061 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31061]
                        else:
                            mem[mem[64] + 4] = _27541
                            mem[mem[64] + 36] = _27628
                            require ext_code.size(address(_27540))
                            call address(_27540).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _27541, _27628
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27628
                            emit Earn(_27628);
                            _27861 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27861))
                            staticcall address(_27861).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27942 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_27942]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28211 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28246 = mem[_28211]
                            _28278 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28342 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28246
                            mem[mem[64] + 36] = 128
                            _28391 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28391:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28342 + 68] = this.address
                            mem[_28342 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28278))
                            call address(_28278).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28342 + (32 * _28391) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29610 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29650 = mem[_29610]
                            require mem[_29610] <= test266151307()
                            require _29610 + mem[_29610] + 31 < _29610 + return_data.size
                            _29690 = mem[_29610 + mem[_29610]]
                            if mem[_29610 + mem[_29610]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29610 + mem[_29610]]) + 1 < 0 or _29610 + ceil32(return_data.size) + ceil32(32 * mem[_29610 + mem[_29610]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29610 + ceil32(return_data.size) + ceil32(32 * mem[_29610 + mem[_29610]]) + 1
                            mem[_29610 + ceil32(return_data.size)] = _29690
                            require _29650 + (32 * _29690) + 32 <= return_data.size
                            t = _29610 + ceil32(return_data.size) + 32
                            s = _29610 + _29650 + 32
                            while s < _29610 + _29650 + (32 * _29690) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31062 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31062]
                    else:
                        if 1 >= mem[_14569]:
                            revert with 0, 50
                        mem[_14569 + 64] = address(_14540)
                        _27142 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _27174 = mem[_14569]
                        mem[mem[64] + 68] = mem[_14569]
                        s = 0
                        t = _14569 + 32
                        u = mem[64] + 100
                        while s < _27174:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14538))
                        staticcall address(_14538).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _27142 + (32 * _27174) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29618 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29658 = mem[_29618]
                        require mem[_29618] <= test266151307()
                        require _29618 + mem[_29618] + 31 < _29618 + return_data.size
                        _29698 = mem[_29618 + mem[_29618]]
                        if mem[_29618 + mem[_29618]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29618 + mem[_29618]]) + 1 < 0 or _29618 + ceil32(return_data.size) + ceil32(32 * mem[_29618 + mem[_29618]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29618 + ceil32(return_data.size) + ceil32(32 * mem[_29618 + mem[_29618]]) + 1
                        mem[_29618 + ceil32(return_data.size)] = _29698
                        require _29658 + (32 * _29698) + 32 <= return_data.size
                        t = _29618 + ceil32(return_data.size) + 32
                        s = _29618 + _29658 + 32
                        while s < _29618 + _29658 + (32 * _29698) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _29698:
                            revert with 0, 50
                        _30958 = mem[_29618 + ceil32(return_data.size) + 64]
                        if mem[_29618 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_29618 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_29618 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _29698:
                            revert with 0, 50
                        _31134 = mem[_29618 + ceil32(return_data.size) + 64]
                        if mem[_29618 + ceil32(return_data.size) + 64] < 100 * mem[_29618 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _31156 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _31134 - (100 * _30958 / 10000)
                        mem[mem[64] + 36] = 128
                        _31170 = mem[_14569]
                        mem[mem[64] + 132] = mem[_14569]
                        s = 0
                        t = _14569 + 32
                        u = mem[64] + 164
                        while s < _31170:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_31156 + 68] = this.address
                        mem[_31156 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14538))
                        call address(_14538).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _31156 + (32 * _31170) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32024 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32038 = mem[_32024]
                        require mem[_32024] <= test266151307()
                        require _32024 + mem[_32024] + 31 < _32024 + return_data.size
                        _32050 = mem[_32024 + mem[_32024]]
                        if mem[_32024 + mem[_32024]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_32024 + mem[_32024]]) + 1 < 0 or _32024 + ceil32(return_data.size) + ceil32(32 * mem[_32024 + mem[_32024]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _32024 + ceil32(return_data.size) + ceil32(32 * mem[_32024 + mem[_32024]]) + 1
                        mem[_32024 + ceil32(return_data.size)] = _32050
                        require _32038 + (32 * _32050) + 32 <= return_data.size
                        t = _32024 + ceil32(return_data.size) + 32
                        s = _32024 + _32038 + 32
                        while s < _32024 + _32038 + (32 * _32050) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32860 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_32860] == mem[_32860 + 18 len 14]
                        require mem[_32860 + 32] == mem[_32860 + 50 len 14]
                        require mem[_32860 + 64] == mem[_32860 + 92 len 4]
                        mem[mem[64] + 4] = address(_14538)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14539))
                        call address(_14539).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14538), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32920 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32920] == bool(mem[_32920])
                        mem[mem[64] + 4] = address(_14538)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14540))
                        call address(_14540).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14538), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32952 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32952] == bool(mem[_32952])
                        _32982 = mem[_1454 + 160]
                        _32983 = mem[_1454 + 64]
                        _32984 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_32984))
                        staticcall address(_32984).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33014 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33024 = mem[_33014]
                        if _32983 >= 999999:
                            mem[mem[64] + 4] = mem[_33014]
                            require ext_code.size(address(_32982))
                            call address(_32982).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _33024
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _33024
                            emit Earn(_33024);
                            _33107 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_33107))
                            staticcall address(_33107).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33159 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_33159]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33263 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33281 = mem[_33263]
                            _33297 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _33315 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _33281
                            mem[mem[64] + 36] = 128
                            _33331 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _33331:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_33315 + 68] = this.address
                            mem[_33315 + 100] = block.timestamp + 60
                            require ext_code.size(address(_33297))
                            call address(_33297).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _33315 + (32 * _33331) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33561 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33577 = mem[_33561]
                            require mem[_33561] <= test266151307()
                            require _33561 + mem[_33561] + 31 < _33561 + return_data.size
                            _33593 = mem[_33561 + mem[_33561]]
                            if mem[_33561 + mem[_33561]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_33561 + mem[_33561]]) + 1 < 0 or _33561 + ceil32(return_data.size) + ceil32(32 * mem[_33561 + mem[_33561]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _33561 + ceil32(return_data.size) + ceil32(32 * mem[_33561 + mem[_33561]]) + 1
                            mem[_33561 + ceil32(return_data.size)] = _33593
                            require _33577 + (32 * _33593) + 32 <= return_data.size
                            t = _33561 + ceil32(return_data.size) + 32
                            s = _33561 + _33577 + 32
                            while s < _33561 + _33577 + (32 * _33593) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33787 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_33787]
                        else:
                            mem[mem[64] + 4] = _32983
                            mem[mem[64] + 36] = _33024
                            require ext_code.size(address(_32982))
                            call address(_32982).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _32983, _33024
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _33024
                            emit Earn(_33024);
                            _33108 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_33108))
                            staticcall address(_33108).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33160 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_33160]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33264 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33282 = mem[_33264]
                            _33298 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _33316 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _33282
                            mem[mem[64] + 36] = 128
                            _33332 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _33332:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_33316 + 68] = this.address
                            mem[_33316 + 100] = block.timestamp + 60
                            require ext_code.size(address(_33298))
                            call address(_33298).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _33316 + (32 * _33332) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33562 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33578 = mem[_33562]
                            require mem[_33562] <= test266151307()
                            require _33562 + mem[_33562] + 31 < _33562 + return_data.size
                            _33594 = mem[_33562 + mem[_33562]]
                            if mem[_33562 + mem[_33562]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_33562 + mem[_33562]]) + 1 < 0 or _33562 + ceil32(return_data.size) + ceil32(32 * mem[_33562 + mem[_33562]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _33562 + ceil32(return_data.size) + ceil32(32 * mem[_33562 + mem[_33562]]) + 1
                            mem[_33562 + ceil32(return_data.size)] = _33594
                            require _33578 + (32 * _33594) + 32 <= return_data.size
                            t = _33562 + ceil32(return_data.size) + 32
                            s = _33562 + _33578 + 32
                            while s < _33562 + _33578 + (32 * _33594) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33788 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_33788]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1454
                s = _6944 - (100 * _6944 / 10000)
                s = stor9[idx].field_0
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1475 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _1498 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_1498] = mem[_1475]
            mem[_1498 + 32] = mem[_1475 + 32]
            mem[_1498 + 64] = mem[_1475 + 64]
            require return_data.size - 96 >= 96
            _1522 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1522] = mem[_1475 + 96]
            mem[_1522 + 32] = mem[_1475 + 128]
            mem[_1522 + 64] = mem[_1475 + 160]
            mem[_1498 + 96] = _1522
            mem[_1498 + 128] = mem[_1475 + 192]
            require return_data.size - 224 >= 96
            _1564 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1564] = mem[_1475 + 224]
            mem[_1564 + 32] = mem[_1475 + 256]
            mem[_1564 + 64] = mem[_1475 + 288]
            mem[_1498 + 160] = _1564
            _1590 = mem[_1498 + 64]
            if not mem[_1498 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1454
                s = mem[_1498 + 64]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1624 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1624] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1624 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1624 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1624 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1624 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1624 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1624 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1624 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _1590
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _1590
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1689 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1699 = mem[_1689]
                require mem[_1689] == mem[_1689 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1689 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1699))
                staticcall address(_1699).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1815 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1839 = mem[_1815]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1699))
                staticcall address(_1699).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1879 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1893 = mem[_1879]
                if mem[_1879] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1839:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1967 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1997 = mem[_1967]
                if 10^12 * _1893 / _1839 and mem[_1967] > -1 / 10^12 * _1893 / _1839:
                    revert with 0, 17
                _2073 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1893 / _1839 * _1997 / 10^12
                mem[mem[64] + 36] = 64
                _2107 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _2107:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _2073 + (32 * _2107) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3681 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3697 = mem[_3681]
                require mem[_3681] <= test266151307()
                require _3681 + mem[_3681] + 31 < _3681 + return_data.size
                _3713 = mem[_3681 + mem[_3681]]
                if mem[_3681 + mem[_3681]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3681 + mem[_3681]]) + 1 < 0 or _3681 + ceil32(return_data.size) + ceil32(32 * mem[_3681 + mem[_3681]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3681 + ceil32(return_data.size) + ceil32(32 * mem[_3681 + mem[_3681]]) + 1
                mem[_3681 + ceil32(return_data.size)] = _3713
                require _3697 + (32 * _3713) + 32 <= return_data.size
                t = _3681 + ceil32(return_data.size) + 32
                s = _3681 + _3697 + 32
                while s < _3681 + _3697 + (32 * _3713) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3713:
                    revert with 0, 50
                _6941 = mem[_3681 + ceil32(return_data.size) + 64]
                if mem[_3681 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3681 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_3681 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_3681 + ceil32(return_data.size) + 64] < 100 * mem[_3681 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _7119 = mem[_1454]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1699))
                staticcall address(_1699).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7177 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7215 = mem[_7177]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7215
                mem[mem[64] + 36] = _6941 - (100 * _6941 / 10000)
                mem[mem[64] + 68] = 160
                _7293 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_7119))
                call address(_7119).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7293) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10687 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10707 = mem[_10687]
                require mem[_10687] <= test266151307()
                require _10687 + mem[_10687] + 31 < _10687 + return_data.size
                _10733 = mem[_10687 + mem[_10687]]
                if mem[_10687 + mem[_10687]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10687 + mem[_10687]]) + 1 < 0 or _10687 + ceil32(return_data.size) + ceil32(32 * mem[_10687 + mem[_10687]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10687 + ceil32(return_data.size) + ceil32(32 * mem[_10687 + mem[_10687]]) + 1
                mem[_10687 + ceil32(return_data.size)] = _10733
                require _10707 + (32 * _10733) + 32 <= return_data.size
                t = _10687 + ceil32(return_data.size) + 32
                s = _10687 + _10707 + 32
                while s < _10687 + _10707 + (32 * _10733) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _14529 = mem[_1454]
                _14530 = mem[_1454 + 192]
                _14531 = mem[_1454 + 224]
                _14563 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_14563 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_14563]:
                    revert with 0, 50
                mem[_14563 + 32] = stor21
                if stor21 == address(_14530):
                    if stor21 == address(_14531):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[_14563 + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        mem[_14563 + ceil32(return_data.size) + 100] = address(_14529)
                        mem[_14563 + ceil32(return_data.size) + 132] = -1
                        require ext_code.size(address(_14530))
                        call address(_14530).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14529), -1
                        mem[_14563 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_14563 + (2 * ceil32(return_data.size)) + 100] = address(_14529)
                        mem[_14563 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_14531))
                        call address(_14531).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14529), -1
                        mem[_14563 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14563 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        _15035 = mem[_1454 + 160]
                        _15036 = mem[_1454 + 64]
                        _15037 = mem[_1454 + 32]
                        mem[_14563 + (4 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_15037))
                        staticcall address(_15037).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14563 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14563 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _15036 >= 999999:
                            mem[_14563 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_15035))
                            call address(_15035).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14563 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _15265 = mem[_1454 + 32]
                            mem[_14563 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15265))
                            staticcall address(_15265).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14563 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1454 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_14563 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14563 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14563 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _15617 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_14563 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_14563 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_14563 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_14563 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _14563 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_14563 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_14563 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_15617))
                            call address(_15617).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14563 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14563 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _14563 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _18357 = mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14563 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _18389 = mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14563 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _14563 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_14563 + (10 * ceil32(return_data.size)) + 96] = mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _18357 + (32 * _18389) + 32 <= return_data.size
                            t = _14563 + (10 * ceil32(return_data.size)) + 128
                            s = _14563 + (8 * ceil32(return_data.size)) + _18357 + 128
                            while s < _14563 + (8 * ceil32(return_data.size)) + _18357 + (32 * _18389) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21503 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_21503]
                        else:
                            mem[_14563 + (6 * ceil32(return_data.size)) + 100] = _15036
                            mem[_14563 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_15035))
                            call address(_15035).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _15036, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14563 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _15266 = mem[_1454 + 32]
                            mem[_14563 + (6 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_15266))
                            staticcall address(_15266).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14563 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1454 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_14563 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_14563 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _14563 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _15618 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_14563 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_14563 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_14563 + (8 * ceil32(return_data.size)) + 132] = 128
                            mem[_14563 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _14563 + (8 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_14563 + (8 * ceil32(return_data.size)) + 164] = this.address
                            mem[_14563 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_15618))
                            call address(_15618).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14563 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_14563 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _14563 + (10 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _18358 = mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14563 + (8 * ceil32(return_data.size)) + return_data.size + 96
                            _18390 = mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14563 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _14563 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_14563 + (10 * ceil32(return_data.size)) + 96] = mem[_14563 + (8 * ceil32(return_data.size)) + mem[_14563 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _18358 + (32 * _18390) + 32 <= return_data.size
                            t = _14563 + (10 * ceil32(return_data.size)) + 128
                            s = _14563 + (8 * ceil32(return_data.size)) + _18358 + 128
                            while s < _14563 + (8 * ceil32(return_data.size)) + _18358 + (32 * _18390) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21504 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_21504]
                    else:
                        if 1 >= mem[_14563]:
                            revert with 0, 50
                        mem[_14563 + 64] = address(_14531)
                        mem[_14563 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_14563 + 100] = eth.balance(this.address) / 2
                        mem[_14563 + 132] = 64
                        mem[_14563 + 164] = mem[_14563]
                        s = 0
                        t = _14563 + 32
                        u = _14563 + 196
                        while s < mem[_14563]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14529))
                        staticcall address(_14529).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _14563 + (32 * mem[_14563]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18337 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18373 = mem[_18337]
                        require mem[_18337] <= test266151307()
                        require _18337 + mem[_18337] + 31 < _18337 + return_data.size
                        _18405 = mem[_18337 + mem[_18337]]
                        if mem[_18337 + mem[_18337]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_18337 + mem[_18337]]) + 1 < 0 or _18337 + ceil32(return_data.size) + ceil32(32 * mem[_18337 + mem[_18337]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _18337 + ceil32(return_data.size) + ceil32(32 * mem[_18337 + mem[_18337]]) + 1
                        mem[_18337 + ceil32(return_data.size)] = _18405
                        require _18373 + (32 * _18405) + 32 <= return_data.size
                        t = _18337 + ceil32(return_data.size) + 32
                        s = _18337 + _18373 + 32
                        while s < _18337 + _18373 + (32 * _18405) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _18405:
                            revert with 0, 50
                        _21445 = mem[_18337 + ceil32(return_data.size) + 64]
                        if mem[_18337 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18337 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_18337 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _18405:
                            revert with 0, 50
                        _21581 = mem[_18337 + ceil32(return_data.size) + 64]
                        if mem[_18337 + ceil32(return_data.size) + 64] < 100 * mem[_18337 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _21623 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _21581 - (100 * _21445 / 10000)
                        mem[mem[64] + 36] = 128
                        _21659 = mem[_14563]
                        mem[mem[64] + 132] = mem[_14563]
                        s = 0
                        t = _14563 + 32
                        u = mem[64] + 164
                        while s < _21659:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_21623 + 68] = this.address
                        mem[_21623 + 100] = block.timestamp + 60
                        require ext_code.size(address(_14529))
                        call address(_14529).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _21623 + (32 * _21659) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24401 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24437 = mem[_24401]
                        require mem[_24401] <= test266151307()
                        require _24401 + mem[_24401] + 31 < _24401 + return_data.size
                        _24463 = mem[_24401 + mem[_24401]]
                        if mem[_24401 + mem[_24401]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24401 + mem[_24401]]) + 1 < 0 or _24401 + ceil32(return_data.size) + ceil32(32 * mem[_24401 + mem[_24401]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _24401 + ceil32(return_data.size) + ceil32(32 * mem[_24401 + mem[_24401]]) + 1
                        mem[_24401 + ceil32(return_data.size)] = _24463
                        require _24437 + (32 * _24463) + 32 <= return_data.size
                        t = _24401 + ceil32(return_data.size) + 32
                        s = _24401 + _24437 + 32
                        while s < _24401 + _24437 + (32 * _24463) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27155 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_27155] == mem[_27155 + 18 len 14]
                        require mem[_27155 + 32] == mem[_27155 + 50 len 14]
                        require mem[_27155 + 64] == mem[_27155 + 92 len 4]
                        mem[mem[64] + 4] = address(_14529)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14530))
                        call address(_14530).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14529), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27351 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27351] == bool(mem[_27351])
                        mem[mem[64] + 4] = address(_14529)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14531))
                        call address(_14531).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14529), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27431 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27431] == bool(mem[_27431])
                        _27487 = mem[_1454 + 160]
                        _27488 = mem[_1454 + 64]
                        _27489 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27489))
                        staticcall address(_27489).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27575 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27611 = mem[_27575]
                        if _27488 >= 999999:
                            mem[mem[64] + 4] = mem[_27575]
                            require ext_code.size(address(_27487))
                            call address(_27487).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27611
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27611
                            emit Earn(_27611);
                            _27775 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27775))
                            staticcall address(_27775).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27915 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_27915]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28171 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28221 = mem[_28171]
                            _28255 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28303 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28221
                            mem[mem[64] + 36] = 128
                            _28355 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28355:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28303 + 68] = this.address
                            mem[_28303 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28255))
                            call address(_28255).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28303 + (32 * _28355) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29595 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29635 = mem[_29595]
                            require mem[_29595] <= test266151307()
                            require _29595 + mem[_29595] + 31 < _29595 + return_data.size
                            _29675 = mem[_29595 + mem[_29595]]
                            if mem[_29595 + mem[_29595]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29595 + mem[_29595]]) + 1 < 0 or _29595 + ceil32(return_data.size) + ceil32(32 * mem[_29595 + mem[_29595]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29595 + ceil32(return_data.size) + ceil32(32 * mem[_29595 + mem[_29595]]) + 1
                            mem[_29595 + ceil32(return_data.size)] = _29675
                            require _29635 + (32 * _29675) + 32 <= return_data.size
                            t = _29595 + ceil32(return_data.size) + 32
                            s = _29595 + _29635 + 32
                            while s < _29595 + _29635 + (32 * _29675) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31047 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31047]
                        else:
                            mem[mem[64] + 4] = _27488
                            mem[mem[64] + 36] = _27611
                            require ext_code.size(address(_27487))
                            call address(_27487).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _27488, _27611
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27611
                            emit Earn(_27611);
                            _27776 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27776))
                            staticcall address(_27776).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27916 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_27916]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28172 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28222 = mem[_28172]
                            _28256 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28304 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28222
                            mem[mem[64] + 36] = 128
                            _28356 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_28304 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28256))
                            call address(_28256).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28304 + (32 * _28356) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29596 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29636 = mem[_29596]
                            require mem[_29596] <= test266151307()
                            require _29596 + mem[_29596] + 31 < _29596 + return_data.size
                            _29676 = mem[_29596 + mem[_29596]]
                            if mem[_29596 + mem[_29596]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29596 + mem[_29596]]) + 1 < 0 or _29596 + ceil32(return_data.size) + ceil32(32 * mem[_29596 + mem[_29596]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29596 + ceil32(return_data.size) + ceil32(32 * mem[_29596 + mem[_29596]]) + 1
                            mem[_29596 + ceil32(return_data.size)] = _29676
                            require _29636 + (32 * _29676) + 32 <= return_data.size
                            t = _29596 + ceil32(return_data.size) + 32
                            s = _29596 + _29636 + 32
                            while s < _29596 + _29636 + (32 * _29676) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31048 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31048]
                else:
                    if 1 >= mem[_14563]:
                        revert with 0, 50
                    mem[_14563 + 64] = address(_14530)
                    mem[_14563 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_14563 + 100] = eth.balance(this.address) / 2
                    mem[_14563 + 132] = 64
                    mem[_14563 + 164] = mem[_14563]
                    s = 0
                    t = _14563 + 32
                    u = _14563 + 196
                    while s < mem[_14563]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_14529))
                    staticcall address(_14529).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _14563 + (32 * mem[_14563]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18338 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _18374 = mem[_18338]
                    require mem[_18338] <= test266151307()
                    require _18338 + mem[_18338] + 31 < _18338 + return_data.size
                    _18406 = mem[_18338 + mem[_18338]]
                    if mem[_18338 + mem[_18338]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_18338 + mem[_18338]]) + 1 < 0 or _18338 + ceil32(return_data.size) + ceil32(32 * mem[_18338 + mem[_18338]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _18338 + ceil32(return_data.size) + ceil32(32 * mem[_18338 + mem[_18338]]) + 1
                    mem[_18338 + ceil32(return_data.size)] = _18406
                    require _18374 + (32 * _18406) + 32 <= return_data.size
                    t = _18338 + ceil32(return_data.size) + 32
                    s = _18338 + _18374 + 32
                    while s < _18338 + _18374 + (32 * _18406) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _18406:
                        revert with 0, 50
                    _21446 = mem[_18338 + ceil32(return_data.size) + 64]
                    if mem[_18338 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18338 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_18338 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _18406:
                        revert with 0, 50
                    _21582 = mem[_18338 + ceil32(return_data.size) + 64]
                    if mem[_18338 + ceil32(return_data.size) + 64] < 100 * mem[_18338 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _21624 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _21582 - (100 * _21446 / 10000)
                    mem[mem[64] + 36] = 128
                    _21660 = mem[_14563]
                    mem[mem[64] + 132] = mem[_14563]
                    s = 0
                    t = _14563 + 32
                    u = mem[64] + 164
                    while s < _21660:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_21624 + 68] = this.address
                    mem[_21624 + 100] = block.timestamp + 60
                    require ext_code.size(address(_14529))
                    call address(_14529).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _21624 + (32 * _21660) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24402 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24438 = mem[_24402]
                    require mem[_24402] <= test266151307()
                    require _24402 + mem[_24402] + 31 < _24402 + return_data.size
                    _24464 = mem[_24402 + mem[_24402]]
                    if mem[_24402 + mem[_24402]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_24402 + mem[_24402]]) + 1 < 0 or _24402 + ceil32(return_data.size) + ceil32(32 * mem[_24402 + mem[_24402]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _24402 + ceil32(return_data.size) + ceil32(32 * mem[_24402 + mem[_24402]]) + 1
                    mem[_24402 + ceil32(return_data.size)] = _24464
                    require _24438 + (32 * _24464) + 32 <= return_data.size
                    t = _24402 + ceil32(return_data.size) + 32
                    s = _24402 + _24438 + 32
                    while s < _24402 + _24438 + (32 * _24464) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_14531):
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27167 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_27167] == mem[_27167 + 18 len 14]
                        require mem[_27167 + 32] == mem[_27167 + 50 len 14]
                        require mem[_27167 + 64] == mem[_27167 + 92 len 4]
                        mem[mem[64] + 4] = address(_14529)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14530))
                        call address(_14530).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14529), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27363 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27363] == bool(mem[_27363])
                        mem[mem[64] + 4] = address(_14529)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14531))
                        call address(_14531).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14529), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27447 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27447] == bool(mem[_27447])
                        _27525 = mem[_1454 + 160]
                        _27526 = mem[_1454 + 64]
                        _27527 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27527))
                        staticcall address(_27527).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27589 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27625 = mem[_27589]
                        if _27526 >= 999999:
                            mem[mem[64] + 4] = mem[_27589]
                            require ext_code.size(address(_27525))
                            call address(_27525).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27625
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27625
                            emit Earn(_27625);
                            _27839 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27839))
                            staticcall address(_27839).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27935 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_27935]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28201 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28239 = mem[_28201]
                            _28271 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28329 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28239
                            mem[mem[64] + 36] = 128
                            _28381 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28381:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28329 + 68] = this.address
                            mem[_28329 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28271))
                            call address(_28271).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28329 + (32 * _28381) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29597 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29637 = mem[_29597]
                            require mem[_29597] <= test266151307()
                            require _29597 + mem[_29597] + 31 < _29597 + return_data.size
                            _29677 = mem[_29597 + mem[_29597]]
                            if mem[_29597 + mem[_29597]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29597 + mem[_29597]]) + 1 < 0 or _29597 + ceil32(return_data.size) + ceil32(32 * mem[_29597 + mem[_29597]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29597 + ceil32(return_data.size) + ceil32(32 * mem[_29597 + mem[_29597]]) + 1
                            mem[_29597 + ceil32(return_data.size)] = _29677
                            require _29637 + (32 * _29677) + 32 <= return_data.size
                            t = _29597 + ceil32(return_data.size) + 32
                            s = _29597 + _29637 + 32
                            while s < _29597 + _29637 + (32 * _29677) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31049 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31049]
                        else:
                            mem[mem[64] + 4] = _27526
                            mem[mem[64] + 36] = _27625
                            require ext_code.size(address(_27525))
                            call address(_27525).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _27526, _27625
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27625
                            emit Earn(_27625);
                            _27840 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27840))
                            staticcall address(_27840).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27936 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_27936]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28240 = mem[_28202]
                            _28272 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28330 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28240
                            mem[mem[64] + 36] = 128
                            _28382 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _28382:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28330 + 68] = this.address
                            mem[_28330 + 100] = block.timestamp + 60
                            require ext_code.size(address(_28272))
                            call address(_28272).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28330 + (32 * _28382) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29598 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29638 = mem[_29598]
                            require mem[_29598] <= test266151307()
                            require _29598 + mem[_29598] + 31 < _29598 + return_data.size
                            _29678 = mem[_29598 + mem[_29598]]
                            if mem[_29598 + mem[_29598]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29598 + mem[_29598]]) + 1 < 0 or _29598 + ceil32(return_data.size) + ceil32(32 * mem[_29598 + mem[_29598]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29598 + ceil32(return_data.size) + ceil32(32 * mem[_29598 + mem[_29598]]) + 1
                            mem[_29598 + ceil32(return_data.size)] = _29678
                            require _29638 + (32 * _29678) + 32 <= return_data.size
                            t = _29598 + ceil32(return_data.size) + 32
                            s = _29598 + _29638 + 32
                            while s < _29598 + _29638 + (32 * _29678) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31050 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_31050]
                    else:
                        if 1 >= mem[_14563]:
                            revert with 0, 50
                        mem[_14563 + 64] = address(_14531)
                        _27133 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _27168 = mem[_14563]
                        mem[mem[64] + 68] = mem[_14563]
                        s = 0
                        t = _14563 + 32
                        u = mem[64] + 100
                        while s < _27168:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_14529))
                        staticcall address(_14529).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _27133 + (32 * _27168) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29615 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29655 = mem[_29615]
                        require mem[_29615] <= test266151307()
                        require _29615 + mem[_29615] + 31 < _29615 + return_data.size
                        _29695 = mem[_29615 + mem[_29615]]
                        if mem[_29615 + mem[_29615]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29615 + mem[_29615]]) + 1 < 0 or _29615 + ceil32(return_data.size) + ceil32(32 * mem[_29615 + mem[_29615]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29615 + ceil32(return_data.size) + ceil32(32 * mem[_29615 + mem[_29615]]) + 1
                        mem[_29615 + ceil32(return_data.size)] = _29695
                        require _29655 + (32 * _29695) + 32 <= return_data.size
                        t = _29615 + ceil32(return_data.size) + 32
                        s = _29615 + _29655 + 32
                        while s < _29615 + _29655 + (32 * _29695) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _29695:
                            revert with 0, 50
                        _30955 = mem[_29615 + ceil32(return_data.size) + 64]
                        if mem[_29615 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_29615 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_29615 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _29695:
                            revert with 0, 50
                        _31131 = mem[_29615 + ceil32(return_data.size) + 64]
                        if mem[_29615 + ceil32(return_data.size) + 64] < 100 * mem[_29615 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _31131 - (100 * _30955 / 10000)
                        mem[mem[64] + 36] = 128
                        _31167 = mem[_14563]
                        mem[mem[64] + 132] = mem[_14563]
                        s = 0
                        t = _14563 + 32
                        u = mem[64] + 164
                        while s < _31167:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_14529))
                        call address(_14529).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args _31131 - (100 * _30955 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _31167) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32021 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32035 = mem[_32021]
                        require mem[_32021] <= test266151307()
                        require _32021 + mem[_32021] + 31 < _32021 + return_data.size
                        _32047 = mem[_32021 + mem[_32021]]
                        if mem[_32021 + mem[_32021]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_32021 + mem[_32021]]) + 1 < 0 or _32021 + ceil32(return_data.size) + ceil32(32 * mem[_32021 + mem[_32021]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _32021 + ceil32(return_data.size) + ceil32(32 * mem[_32021 + mem[_32021]]) + 1
                        mem[_32021 + ceil32(return_data.size)] = _32047
                        require _32035 + (32 * _32047) + 32 <= return_data.size
                        t = _32021 + ceil32(return_data.size) + 32
                        s = _32021 + _32035 + 32
                        while s < _32021 + _32035 + (32 * _32047) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(stor23)
                        staticcall stor23.getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32857 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        require mem[_32857] == mem[_32857 + 18 len 14]
                        require mem[_32857 + 32] == mem[_32857 + 50 len 14]
                        require mem[_32857 + 64] == mem[_32857 + 92 len 4]
                        mem[mem[64] + 4] = address(_14529)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14530))
                        call address(_14530).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14529), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32917 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32917] == bool(mem[_32917])
                        mem[mem[64] + 4] = address(_14529)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_14531))
                        call address(_14531).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_14529), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32949 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32949] == bool(mem[_32949])
                        _32973 = mem[_1454 + 160]
                        _32974 = mem[_1454 + 64]
                        _32975 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_32975))
                        staticcall address(_32975).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33011 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33021 = mem[_33011]
                        if _32974 >= 999999:
                            mem[mem[64] + 4] = mem[_33011]
                            require ext_code.size(address(_32973))
                            call address(_32973).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _33021
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _33021
                            emit Earn(_33021);
                            _33101 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_33101))
                            staticcall address(_33101).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33153 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_33153]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33275 = mem[_33257]
                            _33291 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _33309 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _33275
                            mem[mem[64] + 36] = 128
                            _33325 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_33309 + 100] = block.timestamp + 60
                            require ext_code.size(address(_33291))
                            call address(_33291).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _33309 + (32 * _33325) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33555 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33571 = mem[_33555]
                            require mem[_33555] <= test266151307()
                            require _33555 + mem[_33555] + 31 < _33555 + return_data.size
                            _33587 = mem[_33555 + mem[_33555]]
                            if mem[_33555 + mem[_33555]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_33555 + mem[_33555]]) + 1 < 0 or _33555 + ceil32(return_data.size) + ceil32(32 * mem[_33555 + mem[_33555]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _33555 + ceil32(return_data.size) + ceil32(32 * mem[_33555 + mem[_33555]]) + 1
                            mem[_33555 + ceil32(return_data.size)] = _33587
                            require _33571 + (32 * _33587) + 32 <= return_data.size
                            t = _33555 + ceil32(return_data.size) + 32
                            s = _33555 + _33571 + 32
                            while s < _33555 + _33571 + (32 * _33587) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33781 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_33781]
                        else:
                            mem[mem[64] + 4] = _32974
                            mem[mem[64] + 36] = _33021
                            require ext_code.size(address(_32973))
                            call address(_32973).0xe2bbb158 with:
                                 gas gas_remaining wei
                                args _32974, _33021
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _33021
                            emit Earn(_33021);
                            _33102 = mem[_1454 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_33102))
                            staticcall address(_33102).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33154 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1454 + 96] = mem[_33154]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33276 = mem[_33258]
                            _33292 = mem[_1454]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _33310 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _33276
                            mem[mem[64] + 36] = 128
                            _33326 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _33326:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_33310 + 68] = this.address
                            mem[_33310 + 100] = block.timestamp + 60
                            require ext_code.size(address(_33292))
                            call address(_33292).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _33310 + (32 * _33326) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33556 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _33572 = mem[_33556]
                            require mem[_33556] <= test266151307()
                            require _33556 + mem[_33556] + 31 < _33556 + return_data.size
                            _33588 = mem[_33556 + mem[_33556]]
                            if mem[_33556 + mem[_33556]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_33556 + mem[_33556]]) + 1 < 0 or _33556 + ceil32(return_data.size) + ceil32(32 * mem[_33556 + mem[_33556]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _33556 + ceil32(return_data.size) + ceil32(32 * mem[_33556 + mem[_33556]]) + 1
                            mem[_33556 + ceil32(return_data.size)] = _33588
                            require _33572 + (32 * _33588) + 32 <= return_data.size
                            t = _33556 + ceil32(return_data.size) + 32
                            s = _33556 + _33572 + 32
                            while s < _33556 + _33572 + (32 * _33588) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33782 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_33782]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1454
                s = _6941 - (100 * _6941 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _1590
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _1590
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1690 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1700 = mem[_1690]
            require mem[_1690] == mem[_1690 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_1690 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_1700))
            staticcall address(_1700).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1816 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1840 = mem[_1816]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1700))
            staticcall address(_1700).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1880 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1894 = mem[_1880]
            if mem[_1880] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1840:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1968 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1998 = mem[_1968]
            if 10^12 * _1894 / _1840 and mem[_1968] > -1 / 10^12 * _1894 / _1840:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1894 / _1840 * _1998 / 10^12
            mem[mem[64] + 36] = 64
            _2108 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _2108) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3682 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3698 = mem[_3682]
            require mem[_3682] <= test266151307()
            require _3682 + mem[_3682] + 31 < _3682 + return_data.size
            _3714 = mem[_3682 + mem[_3682]]
            if mem[_3682 + mem[_3682]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3682 + mem[_3682]]) + 1 < 0 or _3682 + ceil32(return_data.size) + ceil32(32 * mem[_3682 + mem[_3682]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3682 + ceil32(return_data.size) + ceil32(32 * mem[_3682 + mem[_3682]]) + 1
            mem[_3682 + ceil32(return_data.size)] = _3714
            require _3698 + (32 * _3714) + 32 <= return_data.size
            t = _3682 + ceil32(return_data.size) + 32
            s = _3682 + _3698 + 32
            while s < _3682 + _3698 + (32 * _3714) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3714:
                revert with 0, 50
            _6942 = mem[_3682 + ceil32(return_data.size) + 64]
            if mem[_3682 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3682 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_3682 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_3682 + ceil32(return_data.size) + 64] < 100 * mem[_3682 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _7120 = mem[_1454]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1700))
            staticcall address(_1700).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7178 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7216 = mem[_7178]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7216
            mem[mem[64] + 36] = _6942 - (100 * _6942 / 10000)
            mem[mem[64] + 68] = 160
            _7294 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_7120))
            call address(_7120).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7294) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10688 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10708 = mem[_10688]
            require mem[_10688] <= test266151307()
            require _10688 + mem[_10688] + 31 < _10688 + return_data.size
            _10734 = mem[_10688 + mem[_10688]]
            if mem[_10688 + mem[_10688]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_10688 + mem[_10688]]) + 1 < 0 or _10688 + ceil32(return_data.size) + ceil32(32 * mem[_10688 + mem[_10688]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _10688 + ceil32(return_data.size) + ceil32(32 * mem[_10688 + mem[_10688]]) + 1
            mem[_10688 + ceil32(return_data.size)] = _10734
            require _10708 + (32 * _10734) + 32 <= return_data.size
            t = _10688 + ceil32(return_data.size) + 32
            s = _10688 + _10708 + 32
            while s < _10688 + _10708 + (32 * _10734) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _14532 = mem[_1454]
            _14533 = mem[_1454 + 192]
            _14534 = mem[_1454 + 224]
            _14565 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_14565 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_14565]:
                revert with 0, 50
            mem[_14565 + 32] = stor21
            if stor21 == address(_14533):
                if stor21 == address(_14534):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[_14565 + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    mem[_14565 + ceil32(return_data.size) + 100] = address(_14532)
                    mem[_14565 + ceil32(return_data.size) + 132] = -1
                    require ext_code.size(address(_14533))
                    call address(_14533).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14532), -1
                    mem[_14565 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_14565 + (2 * ceil32(return_data.size)) + 100] = address(_14532)
                    mem[_14565 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_14534))
                    call address(_14534).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14532), -1
                    mem[_14565 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _14565 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    _15038 = mem[_1454 + 160]
                    _15039 = mem[_1454 + 64]
                    _15040 = mem[_1454 + 32]
                    mem[_14565 + (4 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_15040))
                    staticcall address(_15040).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_14565 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _14565 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _15039 >= 999999:
                        mem[_14565 + (6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_15038))
                        call address(_15038).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_14565 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _15268 = mem[_1454 + 32]
                        mem[_14565 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_15268))
                        staticcall address(_15268).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14565 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1454 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_14565 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14565 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14565 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _15620 = mem[_1454]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_14565 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_14565 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_14565 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_14565 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _14565 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_14565 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_14565 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_15620))
                        call address(_15620).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14565 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_14565 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _14565 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _18359 = mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14565 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _18391 = mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14565 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _14565 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_14565 + (10 * ceil32(return_data.size)) + 96] = mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _18359 + (32 * _18391) + 32 <= return_data.size
                        t = _14565 + (10 * ceil32(return_data.size)) + 128
                        s = _14565 + (8 * ceil32(return_data.size)) + _18359 + 128
                        while s < _14565 + (8 * ceil32(return_data.size)) + _18359 + (32 * _18391) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21505 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_21505]
                    else:
                        mem[_14565 + (6 * ceil32(return_data.size)) + 100] = _15039
                        mem[_14565 + (6 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_15038))
                        call address(_15038).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _15039, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_14565 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _15269 = mem[_1454 + 32]
                        mem[_14565 + (6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_15269))
                        staticcall address(_15269).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14565 + (6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1454 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_14565 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_14565 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _14565 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _15621 = mem[_1454]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_14565 + (8 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_14565 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_14565 + (8 * ceil32(return_data.size)) + 132] = 128
                        mem[_14565 + (8 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _14565 + (8 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_14565 + (8 * ceil32(return_data.size)) + 164] = this.address
                        mem[_14565 + (8 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_15621))
                        call address(_15621).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_14565 + (8 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_14565 + (8 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _14565 + (10 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _18360 = mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _14565 + (8 * ceil32(return_data.size)) + return_data.size + 96
                        _18392 = mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _14565 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _14565 + (10 * ceil32(return_data.size)) + ceil32(32 * mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_14565 + (10 * ceil32(return_data.size)) + 96] = mem[_14565 + (8 * ceil32(return_data.size)) + mem[_14565 + (8 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _18360 + (32 * _18392) + 32 <= return_data.size
                        t = _14565 + (10 * ceil32(return_data.size)) + 128
                        s = _14565 + (8 * ceil32(return_data.size)) + _18360 + 128
                        while s < _14565 + (8 * ceil32(return_data.size)) + _18360 + (32 * _18392) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21506 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_21506]
                else:
                    if 1 >= mem[_14565]:
                        revert with 0, 50
                    mem[_14565 + 64] = address(_14534)
                    mem[_14565 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_14565 + 100] = eth.balance(this.address) / 2
                    mem[_14565 + 132] = 64
                    mem[_14565 + 164] = mem[_14565]
                    s = 0
                    t = _14565 + 32
                    u = _14565 + 196
                    while s < mem[_14565]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_14532))
                    staticcall address(_14532).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _14565 + (32 * mem[_14565]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18339 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _18375 = mem[_18339]
                    require mem[_18339] <= test266151307()
                    require _18339 + mem[_18339] + 31 < _18339 + return_data.size
                    _18407 = mem[_18339 + mem[_18339]]
                    if mem[_18339 + mem[_18339]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_18339 + mem[_18339]]) + 1 < 0 or _18339 + ceil32(return_data.size) + ceil32(32 * mem[_18339 + mem[_18339]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _18339 + ceil32(return_data.size) + ceil32(32 * mem[_18339 + mem[_18339]]) + 1
                    mem[_18339 + ceil32(return_data.size)] = _18407
                    require _18375 + (32 * _18407) + 32 <= return_data.size
                    t = _18339 + ceil32(return_data.size) + 32
                    s = _18339 + _18375 + 32
                    while s < _18339 + _18375 + (32 * _18407) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _18407:
                        revert with 0, 50
                    _21447 = mem[_18339 + ceil32(return_data.size) + 64]
                    if mem[_18339 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18339 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_18339 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _18407:
                        revert with 0, 50
                    _21583 = mem[_18339 + ceil32(return_data.size) + 64]
                    if mem[_18339 + ceil32(return_data.size) + 64] < 100 * mem[_18339 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _21583 - (100 * _21447 / 10000)
                    mem[mem[64] + 36] = 128
                    _21661 = mem[_14565]
                    mem[mem[64] + 132] = mem[_14565]
                    s = 0
                    t = _14565 + 32
                    u = mem[64] + 164
                    while s < _21661:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_14532))
                    call address(_14532).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _21583 - (100 * _21447 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _21661) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24403 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24439 = mem[_24403]
                    require mem[_24403] <= test266151307()
                    require _24403 + mem[_24403] + 31 < _24403 + return_data.size
                    _24465 = mem[_24403 + mem[_24403]]
                    if mem[_24403 + mem[_24403]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_24403 + mem[_24403]]) + 1 < 0 or _24403 + ceil32(return_data.size) + ceil32(32 * mem[_24403 + mem[_24403]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _24403 + ceil32(return_data.size) + ceil32(32 * mem[_24403 + mem[_24403]]) + 1
                    mem[_24403 + ceil32(return_data.size)] = _24465
                    require _24439 + (32 * _24465) + 32 <= return_data.size
                    t = _24403 + ceil32(return_data.size) + 32
                    s = _24403 + _24439 + 32
                    while s < _24403 + _24439 + (32 * _24465) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27156 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_27156] == mem[_27156 + 18 len 14]
                    require mem[_27156 + 32] == mem[_27156 + 50 len 14]
                    require mem[_27156 + 64] == mem[_27156 + 92 len 4]
                    mem[mem[64] + 4] = address(_14532)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14533))
                    call address(_14533).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14532), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27353 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27353] == bool(mem[_27353])
                    mem[mem[64] + 4] = address(_14532)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14534))
                    call address(_14534).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14532), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27433 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27433] == bool(mem[_27433])
                    _27490 = mem[_1454 + 160]
                    _27491 = mem[_1454 + 64]
                    _27492 = mem[_1454 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_27492))
                    staticcall address(_27492).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27576 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27613 = mem[_27576]
                    if _27491 >= 999999:
                        mem[mem[64] + 4] = mem[_27576]
                        require ext_code.size(address(_27490))
                        call address(_27490).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _27613
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27613
                        emit Earn(_27613);
                        _27781 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27781))
                        staticcall address(_27781).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27918 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1454 + 96] = mem[_27918]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28173 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28223 = mem[_28173]
                        _28257 = mem[_1454]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28305 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28223
                        mem[mem[64] + 36] = 128
                        _28357 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _28357:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28305 + 68] = this.address
                        mem[_28305 + 100] = block.timestamp + 60
                        require ext_code.size(address(_28257))
                        call address(_28257).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28305 + (32 * _28357) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29599 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29639 = mem[_29599]
                        require mem[_29599] <= test266151307()
                        require _29599 + mem[_29599] + 31 < _29599 + return_data.size
                        _29679 = mem[_29599 + mem[_29599]]
                        if mem[_29599 + mem[_29599]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29599 + mem[_29599]]) + 1 < 0 or _29599 + ceil32(return_data.size) + ceil32(32 * mem[_29599 + mem[_29599]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29599 + ceil32(return_data.size) + ceil32(32 * mem[_29599 + mem[_29599]]) + 1
                        mem[_29599 + ceil32(return_data.size)] = _29679
                        require _29639 + (32 * _29679) + 32 <= return_data.size
                        t = _29599 + ceil32(return_data.size) + 32
                        s = _29599 + _29639 + 32
                        while s < _29599 + _29639 + (32 * _29679) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31051 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_31051]
                    else:
                        mem[mem[64] + 4] = _27491
                        mem[mem[64] + 36] = _27613
                        require ext_code.size(address(_27490))
                        call address(_27490).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _27491, _27613
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27613
                        emit Earn(_27613);
                        _27782 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27782))
                        staticcall address(_27782).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27919 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1454 + 96] = mem[_27919]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28174 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28224 = mem[_28174]
                        _28258 = mem[_1454]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28306 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28224
                        mem[mem[64] + 36] = 128
                        _28358 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _28358:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28306 + 68] = this.address
                        mem[_28306 + 100] = block.timestamp + 60
                        require ext_code.size(address(_28258))
                        call address(_28258).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28306 + (32 * _28358) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29600 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29640 = mem[_29600]
                        require mem[_29600] <= test266151307()
                        require _29600 + mem[_29600] + 31 < _29600 + return_data.size
                        _29680 = mem[_29600 + mem[_29600]]
                        if mem[_29600 + mem[_29600]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29600 + mem[_29600]]) + 1 < 0 or _29600 + ceil32(return_data.size) + ceil32(32 * mem[_29600 + mem[_29600]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29600 + ceil32(return_data.size) + ceil32(32 * mem[_29600 + mem[_29600]]) + 1
                        mem[_29600 + ceil32(return_data.size)] = _29680
                        require _29640 + (32 * _29680) + 32 <= return_data.size
                        t = _29600 + ceil32(return_data.size) + 32
                        s = _29600 + _29640 + 32
                        while s < _29600 + _29640 + (32 * _29680) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31052 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_31052]
            else:
                if 1 >= mem[_14565]:
                    revert with 0, 50
                mem[_14565 + 64] = address(_14533)
                mem[_14565 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_14565 + 100] = eth.balance(this.address) / 2
                mem[_14565 + 132] = 64
                mem[_14565 + 164] = mem[_14565]
                s = 0
                t = _14565 + 32
                u = _14565 + 196
                while s < mem[_14565]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_14532))
                staticcall address(_14532).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _14565 + (32 * mem[_14565]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18340 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _18376 = mem[_18340]
                require mem[_18340] <= test266151307()
                require _18340 + mem[_18340] + 31 < _18340 + return_data.size
                _18408 = mem[_18340 + mem[_18340]]
                if mem[_18340 + mem[_18340]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_18340 + mem[_18340]]) + 1 < 0 or _18340 + ceil32(return_data.size) + ceil32(32 * mem[_18340 + mem[_18340]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _18340 + ceil32(return_data.size) + ceil32(32 * mem[_18340 + mem[_18340]]) + 1
                mem[_18340 + ceil32(return_data.size)] = _18408
                require _18376 + (32 * _18408) + 32 <= return_data.size
                t = _18340 + ceil32(return_data.size) + 32
                s = _18340 + _18376 + 32
                while s < _18340 + _18376 + (32 * _18408) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _18408:
                    revert with 0, 50
                _21448 = mem[_18340 + ceil32(return_data.size) + 64]
                if mem[_18340 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_18340 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_18340 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _18408:
                    revert with 0, 50
                _21584 = mem[_18340 + ceil32(return_data.size) + 64]
                if mem[_18340 + ceil32(return_data.size) + 64] < 100 * mem[_18340 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _21584 - (100 * _21448 / 10000)
                mem[mem[64] + 36] = 128
                _21662 = mem[_14565]
                mem[mem[64] + 132] = mem[_14565]
                s = 0
                t = _14565 + 32
                u = mem[64] + 164
                while s < _21662:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_14532))
                call address(_14532).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args _21584 - (100 * _21448 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _21662) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24404 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24440 = mem[_24404]
                require mem[_24404] <= test266151307()
                require _24404 + mem[_24404] + 31 < _24404 + return_data.size
                _24466 = mem[_24404 + mem[_24404]]
                if mem[_24404 + mem[_24404]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_24404 + mem[_24404]]) + 1 < 0 or _24404 + ceil32(return_data.size) + ceil32(32 * mem[_24404 + mem[_24404]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _24404 + ceil32(return_data.size) + ceil32(32 * mem[_24404 + mem[_24404]]) + 1
                mem[_24404 + ceil32(return_data.size)] = _24466
                require _24440 + (32 * _24466) + 32 <= return_data.size
                t = _24404 + ceil32(return_data.size) + 32
                s = _24404 + _24440 + 32
                while s < _24404 + _24440 + (32 * _24466) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_14534):
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27169 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_27169] == mem[_27169 + 18 len 14]
                    require mem[_27169 + 32] == mem[_27169 + 50 len 14]
                    require mem[_27169 + 64] == mem[_27169 + 92 len 4]
                    mem[mem[64] + 4] = address(_14532)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14533))
                    call address(_14533).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14532), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27364 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27364] == bool(mem[_27364])
                    mem[mem[64] + 4] = address(_14532)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14534))
                    call address(_14534).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14532), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27449 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27449] == bool(mem[_27449])
                    _27530 = mem[_1454 + 160]
                    _27531 = mem[_1454 + 64]
                    _27532 = mem[_1454 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_27532))
                    staticcall address(_27532).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27591 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27626 = mem[_27591]
                    if _27531 >= 999999:
                        mem[mem[64] + 4] = mem[_27591]
                        require ext_code.size(address(_27530))
                        call address(_27530).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _27626
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27626
                        emit Earn(_27626);
                        _27846 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27846))
                        staticcall address(_27846).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27937 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1454 + 96] = mem[_27937]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28204 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28241 = mem[_28204]
                        _28273 = mem[_1454]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28333 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28241
                        mem[mem[64] + 36] = 128
                        _28384 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _28384:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28333 + 68] = this.address
                        mem[_28333 + 100] = block.timestamp + 60
                        require ext_code.size(address(_28273))
                        call address(_28273).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28333 + (32 * _28384) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29601 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29641 = mem[_29601]
                        require mem[_29601] <= test266151307()
                        require _29601 + mem[_29601] + 31 < _29601 + return_data.size
                        _29681 = mem[_29601 + mem[_29601]]
                        if mem[_29601 + mem[_29601]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29601 + mem[_29601]]) + 1 < 0 or _29601 + ceil32(return_data.size) + ceil32(32 * mem[_29601 + mem[_29601]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29601 + ceil32(return_data.size) + ceil32(32 * mem[_29601 + mem[_29601]]) + 1
                        mem[_29601 + ceil32(return_data.size)] = _29681
                        require _29641 + (32 * _29681) + 32 <= return_data.size
                        t = _29601 + ceil32(return_data.size) + 32
                        s = _29601 + _29641 + 32
                        while s < _29601 + _29641 + (32 * _29681) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31053 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_31053]
                    else:
                        mem[mem[64] + 4] = _27531
                        mem[mem[64] + 36] = _27626
                        require ext_code.size(address(_27530))
                        call address(_27530).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _27531, _27626
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27626
                        emit Earn(_27626);
                        _27847 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27847))
                        staticcall address(_27847).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27938 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1454 + 96] = mem[_27938]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28205 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28242 = mem[_28205]
                        _28274 = mem[_1454]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28334 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28242
                        mem[mem[64] + 36] = 128
                        _28385 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _28385:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28334 + 68] = this.address
                        mem[_28334 + 100] = block.timestamp + 60
                        require ext_code.size(address(_28274))
                        call address(_28274).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28334 + (32 * _28385) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29602 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29642 = mem[_29602]
                        require mem[_29602] <= test266151307()
                        require _29602 + mem[_29602] + 31 < _29602 + return_data.size
                        _29682 = mem[_29602 + mem[_29602]]
                        if mem[_29602 + mem[_29602]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29602 + mem[_29602]]) + 1 < 0 or _29602 + ceil32(return_data.size) + ceil32(32 * mem[_29602 + mem[_29602]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29602 + ceil32(return_data.size) + ceil32(32 * mem[_29602 + mem[_29602]]) + 1
                        mem[_29602 + ceil32(return_data.size)] = _29682
                        require _29642 + (32 * _29682) + 32 <= return_data.size
                        t = _29602 + ceil32(return_data.size) + 32
                        s = _29602 + _29642 + 32
                        while s < _29602 + _29642 + (32 * _29682) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31054 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_31054]
                else:
                    if 1 >= mem[_14565]:
                        revert with 0, 50
                    mem[_14565 + 64] = address(_14534)
                    _27136 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _27170 = mem[_14565]
                    mem[mem[64] + 68] = mem[_14565]
                    s = 0
                    t = _14565 + 32
                    u = mem[64] + 100
                    while s < _27170:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_14532))
                    staticcall address(_14532).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _27136 + (32 * _27170) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29616 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29656 = mem[_29616]
                    require mem[_29616] <= test266151307()
                    require _29616 + mem[_29616] + 31 < _29616 + return_data.size
                    _29696 = mem[_29616 + mem[_29616]]
                    if mem[_29616 + mem[_29616]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_29616 + mem[_29616]]) + 1 < 0 or _29616 + ceil32(return_data.size) + ceil32(32 * mem[_29616 + mem[_29616]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _29616 + ceil32(return_data.size) + ceil32(32 * mem[_29616 + mem[_29616]]) + 1
                    mem[_29616 + ceil32(return_data.size)] = _29696
                    require _29656 + (32 * _29696) + 32 <= return_data.size
                    t = _29616 + ceil32(return_data.size) + 32
                    s = _29616 + _29656 + 32
                    while s < _29616 + _29656 + (32 * _29696) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _29696:
                        revert with 0, 50
                    _30956 = mem[_29616 + ceil32(return_data.size) + 64]
                    if mem[_29616 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_29616 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_29616 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _29696:
                        revert with 0, 50
                    _31132 = mem[_29616 + ceil32(return_data.size) + 64]
                    if mem[_29616 + ceil32(return_data.size) + 64] < 100 * mem[_29616 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _31154 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _31132 - (100 * _30956 / 10000)
                    mem[mem[64] + 36] = 128
                    _31168 = mem[_14565]
                    mem[mem[64] + 132] = mem[_14565]
                    s = 0
                    t = _14565 + 32
                    u = mem[64] + 164
                    while s < _31168:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_31154 + 68] = this.address
                    mem[_31154 + 100] = block.timestamp + 60
                    require ext_code.size(address(_14532))
                    call address(_14532).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _31154 + (32 * _31168) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32022 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32036 = mem[_32022]
                    require mem[_32022] <= test266151307()
                    require _32022 + mem[_32022] + 31 < _32022 + return_data.size
                    _32048 = mem[_32022 + mem[_32022]]
                    if mem[_32022 + mem[_32022]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_32022 + mem[_32022]]) + 1 < 0 or _32022 + ceil32(return_data.size) + ceil32(32 * mem[_32022 + mem[_32022]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _32022 + ceil32(return_data.size) + ceil32(32 * mem[_32022 + mem[_32022]]) + 1
                    mem[_32022 + ceil32(return_data.size)] = _32048
                    require _32036 + (32 * _32048) + 32 <= return_data.size
                    t = _32022 + ceil32(return_data.size) + 32
                    s = _32022 + _32036 + 32
                    while s < _32022 + _32036 + (32 * _32048) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    require ext_code.size(stor23)
                    staticcall stor23.getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32858 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_32858] == mem[_32858 + 18 len 14]
                    require mem[_32858 + 32] == mem[_32858 + 50 len 14]
                    require mem[_32858 + 64] == mem[_32858 + 92 len 4]
                    mem[mem[64] + 4] = address(_14532)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14533))
                    call address(_14533).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14532), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32918 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_32918] == bool(mem[_32918])
                    mem[mem[64] + 4] = address(_14532)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_14534))
                    call address(_14534).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_14532), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32950 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_32950] == bool(mem[_32950])
                    _32976 = mem[_1454 + 160]
                    _32977 = mem[_1454 + 64]
                    _32978 = mem[_1454 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_32978))
                    staticcall address(_32978).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33012 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _33022 = mem[_33012]
                    if _32977 >= 999999:
                        mem[mem[64] + 4] = mem[_33012]
                        require ext_code.size(address(_32976))
                        call address(_32976).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _33022
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _33022
                        emit Earn(_33022);
                        _33103 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_33103))
                        staticcall address(_33103).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33155 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1454 + 96] = mem[_33155]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33259 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33277 = mem[_33259]
                        _33293 = mem[_1454]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _33311 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _33277
                        mem[mem[64] + 36] = 128
                        _33327 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _33327:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_33311 + 68] = this.address
                        mem[_33311 + 100] = block.timestamp + 60
                        require ext_code.size(address(_33293))
                        call address(_33293).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _33311 + (32 * _33327) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33557 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33573 = mem[_33557]
                        require mem[_33557] <= test266151307()
                        require _33557 + mem[_33557] + 31 < _33557 + return_data.size
                        _33589 = mem[_33557 + mem[_33557]]
                        if mem[_33557 + mem[_33557]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_33557 + mem[_33557]]) + 1 < 0 or _33557 + ceil32(return_data.size) + ceil32(32 * mem[_33557 + mem[_33557]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _33557 + ceil32(return_data.size) + ceil32(32 * mem[_33557 + mem[_33557]]) + 1
                        mem[_33557 + ceil32(return_data.size)] = _33589
                        require _33573 + (32 * _33589) + 32 <= return_data.size
                        t = _33557 + ceil32(return_data.size) + 32
                        s = _33557 + _33573 + 32
                        while s < _33557 + _33573 + (32 * _33589) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33783 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_33783]
                    else:
                        mem[mem[64] + 4] = _32977
                        mem[mem[64] + 36] = _33022
                        require ext_code.size(address(_32976))
                        call address(_32976).0xe2bbb158 with:
                             gas gas_remaining wei
                            args _32977, _33022
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _33022
                        emit Earn(_33022);
                        _33104 = mem[_1454 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_33104))
                        staticcall address(_33104).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33156 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1454 + 96] = mem[_33156]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33260 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33278 = mem[_33260]
                        _33294 = mem[_1454]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _33312 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _33278
                        mem[mem[64] + 36] = 128
                        _33328 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _33328:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_33312 + 68] = this.address
                        mem[_33312 + 100] = block.timestamp + 60
                        require ext_code.size(address(_33294))
                        call address(_33294).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _33312 + (32 * _33328) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33558 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33574 = mem[_33558]
                        require mem[_33558] <= test266151307()
                        require _33558 + mem[_33558] + 31 < _33558 + return_data.size
                        _33590 = mem[_33558 + mem[_33558]]
                        if mem[_33558 + mem[_33558]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_33558 + mem[_33558]]) + 1 < 0 or _33558 + ceil32(return_data.size) + ceil32(32 * mem[_33558 + mem[_33558]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _33558 + ceil32(return_data.size) + ceil32(32 * mem[_33558 + mem[_33558]]) + 1
                        mem[_33558 + ceil32(return_data.size)] = _33590
                        require _33574 + (32 * _33590) + 32 <= return_data.size
                        t = _33558 + ceil32(return_data.size) + 32
                        s = _33558 + _33574 + 32
                        while s < _33558 + _33574 + (32 * _33590) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33784 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_33784]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _1454
            s = _6942 - (100 * _6942 / 10000)
            s = stor9[idx].field_0
            continue 
        _1459 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1459] = 0
        mem[_1459 + 32] = 0
        mem[_1459 + 64] = 0
        mem[_1459 + 96] = 0
        mem[_1459 + 128] = 0
        mem[_1459 + 160] = 0
        mem[_1459 + 192] = 0
        mem[_1459 + 224] = 0
        _1468 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_1468 + 32 len 64] = call.data[calldata.size len 64]
        idx = 0
        s = 96
        t = 0
        u = 0
        v = 0
        v = _1459
        v = 0
        v = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _3644 = mem[64]
            mem[64] = mem[64] + 256
            mem[_3644] = strategyInfo[stor9[idx].field_0].field_0
            mem[_3644 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_3644 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_3644 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_3644 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_3644 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_3644 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_3644 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3680 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _3695 = mem[_3680]
                if not mem[_3680]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    t = t
                    u = u
                    v = mem[_3680]
                    v = _3644
                    v = stor9[idx].field_0
                    v = v
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3754 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _3780 = mem[_3754]
                require mem[_3754] == mem[_3754 + 18 len 14]
                _3790 = mem[_3754 + 32]
                require mem[_3754 + 32] == mem[_3754 + 50 len 14]
                require mem[_3754 + 64] == mem[_3754 + 92 len 4]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3820 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3836 = mem[_3820]
                if _3695 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not mem[_3820]:
                    revert with 0, 18
                if 10^12 * _3695 / mem[_3820] and Mask(112, 0, _3780) > -1 / 10^12 * _3695 / mem[_3820]:
                    revert with 0, 17
                if 10^12 * _3695 / mem[_3820] and Mask(112, 0, _3790) > -1 / 10^12 * _3695 / mem[_3820]:
                    revert with 0, 17
                if 1 >= mem[_1468]:
                    revert with 0, 50
                mem[_1468 + 64] = stor21
                if 0 >= mem[_1468]:
                    revert with 0, 50
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    mem[_1468 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                    _4058 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3695 / _3836 * Mask(112, 0, _3790) / 10^12
                    mem[mem[64] + 36] = 64
                    _4088 = mem[_1468]
                    mem[mem[64] + 68] = mem[_1468]
                    s = 0
                    t = _1468 + 32
                    u = mem[64] + 100
                    while s < _4088:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _4058 + (32 * _4088) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6990 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7014 = mem[_6990]
                    require mem[_6990] <= test266151307()
                    require _6990 + mem[_6990] + 31 < _6990 + return_data.size
                    _7036 = mem[_6990 + mem[_6990]]
                    if mem[_6990 + mem[_6990]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6990 + mem[_6990]]) + 1 < 0 or _6990 + ceil32(return_data.size) + ceil32(32 * mem[_6990 + mem[_6990]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6990 + ceil32(return_data.size) + ceil32(32 * mem[_6990 + mem[_6990]]) + 1
                    mem[_6990 + ceil32(return_data.size)] = _7036
                    require _7014 + (32 * _7036) + 32 <= return_data.size
                    t = _6990 + ceil32(return_data.size) + 32
                    s = _6990 + _7014 + 32
                    while s < _6990 + _7014 + (32 * _7036) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7036:
                        revert with 0, 50
                    _10672 = mem[_6990 + ceil32(return_data.size) + 64]
                    if 10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12 > !mem[_6990 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3644 + 128] = (10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12) + mem[_6990 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12) + _10672):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _6990 + ceil32(return_data.size)
                    t = 10^12 * _3695 / _3836 * Mask(112, 0, _3790) / 10^12
                    u = 10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12
                    v = _3695
                    v = _3644
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12) + _10672
                    continue 
                mem[_1468 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12
                    mem[mem[64] + 36] = 64
                    _4098 = mem[_1468]
                    mem[mem[64] + 68] = mem[_1468]
                    s = 0
                    t = _1468 + 32
                    u = mem[64] + 100
                    while s < _4098:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12, 64, mem[mem[64] + 68 len (32 * _4098) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6989 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7013 = mem[_6989]
                    require mem[_6989] <= test266151307()
                    require _6989 + mem[_6989] + 31 < _6989 + return_data.size
                    _7035 = mem[_6989 + mem[_6989]]
                    if mem[_6989 + mem[_6989]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6989 + mem[_6989]]) + 1 < 0 or _6989 + ceil32(return_data.size) + ceil32(32 * mem[_6989 + mem[_6989]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6989 + ceil32(return_data.size) + ceil32(32 * mem[_6989 + mem[_6989]]) + 1
                    mem[_6989 + ceil32(return_data.size)] = _7035
                    require _7013 + (32 * _7035) + 32 <= return_data.size
                    t = _6989 + ceil32(return_data.size) + 32
                    s = _6989 + _7013 + 32
                    while s < _6989 + _7013 + (32 * _7035) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7035:
                        revert with 0, 50
                    _10671 = mem[_6989 + ceil32(return_data.size) + 64]
                    if 10^12 * _3695 / _3836 * Mask(112, 0, _3790) / 10^12 > !mem[_6989 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3644 + 128] = (10^12 * _3695 / _3836 * Mask(112, 0, _3790) / 10^12) + mem[_6989 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3695 / _3836 * Mask(112, 0, _3790) / 10^12) + _10671):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _6989 + ceil32(return_data.size)
                    t = 10^12 * _3695 / _3836 * Mask(112, 0, _3790) / 10^12
                    u = 10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12
                    v = _3695
                    v = _3644
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3695 / _3836 * Mask(112, 0, _3790) / 10^12) + _10671
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4103 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4114 = mem[_4103]
                mem[mem[64] + 4] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4205 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4233 = mem[_4205]
                if mem[_4205] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _4114:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4408 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4438 = mem[_4408]
                if 10^12 * _4233 / _4114 and mem[_4408] > -1 / 10^12 * _4233 / _4114:
                    revert with 0, 17
                _4546 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _4233 / _4114 * _4438 / 10^12
                mem[mem[64] + 36] = 64
                _4584 = mem[_1468]
                mem[mem[64] + 68] = mem[_1468]
                t = 0
                u = _1468 + 32
                w = mem[64] + 100
                while t < _4584:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4546 + (32 * _4584) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6988 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7012 = mem[_6988]
                require mem[_6988] <= test266151307()
                require _6988 + mem[_6988] + 31 < _6988 + return_data.size
                _7034 = mem[_6988 + mem[_6988]]
                if mem[_6988 + mem[_6988]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6988 + mem[_6988]]) + 1 < 0 or _6988 + ceil32(return_data.size) + ceil32(32 * mem[_6988 + mem[_6988]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6988 + ceil32(return_data.size) + ceil32(32 * mem[_6988 + mem[_6988]]) + 1
                mem[_6988 + ceil32(return_data.size)] = _7034
                require _7012 + (32 * _7034) + 32 <= return_data.size
                u = _6988 + ceil32(return_data.size) + 32
                t = _6988 + _7012 + 32
                while t < _6988 + _7012 + (32 * _7034) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _7034:
                    revert with 0, 50
                _10670 = mem[_6988 + ceil32(return_data.size) + 64]
                mem[_3644 + 128] = mem[_6988 + ceil32(return_data.size) + 64]
                if v > !_10670:
                    revert with 0, 17
                if 0 >= mem[_1468]:
                    revert with 0, 50
                mem[_1468 + 32] = mem[_3644 + 236 len 20]
                _10719 = mem[_3644 + 224]
                _10720 = mem[_3644]
                require ext_code.size(mem[_3644 + 236 len 20])
                staticcall mem[_3644 + 236 len 20].0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10754 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10764 = mem[_10754]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_10719))
                staticcall address(_10719).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10792 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10832 = mem[_10792]
                if mem[_10792] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _10764:
                    revert with 0, 18
                mem[mem[64] + 4] = address(_10720)
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args address(_10720)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10978 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11008 = mem[_10978]
                if 10^12 * _10832 / _10764 and mem[_10978] > -1 / 10^12 * _10832 / _10764:
                    revert with 0, 17
                _11126 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _10832 / _10764 * _11008 / 10^12
                mem[mem[64] + 36] = 64
                _11162 = mem[_1468]
                mem[mem[64] + 68] = mem[_1468]
                t = 0
                u = _1468 + 32
                w = mem[64] + 100
                while t < _11162:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(address(_10720))
                staticcall address(_10720).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _11126 + (32 * _11162) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14584 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _14598 = mem[_14584]
                require mem[_14584] <= test266151307()
                require _14584 + mem[_14584] + 31 < _14584 + return_data.size
                _14628 = mem[_14584 + mem[_14584]]
                if mem[_14584 + mem[_14584]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_14584 + mem[_14584]]) + 1 < 0 or _14584 + ceil32(return_data.size) + ceil32(32 * mem[_14584 + mem[_14584]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _14584 + ceil32(return_data.size) + ceil32(32 * mem[_14584 + mem[_14584]]) + 1
                mem[_14584 + ceil32(return_data.size)] = _14628
                require _14598 + (32 * _14628) + 32 <= return_data.size
                u = _14584 + ceil32(return_data.size) + 32
                t = _14584 + _14598 + 32
                while t < _14584 + _14598 + (32 * _14628) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _14628:
                    revert with 0, 50
                if mem[_3644 + 128] > !mem[_14584 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3644 + 128] = mem[_3644 + 128] + mem[_14584 + ceil32(return_data.size) + 64]
                if v + _10670 > !mem[_3644 + 128]:
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = 10^12 * _3695 / _3836 * Mask(112, 0, _3790) / 10^12
                u = 10^12 * _3695 / _3836 * Mask(112, 0, _3780) / 10^12
                v = _3695
                v = _3644
                v = stor9[idx].field_0
                v = v + _10670 + mem[_3644 + 128]
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3679 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _3694 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_3694] = mem[_3679]
            mem[_3694 + 32] = mem[_3679 + 32]
            mem[_3694 + 64] = mem[_3679 + 64]
            require return_data.size - 96 >= 96
            _3718 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3718] = mem[_3679 + 96]
            mem[_3718 + 32] = mem[_3679 + 128]
            mem[_3718 + 64] = mem[_3679 + 160]
            mem[_3694 + 96] = _3718
            mem[_3694 + 128] = mem[_3679 + 192]
            require return_data.size - 224 >= 96
            _3744 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3744] = mem[_3679 + 224]
            mem[_3744 + 32] = mem[_3679 + 256]
            mem[_3744 + 64] = mem[_3679 + 288]
            mem[_3694 + 160] = _3744
            _3768 = mem[_3694 + 64]
            if not mem[_3694 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_3694 + 64]
                v = _3644
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3800 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3804 = mem[_3800]
            require mem[_3800] == mem[_3800 + 18 len 14]
            _3830 = mem[_3800 + 32]
            require mem[_3800 + 32] == mem[_3800 + 50 len 14]
            require mem[_3800 + 64] == mem[_3800 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3910 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3936 = mem[_3910]
            if _3768 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_3910]:
                revert with 0, 18
            if 10^12 * _3768 / mem[_3910] and Mask(112, 0, _3804) > -1 / 10^12 * _3768 / mem[_3910]:
                revert with 0, 17
            if 10^12 * _3768 / mem[_3910] and Mask(112, 0, _3830) > -1 / 10^12 * _3768 / mem[_3910]:
                revert with 0, 17
            if 1 >= mem[_1468]:
                revert with 0, 50
            mem[_1468 + 64] = stor21
            if 0 >= mem[_1468]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_1468 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _4171 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3768 / _3936 * Mask(112, 0, _3830) / 10^12
                mem[mem[64] + 36] = 64
                _4225 = mem[_1468]
                mem[mem[64] + 68] = mem[_1468]
                s = 0
                t = _1468 + 32
                u = mem[64] + 100
                while s < _4225:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4171 + (32 * _4225) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6987 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7011 = mem[_6987]
                require mem[_6987] <= test266151307()
                require _6987 + mem[_6987] + 31 < _6987 + return_data.size
                _7033 = mem[_6987 + mem[_6987]]
                if mem[_6987 + mem[_6987]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6987 + mem[_6987]]) + 1 < 0 or _6987 + ceil32(return_data.size) + ceil32(32 * mem[_6987 + mem[_6987]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6987 + ceil32(return_data.size) + ceil32(32 * mem[_6987 + mem[_6987]]) + 1
                mem[_6987 + ceil32(return_data.size)] = _7033
                require _7011 + (32 * _7033) + 32 <= return_data.size
                t = _6987 + ceil32(return_data.size) + 32
                s = _6987 + _7011 + 32
                while s < _6987 + _7011 + (32 * _7033) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7033:
                    revert with 0, 50
                _10669 = mem[_6987 + ceil32(return_data.size) + 64]
                if 10^12 * _3768 / _3936 * Mask(112, 0, _3804) / 10^12 > !mem[_6987 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3644 + 128] = (10^12 * _3768 / _3936 * Mask(112, 0, _3804) / 10^12) + mem[_6987 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3768 / _3936 * Mask(112, 0, _3804) / 10^12) + _10669):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6987 + ceil32(return_data.size)
                t = 10^12 * _3768 / _3936 * Mask(112, 0, _3830) / 10^12
                u = 10^12 * _3768 / _3936 * Mask(112, 0, _3804) / 10^12
                v = _3768
                v = _3644
                v = stor9[idx].field_0
                v = v + (10^12 * _3768 / _3936 * Mask(112, 0, _3804) / 10^12) + _10669
                continue 
            mem[_1468 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _4204 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3768 / _3936 * Mask(112, 0, _3804) / 10^12
                mem[mem[64] + 36] = 64
                _4232 = mem[_1468]
                mem[mem[64] + 68] = mem[_1468]
                s = 0
                t = _1468 + 32
                w = mem[64] + 100
                while s < _4232:
                    mem[w] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4204 + (32 * _4232) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6986 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7010 = mem[_6986]
                require mem[_6986] <= test266151307()
                require _6986 + mem[_6986] + 31 < _6986 + return_data.size
                _7032 = mem[_6986 + mem[_6986]]
                if mem[_6986 + mem[_6986]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6986 + mem[_6986]]) + 1 < 0 or _6986 + ceil32(return_data.size) + ceil32(32 * mem[_6986 + mem[_6986]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6986 + ceil32(return_data.size) + ceil32(32 * mem[_6986 + mem[_6986]]) + 1
                mem[_6986 + ceil32(return_data.size)] = _7032
                require _7010 + (32 * _7032) + 32 <= return_data.size
                t = _6986 + ceil32(return_data.size) + 32
                s = _6986 + _7010 + 32
                while s < _6986 + _7010 + (32 * _7032) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7032:
                    revert with 0, 50
                _10668 = mem[_6986 + ceil32(return_data.size) + 64]
                if 10^12 * _3768 / _3936 * Mask(112, 0, _3830) / 10^12 > !mem[_6986 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3644 + 128] = (10^12 * _3768 / _3936 * Mask(112, 0, _3830) / 10^12) + mem[_6986 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3768 / _3936 * Mask(112, 0, _3830) / 10^12) + _10668):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6986 + ceil32(return_data.size)
                t = 10^12 * _3768 / _3936 * Mask(112, 0, _3830) / 10^12
                s = 10^12 * _3768 / _3936 * Mask(112, 0, _3804) / 10^12
                v = _3768
                v = _3644
                v = stor9[idx].field_0
                v = v + (10^12 * _3768 / _3936 * Mask(112, 0, _3830) / 10^12) + _10668
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4240 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4261 = mem[_4240]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4343 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4387 = mem[_4343]
            if mem[_4343] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4261:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4543 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4583 = mem[_4543]
            if 10^12 * _4387 / _4261 and mem[_4543] > -1 / 10^12 * _4387 / _4261:
                revert with 0, 17
            _4689 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4387 / _4261 * _4583 / 10^12
            mem[mem[64] + 36] = 64
            _4709 = mem[_1468]
            mem[mem[64] + 68] = mem[_1468]
            t = 0
            u = _1468 + 32
            w = mem[64] + 100
            while t < _4709:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4689 + (32 * _4709) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6985 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7009 = mem[_6985]
            require mem[_6985] <= test266151307()
            require _6985 + mem[_6985] + 31 < _6985 + return_data.size
            _7031 = mem[_6985 + mem[_6985]]
            if mem[_6985 + mem[_6985]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_6985 + mem[_6985]]) + 1 < 0 or _6985 + ceil32(return_data.size) + ceil32(32 * mem[_6985 + mem[_6985]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _6985 + ceil32(return_data.size) + ceil32(32 * mem[_6985 + mem[_6985]]) + 1
            mem[_6985 + ceil32(return_data.size)] = _7031
            require _7009 + (32 * _7031) + 32 <= return_data.size
            u = _6985 + ceil32(return_data.size) + 32
            t = _6985 + _7009 + 32
            while t < _6985 + _7009 + (32 * _7031) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7031:
                revert with 0, 50
            _10667 = mem[_6985 + ceil32(return_data.size) + 64]
            mem[_3644 + 128] = mem[_6985 + ceil32(return_data.size) + 64]
            if v > !_10667:
                revert with 0, 17
            if 0 >= mem[_1468]:
                revert with 0, 50
            mem[_1468 + 32] = mem[_3644 + 236 len 20]
            _10717 = mem[_3644 + 224]
            _10718 = mem[_3644]
            require ext_code.size(mem[_3644 + 236 len 20])
            staticcall mem[_3644 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10753 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10763 = mem[_10753]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_10717))
            staticcall address(_10717).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10791 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10831 = mem[_10791]
            if mem[_10791] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _10763:
                revert with 0, 18
            mem[mem[64] + 4] = address(_10718)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_10718)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10977 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11007 = mem[_10977]
            if 10^12 * _10831 / _10763 and mem[_10977] > -1 / 10^12 * _10831 / _10763:
                revert with 0, 17
            _11125 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _10831 / _10763 * _11007 / 10^12
            mem[mem[64] + 36] = 64
            _11161 = mem[_1468]
            mem[mem[64] + 68] = mem[_1468]
            t = 0
            u = _1468 + 32
            w = mem[64] + 100
            while t < _11161:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_10718))
            staticcall address(_10718).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _11125 + (32 * _11161) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14583 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _14597 = mem[_14583]
            require mem[_14583] <= test266151307()
            require _14583 + mem[_14583] + 31 < _14583 + return_data.size
            _14627 = mem[_14583 + mem[_14583]]
            if mem[_14583 + mem[_14583]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_14583 + mem[_14583]]) + 1 < 0 or _14583 + ceil32(return_data.size) + ceil32(32 * mem[_14583 + mem[_14583]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _14583 + ceil32(return_data.size) + ceil32(32 * mem[_14583 + mem[_14583]]) + 1
            mem[_14583 + ceil32(return_data.size)] = _14627
            require _14597 + (32 * _14627) + 32 <= return_data.size
            u = _14583 + ceil32(return_data.size) + 32
            t = _14583 + _14597 + 32
            while t < _14583 + _14597 + (32 * _14627) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _14627:
                revert with 0, 50
            if mem[_3644 + 128] > !mem[_14583 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3644 + 128] = mem[_3644 + 128] + mem[_14583 + ceil32(return_data.size) + 64]
            if v + _10667 > !mem[_3644 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _3768 / _3936 * Mask(112, 0, _3830) / 10^12
            u = 10^12 * _3768 / _3936 * Mask(112, 0, _3804) / 10^12
            v = _3768
            v = _3644
            v = stor9[idx].field_0
            v = v + _10667 + mem[_3644 + 128]
            continue 
        emit 0xf9ede3d1 
        require ext_code.size(arg1)
        staticcall arg1.0x83249ef9 with:
                gas gas_remaining wei
        mem[mem[64] len 192] = ext_call.return_data[0 len 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3672 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 192
        _3686 = mem[_3672]
        require mem[_3672] == mem[_3672 + 12 len 20]
        _3712 = mem[_3672 + 32]
        require mem[_3672 + 32] == mem[_3672 + 44 len 20]
        require mem[_3672 + 64] == mem[_3672 + 76 len 20]
        require mem[_3672 + 96] == mem[_3672 + 108 len 20]
        require mem[_3672 + 128] == mem[_3672 + 140 len 20]
        _3799 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3799] = 0
        mem[_3799 + 32] = 0
        mem[_3799 + 64] = 0
        mem[_3799 + 96] = 0
        mem[_3799 + 128] = 0
        mem[_3799 + 160] = 0
        mem[_3799 + 192] = 0
        mem[_3799 + 224] = 0
        idx = 0
        s = _3799
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _6926 = mem[64]
            mem[64] = mem[64] + 256
            mem[_6926] = strategyInfo[stor9[idx].field_0].field_0
            mem[_6926 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_6926 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_6926 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_6926 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_6926 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_6926 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_6926 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.0x93f1a40b with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6984 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _7007 = mem[_6984]
                if idx >= stor9.length:
                    revert with 0, 50
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _7070 = mem[64]
                mem[64] = mem[64] + 256
                mem[_7070] = strategyInfo[stor9[idx].field_0].field_0
                mem[_7070 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_7070 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_7070 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_7070 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_7070 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_7070 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_7070 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7007
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _7007
                else:
                    mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                    mem[mem[64] + 36] = _7007
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                         gas gas_remaining wei
                        args strategyInfo[stor9[idx].field_0].field_512, _7007
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6926
                s = _7007
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6983 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _7006 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_7006] = mem[_6983]
            mem[_7006 + 32] = mem[_6983 + 32]
            mem[_7006 + 64] = mem[_6983 + 64]
            require return_data.size - 96 >= 96
            _7040 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7040] = mem[_6983 + 96]
            mem[_7040 + 32] = mem[_6983 + 128]
            mem[_7040 + 64] = mem[_6983 + 160]
            mem[_7006 + 96] = _7040
            mem[_7006 + 128] = mem[_6983 + 192]
            require return_data.size - 224 >= 96
            _7092 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7092] = mem[_6983 + 224]
            mem[_7092 + 32] = mem[_6983 + 256]
            mem[_7092 + 64] = mem[_6983 + 288]
            mem[_7006 + 160] = _7092
            _7134 = mem[_7006 + 64]
            if idx >= stor9.length:
                revert with 0, 50
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _7188 = mem[64]
            mem[64] = mem[64] + 256
            mem[_7188] = strategyInfo[stor9[idx].field_0].field_0
            mem[_7188 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_7188 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_7188 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_7188 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_7188 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_7188 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_7188 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7134
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _7134
            else:
                mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _7134
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x441a3e70 with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _7134
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _6926
            s = _7134
            continue 
        idx = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _10666 = mem[64]
            mem[64] = mem[64] + 256
            mem[_10666] = strategyInfo[stor9[idx].field_0].field_0
            mem[_10666 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_10666 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_10666 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_10666 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_10666 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_10666 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_10666 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10694 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10716 = mem[_10694]
            if mem[_10694]:
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 36] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64] + 68] = _10716
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = 0
                mem[mem[64] + 164] = this.address
                mem[mem[64] + 196] = block.timestamp + 60
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                call strategyInfo[stor9[idx].field_0].field_0.removeLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, address arg6, uint256 arg7) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_1536, strategyInfo[stor9[idx].field_0].field_1792, _10716, 0, 0, address(this.address), block.timestamp + 60
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _10847 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_10847 + 32 len 64] = call.data[calldata.size len 64]
                if 1 >= mem[_10847]:
                    revert with 0, 50
                mem[_10847 + 64] = stor21
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                                gas gas_remaining wei
                        mem[_10847 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_10847 + ceil32(return_data.size) + 96] = 2
                        mem[_10847 + ceil32(return_data.size) + 128] = address(ext_call.return_data[0])
                        mem[_10847 + ceil32(return_data.size) + 160] = stor21
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_10847 + ceil32(return_data.size) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_10847 + (2 * ceil32(return_data.size)) + 196] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_10847 + (2 * ceil32(return_data.size)) + 196 len ceil32(return_data.size) + 32]
                        mem[_10847 + (2 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_10847 + (4 * ceil32(return_data.size)) + 196] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_10847 + (4 * ceil32(return_data.size)) + 196 len (5 * ceil32(return_data.size)) + 32]
                        mem[_10847 + (4 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_10847 + (6 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_10847 + (6 * ceil32(return_data.size)) + 196] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_10847 + (6 * ceil32(return_data.size)) + 228] = 64
                        mem[_10847 + (6 * ceil32(return_data.size)) + 260] = 2
                        s = 0
                        t = _10847 + ceil32(return_data.size) + 128
                        u = _10847 + (6 * ceil32(return_data.size)) + 292
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, Array(len=2, data=mem[_10847 + (6 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_10847 + (6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _10847 + (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _14594 = mem[_10847 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_10847 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _10847 + (6 * ceil32(return_data.size)) + mem[_10847 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 223 < _10847 + (6 * ceil32(return_data.size)) + return_data.size + 192
                        _14624 = mem[_10847 + (6 * ceil32(return_data.size)) + mem[_10847 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]
                        if mem[_10847 + (6 * ceil32(return_data.size)) + mem[_10847 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10847 + (6 * ceil32(return_data.size)) + mem[_10847 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 1 < 0 or _10847 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_10847 + (6 * ceil32(return_data.size)) + mem[_10847 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193 > test266151307():
                            revert with 0, 65
                        mem[64] = _10847 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_10847 + (6 * ceil32(return_data.size)) + mem[_10847 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193
                        mem[_10847 + (7 * ceil32(return_data.size)) + 192] = _14624
                        require _14594 + (32 * _14624) + 32 <= return_data.size
                        t = _10847 + (7 * ceil32(return_data.size)) + 224
                        s = _10847 + (6 * ceil32(return_data.size)) + _14594 + 224
                        while s < _10847 + (6 * ceil32(return_data.size)) + _14594 + (32 * _14624) + 224:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14624:
                            revert with 0, 50
                        _18280 = mem[_10847 + (7 * ceil32(return_data.size)) + 256]
                        if mem[_10847 + (7 * ceil32(return_data.size)) + 256] and 1 > -1 / mem[_10847 + (7 * ceil32(return_data.size)) + 256]:
                            revert with 0, 17
                        if mem[_10847 + (7 * ceil32(return_data.size)) + 256] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_10847 + (7 * ceil32(return_data.size)) + 256] < 100 * mem[_10847 + (7 * ceil32(return_data.size)) + 256] / 10000:
                            revert with 0, 17
                        _18478 = mem[_10666]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18578 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18604 = mem[_18578]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _18604
                        mem[mem[64] + 36] = _18280 - (100 * _18280 / 10000)
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        s = 0
                        t = _10847 + ceil32(return_data.size) + 128
                        u = mem[64] + 196
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_18478))
                        call address(_18478).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _18604, _18280 - (100 * _18280 / 10000), Array(len=2, data=mem[mem[64] + 196 len 64]), address(this.address), block.timestamp + 60
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21492 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _21518 = mem[_21492]
                        require mem[_21492] <= test266151307()
                        require _21492 + mem[_21492] + 31 < _21492 + return_data.size
                        _21544 = mem[_21492 + mem[_21492]]
                        if mem[_21492 + mem[_21492]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_21492 + mem[_21492]]) + 1 < 0 or _21492 + ceil32(return_data.size) + ceil32(32 * mem[_21492 + mem[_21492]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _21492 + ceil32(return_data.size) + ceil32(32 * mem[_21492 + mem[_21492]]) + 1
                        mem[_21492 + ceil32(return_data.size)] = _21544
                        require _21518 + (32 * _21544) + 32 <= return_data.size
                        t = _21492 + ceil32(return_data.size) + 32
                        s = _21492 + _21518 + 32
                        while s < _21492 + _21518 + (32 * _21544) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_10847]:
                            revert with 0, 50
                        mem[_10847 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[_10847 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_10847 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_10847 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_10847 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[_10847 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _10847 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_10847 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_10847 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_10847 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_10847 + (4 * ceil32(return_data.size)) + 164] = mem[_10847]
                        s = 0
                        t = _10847 + 32
                        u = _10847 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_10847]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _10847 + (4 * ceil32(return_data.size)) + (32 * mem[_10847]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14581 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _14595 = mem[_14581]
                        require mem[_14581] <= test266151307()
                        require _14581 + mem[_14581] + 31 < _14581 + return_data.size
                        _14625 = mem[_14581 + mem[_14581]]
                        if mem[_14581 + mem[_14581]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_14581 + mem[_14581]]) + 1 < 0 or _14581 + ceil32(return_data.size) + ceil32(32 * mem[_14581 + mem[_14581]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _14581 + ceil32(return_data.size) + ceil32(32 * mem[_14581 + mem[_14581]]) + 1
                        mem[_14581 + ceil32(return_data.size)] = _14625
                        require _14595 + (32 * _14625) + 32 <= return_data.size
                        t = _14581 + ceil32(return_data.size) + 32
                        s = _14581 + _14595 + 32
                        while s < _14581 + _14595 + (32 * _14625) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14625:
                            revert with 0, 50
                        _18281 = mem[_14581 + ceil32(return_data.size) + 64]
                        if mem[_14581 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14581 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_14581 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_14581 + ceil32(return_data.size) + 64] < 100 * mem[_14581 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18579 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _18605 = mem[_18579]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _18639 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _18605
                        mem[mem[64] + 36] = _18281 - (100 * _18281 / 10000)
                        mem[mem[64] + 68] = 160
                        _18673 = mem[_10847]
                        mem[mem[64] + 164] = mem[_10847]
                        s = 0
                        t = _10847 + 32
                        u = mem[64] + 196
                        while s < _18673:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18639 + 100] = this.address
                        mem[_18639 + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18639 + (32 * _18673) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21493 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _21519 = mem[_21493]
                        require mem[_21493] <= test266151307()
                        require _21493 + mem[_21493] + 31 < _21493 + return_data.size
                        _21545 = mem[_21493 + mem[_21493]]
                        if mem[_21493 + mem[_21493]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_21493 + mem[_21493]]) + 1 < 0 or _21493 + ceil32(return_data.size) + ceil32(32 * mem[_21493 + mem[_21493]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _21493 + ceil32(return_data.size) + ceil32(32 * mem[_21493 + mem[_21493]]) + 1
                        mem[_21493 + ceil32(return_data.size)] = _21545
                        require _21519 + (32 * _21545) + 32 <= return_data.size
                        t = _21493 + ceil32(return_data.size) + 32
                        s = _21493 + _21519 + 32
                        while s < _21493 + _21519 + (32 * _21545) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_10666 + 172 len 20])
                        staticcall mem[_10666 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24446 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24474 = mem[_24446]
                        require mem[_24446] == mem[_24446 + 12 len 20]
                        _24514 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_24514]:
                            revert with 0, 50
                        mem[_24514 + 32] = address(_24474)
                        if 1 >= mem[_24514]:
                            revert with 0, 50
                        mem[_24514 + 64] = stor21
                        _24544 = mem[_10666]
                        require ext_code.size(address(_24474))
                        staticcall address(_24474).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_24514 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_24514 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_24474))
                        staticcall address(_24474).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_24514 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_24514 + (2 * ceil32(return_data.size)) + 100] = address(_24544)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_24544)
                        mem[_24514 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _24514 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_24514 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_24514 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_24514 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_24514 + (4 * ceil32(return_data.size)) + 164] = mem[_24514]
                        s = 0
                        t = _24514 + 32
                        u = _24514 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_24514]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_24544))
                        staticcall address(_24544).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_24514 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_24514]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_24514 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _24514 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _27180 = mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _24514 + (4 * ceil32(return_data.size)) + mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _24514 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _27208 = mem[_24514 + (4 * ceil32(return_data.size)) + mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_24514 + (4 * ceil32(return_data.size)) + mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24514 + (4 * ceil32(return_data.size)) + mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _24514 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_24514 + (4 * ceil32(return_data.size)) + mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _24514 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_24514 + (4 * ceil32(return_data.size)) + mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_24514 + (6 * ceil32(return_data.size)) + 96] = mem[_24514 + (4 * ceil32(return_data.size)) + mem[_24514 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _27180 + (32 * _27208) + 32 <= return_data.size
                        t = _24514 + (6 * ceil32(return_data.size)) + 128
                        s = _24514 + (4 * ceil32(return_data.size)) + _27180 + 128
                        while s < _24514 + (4 * ceil32(return_data.size)) + _27180 + (32 * _27208) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27208:
                            revert with 0, 50
                        _29552 = mem[_24514 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_24514 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_24514 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_24514 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_24514 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_24514 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        _29781 = mem[_10666]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24474))
                        staticcall address(_24474).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29900 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29940 = mem[_29900]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _29972 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _29940
                        mem[mem[64] + 36] = _29552 - (100 * _29552 / 10000)
                        mem[mem[64] + 68] = 160
                        _29992 = mem[_24514]
                        mem[mem[64] + 164] = mem[_24514]
                        s = 0
                        t = _24514 + 32
                        u = mem[64] + 196
                        while s < _29992:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_29972 + 100] = this.address
                        mem[_29972 + 132] = block.timestamp + 60
                        require ext_code.size(address(_29781))
                        call address(_29781).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _29972 + (32 * _29992) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31028 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _31068 = mem[_31028]
                        require mem[_31028] <= test266151307()
                        require _31028 + mem[_31028] + 31 < _31028 + return_data.size
                        _31108 = mem[_31028 + mem[_31028]]
                        if mem[_31028 + mem[_31028]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_31028 + mem[_31028]]) + 1 < 0 or _31028 + ceil32(return_data.size) + ceil32(32 * mem[_31028 + mem[_31028]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _31028 + ceil32(return_data.size) + ceil32(32 * mem[_31028 + mem[_31028]]) + 1
                        mem[_31028 + ceil32(return_data.size)] = _31108
                        require _31068 + (32 * _31108) + 32 <= return_data.size
                        t = _31028 + ceil32(return_data.size) + 32
                        s = _31028 + _31068 + 32
                        while s < _31028 + _31068 + (32 * _31108) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                else:
                    if 0 >= mem[_10847]:
                        revert with 0, 50
                    mem[_10847 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                            gas gas_remaining wei
                    mem[_10847 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_10847 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_10847 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not ext_call.return_data[0]:
                        revert with 0, 18
                    mem[_10847 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[_10847 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _10847 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[_10847 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_10847 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                    mem[_10847 + (4 * ceil32(return_data.size)) + 132] = 64
                    mem[_10847 + (4 * ceil32(return_data.size)) + 164] = mem[_10847]
                    s = 0
                    t = _10847 + 32
                    u = _10847 + (4 * ceil32(return_data.size)) + 196
                    while s < mem[_10847]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _10847 + (4 * ceil32(return_data.size)) + (32 * mem[_10847]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14582 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _14596 = mem[_14582]
                    require mem[_14582] <= test266151307()
                    require _14582 + mem[_14582] + 31 < _14582 + return_data.size
                    _14626 = mem[_14582 + mem[_14582]]
                    if mem[_14582 + mem[_14582]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_14582 + mem[_14582]]) + 1 < 0 or _14582 + ceil32(return_data.size) + ceil32(32 * mem[_14582 + mem[_14582]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _14582 + ceil32(return_data.size) + ceil32(32 * mem[_14582 + mem[_14582]]) + 1
                    mem[_14582 + ceil32(return_data.size)] = _14626
                    require _14596 + (32 * _14626) + 32 <= return_data.size
                    t = _14582 + ceil32(return_data.size) + 32
                    s = _14582 + _14596 + 32
                    while s < _14582 + _14596 + (32 * _14626) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _14626:
                        revert with 0, 50
                    _18282 = mem[_14582 + ceil32(return_data.size) + 64]
                    if mem[_14582 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14582 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_14582 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if mem[_14582 + ceil32(return_data.size) + 64] < 100 * mem[_14582 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18580 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _18606 = mem[_18580]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _18640 = mem[64]
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _18606
                    mem[mem[64] + 36] = _18282 - (100 * _18282 / 10000)
                    mem[mem[64] + 68] = 160
                    _18674 = mem[_10847]
                    mem[mem[64] + 164] = mem[_10847]
                    s = 0
                    t = _10847 + 32
                    u = mem[64] + 196
                    while s < _18674:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_18640 + 100] = this.address
                    mem[_18640 + 132] = block.timestamp + 60
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _18640 + (32 * _18674) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _21494 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _21520 = mem[_21494]
                    require mem[_21494] <= test266151307()
                    require _21494 + mem[_21494] + 31 < _21494 + return_data.size
                    _21546 = mem[_21494 + mem[_21494]]
                    if mem[_21494 + mem[_21494]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_21494 + mem[_21494]]) + 1 < 0 or _21494 + ceil32(return_data.size) + ceil32(32 * mem[_21494 + mem[_21494]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _21494 + ceil32(return_data.size) + ceil32(32 * mem[_21494 + mem[_21494]]) + 1
                    mem[_21494 + ceil32(return_data.size)] = _21546
                    require _21520 + (32 * _21546) + 32 <= return_data.size
                    t = _21494 + ceil32(return_data.size) + 32
                    s = _21494 + _21520 + 32
                    while s < _21494 + _21520 + (32 * _21546) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(mem[_10666 + 172 len 20])
                        staticcall mem[_10666 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24461 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24485 = mem[_24461]
                        require mem[_24461] == mem[_24461 + 12 len 20]
                        _24531 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_24531]:
                            revert with 0, 50
                        mem[_24531 + 32] = address(_24485)
                        if 1 >= mem[_24531]:
                            revert with 0, 50
                        mem[_24531 + 64] = stor21
                        _24554 = mem[_10666]
                        require ext_code.size(address(_24485))
                        staticcall address(_24485).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_24531 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_24531 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_24485))
                        staticcall address(_24485).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_24531 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_24531 + (2 * ceil32(return_data.size)) + 100] = address(_24554)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_24554)
                        mem[_24531 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _24531 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_24531 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_24531 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_24531 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_24531 + (4 * ceil32(return_data.size)) + 164] = mem[_24531]
                        s = 0
                        t = _24531 + 32
                        u = _24531 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_24531]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_24554))
                        staticcall address(_24554).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_24531 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_24531]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_24531 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _24531 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _27181 = mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _24531 + (4 * ceil32(return_data.size)) + mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _24531 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _27209 = mem[_24531 + (4 * ceil32(return_data.size)) + mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_24531 + (4 * ceil32(return_data.size)) + mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_24531 + (4 * ceil32(return_data.size)) + mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _24531 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_24531 + (4 * ceil32(return_data.size)) + mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _24531 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_24531 + (4 * ceil32(return_data.size)) + mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_24531 + (6 * ceil32(return_data.size)) + 96] = mem[_24531 + (4 * ceil32(return_data.size)) + mem[_24531 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _27181 + (32 * _27209) + 32 <= return_data.size
                        t = _24531 + (6 * ceil32(return_data.size)) + 128
                        s = _24531 + (4 * ceil32(return_data.size)) + _27181 + 128
                        while s < _24531 + (4 * ceil32(return_data.size)) + _27181 + (32 * _27209) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27209:
                            revert with 0, 50
                        _29553 = mem[_24531 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_24531 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_24531 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_24531 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_24531 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_24531 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        _29782 = mem[_10666]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24485))
                        staticcall address(_24485).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29901 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29941 = mem[_29901]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _29973 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _29941
                        mem[mem[64] + 36] = _29553 - (100 * _29553 / 10000)
                        mem[mem[64] + 68] = 160
                        _29993 = mem[_24531]
                        mem[mem[64] + 164] = mem[_24531]
                        s = 0
                        t = _24531 + 32
                        u = mem[64] + 196
                        while s < _29993:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_29973 + 100] = this.address
                        mem[_29973 + 132] = block.timestamp + 60
                        require ext_code.size(address(_29782))
                        call address(_29782).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _29973 + (32 * _29993) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31029 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _31069 = mem[_31029]
                        require mem[_31029] <= test266151307()
                        require _31029 + mem[_31029] + 31 < _31029 + return_data.size
                        _31109 = mem[_31029 + mem[_31029]]
                        if mem[_31029 + mem[_31029]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_31029 + mem[_31029]]) + 1 < 0 or _31029 + ceil32(return_data.size) + ceil32(32 * mem[_31029 + mem[_31029]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _31029 + ceil32(return_data.size) + ceil32(32 * mem[_31029 + mem[_31029]]) + 1
                        mem[_31029 + ceil32(return_data.size)] = _31109
                        require _31069 + (32 * _31109) + 32 <= return_data.size
                        t = _31029 + ceil32(return_data.size) + 32
                        s = _31029 + _31069 + 32
                        while s < _31029 + _31069 + (32 * _31109) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_10847]:
                            revert with 0, 50
                        mem[_10847 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24462 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24486 = mem[_24462]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24516 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24546 = mem[_24516]
                        if mem[_24516] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not _24486:
                            revert with 0, 18
                        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24722 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24756 = mem[_24722]
                        if 10^12 * _24546 / _24486 and mem[_24722] > -1 / 10^12 * _24546 / _24486:
                            revert with 0, 17
                        _24858 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 10^12 * _24546 / _24486 * _24756 / 10^12
                        mem[mem[64] + 36] = 64
                        _24890 = mem[_10847]
                        mem[mem[64] + 68] = mem[_10847]
                        s = 0
                        t = _10847 + 32
                        u = mem[64] + 100
                        while s < _24890:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _24858 + (32 * _24890) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27154 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27182 = mem[_27154]
                        require mem[_27154] <= test266151307()
                        require _27154 + mem[_27154] + 31 < _27154 + return_data.size
                        _27210 = mem[_27154 + mem[_27154]]
                        if mem[_27154 + mem[_27154]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27154 + mem[_27154]]) + 1 < 0 or _27154 + ceil32(return_data.size) + ceil32(32 * mem[_27154 + mem[_27154]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27154 + ceil32(return_data.size) + ceil32(32 * mem[_27154 + mem[_27154]]) + 1
                        mem[_27154 + ceil32(return_data.size)] = _27210
                        require _27182 + (32 * _27210) + 32 <= return_data.size
                        t = _27154 + ceil32(return_data.size) + 32
                        s = _27154 + _27182 + 32
                        while s < _27154 + _27182 + (32 * _27210) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27210:
                            revert with 0, 50
                        _29554 = mem[_27154 + ceil32(return_data.size) + 64]
                        if mem[_27154 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27154 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_27154 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_27154 + ceil32(return_data.size) + 64] < 100 * mem[_27154 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29902 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29942 = mem[_29902]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _29942
                        mem[mem[64] + 36] = _29554 - (100 * _29554 / 10000)
                        mem[mem[64] + 68] = 160
                        _29994 = mem[_10847]
                        mem[mem[64] + 164] = mem[_10847]
                        s = 0
                        t = _10847 + 32
                        u = mem[64] + 196
                        while s < _29994:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _29942, _29554 - (100 * _29554 / 10000), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _29994) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31030 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _31070 = mem[_31030]
                        require mem[_31030] <= test266151307()
                        require _31030 + mem[_31030] + 31 < _31030 + return_data.size
                        _31110 = mem[_31030 + mem[_31030]]
                        if mem[_31030 + mem[_31030]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_31030 + mem[_31030]]) + 1 < 0 or _31030 + ceil32(return_data.size) + ceil32(32 * mem[_31030 + mem[_31030]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _31030 + ceil32(return_data.size) + ceil32(32 * mem[_31030 + mem[_31030]]) + 1
                        mem[_31030 + ceil32(return_data.size)] = _31110
                        require _31070 + (32 * _31110) + 32 <= return_data.size
                        t = _31030 + ceil32(return_data.size) + 32
                        s = _31030 + _31070 + 32
                        while s < _31030 + _31070 + (32 * _31110) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_10666 + 172 len 20])
                        staticcall mem[_10666 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32040 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32052 = mem[_32040]
                        require mem[_32040] == mem[_32040 + 12 len 20]
                        _32067 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_32067]:
                            revert with 0, 50
                        mem[_32067 + 32] = address(_32052)
                        if 1 >= mem[_32067]:
                            revert with 0, 50
                        mem[_32067 + 64] = stor21
                        _32080 = mem[_10666]
                        require ext_code.size(address(_32052))
                        staticcall address(_32052).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_32067 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_32067 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_32052))
                        staticcall address(_32052).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_32067 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_32067 + (2 * ceil32(return_data.size)) + 100] = address(_32080)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_32080)
                        mem[_32067 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _32067 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_32067 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_32067 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_32067 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_32067 + (4 * ceil32(return_data.size)) + 164] = mem[_32067]
                        s = 0
                        t = _32067 + 32
                        u = _32067 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_32067]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_32080))
                        staticcall address(_32080).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_32067 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_32067]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_32067 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _32067 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _32862 = mem[_32067 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_32067 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _32067 + (4 * ceil32(return_data.size)) + mem[_32067 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _32067 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _32872 = mem[_32067 + (4 * ceil32(return_data.size)) + mem[_32067 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_32067 + (4 * ceil32(return_data.size)) + mem[_32067 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_32067 + (4 * ceil32(return_data.size)) + mem[_32067 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _32067 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_32067 + (4 * ceil32(return_data.size)) + mem[_32067 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _32067 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_32067 + (4 * ceil32(return_data.size)) + mem[_32067 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_32067 + (6 * ceil32(return_data.size)) + 96] = _32872
                        require _32862 + (32 * _32872) + 32 <= return_data.size
                        t = _32067 + (6 * ceil32(return_data.size)) + 128
                        s = _32067 + (4 * ceil32(return_data.size)) + _32862 + 128
                        while s < _32067 + (4 * ceil32(return_data.size)) + _32862 + (32 * _32872) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _32872:
                            revert with 0, 50
                        _33538 = mem[_32067 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_32067 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_32067 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_32067 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_32067 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_32067 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        _33628 = mem[_10666]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_32052))
                        staticcall address(_32052).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33674 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33692 = mem[_33674]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _33702 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _33692
                        mem[mem[64] + 36] = _33538 - (100 * _33538 / 10000)
                        mem[mem[64] + 68] = 160
                        _33704 = mem[_32067]
                        mem[mem[64] + 164] = mem[_32067]
                        s = 0
                        t = _32067 + 32
                        u = mem[64] + 196
                        while s < _33704:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_33702 + 100] = this.address
                        mem[_33702 + 132] = block.timestamp + 60
                        require ext_code.size(address(_33628))
                        call address(_33628).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _33702 + (32 * _33704) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33772 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _33790 = mem[_33772]
                        require mem[_33772] <= test266151307()
                        require _33772 + mem[_33772] + 31 < _33772 + return_data.size
                        _33808 = mem[_33772 + mem[_33772]]
                        if mem[_33772 + mem[_33772]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_33772 + mem[_33772]]) + 1 < 0 or _33772 + ceil32(return_data.size) + ceil32(32 * mem[_33772 + mem[_33772]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _33772 + ceil32(return_data.size) + ceil32(32 * mem[_33772 + mem[_33772]]) + 1
                        mem[_33772 + ceil32(return_data.size)] = _33808
                        require _33790 + (32 * _33808) + 32 <= return_data.size
                        t = _33772 + ceil32(return_data.size) + 32
                        s = _33772 + _33790 + 32
                        while s < _33772 + _33790 + (32 * _33808) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        require ext_code.size(address(_3686))
        staticcall address(_3686).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _10680 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _10693 = mem[_10680]
        require mem[_10680] == mem[_10680 + 12 len 20]
        require ext_code.size(address(_3686))
        staticcall address(_3686).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _10760 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _10766 = mem[_10760]
        require mem[_10760] == mem[_10760 + 12 len 20]
        _10843 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        if not mem[_10843]:
            revert with 0, 50
        mem[_10843 + 32] = stor21
        if stor21 == address(_10766):
            if stor21 == address(_3712):
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require ext_code.size(address(_10766))
                call address(_10766).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10693), -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(address(_3712))
                call address(_3712).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10693), -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(address(_3686))
                staticcall address(_3686).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(_3686))
                call address(_3686).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if 1 >= mem[_10843]:
                    revert with 0, 50
                mem[_10843 + 64] = address(_3712)
                mem[_10843 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_10843 + 100] = eth.balance(this.address) / 2
                mem[_10843 + 132] = 64
                mem[_10843 + 164] = mem[_10843]
                idx = 0
                s = _10843 + 32
                t = _10843 + 196
                while idx < mem[_10843]:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(address(_10693))
                staticcall address(_10693).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _10843 + (32 * mem[_10843]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14578 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _14592 = mem[_14578]
                require mem[_14578] <= test266151307()
                require _14578 + mem[_14578] + 31 < _14578 + return_data.size
                _14622 = mem[_14578 + mem[_14578]]
                if mem[_14578 + mem[_14578]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_14578 + mem[_14578]]) + 1 < 0 or _14578 + ceil32(return_data.size) + ceil32(32 * mem[_14578 + mem[_14578]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _14578 + ceil32(return_data.size) + ceil32(32 * mem[_14578 + mem[_14578]]) + 1
                mem[_14578 + ceil32(return_data.size)] = _14622
                require _14592 + (32 * _14622) + 32 <= return_data.size
                mem[_14578 + ceil32(return_data.size) + 32 len ceil32(32 * _14622)] = mem[_14578 + _14592 + 32 len ceil32(32 * _14622)]
                if 1 >= _14622:
                    revert with 0, 50
                _18278 = mem[_14578 + ceil32(return_data.size) + 64]
                if mem[_14578 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14578 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_14578 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _14622:
                    revert with 0, 50
                _18451 = mem[_14578 + ceil32(return_data.size) + 64]
                if mem[_14578 + ceil32(return_data.size) + 64] < 100 * mem[_14578 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _18451 - (100 * _18278 / 10000)
                mem[mem[64] + 36] = 128
                _18591 = mem[_10843]
                mem[mem[64] + 132] = mem[_10843]
                idx = 0
                s = _10843 + 32
                t = mem[64] + 164
                while idx < _18591:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_10693))
                call address(_10693).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args _18451 - (100 * _18278 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _18591) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _21490 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _21516 = mem[_21490]
                require mem[_21490] <= test266151307()
                require _21490 + mem[_21490] + 31 < _21490 + return_data.size
                _21542 = mem[_21490 + mem[_21490]]
                if mem[_21490 + mem[_21490]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_21490 + mem[_21490]]) + 1 < 0 or _21490 + ceil32(return_data.size) + ceil32(32 * mem[_21490 + mem[_21490]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _21490 + ceil32(return_data.size) + ceil32(32 * mem[_21490 + mem[_21490]]) + 1
                mem[_21490 + ceil32(return_data.size)] = _21542
                require _21516 + (32 * _21542) + 32 <= return_data.size
                mem[_21490 + ceil32(return_data.size) + 32 len ceil32(32 * _21542)] = mem[_21490 + _21516 + 32 len ceil32(32 * _21542)]
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24413 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_24413] == mem[_24413 + 18 len 14]
                require mem[_24413 + 32] == mem[_24413 + 50 len 14]
                require mem[_24413 + 64] == mem[_24413 + 92 len 4]
                mem[mem[64] + 4] = address(_10693)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_10766))
                call address(_10766).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10693), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24603 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24603] == bool(mem[_24603])
                mem[mem[64] + 4] = address(_10693)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3712))
                call address(_3712).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10693), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24703 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24703] == bool(mem[_24703])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3686))
                staticcall address(_3686).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24840 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24871 = mem[_24840]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _24871
                require ext_code.size(address(_3686))
                call address(_3686).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _24871
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24959 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24959] == bool(mem[_24959])
        else:
            if 1 >= mem[_10843]:
                revert with 0, 50
            mem[_10843 + 64] = address(_10766)
            mem[_10843 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_10843 + 100] = eth.balance(this.address) / 2
            mem[_10843 + 132] = 64
            mem[_10843 + 164] = mem[_10843]
            idx = 0
            s = _10843 + 32
            t = _10843 + 196
            while idx < mem[_10843]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(_10693))
            staticcall address(_10693).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _10843 + (32 * mem[_10843]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14579 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _14593 = mem[_14579]
            require mem[_14579] <= test266151307()
            require _14579 + mem[_14579] + 31 < _14579 + return_data.size
            _14623 = mem[_14579 + mem[_14579]]
            if mem[_14579 + mem[_14579]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_14579 + mem[_14579]]) + 1 < 0 or _14579 + ceil32(return_data.size) + ceil32(32 * mem[_14579 + mem[_14579]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _14579 + ceil32(return_data.size) + ceil32(32 * mem[_14579 + mem[_14579]]) + 1
            mem[_14579 + ceil32(return_data.size)] = _14623
            require _14593 + (32 * _14623) + 32 <= return_data.size
            mem[_14579 + ceil32(return_data.size) + 32 len ceil32(32 * _14623)] = mem[_14579 + _14593 + 32 len ceil32(32 * _14623)]
            if 1 >= _14623:
                revert with 0, 50
            _18279 = mem[_14579 + ceil32(return_data.size) + 64]
            if mem[_14579 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_14579 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_14579 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _14623:
                revert with 0, 50
            _18452 = mem[_14579 + ceil32(return_data.size) + 64]
            if mem[_14579 + ceil32(return_data.size) + 64] < 100 * mem[_14579 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _18566 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _18452 - (100 * _18279 / 10000)
            mem[mem[64] + 36] = 128
            _18592 = mem[_10843]
            mem[mem[64] + 132] = mem[_10843]
            idx = 0
            s = _10843 + 32
            t = mem[64] + 164
            while idx < _18592:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_18566 + 68] = this.address
            mem[_18566 + 100] = block.timestamp + 60
            require ext_code.size(address(_10693))
            call address(_10693).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _18566 + (32 * _18592) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _21491 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _21517 = mem[_21491]
            require mem[_21491] <= test266151307()
            require _21491 + mem[_21491] + 31 < _21491 + return_data.size
            _21543 = mem[_21491 + mem[_21491]]
            if mem[_21491 + mem[_21491]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_21491 + mem[_21491]]) + 1 < 0 or _21491 + ceil32(return_data.size) + ceil32(32 * mem[_21491 + mem[_21491]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _21491 + ceil32(return_data.size) + ceil32(32 * mem[_21491 + mem[_21491]]) + 1
            mem[_21491 + ceil32(return_data.size)] = _21543
            require _21517 + (32 * _21543) + 32 <= return_data.size
            mem[_21491 + ceil32(return_data.size) + 32 len ceil32(32 * _21543)] = mem[_21491 + _21517 + 32 len ceil32(32 * _21543)]
            if stor21 == address(_3712):
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24431 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_24431] == mem[_24431 + 18 len 14]
                require mem[_24431 + 32] == mem[_24431 + 50 len 14]
                require mem[_24431 + 64] == mem[_24431 + 92 len 4]
                mem[mem[64] + 4] = address(_10693)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_10766))
                call address(_10766).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10693), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24625 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24625] == bool(mem[_24625])
                mem[mem[64] + 4] = address(_10693)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3712))
                call address(_3712).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10693), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24719 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24719] == bool(mem[_24719])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3686))
                staticcall address(_3686).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24856 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24887 = mem[_24856]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _24887
                require ext_code.size(address(_3686))
                call address(_3686).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _24887
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24979 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24979] == bool(mem[_24979])
            else:
                if 1 >= mem[_10843]:
                    revert with 0, 50
                mem[_10843 + 64] = address(_3712)
                _24399 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _24432 = mem[_10843]
                mem[mem[64] + 68] = mem[_10843]
                idx = 0
                s = _10843 + 32
                t = mem[64] + 100
                while idx < _24432:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(address(_10693))
                staticcall address(_10693).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _24399 + (32 * _24432) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27151 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27179 = mem[_27151]
                require mem[_27151] <= test266151307()
                require _27151 + mem[_27151] + 31 < _27151 + return_data.size
                _27207 = mem[_27151 + mem[_27151]]
                if mem[_27151 + mem[_27151]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_27151 + mem[_27151]]) + 1 < 0 or _27151 + ceil32(return_data.size) + ceil32(32 * mem[_27151 + mem[_27151]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _27151 + ceil32(return_data.size) + ceil32(32 * mem[_27151 + mem[_27151]]) + 1
                mem[_27151 + ceil32(return_data.size)] = _27207
                require _27179 + (32 * _27207) + 32 <= return_data.size
                mem[_27151 + ceil32(return_data.size) + 32 len ceil32(32 * _27207)] = mem[_27151 + _27179 + 32 len ceil32(32 * _27207)]
                if 1 >= _27207:
                    revert with 0, 50
                _29551 = mem[_27151 + ceil32(return_data.size) + 64]
                if mem[_27151 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27151 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_27151 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _27207:
                    revert with 0, 50
                _29742 = mem[_27151 + ceil32(return_data.size) + 64]
                if mem[_27151 + ceil32(return_data.size) + 64] < 100 * mem[_27151 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _29880 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _29742 - (100 * _29551 / 10000)
                mem[mem[64] + 36] = 128
                _29920 = mem[_10843]
                mem[mem[64] + 132] = mem[_10843]
                idx = 0
                s = _10843 + 32
                t = mem[64] + 164
                while idx < _29920:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_29880 + 68] = this.address
                mem[_29880 + 100] = block.timestamp + 60
                require ext_code.size(address(_10693))
                call address(_10693).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _29880 + (32 * _29920) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31027 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _31067 = mem[_31027]
                require mem[_31027] <= test266151307()
                require _31027 + mem[_31027] + 31 < _31027 + return_data.size
                _31107 = mem[_31027 + mem[_31027]]
                if mem[_31027 + mem[_31027]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_31027 + mem[_31027]]) + 1 < 0 or _31027 + ceil32(return_data.size) + ceil32(32 * mem[_31027 + mem[_31027]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _31027 + ceil32(return_data.size) + ceil32(32 * mem[_31027 + mem[_31027]]) + 1
                mem[_31027 + ceil32(return_data.size)] = _31107
                require _31067 + (32 * _31107) + 32 <= return_data.size
                mem[_31027 + ceil32(return_data.size) + 32 len ceil32(32 * _31107)] = mem[_31027 + _31067 + 32 len ceil32(32 * _31107)]
                require ext_code.size(stor23)
                staticcall stor23.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32028 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_32028] == mem[_32028 + 18 len 14]
                require mem[_32028 + 32] == mem[_32028 + 50 len 14]
                require mem[_32028 + 64] == mem[_32028 + 92 len 4]
                mem[mem[64] + 4] = address(_10693)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_10766))
                call address(_10766).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10693), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32106 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_32106] == bool(mem[_32106])
                mem[mem[64] + 4] = address(_10693)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3712))
                call address(_3712).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_10693), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32138 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_32138] == bool(mem[_32138])
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3686))
                staticcall address(_3686).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32186 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32198 = mem[_32186]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _32198
                require ext_code.size(address(_3686))
                call address(_3686).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _32198
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32233 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_32233] == bool(mem[_32233])
    require ext_code.size(arg1)
    call arg1.0xd389800f with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}



}
