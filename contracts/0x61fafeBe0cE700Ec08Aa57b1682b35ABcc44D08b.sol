contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1)
#  - sub_8dc5b6fb(?)
#  - _fallback()
#
const decimals = 18

const sub_d2802be5(?) = 1

const withdrawFee = 15


mapping of uint256 balanceOf;
uint256 totalSupply;
array of struct stor3;
array of struct stor4;
address owner;
mapping of struct strategyInfo;
mapping of uint8 stor8;
array of struct stor9;
uint256 sub_5e8f09aa;
uint256 sub_66f2b1a7;
address governmentAddress;
address sub_97091078Address;
address sub_d7959960Address;
address USDTAddress;
uint256 stor16;
address stor18;
address stor19;
address stor20;
address stor21;
address stor22;
address stor23;

function totalSupply() {
    return totalSupply
}

function government() {
    return governmentAddress
}

function sub_5e8f09aa(?) {
    return sub_5e8f09aa
}

function sub_66f2b1a7(?) {
    return sub_66f2b1a7
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function owner() {
    return owner
}

function sub_97091078(?) {
    return sub_97091078Address
}

function USDT() {
    return USDTAddress
}

function sub_d7959960(?) {
    return sub_d7959960Address
}

function getStrategyInfo(uint256 arg1) {
    require calldata.size - 4 >= 32
    return strategyInfo[arg1].field_0, 
           strategyInfo[arg1].field_256,
           strategyInfo[arg1].field_1792,
           strategyInfo[arg1].field_1536,
           strategyInfo[arg1].field_1280,
           strategyInfo[arg1].field_512
}

function getCurrentStrategy() {
    return stor22, stor23, stor20, stor19, stor18, stor16
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Approve is not supporting for share tokens.'
}

function transfer(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Transfer is not supporting for share tokens.'
}

function allowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Allowance is not supporting for share tokens.'
}

function increaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                'IncreaseAllowance is not supporting for share tokens.'
}

function decreaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                'DecreaseAllowance is not supporting for share tokens.'
}

function transferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TransferFrom is not supporting for share tokens.'
}

function sub_463b4b70(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call msg.sender with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setGovernment(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'The address of government can not be a zero address'
    governmentAddress = arg1
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_f5da03e8(?) {
    if stor9.length:
        mem[128] = uint256(stor9.field_0)
        idx = 128
        s = 0
        while (32 * stor9.length) + 96 > idx:
            mem[idx + 32] = stor9[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        return Array(len=stor9.length, data=mem[128 len 32 * stor9.length])
    mem[(32 * stor9.length) + 128] = 32
    mem[(32 * stor9.length) + 160] = stor9.length
    mem[(32 * stor9.length) + 192 len 32 * stor9.length] = mem[128 len 32 * stor9.length]
    return memory
      from (32 * stor9.length) + 128
       len (96 * stor9.length) + 64
}

function earn() {
    require ext_code.size(stor23)
    staticcall stor23.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor18)
    if stor16 >= 999999:
        call stor18.deposit(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
    else:
        call stor18.deposit(uint256 arg1, uint256 arg2) with:
             gas gas_remaining wei
            args stor16, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    emit Earn(ext_call.return_data[0]);
}

function sub_00d791b5(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(USDTAddress)
    staticcall USDTAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'GrowthVault: USDT balance should be more then 0'
    require ext_code.size(USDTAddress)
    call USDTAddress.0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, sub_5e8f09aa
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    sub_5e8f09aa = 0
}

function sub_bd7a107b(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(arg1))
    staticcall address(arg1).userInfo(uint256 arg1, address arg2) with:
            gas gas_remaining wei
           args arg3, this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_code.size(address(arg1))
    call address(arg1).withdraw(uint256 arg1, uint256 arg2) with:
         gas gas_remaining wei
        args arg3, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(address(arg2))
    call address(arg2).0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_030bcab3(?) {
    require calldata.size - 4 >= 160
    require arg1 == address(arg1)
    require arg3 == address(arg3)
    require arg4 == address(arg4)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'newStrategy can not be a zero address'
    if not address(arg3):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'lpToken can not be a zero address'
    if not address(arg4):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'liquidityRouter can not be a zero address'
    require ext_code.size(address(arg3))
    staticcall address(arg3).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg3))
    staticcall address(arg3).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    strategyInfo[arg5].field_0 = address(arg4)
    strategyInfo[arg5].field_256 = address(arg3)
    strategyInfo[arg5].field_512 = arg2
    strategyInfo[arg5].field_1280 = address(arg1)
    strategyInfo[arg5].field_1536 = address(ext_call.return_data[0])
    strategyInfo[arg5].field_1792 = ext_call.return_data[12 len 20]
    if not stor8[arg5]:
        stor9.length++
        stor9[stor9.length].field_0 = arg5
        stor8[arg5] = 1
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg4), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg4), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_7f5ed9f9(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'newStrategy can not be a zero address'
    if not address(arg2):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'lpToken can not be a zero address'
    if not address(arg3):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'liquidityRouter can not be a zero address'
    require ext_code.size(address(arg2))
    staticcall address(arg2).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg2))
    staticcall address(arg2).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    strategyInfo[arg4].field_0 = address(arg3)
    strategyInfo[arg4].field_256 = address(arg2)
    strategyInfo[arg4].field_512 = 999999
    strategyInfo[arg4].field_1280 = address(arg1)
    strategyInfo[arg4].field_1536 = address(ext_call.return_data[0])
    strategyInfo[arg4].field_1792 = ext_call.return_data[12 len 20]
    if not stor8[arg4]:
        stor9.length++
        stor9[stor9.length].field_0 = arg4
        stor8[arg4] = 1
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg3), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg3), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function name() {
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor3.length):
            if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor3.length):
                if 31 < uint255(stor3.length) * 0.5:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor3.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        else:
            if bool(stor3.length) == stor3.length.field_1 < 32:
                revert with 0, 34
            if stor3.length.field_1:
                if 31 < stor3.length.field_1:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while stor3.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        mem[ceil32(uint255(stor3.length) * 0.5) + 192 len ceil32(uint255(stor3.length) * 0.5)] = mem[128 len ceil32(uint255(stor3.length) * 0.5)]
        if ceil32(uint255(stor3.length) * 0.5) > uint255(stor3.length) * 0.5:
            mem[(uint255(stor3.length) * 0.5) + ceil32(uint255(stor3.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)], mem[(2 * ceil32(uint255(stor3.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor3.length) * 0.5)]), 
    if bool(stor3.length) == stor3.length.field_1 < 32:
        revert with 0, 34
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor3.length):
            if 31 < uint255(stor3.length) * 0.5:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while (uint255(stor3.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    else:
        if bool(stor3.length) == stor3.length.field_1 < 32:
            revert with 0, 34
        if stor3.length.field_1:
            if 31 < stor3.length.field_1:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while stor3.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    mem[ceil32(stor3.length.field_1) + 192 len ceil32(stor3.length.field_1)] = mem[128 len ceil32(stor3.length.field_1)]
    if ceil32(stor3.length.field_1) > stor3.length.field_1:
        mem[stor3.length.field_1 + ceil32(stor3.length.field_1) + 192] = 0
    return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)], mem[(2 * ceil32(stor3.length.field_1)) + 192 len 2 * ceil32(stor3.length.field_1)]), 
}

function symbol() {
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor4.length):
            if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor4.length):
                if 31 < uint255(stor4.length) * 0.5:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor4.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        else:
            if bool(stor4.length) == stor4.length.field_1 < 32:
                revert with 0, 34
            if stor4.length.field_1:
                if 31 < stor4.length.field_1:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while stor4.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        mem[ceil32(uint255(stor4.length) * 0.5) + 192 len ceil32(uint255(stor4.length) * 0.5)] = mem[128 len ceil32(uint255(stor4.length) * 0.5)]
        if ceil32(uint255(stor4.length) * 0.5) > uint255(stor4.length) * 0.5:
            mem[(uint255(stor4.length) * 0.5) + ceil32(uint255(stor4.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)], mem[(2 * ceil32(uint255(stor4.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor4.length) * 0.5)]), 
    if bool(stor4.length) == stor4.length.field_1 < 32:
        revert with 0, 34
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor4.length):
            if 31 < uint255(stor4.length) * 0.5:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while (uint255(stor4.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    else:
        if bool(stor4.length) == stor4.length.field_1 < 32:
            revert with 0, 34
        if stor4.length.field_1:
            if 31 < stor4.length.field_1:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while stor4.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    mem[ceil32(stor4.length.field_1) + 192 len ceil32(stor4.length.field_1)] = mem[128 len ceil32(stor4.length.field_1)]
    if ceil32(stor4.length.field_1) > stor4.length.field_1:
        mem[stor4.length.field_1 + ceil32(stor4.length.field_1) + 192] = 0
    return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)], mem[(2 * ceil32(stor4.length.field_1)) + 192 len 2 * ceil32(stor4.length.field_1)]), 
}

function getTotalCapital() {
    mem[96] = 0
    mem[128] = 0
    mem[160] = 0
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 2
    mem[64] = 448
    mem[384 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = 96
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _232 = mem[64]
        mem[64] = mem[64] + 256
        mem[_232] = strategyInfo[stor9[idx].field_0].field_0
        mem[_232 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_232 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_232 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_232 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_232 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_232 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_232 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _242 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _244 = mem[_242]
            if not mem[_242]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_242]
                v = _232
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _261 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _263 = mem[_261]
            require mem[_261] == mem[_261 + 18 len 14]
            _265 = mem[_261 + 32]
            require mem[_261 + 32] == mem[_261 + 50 len 14]
            require mem[_261 + 64] == mem[_261 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _273 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _275 = mem[_273]
            if _244 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_273]:
                revert with 0, 18
            if 10^12 * _244 / mem[_273] and Mask(112, 0, _263) > -1 / 10^12 * _244 / mem[_273]:
                revert with 0, 17
            if 10^12 * _244 / mem[_273] and Mask(112, 0, _265) > -1 / 10^12 * _244 / mem[_273]:
                revert with 0, 17
            if 1 >= mem[352]:
                revert with 0, 50
            mem[416] = stor21
            if 0 >= mem[352]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[384] = strategyInfo[stor9[idx].field_0].field_1792
                _291 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                mem[mem[64] + 36] = 64
                _298 = mem[352]
                mem[mem[64] + 68] = mem[352]
                s = 0
                t = 384
                u = mem[64] + 100
                while s < _298:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _291 + (32 * _298) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _472 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _478 = mem[_472]
                require mem[_472] <= test266151307()
                require _472 + mem[_472] + 31 < _472 + return_data.size
                _484 = mem[_472 + mem[_472]]
                if mem[_472 + mem[_472]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_472 + mem[_472]]) + 1 < 0 or _472 + ceil32(return_data.size) + ceil32(32 * mem[_472 + mem[_472]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _472 + ceil32(return_data.size) + ceil32(32 * mem[_472 + mem[_472]]) + 1
                mem[_472 + ceil32(return_data.size)] = _484
                require _478 + (32 * _484) + 32 <= return_data.size
                t = _472 + ceil32(return_data.size) + 32
                s = _472 + _478 + 32
                while s < _472 + _478 + (32 * _484) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _484:
                    revert with 0, 50
                _584 = mem[_472 + ceil32(return_data.size) + 64]
                if 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12 > !mem[_472 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_232 + 128] = (10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + mem[_472 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + _584):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _472 + ceil32(return_data.size)
                t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                v = _244
                v = _232
                v = stor9[idx].field_0
                v = v + (10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + _584
                continue 
            mem[384] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _295 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                mem[mem[64] + 36] = 64
                _299 = mem[352]
                mem[mem[64] + 68] = mem[352]
                s = 0
                t = 384
                u = mem[64] + 100
                while s < _299:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _295 + (32 * _299) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _471 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _477 = mem[_471]
                require mem[_471] <= test266151307()
                require _471 + mem[_471] + 31 < _471 + return_data.size
                _483 = mem[_471 + mem[_471]]
                if mem[_471 + mem[_471]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_471 + mem[_471]]) + 1 < 0 or _471 + ceil32(return_data.size) + ceil32(32 * mem[_471 + mem[_471]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _471 + ceil32(return_data.size) + ceil32(32 * mem[_471 + mem[_471]]) + 1
                mem[_471 + ceil32(return_data.size)] = _483
                require _477 + (32 * _483) + 32 <= return_data.size
                t = _471 + ceil32(return_data.size) + 32
                s = _471 + _477 + 32
                while s < _471 + _477 + (32 * _483) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _483:
                    revert with 0, 50
                _583 = mem[_471 + ceil32(return_data.size) + 64]
                if 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12 > !mem[_471 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_232 + 128] = (10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + mem[_471 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + _583):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _471 + ceil32(return_data.size)
                t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                v = _244
                v = _232
                v = stor9[idx].field_0
                v = v + (10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + _583
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _300 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _304 = mem[_300]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _324 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _331 = mem[_324]
            if mem[_324] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _304:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _357 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _363 = mem[_357]
            if 10^12 * _331 / _304 and mem[_357] > -1 / 10^12 * _331 / _304:
                revert with 0, 17
            _373 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _331 / _304 * _363 / 10^12
            mem[mem[64] + 36] = 64
            _376 = mem[352]
            mem[mem[64] + 68] = mem[352]
            t = 0
            u = 384
            w = mem[64] + 100
            while t < _376:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _373 + (32 * _376) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _470 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _476 = mem[_470]
            require mem[_470] <= test266151307()
            require _470 + mem[_470] + 31 < _470 + return_data.size
            _482 = mem[_470 + mem[_470]]
            if mem[_470 + mem[_470]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_470 + mem[_470]]) + 1 < 0 or _470 + ceil32(return_data.size) + ceil32(32 * mem[_470 + mem[_470]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _470 + ceil32(return_data.size) + ceil32(32 * mem[_470 + mem[_470]]) + 1
            mem[_470 + ceil32(return_data.size)] = _482
            require _476 + (32 * _482) + 32 <= return_data.size
            u = _470 + ceil32(return_data.size) + 32
            t = _470 + _476 + 32
            while t < _470 + _476 + (32 * _482) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _482:
                revert with 0, 50
            _582 = mem[_470 + ceil32(return_data.size) + 64]
            mem[_232 + 128] = mem[_470 + ceil32(return_data.size) + 64]
            if v > !_582:
                revert with 0, 17
            if 0 >= mem[352]:
                revert with 0, 50
            mem[384] = mem[_232 + 236 len 20]
            _591 = mem[_232 + 224]
            _592 = mem[_232]
            require ext_code.size(mem[_232 + 236 len 20])
            staticcall mem[_232 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _598 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _600 = mem[_598]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_591))
            staticcall address(_591).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _606 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _608 = mem[_606]
            if mem[_606] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _600:
                revert with 0, 18
            mem[mem[64] + 4] = address(_592)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_592)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _614 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _616 = mem[_614]
            if 10^12 * _608 / _600 and mem[_614] > -1 / 10^12 * _608 / _600:
                revert with 0, 17
            _618 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _608 / _600 * _616 / 10^12
            mem[mem[64] + 36] = 64
            _620 = mem[352]
            mem[mem[64] + 68] = mem[352]
            t = 0
            u = 384
            w = mem[64] + 100
            while t < _620:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_592))
            staticcall address(_592).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _618 + (32 * _620) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _648 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _650 = mem[_648]
            require mem[_648] <= test266151307()
            require _648 + mem[_648] + 31 < _648 + return_data.size
            _652 = mem[_648 + mem[_648]]
            if mem[_648 + mem[_648]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_648 + mem[_648]]) + 1 < 0 or _648 + ceil32(return_data.size) + ceil32(32 * mem[_648 + mem[_648]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _648 + ceil32(return_data.size) + ceil32(32 * mem[_648 + mem[_648]]) + 1
            mem[_648 + ceil32(return_data.size)] = _652
            require _650 + (32 * _652) + 32 <= return_data.size
            u = _648 + ceil32(return_data.size) + 32
            t = _648 + _650 + 32
            while t < _648 + _650 + (32 * _652) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _652:
                revert with 0, 50
            if mem[_232 + 128] > !mem[_648 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = mem[_232 + 128] + mem[_648 + ceil32(return_data.size) + 64]
            if v + _582 > !mem[_232 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
            u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
            v = _244
            v = _232
            v = stor9[idx].field_0
            v = v + _582 + mem[_232 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _241 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _243 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_243] = mem[_241]
        mem[_243 + 32] = mem[_241 + 32]
        mem[_243 + 64] = mem[_241 + 64]
        require return_data.size - 96 >= 96
        _249 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_249] = mem[_241 + 96]
        mem[_249 + 32] = mem[_241 + 128]
        mem[_249 + 64] = mem[_241 + 160]
        mem[_243 + 96] = _249
        mem[_243 + 128] = mem[_241 + 192]
        require return_data.size - 224 >= 96
        _257 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_257] = mem[_241 + 224]
        mem[_257 + 32] = mem[_241 + 256]
        mem[_257 + 64] = mem[_241 + 288]
        mem[_243 + 160] = _257
        _262 = mem[_243 + 64]
        if not mem[_243 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_243 + 64]
            v = _232
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _269 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _270 = mem[_269]
        require mem[_269] == mem[_269 + 18 len 14]
        _274 = mem[_269 + 32]
        require mem[_269 + 32] == mem[_269 + 50 len 14]
        require mem[_269 + 64] == mem[_269 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _279 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _280 = mem[_279]
        if _262 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_279]:
            revert with 0, 18
        if 10^12 * _262 / mem[_279] and Mask(112, 0, _270) > -1 / 10^12 * _262 / mem[_279]:
            revert with 0, 17
        if 10^12 * _262 / mem[_279] and Mask(112, 0, _274) > -1 / 10^12 * _262 / mem[_279]:
            revert with 0, 17
        if 1 >= mem[352]:
            revert with 0, 50
        mem[416] = stor21
        if 0 >= mem[352]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[384] = strategyInfo[stor9[idx].field_0].field_1792
            _318 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            mem[mem[64] + 36] = 64
            _328 = mem[352]
            mem[mem[64] + 68] = mem[352]
            s = 0
            t = 384
            u = mem[64] + 100
            while s < _328:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _318 + (32 * _328) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _469 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _475 = mem[_469]
            require mem[_469] <= test266151307()
            require _469 + mem[_469] + 31 < _469 + return_data.size
            _481 = mem[_469 + mem[_469]]
            if mem[_469 + mem[_469]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_469 + mem[_469]]) + 1 < 0 or _469 + ceil32(return_data.size) + ceil32(32 * mem[_469 + mem[_469]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _469 + ceil32(return_data.size) + ceil32(32 * mem[_469 + mem[_469]]) + 1
            mem[_469 + ceil32(return_data.size)] = _481
            require _475 + (32 * _481) + 32 <= return_data.size
            t = _469 + ceil32(return_data.size) + 32
            s = _469 + _475 + 32
            while s < _469 + _475 + (32 * _481) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _481:
                revert with 0, 50
            _581 = mem[_469 + ceil32(return_data.size) + 64]
            if 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12 > !mem[_469 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = (10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + mem[_469 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + _581):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _469 + ceil32(return_data.size)
            t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            u = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            v = _262
            v = _232
            v = stor9[idx].field_0
            v = v + (10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + _581
            continue 
        mem[384] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            _323 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            mem[mem[64] + 36] = 64
            _330 = mem[352]
            mem[mem[64] + 68] = mem[352]
            s = 0
            t = 384
            w = mem[64] + 100
            while s < _330:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _323 + (32 * _330) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _468 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _474 = mem[_468]
            require mem[_468] <= test266151307()
            require _468 + mem[_468] + 31 < _468 + return_data.size
            _480 = mem[_468 + mem[_468]]
            if mem[_468 + mem[_468]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_468 + mem[_468]]) + 1 < 0 or _468 + ceil32(return_data.size) + ceil32(32 * mem[_468 + mem[_468]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _468 + ceil32(return_data.size) + ceil32(32 * mem[_468 + mem[_468]]) + 1
            mem[_468 + ceil32(return_data.size)] = _480
            require _474 + (32 * _480) + 32 <= return_data.size
            t = _468 + ceil32(return_data.size) + 32
            s = _468 + _474 + 32
            while s < _468 + _474 + (32 * _480) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _480:
                revert with 0, 50
            _580 = mem[_468 + ceil32(return_data.size) + 64]
            if 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12 > !mem[_468 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = (10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + mem[_468 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + _580):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _468 + ceil32(return_data.size)
            t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            s = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            v = _262
            v = _232
            v = stor9[idx].field_0
            v = v + (10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + _580
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _333 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _338 = mem[_333]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _346 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _352 = mem[_346]
        if mem[_346] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _338:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _370 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _375 = mem[_370]
        if 10^12 * _352 / _338 and mem[_370] > -1 / 10^12 * _352 / _338:
            revert with 0, 17
        _379 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _352 / _338 * _375 / 10^12
        mem[mem[64] + 36] = 64
        _381 = mem[352]
        mem[mem[64] + 68] = mem[352]
        t = 0
        u = 384
        w = mem[64] + 100
        while t < _381:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _379 + (32 * _381) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _467 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _473 = mem[_467]
        require mem[_467] <= test266151307()
        require _467 + mem[_467] + 31 < _467 + return_data.size
        _479 = mem[_467 + mem[_467]]
        if mem[_467 + mem[_467]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_467 + mem[_467]]) + 1 < 0 or _467 + ceil32(return_data.size) + ceil32(32 * mem[_467 + mem[_467]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _467 + ceil32(return_data.size) + ceil32(32 * mem[_467 + mem[_467]]) + 1
        mem[_467 + ceil32(return_data.size)] = _479
        require _473 + (32 * _479) + 32 <= return_data.size
        u = _467 + ceil32(return_data.size) + 32
        t = _467 + _473 + 32
        while t < _467 + _473 + (32 * _479) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _479:
            revert with 0, 50
        _579 = mem[_467 + ceil32(return_data.size) + 64]
        mem[_232 + 128] = mem[_467 + ceil32(return_data.size) + 64]
        if v > !_579:
            revert with 0, 17
        if 0 >= mem[352]:
            revert with 0, 50
        mem[384] = mem[_232 + 236 len 20]
        _589 = mem[_232 + 224]
        _590 = mem[_232]
        require ext_code.size(mem[_232 + 236 len 20])
        staticcall mem[_232 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _597 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _599 = mem[_597]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_589))
        staticcall address(_589).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _605 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _607 = mem[_605]
        if mem[_605] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _599:
            revert with 0, 18
        mem[mem[64] + 4] = address(_590)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_590)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _613 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _615 = mem[_613]
        if 10^12 * _607 / _599 and mem[_613] > -1 / 10^12 * _607 / _599:
            revert with 0, 17
        _617 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _607 / _599 * _615 / 10^12
        mem[mem[64] + 36] = 64
        _619 = mem[352]
        mem[mem[64] + 68] = mem[352]
        t = 0
        u = 384
        w = mem[64] + 100
        while t < _619:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_590))
        staticcall address(_590).mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _617 + (32 * _619) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _647 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _649 = mem[_647]
        require mem[_647] <= test266151307()
        require _647 + mem[_647] + 31 < _647 + return_data.size
        _651 = mem[_647 + mem[_647]]
        if mem[_647 + mem[_647]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_647 + mem[_647]]) + 1 < 0 or _647 + ceil32(return_data.size) + ceil32(32 * mem[_647 + mem[_647]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _647 + ceil32(return_data.size) + ceil32(32 * mem[_647 + mem[_647]]) + 1
        mem[_647 + ceil32(return_data.size)] = _651
        require _649 + (32 * _651) + 32 <= return_data.size
        u = _647 + ceil32(return_data.size) + 32
        t = _647 + _649 + 32
        while t < _647 + _649 + (32 * _651) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _651:
            revert with 0, 50
        if mem[_232 + 128] > !mem[_647 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_232 + 128] = mem[_232 + 128] + mem[_647 + ceil32(return_data.size) + 64]
        if v + _579 > !mem[_232 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
        u = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
        v = _262
        v = _232
        v = stor9[idx].field_0
        v = v + _579 + mem[_232 + 128]
        continue 
    return v
}

function autoCompound() {
    mem[96] = 2
    mem[128 len 64] = call.data[calldata.size len 64]
    mem[64] = 448
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    idx = 0
    s = 192
    s = 0
    s = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _658 = mem[64]
        mem[64] = mem[64] + 256
        mem[_658] = strategyInfo[stor9[idx].field_0].field_0
        mem[_658 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_658 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_658 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_658 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_658 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_658 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_658 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _669 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _678 = mem[_669]
            if not mem[_669]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _658
                s = mem[_669]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _698 = mem[64]
            mem[64] = mem[64] + 256
            mem[_698] = strategyInfo[stor9[idx].field_0].field_0
            mem[_698 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_698 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_698 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_698 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_698 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_698 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_698 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _678
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _678
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _733 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _743 = mem[_733]
                require mem[_733] == mem[_733 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_733 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_743))
                staticcall address(_743).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _777 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _781 = mem[_777]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_743))
                staticcall address(_743).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _795 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _803 = mem[_795]
                if mem[_795] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _781:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _823 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _825 = mem[_823]
                if 10^12 * _803 / _781 and mem[_823] > -1 / 10^12 * _803 / _781:
                    revert with 0, 17
                _844 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _803 / _781 * _825 / 10^12
                mem[mem[64] + 36] = 64
                _855 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _855:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _844 + (32 * _855) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1600 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1607 = mem[_1600]
                require mem[_1600] <= test266151307()
                require _1600 + mem[_1600] + 31 < _1600 + return_data.size
                _1614 = mem[_1600 + mem[_1600]]
                if mem[_1600 + mem[_1600]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_1600 + mem[_1600]]) + 1 < 0 or _1600 + ceil32(return_data.size) + ceil32(32 * mem[_1600 + mem[_1600]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _1600 + ceil32(return_data.size) + ceil32(32 * mem[_1600 + mem[_1600]]) + 1
                mem[_1600 + ceil32(return_data.size)] = _1614
                require _1607 + (32 * _1614) + 32 <= return_data.size
                t = _1600 + ceil32(return_data.size) + 32
                s = _1600 + _1607 + 32
                while s < _1600 + _1607 + (32 * _1614) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _1614:
                    revert with 0, 50
                _3010 = mem[_1600 + ceil32(return_data.size) + 64]
                if mem[_1600 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1600 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_1600 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_1600 + ceil32(return_data.size) + 64] < 100 * mem[_1600 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _3050 = mem[_658]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_743))
                staticcall address(_743).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3074 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3082 = mem[_3074]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _3096 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3082
                mem[mem[64] + 36] = _3010 - (100 * _3010 / 10000)
                mem[mem[64] + 68] = 160
                _3102 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _3102:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_3096 + 100] = this.address
                mem[_3096 + 132] = block.timestamp + 60
                require ext_code.size(address(_3050))
                call address(_3050).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3096 + (32 * _3102) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4386 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4394 = mem[_4386]
                require mem[_4386] <= test266151307()
                require _4386 + mem[_4386] + 31 < _4386 + return_data.size
                _4406 = mem[_4386 + mem[_4386]]
                if mem[_4386 + mem[_4386]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_4386 + mem[_4386]]) + 1 < 0 or _4386 + ceil32(return_data.size) + ceil32(32 * mem[_4386 + mem[_4386]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _4386 + ceil32(return_data.size) + ceil32(32 * mem[_4386 + mem[_4386]]) + 1
                mem[_4386 + ceil32(return_data.size)] = _4406
                require _4394 + (32 * _4406) + 32 <= return_data.size
                t = _4386 + ceil32(return_data.size) + 32
                s = _4386 + _4394 + 32
                while s < _4386 + _4394 + (32 * _4406) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _5770 = mem[_658]
                _5771 = mem[_658 + 192]
                _5772 = mem[_658 + 224]
                _5782 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_5782 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_5782]:
                    revert with 0, 50
                mem[_5782 + 32] = stor21
                if stor21 == address(_5771):
                    if stor21 == address(_5772):
                        _5812 = mem[_658 + 160]
                        _5813 = mem[_658 + 64]
                        _5814 = mem[_658 + 32]
                        mem[_5782 + 100] = this.address
                        require ext_code.size(address(_5814))
                        staticcall address(_5814).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5782 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5782 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        if _5813 >= 999999:
                            mem[_5782 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_5812))
                            call address(_5812).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5782 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _5930 = mem[_658 + 32]
                            mem[_5782 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_5930))
                            staticcall address(_5930).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5782 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_658 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_5782 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5782 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5782 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _6052 = mem[_658]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_5782 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_5782 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_5782 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_5782 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _5782 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_5782 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_5782 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_6052))
                            call address(_6052).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5782 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5782 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5782 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7182 = mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5782 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _7198 = mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5782 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _5782 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_5782 + (6 * ceil32(return_data.size)) + 96] = _7198
                            require _7182 + (32 * _7198) + 32 <= return_data.size
                            t = _5782 + (6 * ceil32(return_data.size)) + 128
                            s = _5782 + (4 * ceil32(return_data.size)) + _7182 + 128
                            while s < _5782 + (4 * ceil32(return_data.size)) + _7182 + (32 * _7198) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8302 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_8302]
                        else:
                            mem[_5782 + ceil32(return_data.size) + 100] = _5813
                            mem[_5782 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_5812))
                            call address(_5812).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _5813, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5782 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _5931 = mem[_658 + 32]
                            mem[_5782 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_5931))
                            staticcall address(_5931).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5782 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_658 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_5782 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_5782 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5782 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _6053 = mem[_658]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_5782 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_5782 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_5782 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_5782 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _5782 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_5782 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_5782 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_6053))
                            call address(_6053).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5782 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5782 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5782 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7183 = mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5782 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _7199 = mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5782 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _5782 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5782 + (4 * ceil32(return_data.size)) + mem[_5782 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_5782 + (6 * ceil32(return_data.size)) + 96] = _7199
                            require _7183 + (32 * _7199) + 32 <= return_data.size
                            t = _5782 + (6 * ceil32(return_data.size)) + 128
                            s = _5782 + (4 * ceil32(return_data.size)) + _7183 + 128
                            while s < _5782 + (4 * ceil32(return_data.size)) + _7183 + (32 * _7199) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8303 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_8303]
                    else:
                        if 1 >= mem[_5782]:
                            revert with 0, 50
                        mem[_5782 + 64] = address(_5772)
                        mem[_5782 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_5782 + 100] = eth.balance(this.address) / 2
                        mem[_5782 + 132] = 64
                        mem[_5782 + 164] = mem[_5782]
                        s = 0
                        t = _5782 + 32
                        u = _5782 + 196
                        while s < mem[_5782]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_5770))
                        staticcall address(_5770).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _5782 + (32 * mem[_5782]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7172 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _7190 = mem[_7172]
                        require mem[_7172] <= test266151307()
                        require _7172 + mem[_7172] + 31 < _7172 + return_data.size
                        _7206 = mem[_7172 + mem[_7172]]
                        if mem[_7172 + mem[_7172]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7172 + mem[_7172]]) + 1 < 0 or _7172 + ceil32(return_data.size) + ceil32(32 * mem[_7172 + mem[_7172]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _7172 + ceil32(return_data.size) + ceil32(32 * mem[_7172 + mem[_7172]]) + 1
                        mem[_7172 + ceil32(return_data.size)] = _7206
                        require _7190 + (32 * _7206) + 32 <= return_data.size
                        t = _7172 + ceil32(return_data.size) + 32
                        s = _7172 + _7190 + 32
                        while s < _7172 + _7190 + (32 * _7206) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _7206:
                            revert with 0, 50
                        _8278 = mem[_7172 + ceil32(return_data.size) + 64]
                        if mem[_7172 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7172 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_7172 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _7206:
                            revert with 0, 50
                        _8326 = mem[_7172 + ceil32(return_data.size) + 64]
                        if mem[_7172 + ceil32(return_data.size) + 64] < 100 * mem[_7172 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _8334 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _8326 - (100 * _8278 / 10000)
                        mem[mem[64] + 36] = 128
                        _8342 = mem[_5782]
                        mem[mem[64] + 132] = mem[_5782]
                        s = 0
                        t = _5782 + 32
                        u = mem[64] + 164
                        while s < _8342:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_8334 + 68] = this.address
                        mem[_8334 + 100] = block.timestamp + 60
                        require ext_code.size(address(_5770))
                        call address(_5770).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8334 + (32 * _8342) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9294 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9302 = mem[_9294]
                        require mem[_9294] <= test266151307()
                        require _9294 + mem[_9294] + 31 < _9294 + return_data.size
                        _9310 = mem[_9294 + mem[_9294]]
                        if mem[_9294 + mem[_9294]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_9294 + mem[_9294]]) + 1 < 0 or _9294 + ceil32(return_data.size) + ceil32(32 * mem[_9294 + mem[_9294]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _9294 + ceil32(return_data.size) + ceil32(32 * mem[_9294 + mem[_9294]]) + 1
                        mem[_9294 + ceil32(return_data.size)] = _9310
                        require _9302 + (32 * _9310) + 32 <= return_data.size
                        t = _9294 + ceil32(return_data.size) + 32
                        s = _9294 + _9302 + 32
                        while s < _9294 + _9302 + (32 * _9310) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _10218 = mem[_658 + 160]
                        _10219 = mem[_658 + 64]
                        _10220 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10220))
                        staticcall address(_10220).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10262 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10274 = mem[_10262]
                        if _10219 >= 999999:
                            mem[mem[64] + 4] = mem[_10262]
                            require ext_code.size(address(_10218))
                            call address(_10218).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _10274
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _10274
                            emit Earn(_10274);
                            _10354 = mem[_658 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_10354))
                            staticcall address(_10354).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10416 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_658 + 96] = mem[_10416]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10526 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10542 = mem[_10526]
                            _10558 = mem[_658]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _10580 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10542
                            mem[mem[64] + 36] = 128
                            _10598 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _10598:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10580 + 68] = this.address
                            mem[_10580 + 100] = block.timestamp + 60
                            require ext_code.size(address(_10558))
                            call address(_10558).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10580 + (32 * _10598) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11130 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11150 = mem[_11130]
                            require mem[_11130] <= test266151307()
                            require _11130 + mem[_11130] + 31 < _11130 + return_data.size
                            _11170 = mem[_11130 + mem[_11130]]
                            if mem[_11130 + mem[_11130]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11130 + mem[_11130]]) + 1 < 0 or _11130 + ceil32(return_data.size) + ceil32(32 * mem[_11130 + mem[_11130]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11130 + ceil32(return_data.size) + ceil32(32 * mem[_11130 + mem[_11130]]) + 1
                            mem[_11130 + ceil32(return_data.size)] = _11170
                            require _11150 + (32 * _11170) + 32 <= return_data.size
                            t = _11130 + ceil32(return_data.size) + 32
                            s = _11130 + _11150 + 32
                            while s < _11130 + _11150 + (32 * _11170) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11666 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_11666]
                        else:
                            mem[mem[64] + 4] = _10219
                            mem[mem[64] + 36] = _10274
                            require ext_code.size(address(_10218))
                            call address(_10218).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _10219, _10274
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _10274
                            emit Earn(_10274);
                            _10355 = mem[_658 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_10355))
                            staticcall address(_10355).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10417 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_658 + 96] = mem[_10417]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10527 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10543 = mem[_10527]
                            _10559 = mem[_658]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _10581 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10543
                            mem[mem[64] + 36] = 128
                            _10599 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _10599:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10581 + 68] = this.address
                            mem[_10581 + 100] = block.timestamp + 60
                            require ext_code.size(address(_10559))
                            call address(_10559).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10581 + (32 * _10599) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11131 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11151 = mem[_11131]
                            require mem[_11131] <= test266151307()
                            require _11131 + mem[_11131] + 31 < _11131 + return_data.size
                            _11171 = mem[_11131 + mem[_11131]]
                            if mem[_11131 + mem[_11131]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11131 + mem[_11131]]) + 1 < 0 or _11131 + ceil32(return_data.size) + ceil32(32 * mem[_11131 + mem[_11131]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11131 + ceil32(return_data.size) + ceil32(32 * mem[_11131 + mem[_11131]]) + 1
                            mem[_11131 + ceil32(return_data.size)] = _11171
                            require _11151 + (32 * _11171) + 32 <= return_data.size
                            t = _11131 + ceil32(return_data.size) + 32
                            s = _11131 + _11151 + 32
                            while s < _11131 + _11151 + (32 * _11171) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11667 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_11667]
                else:
                    if 1 >= mem[_5782]:
                        revert with 0, 50
                    mem[_5782 + 64] = address(_5771)
                    mem[_5782 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5782 + 100] = eth.balance(this.address) / 2
                    mem[_5782 + 132] = 64
                    mem[_5782 + 164] = mem[_5782]
                    s = 0
                    t = _5782 + 32
                    u = _5782 + 196
                    while s < mem[_5782]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5770))
                    staticcall address(_5770).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5782 + (32 * mem[_5782]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7173 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7191 = mem[_7173]
                    require mem[_7173] <= test266151307()
                    require _7173 + mem[_7173] + 31 < _7173 + return_data.size
                    _7207 = mem[_7173 + mem[_7173]]
                    if mem[_7173 + mem[_7173]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7173 + mem[_7173]]) + 1 < 0 or _7173 + ceil32(return_data.size) + ceil32(32 * mem[_7173 + mem[_7173]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7173 + ceil32(return_data.size) + ceil32(32 * mem[_7173 + mem[_7173]]) + 1
                    mem[_7173 + ceil32(return_data.size)] = _7207
                    require _7191 + (32 * _7207) + 32 <= return_data.size
                    t = _7173 + ceil32(return_data.size) + 32
                    s = _7173 + _7191 + 32
                    while s < _7173 + _7191 + (32 * _7207) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7207:
                        revert with 0, 50
                    _8279 = mem[_7173 + ceil32(return_data.size) + 64]
                    if mem[_7173 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7173 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_7173 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _7207:
                        revert with 0, 50
                    _8327 = mem[_7173 + ceil32(return_data.size) + 64]
                    if mem[_7173 + ceil32(return_data.size) + 64] < 100 * mem[_7173 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _8335 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _8327 - (100 * _8279 / 10000)
                    mem[mem[64] + 36] = 128
                    _8343 = mem[_5782]
                    mem[mem[64] + 132] = mem[_5782]
                    s = 0
                    t = _5782 + 32
                    u = mem[64] + 164
                    while s < _8343:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8335 + 68] = this.address
                    mem[_8335 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5770))
                    call address(_5770).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8335 + (32 * _8343) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9295 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9303 = mem[_9295]
                    require mem[_9295] <= test266151307()
                    require _9295 + mem[_9295] + 31 < _9295 + return_data.size
                    _9311 = mem[_9295 + mem[_9295]]
                    if mem[_9295 + mem[_9295]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9295 + mem[_9295]]) + 1 < 0 or _9295 + ceil32(return_data.size) + ceil32(32 * mem[_9295 + mem[_9295]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9295 + ceil32(return_data.size) + ceil32(32 * mem[_9295 + mem[_9295]]) + 1
                    mem[_9295 + ceil32(return_data.size)] = _9311
                    require _9303 + (32 * _9311) + 32 <= return_data.size
                    t = _9295 + ceil32(return_data.size) + 32
                    s = _9295 + _9303 + 32
                    while s < _9295 + _9303 + (32 * _9311) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_5772):
                        _10240 = mem[_658 + 160]
                        _10241 = mem[_658 + 64]
                        _10242 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10242))
                        staticcall address(_10242).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10268 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10280 = mem[_10268]
                        if _10241 >= 999999:
                            mem[mem[64] + 4] = mem[_10268]
                            require ext_code.size(address(_10240))
                            call address(_10240).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _10280
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _10280
                            emit Earn(_10280);
                            _10384 = mem[_658 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_10384))
                            staticcall address(_10384).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10426 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_658 + 96] = mem[_10426]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10534 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10550 = mem[_10534]
                            _10566 = mem[_658]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _10590 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10550
                            mem[mem[64] + 36] = 128
                            _10606 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _10606:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10590 + 68] = this.address
                            mem[_10590 + 100] = block.timestamp + 60
                            require ext_code.size(address(_10566))
                            call address(_10566).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10590 + (32 * _10606) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11132 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11152 = mem[_11132]
                            require mem[_11132] <= test266151307()
                            require _11132 + mem[_11132] + 31 < _11132 + return_data.size
                            _11172 = mem[_11132 + mem[_11132]]
                            if mem[_11132 + mem[_11132]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11132 + mem[_11132]]) + 1 < 0 or _11132 + ceil32(return_data.size) + ceil32(32 * mem[_11132 + mem[_11132]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11132 + ceil32(return_data.size) + ceil32(32 * mem[_11132 + mem[_11132]]) + 1
                            mem[_11132 + ceil32(return_data.size)] = _11172
                            require _11152 + (32 * _11172) + 32 <= return_data.size
                            t = _11132 + ceil32(return_data.size) + 32
                            s = _11132 + _11152 + 32
                            while s < _11132 + _11152 + (32 * _11172) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11668 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_11668]
                        else:
                            mem[mem[64] + 4] = _10241
                            mem[mem[64] + 36] = _10280
                            require ext_code.size(address(_10240))
                            call address(_10240).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _10241, _10280
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _10280
                            emit Earn(_10280);
                            _10385 = mem[_658 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_10385))
                            staticcall address(_10385).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10427 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_658 + 96] = mem[_10427]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10535 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10551 = mem[_10535]
                            _10567 = mem[_658]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _10591 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _10551
                            mem[mem[64] + 36] = 128
                            _10607 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _10607:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10591 + 68] = this.address
                            mem[_10591 + 100] = block.timestamp + 60
                            require ext_code.size(address(_10567))
                            call address(_10567).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10591 + (32 * _10607) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11133 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11153 = mem[_11133]
                            require mem[_11133] <= test266151307()
                            require _11133 + mem[_11133] + 31 < _11133 + return_data.size
                            _11173 = mem[_11133 + mem[_11133]]
                            if mem[_11133 + mem[_11133]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11133 + mem[_11133]]) + 1 < 0 or _11133 + ceil32(return_data.size) + ceil32(32 * mem[_11133 + mem[_11133]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11133 + ceil32(return_data.size) + ceil32(32 * mem[_11133 + mem[_11133]]) + 1
                            mem[_11133 + ceil32(return_data.size)] = _11173
                            require _11153 + (32 * _11173) + 32 <= return_data.size
                            t = _11133 + ceil32(return_data.size) + 32
                            s = _11133 + _11153 + 32
                            while s < _11133 + _11153 + (32 * _11173) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11669 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_11669]
                    else:
                        if 1 >= mem[_5782]:
                            revert with 0, 50
                        mem[_5782 + 64] = address(_5772)
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _10263 = mem[_5782]
                        mem[mem[64] + 68] = mem[_5782]
                        s = 0
                        t = _5782 + 32
                        u = mem[64] + 100
                        while s < _10263:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_5770))
                        staticcall address(_5770).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _10263) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11140 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11160 = mem[_11140]
                        require mem[_11140] <= test266151307()
                        require _11140 + mem[_11140] + 31 < _11140 + return_data.size
                        _11180 = mem[_11140 + mem[_11140]]
                        if mem[_11140 + mem[_11140]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11140 + mem[_11140]]) + 1 < 0 or _11140 + ceil32(return_data.size) + ceil32(32 * mem[_11140 + mem[_11140]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11140 + ceil32(return_data.size) + ceil32(32 * mem[_11140 + mem[_11140]]) + 1
                        mem[_11140 + ceil32(return_data.size)] = _11180
                        require _11160 + (32 * _11180) + 32 <= return_data.size
                        t = _11140 + ceil32(return_data.size) + 32
                        s = _11140 + _11160 + 32
                        while s < _11140 + _11160 + (32 * _11180) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _11180:
                            revert with 0, 50
                        _11624 = mem[_11140 + ceil32(return_data.size) + 64]
                        if mem[_11140 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11140 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_11140 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _11180:
                            revert with 0, 50
                        _11696 = mem[_11140 + ceil32(return_data.size) + 64]
                        if mem[_11140 + ceil32(return_data.size) + 64] < 100 * mem[_11140 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11700 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11696 - (100 * _11624 / 10000)
                        mem[mem[64] + 36] = 128
                        _11704 = mem[_5782]
                        mem[mem[64] + 132] = mem[_5782]
                        s = 0
                        t = _5782 + 32
                        u = mem[64] + 164
                        while s < _11704:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11700 + 68] = this.address
                        mem[_11700 + 100] = block.timestamp + 60
                        require ext_code.size(address(_5770))
                        call address(_5770).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11700 + (32 * _11704) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12004 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12008 = mem[_12004]
                        require mem[_12004] <= test266151307()
                        require _12004 + mem[_12004] + 31 < _12004 + return_data.size
                        _12012 = mem[_12004 + mem[_12004]]
                        if mem[_12004 + mem[_12004]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12004 + mem[_12004]]) + 1 < 0 or _12004 + ceil32(return_data.size) + ceil32(32 * mem[_12004 + mem[_12004]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12004 + ceil32(return_data.size) + ceil32(32 * mem[_12004 + mem[_12004]]) + 1
                        mem[_12004 + ceil32(return_data.size)] = _12012
                        require _12008 + (32 * _12012) + 32 <= return_data.size
                        t = _12004 + ceil32(return_data.size) + 32
                        s = _12004 + _12008 + 32
                        while s < _12004 + _12008 + (32 * _12012) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _12292 = mem[_658 + 160]
                        _12293 = mem[_658 + 64]
                        _12294 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12294))
                        staticcall address(_12294).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12308 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12312 = mem[_12308]
                        if _12293 >= 999999:
                            mem[mem[64] + 4] = mem[_12308]
                            require ext_code.size(address(_12292))
                            call address(_12292).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _12312
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _12312
                            emit Earn(_12312);
                            _12350 = mem[_658 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12350))
                            staticcall address(_12350).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12374 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_658 + 96] = mem[_12374]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12422 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12430 = mem[_12422]
                            _12438 = mem[_658]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _12446 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _12430
                            mem[mem[64] + 36] = 128
                            _12454 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _12454:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_12446 + 68] = this.address
                            mem[_12446 + 100] = block.timestamp + 60
                            require ext_code.size(address(_12438))
                            call address(_12438).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _12446 + (32 * _12454) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12566 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12574 = mem[_12566]
                            require mem[_12566] <= test266151307()
                            require _12566 + mem[_12566] + 31 < _12566 + return_data.size
                            _12582 = mem[_12566 + mem[_12566]]
                            if mem[_12566 + mem[_12566]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_12566 + mem[_12566]]) + 1 < 0 or _12566 + ceil32(return_data.size) + ceil32(32 * mem[_12566 + mem[_12566]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _12566 + ceil32(return_data.size) + ceil32(32 * mem[_12566 + mem[_12566]]) + 1
                            mem[_12566 + ceil32(return_data.size)] = _12582
                            require _12574 + (32 * _12582) + 32 <= return_data.size
                            t = _12566 + ceil32(return_data.size) + 32
                            s = _12566 + _12574 + 32
                            while s < _12566 + _12574 + (32 * _12582) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12662]
                        else:
                            mem[mem[64] + 4] = _12293
                            mem[mem[64] + 36] = _12312
                            require ext_code.size(address(_12292))
                            call address(_12292).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _12293, _12312
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _12312
                            emit Earn(_12312);
                            _12351 = mem[_658 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12351))
                            staticcall address(_12351).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12375 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_658 + 96] = mem[_12375]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12423 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12431 = mem[_12423]
                            _12439 = mem[_658]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _12447 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _12431
                            mem[mem[64] + 36] = 128
                            _12455 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _12455:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_12447 + 68] = this.address
                            mem[_12447 + 100] = block.timestamp + 60
                            require ext_code.size(address(_12439))
                            call address(_12439).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _12447 + (32 * _12455) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12567 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12575 = mem[_12567]
                            require mem[_12567] <= test266151307()
                            require _12567 + mem[_12567] + 31 < _12567 + return_data.size
                            _12583 = mem[_12567 + mem[_12567]]
                            if mem[_12567 + mem[_12567]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_12567 + mem[_12567]]) + 1 < 0 or _12567 + ceil32(return_data.size) + ceil32(32 * mem[_12567 + mem[_12567]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _12567 + ceil32(return_data.size) + ceil32(32 * mem[_12567 + mem[_12567]]) + 1
                            mem[_12567 + ceil32(return_data.size)] = _12583
                            require _12575 + (32 * _12583) + 32 <= return_data.size
                            t = _12567 + ceil32(return_data.size) + 32
                            s = _12567 + _12575 + 32
                            while s < _12567 + _12575 + (32 * _12583) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12663 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12663]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _658
                s = _3010 - (100 * _3010 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _678
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _678
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _734 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _744 = mem[_734]
            require mem[_734] == mem[_734 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_734 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_744))
            staticcall address(_744).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _778 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _782 = mem[_778]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_744))
            staticcall address(_744).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _796 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _804 = mem[_796]
            if mem[_796] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _782:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _824 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _826 = mem[_824]
            if 10^12 * _804 / _782 and mem[_824] > -1 / 10^12 * _804 / _782:
                revert with 0, 17
            _845 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _804 / _782 * _826 / 10^12
            mem[mem[64] + 36] = 64
            _856 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _856:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _845 + (32 * _856) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1601 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1608 = mem[_1601]
            require mem[_1601] <= test266151307()
            require _1601 + mem[_1601] + 31 < _1601 + return_data.size
            _1615 = mem[_1601 + mem[_1601]]
            if mem[_1601 + mem[_1601]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1601 + mem[_1601]]) + 1 < 0 or _1601 + ceil32(return_data.size) + ceil32(32 * mem[_1601 + mem[_1601]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1601 + ceil32(return_data.size) + ceil32(32 * mem[_1601 + mem[_1601]]) + 1
            mem[_1601 + ceil32(return_data.size)] = _1615
            require _1608 + (32 * _1615) + 32 <= return_data.size
            t = _1601 + ceil32(return_data.size) + 32
            s = _1601 + _1608 + 32
            while s < _1601 + _1608 + (32 * _1615) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1615:
                revert with 0, 50
            _3011 = mem[_1601 + ceil32(return_data.size) + 64]
            if mem[_1601 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1601 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1601 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1601 + ceil32(return_data.size) + 64] < 100 * mem[_1601 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _3051 = mem[_658]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_744))
            staticcall address(_744).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3075 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3083 = mem[_3075]
            if 60 > !block.timestamp:
                revert with 0, 17
            _3097 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3083
            mem[mem[64] + 36] = _3011 - (100 * _3011 / 10000)
            mem[mem[64] + 68] = 160
            _3103 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _3103:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_3097 + 100] = this.address
            mem[_3097 + 132] = block.timestamp + 60
            require ext_code.size(address(_3051))
            call address(_3051).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3097 + (32 * _3103) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4387 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4395 = mem[_4387]
            require mem[_4387] <= test266151307()
            require _4387 + mem[_4387] + 31 < _4387 + return_data.size
            _4407 = mem[_4387 + mem[_4387]]
            if mem[_4387 + mem[_4387]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_4387 + mem[_4387]]) + 1 < 0 or _4387 + ceil32(return_data.size) + ceil32(32 * mem[_4387 + mem[_4387]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _4387 + ceil32(return_data.size) + ceil32(32 * mem[_4387 + mem[_4387]]) + 1
            mem[_4387 + ceil32(return_data.size)] = _4407
            require _4395 + (32 * _4407) + 32 <= return_data.size
            t = _4387 + ceil32(return_data.size) + 32
            s = _4387 + _4395 + 32
            while s < _4387 + _4395 + (32 * _4407) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _5773 = mem[_658]
            _5774 = mem[_658 + 192]
            _5775 = mem[_658 + 224]
            _5784 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_5784 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_5784]:
                revert with 0, 50
            mem[_5784 + 32] = stor21
            if stor21 == address(_5774):
                if stor21 == address(_5775):
                    _5816 = mem[_658 + 160]
                    _5817 = mem[_658 + 64]
                    _5818 = mem[_658 + 32]
                    mem[_5784 + 100] = this.address
                    require ext_code.size(address(_5818))
                    staticcall address(_5818).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5784 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5784 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    if _5817 >= 999999:
                        mem[_5784 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_5816))
                        call address(_5816).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5784 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _5933 = mem[_658 + 32]
                        mem[_5784 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_5933))
                        staticcall address(_5933).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5784 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_658 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5784 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5784 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5784 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6054 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5784 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5784 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5784 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_5784 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5784 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5784 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5784 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6054))
                        call address(_6054).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5784 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5784 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5784 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7184 = mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5784 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _7200 = mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5784 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5784 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5784 + (6 * ceil32(return_data.size)) + 96] = mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _7184 + (32 * _7200) + 32 <= return_data.size
                        t = _5784 + (6 * ceil32(return_data.size)) + 128
                        s = _5784 + (4 * ceil32(return_data.size)) + _7184 + 128
                        while s < _5784 + (4 * ceil32(return_data.size)) + _7184 + (32 * _7200) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8304 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_8304]
                    else:
                        mem[_5784 + ceil32(return_data.size) + 100] = _5817
                        mem[_5784 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_5816))
                        call address(_5816).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _5817, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5784 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _5934 = mem[_658 + 32]
                        mem[_5784 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_5934))
                        staticcall address(_5934).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5784 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_658 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5784 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5784 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5784 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6055 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5784 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5784 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5784 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_5784 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5784 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5784 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5784 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6055))
                        call address(_6055).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5784 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5784 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5784 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7185 = mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5784 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _7201 = mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5784 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5784 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5784 + (6 * ceil32(return_data.size)) + 96] = mem[_5784 + (4 * ceil32(return_data.size)) + mem[_5784 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _7185 + (32 * _7201) + 32 <= return_data.size
                        t = _5784 + (6 * ceil32(return_data.size)) + 128
                        s = _5784 + (4 * ceil32(return_data.size)) + _7185 + 128
                        while s < _5784 + (4 * ceil32(return_data.size)) + _7185 + (32 * _7201) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8305 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_8305]
                else:
                    if 1 >= mem[_5784]:
                        revert with 0, 50
                    mem[_5784 + 64] = address(_5775)
                    mem[_5784 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5784 + 100] = eth.balance(this.address) / 2
                    mem[_5784 + 132] = 64
                    mem[_5784 + 164] = mem[_5784]
                    s = 0
                    t = _5784 + 32
                    u = _5784 + 196
                    while s < mem[_5784]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5773))
                    staticcall address(_5773).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5784 + (32 * mem[_5784]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7174 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7192 = mem[_7174]
                    require mem[_7174] <= test266151307()
                    require _7174 + mem[_7174] + 31 < _7174 + return_data.size
                    _7208 = mem[_7174 + mem[_7174]]
                    if mem[_7174 + mem[_7174]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7174 + mem[_7174]]) + 1 < 0 or _7174 + ceil32(return_data.size) + ceil32(32 * mem[_7174 + mem[_7174]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7174 + ceil32(return_data.size) + ceil32(32 * mem[_7174 + mem[_7174]]) + 1
                    mem[_7174 + ceil32(return_data.size)] = _7208
                    require _7192 + (32 * _7208) + 32 <= return_data.size
                    t = _7174 + ceil32(return_data.size) + 32
                    s = _7174 + _7192 + 32
                    while s < _7174 + _7192 + (32 * _7208) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7208:
                        revert with 0, 50
                    _8280 = mem[_7174 + ceil32(return_data.size) + 64]
                    if mem[_7174 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7174 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_7174 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _7208:
                        revert with 0, 50
                    _8328 = mem[_7174 + ceil32(return_data.size) + 64]
                    if mem[_7174 + ceil32(return_data.size) + 64] < 100 * mem[_7174 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _8336 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _8328 - (100 * _8280 / 10000)
                    mem[mem[64] + 36] = 128
                    _8344 = mem[_5784]
                    mem[mem[64] + 132] = mem[_5784]
                    s = 0
                    t = _5784 + 32
                    u = mem[64] + 164
                    while s < _8344:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8336 + 68] = this.address
                    mem[_8336 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5773))
                    call address(_5773).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8336 + (32 * _8344) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9296 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9304 = mem[_9296]
                    require mem[_9296] <= test266151307()
                    require _9296 + mem[_9296] + 31 < _9296 + return_data.size
                    _9312 = mem[_9296 + mem[_9296]]
                    if mem[_9296 + mem[_9296]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9296 + mem[_9296]]) + 1 < 0 or _9296 + ceil32(return_data.size) + ceil32(32 * mem[_9296 + mem[_9296]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9296 + ceil32(return_data.size) + ceil32(32 * mem[_9296 + mem[_9296]]) + 1
                    mem[_9296 + ceil32(return_data.size)] = _9312
                    require _9304 + (32 * _9312) + 32 <= return_data.size
                    t = _9296 + ceil32(return_data.size) + 32
                    s = _9296 + _9304 + 32
                    while s < _9296 + _9304 + (32 * _9312) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _10222 = mem[_658 + 160]
                    _10223 = mem[_658 + 64]
                    _10224 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10224))
                    staticcall address(_10224).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10264 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10276 = mem[_10264]
                    if _10223 >= 999999:
                        mem[mem[64] + 4] = mem[_10264]
                        require ext_code.size(address(_10222))
                        call address(_10222).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _10276
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10276
                        emit Earn(_10276);
                        _10360 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10360))
                        staticcall address(_10360).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10419 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_10419]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10528 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10544 = mem[_10528]
                        _10560 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10583 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10544
                        mem[mem[64] + 36] = 128
                        _10600 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _10600:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10583 + 68] = this.address
                        mem[_10583 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10560))
                        call address(_10560).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10583 + (32 * _10600) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11134 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11154 = mem[_11134]
                        require mem[_11134] <= test266151307()
                        require _11134 + mem[_11134] + 31 < _11134 + return_data.size
                        _11174 = mem[_11134 + mem[_11134]]
                        if mem[_11134 + mem[_11134]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11134 + mem[_11134]]) + 1 < 0 or _11134 + ceil32(return_data.size) + ceil32(32 * mem[_11134 + mem[_11134]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11134 + ceil32(return_data.size) + ceil32(32 * mem[_11134 + mem[_11134]]) + 1
                        mem[_11134 + ceil32(return_data.size)] = _11174
                        require _11154 + (32 * _11174) + 32 <= return_data.size
                        t = _11134 + ceil32(return_data.size) + 32
                        s = _11134 + _11154 + 32
                        while s < _11134 + _11154 + (32 * _11174) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11670 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11670]
                    else:
                        mem[mem[64] + 4] = _10223
                        mem[mem[64] + 36] = _10276
                        require ext_code.size(address(_10222))
                        call address(_10222).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _10223, _10276
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10276
                        emit Earn(_10276);
                        _10361 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10361))
                        staticcall address(_10361).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10420 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_10420]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10529 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10545 = mem[_10529]
                        _10561 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10584 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10545
                        mem[mem[64] + 36] = 128
                        _10601 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _10601:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10584 + 68] = this.address
                        mem[_10584 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10561))
                        call address(_10561).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10584 + (32 * _10601) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11135 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11155 = mem[_11135]
                        require mem[_11135] <= test266151307()
                        require _11135 + mem[_11135] + 31 < _11135 + return_data.size
                        _11175 = mem[_11135 + mem[_11135]]
                        if mem[_11135 + mem[_11135]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11135 + mem[_11135]]) + 1 < 0 or _11135 + ceil32(return_data.size) + ceil32(32 * mem[_11135 + mem[_11135]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11135 + ceil32(return_data.size) + ceil32(32 * mem[_11135 + mem[_11135]]) + 1
                        mem[_11135 + ceil32(return_data.size)] = _11175
                        require _11155 + (32 * _11175) + 32 <= return_data.size
                        t = _11135 + ceil32(return_data.size) + 32
                        s = _11135 + _11155 + 32
                        while s < _11135 + _11155 + (32 * _11175) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11671 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11671]
            else:
                if 1 >= mem[_5784]:
                    revert with 0, 50
                mem[_5784 + 64] = address(_5774)
                mem[_5784 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5784 + 100] = eth.balance(this.address) / 2
                mem[_5784 + 132] = 64
                mem[_5784 + 164] = mem[_5784]
                s = 0
                t = _5784 + 32
                u = _5784 + 196
                while s < mem[_5784]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5773))
                staticcall address(_5773).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5784 + (32 * mem[_5784]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7175 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7193 = mem[_7175]
                require mem[_7175] <= test266151307()
                require _7175 + mem[_7175] + 31 < _7175 + return_data.size
                _7209 = mem[_7175 + mem[_7175]]
                if mem[_7175 + mem[_7175]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7175 + mem[_7175]]) + 1 < 0 or _7175 + ceil32(return_data.size) + ceil32(32 * mem[_7175 + mem[_7175]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7175 + ceil32(return_data.size) + ceil32(32 * mem[_7175 + mem[_7175]]) + 1
                mem[_7175 + ceil32(return_data.size)] = _7209
                require _7193 + (32 * _7209) + 32 <= return_data.size
                t = _7175 + ceil32(return_data.size) + 32
                s = _7175 + _7193 + 32
                while s < _7175 + _7193 + (32 * _7209) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7209:
                    revert with 0, 50
                _8281 = mem[_7175 + ceil32(return_data.size) + 64]
                if mem[_7175 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7175 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_7175 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _7209:
                    revert with 0, 50
                _8329 = mem[_7175 + ceil32(return_data.size) + 64]
                if mem[_7175 + ceil32(return_data.size) + 64] < 100 * mem[_7175 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _8337 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _8329 - (100 * _8281 / 10000)
                mem[mem[64] + 36] = 128
                _8345 = mem[_5784]
                mem[mem[64] + 132] = mem[_5784]
                s = 0
                t = _5784 + 32
                u = mem[64] + 164
                while s < _8345:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_8337 + 68] = this.address
                mem[_8337 + 100] = block.timestamp + 60
                require ext_code.size(address(_5773))
                call address(_5773).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8337 + (32 * _8345) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9297 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9305 = mem[_9297]
                require mem[_9297] <= test266151307()
                require _9297 + mem[_9297] + 31 < _9297 + return_data.size
                _9313 = mem[_9297 + mem[_9297]]
                if mem[_9297 + mem[_9297]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9297 + mem[_9297]]) + 1 < 0 or _9297 + ceil32(return_data.size) + ceil32(32 * mem[_9297 + mem[_9297]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9297 + ceil32(return_data.size) + ceil32(32 * mem[_9297 + mem[_9297]]) + 1
                mem[_9297 + ceil32(return_data.size)] = _9313
                require _9305 + (32 * _9313) + 32 <= return_data.size
                t = _9297 + ceil32(return_data.size) + 32
                s = _9297 + _9305 + 32
                while s < _9297 + _9305 + (32 * _9313) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_5775):
                    _10246 = mem[_658 + 160]
                    _10247 = mem[_658 + 64]
                    _10248 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10248))
                    staticcall address(_10248).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10269 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10281 = mem[_10269]
                    if _10247 >= 999999:
                        mem[mem[64] + 4] = mem[_10269]
                        require ext_code.size(address(_10246))
                        call address(_10246).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _10281
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10281
                        emit Earn(_10281);
                        _10391 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10391))
                        staticcall address(_10391).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10428 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_10428]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10536 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10552 = mem[_10536]
                        _10568 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10592 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10552
                        mem[mem[64] + 36] = 128
                        _10608 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10592 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10568))
                        call address(_10568).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10592 + (32 * _10608) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11136 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11156 = mem[_11136]
                        require mem[_11136] <= test266151307()
                        require _11136 + mem[_11136] + 31 < _11136 + return_data.size
                        _11176 = mem[_11136 + mem[_11136]]
                        if mem[_11136 + mem[_11136]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11136 + mem[_11136]]) + 1 < 0 or _11136 + ceil32(return_data.size) + ceil32(32 * mem[_11136 + mem[_11136]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11136 + ceil32(return_data.size) + ceil32(32 * mem[_11136 + mem[_11136]]) + 1
                        mem[_11136 + ceil32(return_data.size)] = _11176
                        require _11156 + (32 * _11176) + 32 <= return_data.size
                        t = _11136 + ceil32(return_data.size) + 32
                        s = _11136 + _11156 + 32
                        while s < _11136 + _11156 + (32 * _11176) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11672 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11672]
                    else:
                        mem[mem[64] + 4] = _10247
                        mem[mem[64] + 36] = _10281
                        require ext_code.size(address(_10246))
                        call address(_10246).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _10247, _10281
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10281
                        emit Earn(_10281);
                        _10392 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10392))
                        staticcall address(_10392).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10429 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_10429]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10537 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10553 = mem[_10537]
                        _10569 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10593 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10553
                        mem[mem[64] + 36] = 128
                        _10609 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10593 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10569))
                        call address(_10569).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10593 + (32 * _10609) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11137 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11157 = mem[_11137]
                        require mem[_11137] <= test266151307()
                        require _11137 + mem[_11137] + 31 < _11137 + return_data.size
                        _11177 = mem[_11137 + mem[_11137]]
                        if mem[_11137 + mem[_11137]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11137 + mem[_11137]]) + 1 < 0 or _11137 + ceil32(return_data.size) + ceil32(32 * mem[_11137 + mem[_11137]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11137 + ceil32(return_data.size) + ceil32(32 * mem[_11137 + mem[_11137]]) + 1
                        mem[_11137 + ceil32(return_data.size)] = _11177
                        require _11157 + (32 * _11177) + 32 <= return_data.size
                        t = _11137 + ceil32(return_data.size) + 32
                        s = _11137 + _11157 + 32
                        while s < _11137 + _11157 + (32 * _11177) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11673 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11673]
                else:
                    if 1 >= mem[_5784]:
                        revert with 0, 50
                    mem[_5784 + 64] = address(_5775)
                    _10249 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _10265 = mem[_5784]
                    mem[mem[64] + 68] = mem[_5784]
                    s = 0
                    t = _5784 + 32
                    u = mem[64] + 100
                    while s < _10265:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5773))
                    staticcall address(_5773).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _10249 + (32 * _10265) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11141 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11161 = mem[_11141]
                    require mem[_11141] <= test266151307()
                    require _11141 + mem[_11141] + 31 < _11141 + return_data.size
                    _11181 = mem[_11141 + mem[_11141]]
                    if mem[_11141 + mem[_11141]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11141 + mem[_11141]]) + 1 < 0 or _11141 + ceil32(return_data.size) + ceil32(32 * mem[_11141 + mem[_11141]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11141 + ceil32(return_data.size) + ceil32(32 * mem[_11141 + mem[_11141]]) + 1
                    mem[_11141 + ceil32(return_data.size)] = _11181
                    require _11161 + (32 * _11181) + 32 <= return_data.size
                    t = _11141 + ceil32(return_data.size) + 32
                    s = _11141 + _11161 + 32
                    while s < _11141 + _11161 + (32 * _11181) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _11181:
                        revert with 0, 50
                    _11625 = mem[_11141 + ceil32(return_data.size) + 64]
                    if mem[_11141 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11141 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_11141 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _11181:
                        revert with 0, 50
                    _11697 = mem[_11141 + ceil32(return_data.size) + 64]
                    if mem[_11141 + ceil32(return_data.size) + 64] < 100 * mem[_11141 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11701 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11697 - (100 * _11625 / 10000)
                    mem[mem[64] + 36] = 128
                    _11705 = mem[_5784]
                    mem[mem[64] + 132] = mem[_5784]
                    s = 0
                    t = _5784 + 32
                    u = mem[64] + 164
                    while s < _11705:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11701 + 68] = this.address
                    mem[_11701 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5773))
                    call address(_5773).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11701 + (32 * _11705) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12005 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12009 = mem[_12005]
                    require mem[_12005] <= test266151307()
                    require _12005 + mem[_12005] + 31 < _12005 + return_data.size
                    _12013 = mem[_12005 + mem[_12005]]
                    if mem[_12005 + mem[_12005]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12005 + mem[_12005]]) + 1 < 0 or _12005 + ceil32(return_data.size) + ceil32(32 * mem[_12005 + mem[_12005]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12005 + ceil32(return_data.size) + ceil32(32 * mem[_12005 + mem[_12005]]) + 1
                    mem[_12005 + ceil32(return_data.size)] = _12013
                    require _12009 + (32 * _12013) + 32 <= return_data.size
                    t = _12005 + ceil32(return_data.size) + 32
                    s = _12005 + _12009 + 32
                    while s < _12005 + _12009 + (32 * _12013) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _12295 = mem[_658 + 160]
                    _12296 = mem[_658 + 64]
                    _12297 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12297))
                    staticcall address(_12297).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12309 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12313 = mem[_12309]
                    if _12296 >= 999999:
                        mem[mem[64] + 4] = mem[_12309]
                        require ext_code.size(address(_12295))
                        call address(_12295).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _12313
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12313
                        emit Earn(_12313);
                        _12352 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12352))
                        staticcall address(_12352).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12376 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_12376]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12424 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12432 = mem[_12424]
                        _12440 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12448 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12432
                        mem[mem[64] + 36] = 128
                        _12456 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _12456:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_12448 + 68] = this.address
                        mem[_12448 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12440))
                        call address(_12440).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12448 + (32 * _12456) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12568 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12576 = mem[_12568]
                        require mem[_12568] <= test266151307()
                        require _12568 + mem[_12568] + 31 < _12568 + return_data.size
                        _12584 = mem[_12568 + mem[_12568]]
                        if mem[_12568 + mem[_12568]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12568 + mem[_12568]]) + 1 < 0 or _12568 + ceil32(return_data.size) + ceil32(32 * mem[_12568 + mem[_12568]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12568 + ceil32(return_data.size) + ceil32(32 * mem[_12568 + mem[_12568]]) + 1
                        mem[_12568 + ceil32(return_data.size)] = _12584
                        require _12576 + (32 * _12584) + 32 <= return_data.size
                        t = _12568 + ceil32(return_data.size) + 32
                        s = _12568 + _12576 + 32
                        while s < _12568 + _12576 + (32 * _12584) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12664 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12664]
                    else:
                        mem[mem[64] + 4] = _12296
                        mem[mem[64] + 36] = _12313
                        require ext_code.size(address(_12295))
                        call address(_12295).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _12296, _12313
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12313
                        emit Earn(_12313);
                        _12353 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12353))
                        staticcall address(_12353).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12377 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_12377]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12433 = mem[_12425]
                        _12441 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12449 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12433
                        mem[mem[64] + 36] = 128
                        _12457 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _12457:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_12449 + 68] = this.address
                        mem[_12449 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12441))
                        call address(_12441).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12449 + (32 * _12457) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12569 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12577 = mem[_12569]
                        require mem[_12569] <= test266151307()
                        require _12569 + mem[_12569] + 31 < _12569 + return_data.size
                        _12585 = mem[_12569 + mem[_12569]]
                        if mem[_12569 + mem[_12569]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12569 + mem[_12569]]) + 1 < 0 or _12569 + ceil32(return_data.size) + ceil32(32 * mem[_12569 + mem[_12569]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12569 + ceil32(return_data.size) + ceil32(32 * mem[_12569 + mem[_12569]]) + 1
                        mem[_12569 + ceil32(return_data.size)] = _12585
                        require _12577 + (32 * _12585) + 32 <= return_data.size
                        t = _12569 + ceil32(return_data.size) + 32
                        s = _12569 + _12577 + 32
                        while s < _12569 + _12577 + (32 * _12585) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12665 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12665]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _658
            s = _3011 - (100 * _3011 / 10000)
            s = stor9[idx].field_0
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _668 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _677 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_677] = mem[_668]
        mem[_677 + 32] = mem[_668 + 32]
        mem[_677 + 64] = mem[_668 + 64]
        require return_data.size - 96 >= 96
        _689 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_689] = mem[_668 + 96]
        mem[_689 + 32] = mem[_668 + 128]
        mem[_689 + 64] = mem[_668 + 160]
        mem[_677 + 96] = _689
        mem[_677 + 128] = mem[_668 + 192]
        require return_data.size - 224 >= 96
        _707 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_707] = mem[_668 + 224]
        mem[_707 + 32] = mem[_668 + 256]
        mem[_707 + 64] = mem[_668 + 288]
        mem[_677 + 160] = _707
        _719 = mem[_677 + 64]
        if not mem[_677 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _658
            s = mem[_677 + 64]
            s = stor9[idx].field_0
            continue 
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _736 = mem[64]
        mem[64] = mem[64] + 256
        mem[_736] = strategyInfo[stor9[idx].field_0].field_0
        mem[_736 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_736 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_736 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_736 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_736 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_736 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_736 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 4] = _719
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                 gas gas_remaining wei
                args _719
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _764 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _768 = mem[_764]
            require mem[_764] == mem[_764 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_764 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_768))
            staticcall address(_768).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _805 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _808 = mem[_805]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_768))
            staticcall address(_768).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _815 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _821 = mem[_815]
            if mem[_815] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _808:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _842 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _853 = mem[_842]
            if 10^12 * _821 / _808 and mem[_842] > -1 / 10^12 * _821 / _808:
                revert with 0, 17
            _882 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _821 / _808 * _853 / 10^12
            mem[mem[64] + 36] = 64
            _896 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _896:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _882 + (32 * _896) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1598 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1605 = mem[_1598]
            require mem[_1598] <= test266151307()
            require _1598 + mem[_1598] + 31 < _1598 + return_data.size
            _1612 = mem[_1598 + mem[_1598]]
            if mem[_1598 + mem[_1598]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1598 + mem[_1598]]) + 1 < 0 or _1598 + ceil32(return_data.size) + ceil32(32 * mem[_1598 + mem[_1598]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1598 + ceil32(return_data.size) + ceil32(32 * mem[_1598 + mem[_1598]]) + 1
            mem[_1598 + ceil32(return_data.size)] = _1612
            require _1605 + (32 * _1612) + 32 <= return_data.size
            t = _1598 + ceil32(return_data.size) + 32
            s = _1598 + _1605 + 32
            while s < _1598 + _1605 + (32 * _1612) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1612:
                revert with 0, 50
            _3008 = mem[_1598 + ceil32(return_data.size) + 64]
            if mem[_1598 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1598 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1598 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1598 + ceil32(return_data.size) + 64] < 100 * mem[_1598 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _3048 = mem[_658]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_768))
            staticcall address(_768).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3072 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3080 = mem[_3072]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3080
            mem[mem[64] + 36] = _3008 - (100 * _3008 / 10000)
            mem[mem[64] + 68] = 160
            _3100 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_3048))
            call address(_3048).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3100) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4384 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4392 = mem[_4384]
            require mem[_4384] <= test266151307()
            require _4384 + mem[_4384] + 31 < _4384 + return_data.size
            _4404 = mem[_4384 + mem[_4384]]
            if mem[_4384 + mem[_4384]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_4384 + mem[_4384]]) + 1 < 0 or _4384 + ceil32(return_data.size) + ceil32(32 * mem[_4384 + mem[_4384]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _4384 + ceil32(return_data.size) + ceil32(32 * mem[_4384 + mem[_4384]]) + 1
            mem[_4384 + ceil32(return_data.size)] = _4404
            require _4392 + (32 * _4404) + 32 <= return_data.size
            t = _4384 + ceil32(return_data.size) + 32
            s = _4384 + _4392 + 32
            while s < _4384 + _4392 + (32 * _4404) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _5764 = mem[_658]
            _5765 = mem[_658 + 192]
            _5766 = mem[_658 + 224]
            _5778 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_5778 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_5778]:
                revert with 0, 50
            mem[_5778 + 32] = stor21
            if stor21 == address(_5765):
                if stor21 == address(_5766):
                    _5804 = mem[_658 + 160]
                    _5805 = mem[_658 + 64]
                    _5806 = mem[_658 + 32]
                    mem[_5778 + 100] = this.address
                    require ext_code.size(address(_5806))
                    staticcall address(_5806).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5778 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5778 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    if _5805 >= 999999:
                        mem[_5778 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_5804))
                        call address(_5804).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5778 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _5924 = mem[_658 + 32]
                        mem[_5778 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_5924))
                        staticcall address(_5924).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5778 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_658 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5778 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5778 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5778 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6048 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5778 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5778 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5778 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_5778 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5778 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5778 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5778 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6048))
                        call address(_6048).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5778 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5778 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5778 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7178 = mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5778 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _7194 = mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5778 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5778 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5778 + (6 * ceil32(return_data.size)) + 96] = _7194
                        require _7178 + (32 * _7194) + 32 <= return_data.size
                        t = _5778 + (6 * ceil32(return_data.size)) + 128
                        s = _5778 + (4 * ceil32(return_data.size)) + _7178 + 128
                        while s < _5778 + (4 * ceil32(return_data.size)) + _7178 + (32 * _7194) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8298 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_8298]
                    else:
                        mem[_5778 + ceil32(return_data.size) + 100] = _5805
                        mem[_5778 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_5804))
                        call address(_5804).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _5805, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5778 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _5925 = mem[_658 + 32]
                        mem[_5778 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_5925))
                        staticcall address(_5925).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5778 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_658 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_5778 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_5778 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5778 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6049 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_5778 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_5778 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_5778 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_5778 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _5778 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_5778 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_5778 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6049))
                        call address(_6049).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5778 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5778 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5778 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7179 = mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5778 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _7195 = mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5778 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _5778 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5778 + (4 * ceil32(return_data.size)) + mem[_5778 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_5778 + (6 * ceil32(return_data.size)) + 96] = _7195
                        require _7179 + (32 * _7195) + 32 <= return_data.size
                        t = _5778 + (6 * ceil32(return_data.size)) + 128
                        s = _5778 + (4 * ceil32(return_data.size)) + _7179 + 128
                        while s < _5778 + (4 * ceil32(return_data.size)) + _7179 + (32 * _7195) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8299 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_8299]
                else:
                    if 1 >= mem[_5778]:
                        revert with 0, 50
                    mem[_5778 + 64] = address(_5766)
                    mem[_5778 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_5778 + 100] = eth.balance(this.address) / 2
                    mem[_5778 + 132] = 64
                    mem[_5778 + 164] = mem[_5778]
                    s = 0
                    t = _5778 + 32
                    u = _5778 + 196
                    while s < mem[_5778]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5764))
                    staticcall address(_5764).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _5778 + (32 * mem[_5778]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7168 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7186 = mem[_7168]
                    require mem[_7168] <= test266151307()
                    require _7168 + mem[_7168] + 31 < _7168 + return_data.size
                    _7202 = mem[_7168 + mem[_7168]]
                    if mem[_7168 + mem[_7168]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7168 + mem[_7168]]) + 1 < 0 or _7168 + ceil32(return_data.size) + ceil32(32 * mem[_7168 + mem[_7168]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7168 + ceil32(return_data.size) + ceil32(32 * mem[_7168 + mem[_7168]]) + 1
                    mem[_7168 + ceil32(return_data.size)] = _7202
                    require _7186 + (32 * _7202) + 32 <= return_data.size
                    t = _7168 + ceil32(return_data.size) + 32
                    s = _7168 + _7186 + 32
                    while s < _7168 + _7186 + (32 * _7202) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7202:
                        revert with 0, 50
                    _8274 = mem[_7168 + ceil32(return_data.size) + 64]
                    if mem[_7168 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7168 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_7168 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _7202:
                        revert with 0, 50
                    _8322 = mem[_7168 + ceil32(return_data.size) + 64]
                    if mem[_7168 + ceil32(return_data.size) + 64] < 100 * mem[_7168 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _8330 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _8322 - (100 * _8274 / 10000)
                    mem[mem[64] + 36] = 128
                    _8338 = mem[_5778]
                    mem[mem[64] + 132] = mem[_5778]
                    s = 0
                    t = _5778 + 32
                    u = mem[64] + 164
                    while s < _8338:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8330 + 68] = this.address
                    mem[_8330 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5764))
                    call address(_5764).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8330 + (32 * _8338) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9290 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9298 = mem[_9290]
                    require mem[_9290] <= test266151307()
                    require _9290 + mem[_9290] + 31 < _9290 + return_data.size
                    _9306 = mem[_9290 + mem[_9290]]
                    if mem[_9290 + mem[_9290]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9290 + mem[_9290]]) + 1 < 0 or _9290 + ceil32(return_data.size) + ceil32(32 * mem[_9290 + mem[_9290]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9290 + ceil32(return_data.size) + ceil32(32 * mem[_9290 + mem[_9290]]) + 1
                    mem[_9290 + ceil32(return_data.size)] = _9306
                    require _9298 + (32 * _9306) + 32 <= return_data.size
                    t = _9290 + ceil32(return_data.size) + 32
                    s = _9290 + _9298 + 32
                    while s < _9290 + _9298 + (32 * _9306) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _10210 = mem[_658 + 160]
                    _10211 = mem[_658 + 64]
                    _10212 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10212))
                    staticcall address(_10212).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10258 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10270 = mem[_10258]
                    if _10211 >= 999999:
                        mem[mem[64] + 4] = mem[_10258]
                        require ext_code.size(address(_10210))
                        call address(_10210).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _10270
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10270
                        emit Earn(_10270);
                        _10342 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10342))
                        staticcall address(_10342).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10410 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_10410]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10522 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10538 = mem[_10522]
                        _10554 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10574 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10538
                        mem[mem[64] + 36] = 128
                        _10594 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _10594:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10574 + 68] = this.address
                        mem[_10574 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10554))
                        call address(_10554).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10574 + (32 * _10594) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11122 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11142 = mem[_11122]
                        require mem[_11122] <= test266151307()
                        require _11122 + mem[_11122] + 31 < _11122 + return_data.size
                        _11162 = mem[_11122 + mem[_11122]]
                        if mem[_11122 + mem[_11122]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11122 + mem[_11122]]) + 1 < 0 or _11122 + ceil32(return_data.size) + ceil32(32 * mem[_11122 + mem[_11122]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11122 + ceil32(return_data.size) + ceil32(32 * mem[_11122 + mem[_11122]]) + 1
                        mem[_11122 + ceil32(return_data.size)] = _11162
                        require _11142 + (32 * _11162) + 32 <= return_data.size
                        t = _11122 + ceil32(return_data.size) + 32
                        s = _11122 + _11142 + 32
                        while s < _11122 + _11142 + (32 * _11162) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11658 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11658]
                    else:
                        mem[mem[64] + 4] = _10211
                        mem[mem[64] + 36] = _10270
                        require ext_code.size(address(_10210))
                        call address(_10210).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _10211, _10270
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10270
                        emit Earn(_10270);
                        _10343 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10343))
                        staticcall address(_10343).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10411 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_10411]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10523 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10539 = mem[_10523]
                        _10555 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10575 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10539
                        mem[mem[64] + 36] = 128
                        _10595 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _10595:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10575 + 68] = this.address
                        mem[_10575 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10555))
                        call address(_10555).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10575 + (32 * _10595) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11123 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11143 = mem[_11123]
                        require mem[_11123] <= test266151307()
                        require _11123 + mem[_11123] + 31 < _11123 + return_data.size
                        _11163 = mem[_11123 + mem[_11123]]
                        if mem[_11123 + mem[_11123]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11123 + mem[_11123]]) + 1 < 0 or _11123 + ceil32(return_data.size) + ceil32(32 * mem[_11123 + mem[_11123]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11123 + ceil32(return_data.size) + ceil32(32 * mem[_11123 + mem[_11123]]) + 1
                        mem[_11123 + ceil32(return_data.size)] = _11163
                        require _11143 + (32 * _11163) + 32 <= return_data.size
                        t = _11123 + ceil32(return_data.size) + 32
                        s = _11123 + _11143 + 32
                        while s < _11123 + _11143 + (32 * _11163) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11659 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11659]
            else:
                if 1 >= mem[_5778]:
                    revert with 0, 50
                mem[_5778 + 64] = address(_5765)
                mem[_5778 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5778 + 100] = eth.balance(this.address) / 2
                mem[_5778 + 132] = 64
                mem[_5778 + 164] = mem[_5778]
                s = 0
                t = _5778 + 32
                u = _5778 + 196
                while s < mem[_5778]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5764))
                staticcall address(_5764).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5778 + (32 * mem[_5778]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7169 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7187 = mem[_7169]
                require mem[_7169] <= test266151307()
                require _7169 + mem[_7169] + 31 < _7169 + return_data.size
                _7203 = mem[_7169 + mem[_7169]]
                if mem[_7169 + mem[_7169]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7169 + mem[_7169]]) + 1 < 0 or _7169 + ceil32(return_data.size) + ceil32(32 * mem[_7169 + mem[_7169]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7169 + ceil32(return_data.size) + ceil32(32 * mem[_7169 + mem[_7169]]) + 1
                mem[_7169 + ceil32(return_data.size)] = _7203
                require _7187 + (32 * _7203) + 32 <= return_data.size
                t = _7169 + ceil32(return_data.size) + 32
                s = _7169 + _7187 + 32
                while s < _7169 + _7187 + (32 * _7203) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7203:
                    revert with 0, 50
                _8275 = mem[_7169 + ceil32(return_data.size) + 64]
                if mem[_7169 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7169 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_7169 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _7203:
                    revert with 0, 50
                _8323 = mem[_7169 + ceil32(return_data.size) + 64]
                if mem[_7169 + ceil32(return_data.size) + 64] < 100 * mem[_7169 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _8331 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _8323 - (100 * _8275 / 10000)
                mem[mem[64] + 36] = 128
                _8339 = mem[_5778]
                mem[mem[64] + 132] = mem[_5778]
                s = 0
                t = _5778 + 32
                u = mem[64] + 164
                while s < _8339:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_8331 + 68] = this.address
                mem[_8331 + 100] = block.timestamp + 60
                require ext_code.size(address(_5764))
                call address(_5764).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8331 + (32 * _8339) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9291 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9299 = mem[_9291]
                require mem[_9291] <= test266151307()
                require _9291 + mem[_9291] + 31 < _9291 + return_data.size
                _9307 = mem[_9291 + mem[_9291]]
                if mem[_9291 + mem[_9291]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9291 + mem[_9291]]) + 1 < 0 or _9291 + ceil32(return_data.size) + ceil32(32 * mem[_9291 + mem[_9291]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9291 + ceil32(return_data.size) + ceil32(32 * mem[_9291 + mem[_9291]]) + 1
                mem[_9291 + ceil32(return_data.size)] = _9307
                require _9299 + (32 * _9307) + 32 <= return_data.size
                t = _9291 + ceil32(return_data.size) + 32
                s = _9291 + _9299 + 32
                while s < _9291 + _9299 + (32 * _9307) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_5766):
                    _10228 = mem[_658 + 160]
                    _10229 = mem[_658 + 64]
                    _10230 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10230))
                    staticcall address(_10230).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10266 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10278 = mem[_10266]
                    if _10229 >= 999999:
                        mem[mem[64] + 4] = mem[_10266]
                        require ext_code.size(address(_10228))
                        call address(_10228).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _10278
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10278
                        emit Earn(_10278);
                        _10370 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10370))
                        staticcall address(_10370).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10422 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_10422]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10530 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10546 = mem[_10530]
                        _10562 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10586 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10546
                        mem[mem[64] + 36] = 128
                        _10602 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_10586 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10562))
                        call address(_10562).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10586 + (32 * _10602) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11124 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11144 = mem[_11124]
                        require mem[_11124] <= test266151307()
                        require _11124 + mem[_11124] + 31 < _11124 + return_data.size
                        _11164 = mem[_11124 + mem[_11124]]
                        if mem[_11124 + mem[_11124]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11124 + mem[_11124]]) + 1 < 0 or _11124 + ceil32(return_data.size) + ceil32(32 * mem[_11124 + mem[_11124]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11124 + ceil32(return_data.size) + ceil32(32 * mem[_11124 + mem[_11124]]) + 1
                        mem[_11124 + ceil32(return_data.size)] = _11164
                        require _11144 + (32 * _11164) + 32 <= return_data.size
                        t = _11124 + ceil32(return_data.size) + 32
                        s = _11124 + _11144 + 32
                        while s < _11124 + _11144 + (32 * _11164) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11660 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11660]
                    else:
                        mem[mem[64] + 4] = _10229
                        mem[mem[64] + 36] = _10278
                        require ext_code.size(address(_10228))
                        call address(_10228).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _10229, _10278
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _10278
                        emit Earn(_10278);
                        _10371 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_10371))
                        staticcall address(_10371).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10423 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_10423]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10531 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10547 = mem[_10531]
                        _10563 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10587 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _10547
                        mem[mem[64] + 36] = 128
                        _10603 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _10603:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10587 + 68] = this.address
                        mem[_10587 + 100] = block.timestamp + 60
                        require ext_code.size(address(_10563))
                        call address(_10563).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10587 + (32 * _10603) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11125 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11145 = mem[_11125]
                        require mem[_11125] <= test266151307()
                        require _11125 + mem[_11125] + 31 < _11125 + return_data.size
                        _11165 = mem[_11125 + mem[_11125]]
                        if mem[_11125 + mem[_11125]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11125 + mem[_11125]]) + 1 < 0 or _11125 + ceil32(return_data.size) + ceil32(32 * mem[_11125 + mem[_11125]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11125 + ceil32(return_data.size) + ceil32(32 * mem[_11125 + mem[_11125]]) + 1
                        mem[_11125 + ceil32(return_data.size)] = _11165
                        require _11145 + (32 * _11165) + 32 <= return_data.size
                        t = _11125 + ceil32(return_data.size) + 32
                        s = _11125 + _11145 + 32
                        while s < _11125 + _11145 + (32 * _11165) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11661 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11661]
                else:
                    if 1 >= mem[_5778]:
                        revert with 0, 50
                    mem[_5778 + 64] = address(_5766)
                    _10231 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _10259 = mem[_5778]
                    mem[mem[64] + 68] = mem[_5778]
                    s = 0
                    t = _5778 + 32
                    u = mem[64] + 100
                    while s < _10259:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_5764))
                    staticcall address(_5764).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _10231 + (32 * _10259) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11138 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11158 = mem[_11138]
                    require mem[_11138] <= test266151307()
                    require _11138 + mem[_11138] + 31 < _11138 + return_data.size
                    _11178 = mem[_11138 + mem[_11138]]
                    if mem[_11138 + mem[_11138]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11138 + mem[_11138]]) + 1 < 0 or _11138 + ceil32(return_data.size) + ceil32(32 * mem[_11138 + mem[_11138]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11138 + ceil32(return_data.size) + ceil32(32 * mem[_11138 + mem[_11138]]) + 1
                    mem[_11138 + ceil32(return_data.size)] = _11178
                    require _11158 + (32 * _11178) + 32 <= return_data.size
                    t = _11138 + ceil32(return_data.size) + 32
                    s = _11138 + _11158 + 32
                    while s < _11138 + _11158 + (32 * _11178) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _11178:
                        revert with 0, 50
                    _11622 = mem[_11138 + ceil32(return_data.size) + 64]
                    if mem[_11138 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11138 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_11138 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _11178:
                        revert with 0, 50
                    _11694 = mem[_11138 + ceil32(return_data.size) + 64]
                    if mem[_11138 + ceil32(return_data.size) + 64] < 100 * mem[_11138 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11698 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11694 - (100 * _11622 / 10000)
                    mem[mem[64] + 36] = 128
                    _11702 = mem[_5778]
                    mem[mem[64] + 132] = mem[_5778]
                    s = 0
                    t = _5778 + 32
                    u = mem[64] + 164
                    while s < _11702:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11698 + 68] = this.address
                    mem[_11698 + 100] = block.timestamp + 60
                    require ext_code.size(address(_5764))
                    call address(_5764).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11698 + (32 * _11702) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12002 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12006 = mem[_12002]
                    require mem[_12002] <= test266151307()
                    require _12002 + mem[_12002] + 31 < _12002 + return_data.size
                    _12010 = mem[_12002 + mem[_12002]]
                    if mem[_12002 + mem[_12002]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12002 + mem[_12002]]) + 1 < 0 or _12002 + ceil32(return_data.size) + ceil32(32 * mem[_12002 + mem[_12002]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12002 + ceil32(return_data.size) + ceil32(32 * mem[_12002 + mem[_12002]]) + 1
                    mem[_12002 + ceil32(return_data.size)] = _12010
                    require _12006 + (32 * _12010) + 32 <= return_data.size
                    t = _12002 + ceil32(return_data.size) + 32
                    s = _12002 + _12006 + 32
                    while s < _12002 + _12006 + (32 * _12010) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _12286 = mem[_658 + 160]
                    _12287 = mem[_658 + 64]
                    _12288 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12288))
                    staticcall address(_12288).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12306 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12310 = mem[_12306]
                    if _12287 >= 999999:
                        mem[mem[64] + 4] = mem[_12306]
                        require ext_code.size(address(_12286))
                        call address(_12286).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _12310
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12310
                        emit Earn(_12310);
                        _12346 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12346))
                        staticcall address(_12346).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12370 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_12370]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12418 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12426 = mem[_12418]
                        _12434 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12442 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12426
                        mem[mem[64] + 36] = 128
                        _12450 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _12450:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_12442 + 68] = this.address
                        mem[_12442 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12434))
                        call address(_12434).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12442 + (32 * _12450) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12562 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12570 = mem[_12562]
                        require mem[_12562] <= test266151307()
                        require _12562 + mem[_12562] + 31 < _12562 + return_data.size
                        _12578 = mem[_12562 + mem[_12562]]
                        if mem[_12562 + mem[_12562]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12562 + mem[_12562]]) + 1 < 0 or _12562 + ceil32(return_data.size) + ceil32(32 * mem[_12562 + mem[_12562]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12562 + ceil32(return_data.size) + ceil32(32 * mem[_12562 + mem[_12562]]) + 1
                        mem[_12562 + ceil32(return_data.size)] = _12578
                        require _12570 + (32 * _12578) + 32 <= return_data.size
                        t = _12562 + ceil32(return_data.size) + 32
                        s = _12562 + _12570 + 32
                        while s < _12562 + _12570 + (32 * _12578) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12658 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12658]
                    else:
                        mem[mem[64] + 4] = _12287
                        mem[mem[64] + 36] = _12310
                        require ext_code.size(address(_12286))
                        call address(_12286).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _12287, _12310
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12310
                        emit Earn(_12310);
                        _12347 = mem[_658 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12347))
                        staticcall address(_12347).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12371 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_658 + 96] = mem[_12371]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12419 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12427 = mem[_12419]
                        _12435 = mem[_658]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12443 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12427
                        mem[mem[64] + 36] = 128
                        _12451 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _12451:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_12443 + 68] = this.address
                        mem[_12443 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12435))
                        call address(_12435).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12443 + (32 * _12451) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12563 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12571 = mem[_12563]
                        require mem[_12563] <= test266151307()
                        require _12563 + mem[_12563] + 31 < _12563 + return_data.size
                        _12579 = mem[_12563 + mem[_12563]]
                        if mem[_12563 + mem[_12563]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12563 + mem[_12563]]) + 1 < 0 or _12563 + ceil32(return_data.size) + ceil32(32 * mem[_12563 + mem[_12563]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12563 + ceil32(return_data.size) + ceil32(32 * mem[_12563 + mem[_12563]]) + 1
                        mem[_12563 + ceil32(return_data.size)] = _12579
                        require _12571 + (32 * _12579) + 32 <= return_data.size
                        t = _12563 + ceil32(return_data.size) + 32
                        s = _12563 + _12571 + 32
                        while s < _12563 + _12571 + (32 * _12579) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12659 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12659]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _658
            s = _3008 - (100 * _3008 / 10000)
            s = stor9[idx].field_0
            continue 
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
        mem[mem[64] + 36] = _719
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
             gas gas_remaining wei
            args strategyInfo[stor9[idx].field_0].field_512, _719
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _765 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _769 = mem[_765]
        require mem[_765] == mem[_765 + 12 len 20]
        if 0 >= mem[96]:
            revert with 0, 50
        mem[128] = mem[_765 + 12 len 20]
        if 1 >= mem[96]:
            revert with 0, 50
        mem[160] = stor21
        require ext_code.size(address(_769))
        staticcall address(_769).0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _806 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _809 = mem[_806]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_769))
        staticcall address(_769).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _816 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _822 = mem[_816]
        if mem[_816] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _809:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _843 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _854 = mem[_843]
        if 10^12 * _822 / _809 and mem[_843] > -1 / 10^12 * _822 / _809:
            revert with 0, 17
        _883 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _822 / _809 * _854 / 10^12
        mem[mem[64] + 36] = 64
        _897 = mem[96]
        mem[mem[64] + 68] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 100
        while s < _897:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _883 + (32 * _897) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1599 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1606 = mem[_1599]
        require mem[_1599] <= test266151307()
        require _1599 + mem[_1599] + 31 < _1599 + return_data.size
        _1613 = mem[_1599 + mem[_1599]]
        if mem[_1599 + mem[_1599]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_1599 + mem[_1599]]) + 1 < 0 or _1599 + ceil32(return_data.size) + ceil32(32 * mem[_1599 + mem[_1599]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _1599 + ceil32(return_data.size) + ceil32(32 * mem[_1599 + mem[_1599]]) + 1
        mem[_1599 + ceil32(return_data.size)] = _1613
        require _1606 + (32 * _1613) + 32 <= return_data.size
        t = _1599 + ceil32(return_data.size) + 32
        s = _1599 + _1606 + 32
        while s < _1599 + _1606 + (32 * _1613) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        if 1 >= _1613:
            revert with 0, 50
        _3009 = mem[_1599 + ceil32(return_data.size) + 64]
        if mem[_1599 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1599 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_1599 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if mem[_1599 + ceil32(return_data.size) + 64] < 100 * mem[_1599 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        _3049 = mem[_658]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_769))
        staticcall address(_769).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3073 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3081 = mem[_3073]
        if 60 > !block.timestamp:
            revert with 0, 17
        _3095 = mem[64]
        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _3081
        mem[mem[64] + 36] = _3009 - (100 * _3009 / 10000)
        mem[mem[64] + 68] = 160
        _3101 = mem[96]
        mem[mem[64] + 164] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 196
        while s < _3101:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_3095 + 100] = this.address
        mem[_3095 + 132] = block.timestamp + 60
        require ext_code.size(address(_3049))
        call address(_3049).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _3095 + (32 * _3101) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4385 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4393 = mem[_4385]
        require mem[_4385] <= test266151307()
        require _4385 + mem[_4385] + 31 < _4385 + return_data.size
        _4405 = mem[_4385 + mem[_4385]]
        if mem[_4385 + mem[_4385]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_4385 + mem[_4385]]) + 1 < 0 or _4385 + ceil32(return_data.size) + ceil32(32 * mem[_4385 + mem[_4385]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _4385 + ceil32(return_data.size) + ceil32(32 * mem[_4385 + mem[_4385]]) + 1
        mem[_4385 + ceil32(return_data.size)] = _4405
        require _4393 + (32 * _4405) + 32 <= return_data.size
        t = _4385 + ceil32(return_data.size) + 32
        s = _4385 + _4393 + 32
        while s < _4385 + _4393 + (32 * _4405) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        _5767 = mem[_658]
        _5768 = mem[_658 + 192]
        _5769 = mem[_658 + 224]
        _5780 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_5780 + 32 len 64] = call.data[calldata.size len 64]
        if not mem[_5780]:
            revert with 0, 50
        mem[_5780 + 32] = stor21
        if stor21 == address(_5768):
            if stor21 == address(_5769):
                _5808 = mem[_658 + 160]
                _5809 = mem[_658 + 64]
                _5810 = mem[_658 + 32]
                mem[_5780 + 100] = this.address
                require ext_code.size(address(_5810))
                staticcall address(_5810).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_5780 + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _5780 + ceil32(return_data.size) + 96
                require return_data.size >= 32
                if _5809 >= 999999:
                    mem[_5780 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(_5808))
                    call address(_5808).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5780 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _5927 = mem[_658 + 32]
                    mem[_5780 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_5927))
                    staticcall address(_5927).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5780 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_658 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_5780 + (2 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5780 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5780 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _6050 = mem[_658]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_5780 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_5780 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_5780 + (4 * ceil32(return_data.size)) + 132] = 128
                    mem[_5780 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _5780 + (4 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_5780 + (4 * ceil32(return_data.size)) + 164] = this.address
                    mem[_5780 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_6050))
                    call address(_6050).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5780 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5780 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _5780 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7180 = mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5780 + (4 * ceil32(return_data.size)) + return_data.size + 96
                    _7196 = mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5780 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _5780 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_5780 + (6 * ceil32(return_data.size)) + 96] = _7196
                    require _7180 + (32 * _7196) + 32 <= return_data.size
                    t = _5780 + (6 * ceil32(return_data.size)) + 128
                    s = _5780 + (4 * ceil32(return_data.size)) + _7180 + 128
                    while s < _5780 + (4 * ceil32(return_data.size)) + _7180 + (32 * _7196) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8300 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_8300]
                else:
                    mem[_5780 + ceil32(return_data.size) + 100] = _5809
                    mem[_5780 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                    require ext_code.size(address(_5808))
                    call address(_5808).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _5809, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5780 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _5928 = mem[_658 + 32]
                    mem[_5780 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_5928))
                    staticcall address(_5928).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5780 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_658 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_5780 + (2 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_5780 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _5780 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _6051 = mem[_658]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_5780 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_5780 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_5780 + (4 * ceil32(return_data.size)) + 132] = 128
                    mem[_5780 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _5780 + (4 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_5780 + (4 * ceil32(return_data.size)) + 164] = this.address
                    mem[_5780 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_6051))
                    call address(_6051).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_5780 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_5780 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _5780 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7181 = mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _5780 + (4 * ceil32(return_data.size)) + return_data.size + 96
                    _7197 = mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _5780 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _5780 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_5780 + (4 * ceil32(return_data.size)) + mem[_5780 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_5780 + (6 * ceil32(return_data.size)) + 96] = _7197
                    require _7181 + (32 * _7197) + 32 <= return_data.size
                    t = _5780 + (6 * ceil32(return_data.size)) + 128
                    s = _5780 + (4 * ceil32(return_data.size)) + _7181 + 128
                    while s < _5780 + (4 * ceil32(return_data.size)) + _7181 + (32 * _7197) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8301 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_8301]
            else:
                if 1 >= mem[_5780]:
                    revert with 0, 50
                mem[_5780 + 64] = address(_5769)
                mem[_5780 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_5780 + 100] = eth.balance(this.address) / 2
                mem[_5780 + 132] = 64
                mem[_5780 + 164] = mem[_5780]
                s = 0
                t = _5780 + 32
                u = _5780 + 196
                while s < mem[_5780]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5767))
                staticcall address(_5767).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _5780 + (32 * mem[_5780]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7170 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7188 = mem[_7170]
                require mem[_7170] <= test266151307()
                require _7170 + mem[_7170] + 31 < _7170 + return_data.size
                _7204 = mem[_7170 + mem[_7170]]
                if mem[_7170 + mem[_7170]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7170 + mem[_7170]]) + 1 < 0 or _7170 + ceil32(return_data.size) + ceil32(32 * mem[_7170 + mem[_7170]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7170 + ceil32(return_data.size) + ceil32(32 * mem[_7170 + mem[_7170]]) + 1
                mem[_7170 + ceil32(return_data.size)] = _7204
                require _7188 + (32 * _7204) + 32 <= return_data.size
                t = _7170 + ceil32(return_data.size) + 32
                s = _7170 + _7188 + 32
                while s < _7170 + _7188 + (32 * _7204) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7204:
                    revert with 0, 50
                _8276 = mem[_7170 + ceil32(return_data.size) + 64]
                if mem[_7170 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7170 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_7170 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _7204:
                    revert with 0, 50
                _8324 = mem[_7170 + ceil32(return_data.size) + 64]
                if mem[_7170 + ceil32(return_data.size) + 64] < 100 * mem[_7170 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _8332 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _8324 - (100 * _8276 / 10000)
                mem[mem[64] + 36] = 128
                _8340 = mem[_5780]
                mem[mem[64] + 132] = mem[_5780]
                s = 0
                t = _5780 + 32
                u = mem[64] + 164
                while s < _8340:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_8332 + 68] = this.address
                mem[_8332 + 100] = block.timestamp + 60
                require ext_code.size(address(_5767))
                call address(_5767).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8332 + (32 * _8340) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9292 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9300 = mem[_9292]
                require mem[_9292] <= test266151307()
                require _9292 + mem[_9292] + 31 < _9292 + return_data.size
                _9308 = mem[_9292 + mem[_9292]]
                if mem[_9292 + mem[_9292]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9292 + mem[_9292]]) + 1 < 0 or _9292 + ceil32(return_data.size) + ceil32(32 * mem[_9292 + mem[_9292]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9292 + ceil32(return_data.size) + ceil32(32 * mem[_9292 + mem[_9292]]) + 1
                mem[_9292 + ceil32(return_data.size)] = _9308
                require _9300 + (32 * _9308) + 32 <= return_data.size
                t = _9292 + ceil32(return_data.size) + 32
                s = _9292 + _9300 + 32
                while s < _9292 + _9300 + (32 * _9308) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _10214 = mem[_658 + 160]
                _10215 = mem[_658 + 64]
                _10216 = mem[_658 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_10216))
                staticcall address(_10216).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10260 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10272 = mem[_10260]
                if _10215 >= 999999:
                    mem[mem[64] + 4] = mem[_10260]
                    require ext_code.size(address(_10214))
                    call address(_10214).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _10272
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _10272
                    emit Earn(_10272);
                    _10348 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10348))
                    staticcall address(_10348).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10413 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_658 + 96] = mem[_10413]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10524 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10540 = mem[_10524]
                    _10556 = mem[_658]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10577 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10540
                    mem[mem[64] + 36] = 128
                    _10596 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _10596:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10577 + 68] = this.address
                    mem[_10577 + 100] = block.timestamp + 60
                    require ext_code.size(address(_10556))
                    call address(_10556).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10577 + (32 * _10596) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11126 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11146 = mem[_11126]
                    require mem[_11126] <= test266151307()
                    require _11126 + mem[_11126] + 31 < _11126 + return_data.size
                    _11166 = mem[_11126 + mem[_11126]]
                    if mem[_11126 + mem[_11126]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11126 + mem[_11126]]) + 1 < 0 or _11126 + ceil32(return_data.size) + ceil32(32 * mem[_11126 + mem[_11126]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11126 + ceil32(return_data.size) + ceil32(32 * mem[_11126 + mem[_11126]]) + 1
                    mem[_11126 + ceil32(return_data.size)] = _11166
                    require _11146 + (32 * _11166) + 32 <= return_data.size
                    t = _11126 + ceil32(return_data.size) + 32
                    s = _11126 + _11146 + 32
                    while s < _11126 + _11146 + (32 * _11166) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11662 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_11662]
                else:
                    mem[mem[64] + 4] = _10215
                    mem[mem[64] + 36] = _10272
                    require ext_code.size(address(_10214))
                    call address(_10214).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _10215, _10272
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _10272
                    emit Earn(_10272);
                    _10349 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10349))
                    staticcall address(_10349).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10414 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_658 + 96] = mem[_10414]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10525 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10541 = mem[_10525]
                    _10557 = mem[_658]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10578 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10541
                    mem[mem[64] + 36] = 128
                    _10597 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _10597:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10578 + 68] = this.address
                    mem[_10578 + 100] = block.timestamp + 60
                    require ext_code.size(address(_10557))
                    call address(_10557).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10578 + (32 * _10597) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11127 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11147 = mem[_11127]
                    require mem[_11127] <= test266151307()
                    require _11127 + mem[_11127] + 31 < _11127 + return_data.size
                    _11167 = mem[_11127 + mem[_11127]]
                    if mem[_11127 + mem[_11127]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11127 + mem[_11127]]) + 1 < 0 or _11127 + ceil32(return_data.size) + ceil32(32 * mem[_11127 + mem[_11127]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11127 + ceil32(return_data.size) + ceil32(32 * mem[_11127 + mem[_11127]]) + 1
                    mem[_11127 + ceil32(return_data.size)] = _11167
                    require _11147 + (32 * _11167) + 32 <= return_data.size
                    t = _11127 + ceil32(return_data.size) + 32
                    s = _11127 + _11147 + 32
                    while s < _11127 + _11147 + (32 * _11167) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11663 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_11663]
        else:
            if 1 >= mem[_5780]:
                revert with 0, 50
            mem[_5780 + 64] = address(_5768)
            mem[_5780 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_5780 + 100] = eth.balance(this.address) / 2
            mem[_5780 + 132] = 64
            mem[_5780 + 164] = mem[_5780]
            s = 0
            t = _5780 + 32
            u = _5780 + 196
            while s < mem[_5780]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(address(_5767))
            staticcall address(_5767).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _5780 + (32 * mem[_5780]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7171 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7189 = mem[_7171]
            require mem[_7171] <= test266151307()
            require _7171 + mem[_7171] + 31 < _7171 + return_data.size
            _7205 = mem[_7171 + mem[_7171]]
            if mem[_7171 + mem[_7171]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_7171 + mem[_7171]]) + 1 < 0 or _7171 + ceil32(return_data.size) + ceil32(32 * mem[_7171 + mem[_7171]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _7171 + ceil32(return_data.size) + ceil32(32 * mem[_7171 + mem[_7171]]) + 1
            mem[_7171 + ceil32(return_data.size)] = _7205
            require _7189 + (32 * _7205) + 32 <= return_data.size
            t = _7171 + ceil32(return_data.size) + 32
            s = _7171 + _7189 + 32
            while s < _7171 + _7189 + (32 * _7205) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _7205:
                revert with 0, 50
            _8277 = mem[_7171 + ceil32(return_data.size) + 64]
            if mem[_7171 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_7171 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_7171 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _7205:
                revert with 0, 50
            _8325 = mem[_7171 + ceil32(return_data.size) + 64]
            if mem[_7171 + ceil32(return_data.size) + 64] < 100 * mem[_7171 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _8333 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _8325 - (100 * _8277 / 10000)
            mem[mem[64] + 36] = 128
            _8341 = mem[_5780]
            mem[mem[64] + 132] = mem[_5780]
            s = 0
            t = _5780 + 32
            u = mem[64] + 164
            while s < _8341:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_8333 + 68] = this.address
            mem[_8333 + 100] = block.timestamp + 60
            require ext_code.size(address(_5767))
            call address(_5767).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8333 + (32 * _8341) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _9293 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _9301 = mem[_9293]
            require mem[_9293] <= test266151307()
            require _9293 + mem[_9293] + 31 < _9293 + return_data.size
            _9309 = mem[_9293 + mem[_9293]]
            if mem[_9293 + mem[_9293]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_9293 + mem[_9293]]) + 1 < 0 or _9293 + ceil32(return_data.size) + ceil32(32 * mem[_9293 + mem[_9293]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _9293 + ceil32(return_data.size) + ceil32(32 * mem[_9293 + mem[_9293]]) + 1
            mem[_9293 + ceil32(return_data.size)] = _9309
            require _9301 + (32 * _9309) + 32 <= return_data.size
            t = _9293 + ceil32(return_data.size) + 32
            s = _9293 + _9301 + 32
            while s < _9293 + _9301 + (32 * _9309) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if stor21 == address(_5769):
                _10234 = mem[_658 + 160]
                _10235 = mem[_658 + 64]
                _10236 = mem[_658 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_10236))
                staticcall address(_10236).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10267 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10279 = mem[_10267]
                if _10235 >= 999999:
                    mem[mem[64] + 4] = mem[_10267]
                    require ext_code.size(address(_10234))
                    call address(_10234).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _10279
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _10279
                    emit Earn(_10279);
                    _10377 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10377))
                    staticcall address(_10377).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10424 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_658 + 96] = mem[_10424]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10532 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10548 = mem[_10532]
                    _10564 = mem[_658]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10588 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10548
                    mem[mem[64] + 36] = 128
                    _10604 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _10604:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10588 + 68] = this.address
                    mem[_10588 + 100] = block.timestamp + 60
                    require ext_code.size(address(_10564))
                    call address(_10564).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10588 + (32 * _10604) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11128 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11148 = mem[_11128]
                    require mem[_11128] <= test266151307()
                    require _11128 + mem[_11128] + 31 < _11128 + return_data.size
                    _11168 = mem[_11128 + mem[_11128]]
                    if mem[_11128 + mem[_11128]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11128 + mem[_11128]]) + 1 < 0 or _11128 + ceil32(return_data.size) + ceil32(32 * mem[_11128 + mem[_11128]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11128 + ceil32(return_data.size) + ceil32(32 * mem[_11128 + mem[_11128]]) + 1
                    mem[_11128 + ceil32(return_data.size)] = _11168
                    require _11148 + (32 * _11168) + 32 <= return_data.size
                    t = _11128 + ceil32(return_data.size) + 32
                    s = _11128 + _11148 + 32
                    while s < _11128 + _11148 + (32 * _11168) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11664 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_11664]
                else:
                    mem[mem[64] + 4] = _10235
                    mem[mem[64] + 36] = _10279
                    require ext_code.size(address(_10234))
                    call address(_10234).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _10235, _10279
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _10279
                    emit Earn(_10279);
                    _10378 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_10378))
                    staticcall address(_10378).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10425 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_658 + 96] = mem[_10425]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10533 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10549 = mem[_10533]
                    _10565 = mem[_658]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _10589 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _10549
                    mem[mem[64] + 36] = 128
                    _10605 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _10605:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_10589 + 68] = this.address
                    mem[_10589 + 100] = block.timestamp + 60
                    require ext_code.size(address(_10565))
                    call address(_10565).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _10589 + (32 * _10605) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11129 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11149 = mem[_11129]
                    require mem[_11129] <= test266151307()
                    require _11129 + mem[_11129] + 31 < _11129 + return_data.size
                    _11169 = mem[_11129 + mem[_11129]]
                    if mem[_11129 + mem[_11129]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11129 + mem[_11129]]) + 1 < 0 or _11129 + ceil32(return_data.size) + ceil32(32 * mem[_11129 + mem[_11129]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11129 + ceil32(return_data.size) + ceil32(32 * mem[_11129 + mem[_11129]]) + 1
                    mem[_11129 + ceil32(return_data.size)] = _11169
                    require _11149 + (32 * _11169) + 32 <= return_data.size
                    t = _11129 + ceil32(return_data.size) + 32
                    s = _11129 + _11149 + 32
                    while s < _11129 + _11149 + (32 * _11169) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11665 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_11665]
            else:
                if 1 >= mem[_5780]:
                    revert with 0, 50
                mem[_5780 + 64] = address(_5769)
                _10237 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _10261 = mem[_5780]
                mem[mem[64] + 68] = mem[_5780]
                s = 0
                t = _5780 + 32
                u = mem[64] + 100
                while s < _10261:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_5767))
                staticcall address(_5767).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _10237 + (32 * _10261) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11139 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11159 = mem[_11139]
                require mem[_11139] <= test266151307()
                require _11139 + mem[_11139] + 31 < _11139 + return_data.size
                _11179 = mem[_11139 + mem[_11139]]
                if mem[_11139 + mem[_11139]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11139 + mem[_11139]]) + 1 < 0 or _11139 + ceil32(return_data.size) + ceil32(32 * mem[_11139 + mem[_11139]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11139 + ceil32(return_data.size) + ceil32(32 * mem[_11139 + mem[_11139]]) + 1
                mem[_11139 + ceil32(return_data.size)] = _11179
                require _11159 + (32 * _11179) + 32 <= return_data.size
                t = _11139 + ceil32(return_data.size) + 32
                s = _11139 + _11159 + 32
                while s < _11139 + _11159 + (32 * _11179) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _11179:
                    revert with 0, 50
                _11623 = mem[_11139 + ceil32(return_data.size) + 64]
                if mem[_11139 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_11139 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_11139 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _11179:
                    revert with 0, 50
                _11695 = mem[_11139 + ceil32(return_data.size) + 64]
                if mem[_11139 + ceil32(return_data.size) + 64] < 100 * mem[_11139 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _11699 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _11695 - (100 * _11623 / 10000)
                mem[mem[64] + 36] = 128
                _11703 = mem[_5780]
                mem[mem[64] + 132] = mem[_5780]
                s = 0
                t = _5780 + 32
                u = mem[64] + 164
                while s < _11703:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_11699 + 68] = this.address
                mem[_11699 + 100] = block.timestamp + 60
                require ext_code.size(address(_5767))
                call address(_5767).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _11699 + (32 * _11703) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12003 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12007 = mem[_12003]
                require mem[_12003] <= test266151307()
                require _12003 + mem[_12003] + 31 < _12003 + return_data.size
                _12011 = mem[_12003 + mem[_12003]]
                if mem[_12003 + mem[_12003]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_12003 + mem[_12003]]) + 1 < 0 or _12003 + ceil32(return_data.size) + ceil32(32 * mem[_12003 + mem[_12003]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _12003 + ceil32(return_data.size) + ceil32(32 * mem[_12003 + mem[_12003]]) + 1
                mem[_12003 + ceil32(return_data.size)] = _12011
                require _12007 + (32 * _12011) + 32 <= return_data.size
                t = _12003 + ceil32(return_data.size) + 32
                s = _12003 + _12007 + 32
                while s < _12003 + _12007 + (32 * _12011) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _12289 = mem[_658 + 160]
                _12290 = mem[_658 + 64]
                _12291 = mem[_658 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_12291))
                staticcall address(_12291).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12307 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12311 = mem[_12307]
                if _12290 >= 999999:
                    mem[mem[64] + 4] = mem[_12307]
                    require ext_code.size(address(_12289))
                    call address(_12289).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _12311
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _12311
                    emit Earn(_12311);
                    _12348 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12348))
                    staticcall address(_12348).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12372 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_658 + 96] = mem[_12372]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12420 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12428 = mem[_12420]
                    _12436 = mem[_658]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _12444 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12428
                    mem[mem[64] + 36] = 128
                    _12452 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _12452:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_12444 + 68] = this.address
                    mem[_12444 + 100] = block.timestamp + 60
                    require ext_code.size(address(_12436))
                    call address(_12436).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _12444 + (32 * _12452) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12564 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12572 = mem[_12564]
                    require mem[_12564] <= test266151307()
                    require _12564 + mem[_12564] + 31 < _12564 + return_data.size
                    _12580 = mem[_12564 + mem[_12564]]
                    if mem[_12564 + mem[_12564]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12564 + mem[_12564]]) + 1 < 0 or _12564 + ceil32(return_data.size) + ceil32(32 * mem[_12564 + mem[_12564]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12564 + ceil32(return_data.size) + ceil32(32 * mem[_12564 + mem[_12564]]) + 1
                    mem[_12564 + ceil32(return_data.size)] = _12580
                    require _12572 + (32 * _12580) + 32 <= return_data.size
                    t = _12564 + ceil32(return_data.size) + 32
                    s = _12564 + _12572 + 32
                    while s < _12564 + _12572 + (32 * _12580) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12660 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12660]
                else:
                    mem[mem[64] + 4] = _12290
                    mem[mem[64] + 36] = _12311
                    require ext_code.size(address(_12289))
                    call address(_12289).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _12290, _12311
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _12311
                    emit Earn(_12311);
                    _12349 = mem[_658 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12349))
                    staticcall address(_12349).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12373 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_658 + 96] = mem[_12373]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12421 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12429 = mem[_12421]
                    _12437 = mem[_658]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _12445 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12429
                    mem[mem[64] + 36] = 128
                    _12453 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _12453:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_12445 + 68] = this.address
                    mem[_12445 + 100] = block.timestamp + 60
                    require ext_code.size(address(_12437))
                    call address(_12437).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _12445 + (32 * _12453) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12565 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12573 = mem[_12565]
                    require mem[_12565] <= test266151307()
                    require _12565 + mem[_12565] + 31 < _12565 + return_data.size
                    _12581 = mem[_12565 + mem[_12565]]
                    if mem[_12565 + mem[_12565]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12565 + mem[_12565]]) + 1 < 0 or _12565 + ceil32(return_data.size) + ceil32(32 * mem[_12565 + mem[_12565]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12565 + ceil32(return_data.size) + ceil32(32 * mem[_12565 + mem[_12565]]) + 1
                    mem[_12565 + ceil32(return_data.size)] = _12581
                    require _12573 + (32 * _12581) + 32 <= return_data.size
                    t = _12565 + ceil32(return_data.size) + 32
                    s = _12565 + _12573 + 32
                    while s < _12565 + _12573 + (32 * _12581) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12661 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12661]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = _658
        s = _3009 - (100 * _3009 / 10000)
        s = stor9[idx].field_0
        continue 
    _659 = mem[64]
    mem[64] = mem[64] + 256
    mem[_659] = 0
    mem[_659 + 32] = 0
    mem[_659 + 64] = 0
    mem[_659 + 96] = 0
    mem[_659 + 128] = 0
    mem[_659 + 160] = 0
    mem[_659 + 192] = 0
    mem[_659 + 224] = 0
    _663 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_663 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _659
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _1584 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1584] = strategyInfo[stor9[idx].field_0].field_0
        mem[_1584 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_1584 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_1584 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_1584 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_1584 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_1584 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_1584 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1597 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1603 = mem[_1597]
            if not mem[_1597]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_1597]
                v = _1584
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1632 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1642 = mem[_1632]
            require mem[_1632] == mem[_1632 + 18 len 14]
            _1648 = mem[_1632 + 32]
            require mem[_1632 + 32] == mem[_1632 + 50 len 14]
            require mem[_1632 + 64] == mem[_1632 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1656 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1658 = mem[_1656]
            if _1603 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_1656]:
                revert with 0, 18
            if 10^12 * _1603 / mem[_1656] and Mask(112, 0, _1642) > -1 / 10^12 * _1603 / mem[_1656]:
                revert with 0, 17
            if 10^12 * _1603 / mem[_1656] and Mask(112, 0, _1648) > -1 / 10^12 * _1603 / mem[_1656]:
                revert with 0, 17
            if 1 >= mem[_663]:
                revert with 0, 50
            mem[_663 + 64] = stor21
            if 0 >= mem[_663]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_663 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _1718 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1603 / _1658 * Mask(112, 0, _1648) / 10^12
                mem[mem[64] + 36] = 64
                _1729 = mem[_663]
                mem[mem[64] + 68] = mem[_663]
                s = 0
                t = _663 + 32
                u = mem[64] + 100
                while s < _1729:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1718 + (32 * _1729) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3023 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3029 = mem[_3023]
                require mem[_3023] <= test266151307()
                require _3023 + mem[_3023] + 31 < _3023 + return_data.size
                _3035 = mem[_3023 + mem[_3023]]
                if mem[_3023 + mem[_3023]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3023 + mem[_3023]]) + 1 < 0 or _3023 + ceil32(return_data.size) + ceil32(32 * mem[_3023 + mem[_3023]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3023 + ceil32(return_data.size) + ceil32(32 * mem[_3023 + mem[_3023]]) + 1
                mem[_3023 + ceil32(return_data.size)] = _3035
                require _3029 + (32 * _3035) + 32 <= return_data.size
                t = _3023 + ceil32(return_data.size) + 32
                s = _3023 + _3029 + 32
                while s < _3023 + _3029 + (32 * _3035) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3035:
                    revert with 0, 50
                _4379 = mem[_3023 + ceil32(return_data.size) + 64]
                if 10^12 * _1603 / _1658 * Mask(112, 0, _1642) / 10^12 > !mem[_3023 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1584 + 128] = (10^12 * _1603 / _1658 * Mask(112, 0, _1642) / 10^12) + mem[_3023 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1603 / _1658 * Mask(112, 0, _1642) / 10^12) + _4379):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3023 + ceil32(return_data.size)
                t = 10^12 * _1603 / _1658 * Mask(112, 0, _1648) / 10^12
                u = 10^12 * _1603 / _1658 * Mask(112, 0, _1642) / 10^12
                v = _1603
                v = _1584
                v = stor9[idx].field_0
                v = v + (10^12 * _1603 / _1658 * Mask(112, 0, _1642) / 10^12) + _4379
                continue 
            mem[_663 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _1726 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1603 / _1658 * Mask(112, 0, _1642) / 10^12
                mem[mem[64] + 36] = 64
                _1734 = mem[_663]
                mem[mem[64] + 68] = mem[_663]
                s = 0
                t = _663 + 32
                u = mem[64] + 100
                while s < _1734:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1726 + (32 * _1734) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3022 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3028 = mem[_3022]
                require mem[_3022] <= test266151307()
                require _3022 + mem[_3022] + 31 < _3022 + return_data.size
                _3034 = mem[_3022 + mem[_3022]]
                if mem[_3022 + mem[_3022]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3022 + mem[_3022]]) + 1 < 0 or _3022 + ceil32(return_data.size) + ceil32(32 * mem[_3022 + mem[_3022]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3022 + ceil32(return_data.size) + ceil32(32 * mem[_3022 + mem[_3022]]) + 1
                mem[_3022 + ceil32(return_data.size)] = _3034
                require _3028 + (32 * _3034) + 32 <= return_data.size
                t = _3022 + ceil32(return_data.size) + 32
                s = _3022 + _3028 + 32
                while s < _3022 + _3028 + (32 * _3034) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3034:
                    revert with 0, 50
                _4378 = mem[_3022 + ceil32(return_data.size) + 64]
                if 10^12 * _1603 / _1658 * Mask(112, 0, _1648) / 10^12 > !mem[_3022 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1584 + 128] = (10^12 * _1603 / _1658 * Mask(112, 0, _1648) / 10^12) + mem[_3022 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1603 / _1658 * Mask(112, 0, _1648) / 10^12) + _4378):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3022 + ceil32(return_data.size)
                t = 10^12 * _1603 / _1658 * Mask(112, 0, _1648) / 10^12
                u = 10^12 * _1603 / _1658 * Mask(112, 0, _1642) / 10^12
                v = _1603
                v = _1584
                v = stor9[idx].field_0
                v = v + (10^12 * _1603 / _1658 * Mask(112, 0, _1648) / 10^12) + _4378
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1735 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1739 = mem[_1735]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1775 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1790 = mem[_1775]
            if mem[_1775] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1739:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1872 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1886 = mem[_1872]
            if 10^12 * _1790 / _1739 and mem[_1872] > -1 / 10^12 * _1790 / _1739:
                revert with 0, 17
            _1964 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1790 / _1739 * _1886 / 10^12
            mem[mem[64] + 36] = 64
            _1991 = mem[_663]
            mem[mem[64] + 68] = mem[_663]
            t = 0
            u = _663 + 32
            w = mem[64] + 100
            while t < _1991:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1964 + (32 * _1991) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3021 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3027 = mem[_3021]
            require mem[_3021] <= test266151307()
            require _3021 + mem[_3021] + 31 < _3021 + return_data.size
            _3033 = mem[_3021 + mem[_3021]]
            if mem[_3021 + mem[_3021]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3021 + mem[_3021]]) + 1 < 0 or _3021 + ceil32(return_data.size) + ceil32(32 * mem[_3021 + mem[_3021]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3021 + ceil32(return_data.size) + ceil32(32 * mem[_3021 + mem[_3021]]) + 1
            mem[_3021 + ceil32(return_data.size)] = _3033
            require _3027 + (32 * _3033) + 32 <= return_data.size
            u = _3021 + ceil32(return_data.size) + 32
            t = _3021 + _3027 + 32
            while t < _3021 + _3027 + (32 * _3033) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _3033:
                revert with 0, 50
            _4377 = mem[_3021 + ceil32(return_data.size) + 64]
            mem[_1584 + 128] = mem[_3021 + ceil32(return_data.size) + 64]
            if v > !_4377:
                revert with 0, 17
            if 0 >= mem[_663]:
                revert with 0, 50
            mem[_663 + 32] = mem[_1584 + 236 len 20]
            _4398 = mem[_1584 + 224]
            _4399 = mem[_1584]
            require ext_code.size(mem[_1584 + 236 len 20])
            staticcall mem[_1584 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4409 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4415 = mem[_4409]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_4398))
            staticcall address(_4398).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4425 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4439 = mem[_4425]
            if mem[_4425] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4415:
                revert with 0, 18
            mem[mem[64] + 4] = address(_4399)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_4399)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4497 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4511 = mem[_4497]
            if 10^12 * _4439 / _4415 and mem[_4497] > -1 / 10^12 * _4439 / _4415:
                revert with 0, 17
            _4557 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4439 / _4415 * _4511 / 10^12
            mem[mem[64] + 36] = 64
            _4591 = mem[_663]
            mem[mem[64] + 68] = mem[_663]
            t = 0
            u = _663 + 32
            w = mem[64] + 100
            while t < _4591:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_4399))
            staticcall address(_4399).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4557 + (32 * _4591) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5787 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5789 = mem[_5787]
            require mem[_5787] <= test266151307()
            require _5787 + mem[_5787] + 31 < _5787 + return_data.size
            _5795 = mem[_5787 + mem[_5787]]
            if mem[_5787 + mem[_5787]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5787 + mem[_5787]]) + 1 < 0 or _5787 + ceil32(return_data.size) + ceil32(32 * mem[_5787 + mem[_5787]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5787 + ceil32(return_data.size) + ceil32(32 * mem[_5787 + mem[_5787]]) + 1
            mem[_5787 + ceil32(return_data.size)] = _5795
            require _5789 + (32 * _5795) + 32 <= return_data.size
            u = _5787 + ceil32(return_data.size) + 32
            t = _5787 + _5789 + 32
            while t < _5787 + _5789 + (32 * _5795) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _5795:
                revert with 0, 50
            if mem[_1584 + 128] > !mem[_5787 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1584 + 128] = mem[_1584 + 128] + mem[_5787 + ceil32(return_data.size) + 64]
            if v + _4377 > !mem[_1584 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _1603 / _1658 * Mask(112, 0, _1648) / 10^12
            u = 10^12 * _1603 / _1658 * Mask(112, 0, _1642) / 10^12
            v = _1603
            v = _1584
            v = stor9[idx].field_0
            v = v + _4377 + mem[_1584 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1596 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _1602 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_1602] = mem[_1596]
        mem[_1602 + 32] = mem[_1596 + 32]
        mem[_1602 + 64] = mem[_1596 + 64]
        require return_data.size - 96 >= 96
        _1616 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1616] = mem[_1596 + 96]
        mem[_1616 + 32] = mem[_1596 + 128]
        mem[_1616 + 64] = mem[_1596 + 160]
        mem[_1602 + 96] = _1616
        mem[_1602 + 128] = mem[_1596 + 192]
        require return_data.size - 224 >= 96
        _1628 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1628] = mem[_1596 + 224]
        mem[_1628 + 32] = mem[_1596 + 256]
        mem[_1628 + 64] = mem[_1596 + 288]
        mem[_1602 + 160] = _1628
        _1637 = mem[_1602 + 64]
        if not mem[_1602 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_1602 + 64]
            v = _1584
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1652 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1653 = mem[_1652]
        require mem[_1652] == mem[_1652 + 18 len 14]
        _1657 = mem[_1652 + 32]
        require mem[_1652 + 32] == mem[_1652 + 50 len 14]
        require mem[_1652 + 64] == mem[_1652 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1678 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1683 = mem[_1678]
        if _1637 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_1678]:
            revert with 0, 18
        if 10^12 * _1637 / mem[_1678] and Mask(112, 0, _1653) > -1 / 10^12 * _1637 / mem[_1678]:
            revert with 0, 17
        if 10^12 * _1637 / mem[_1678] and Mask(112, 0, _1657) > -1 / 10^12 * _1637 / mem[_1678]:
            revert with 0, 17
        if 1 >= mem[_663]:
            revert with 0, 50
        mem[_663 + 64] = stor21
        if 0 >= mem[_663]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_663 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            _1757 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1637 / _1683 * Mask(112, 0, _1657) / 10^12
            mem[mem[64] + 36] = 64
            _1787 = mem[_663]
            mem[mem[64] + 68] = mem[_663]
            s = 0
            t = _663 + 32
            u = mem[64] + 100
            while s < _1787:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1757 + (32 * _1787) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3020 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3026 = mem[_3020]
            require mem[_3020] <= test266151307()
            require _3020 + mem[_3020] + 31 < _3020 + return_data.size
            _3032 = mem[_3020 + mem[_3020]]
            if mem[_3020 + mem[_3020]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3020 + mem[_3020]]) + 1 < 0 or _3020 + ceil32(return_data.size) + ceil32(32 * mem[_3020 + mem[_3020]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3020 + ceil32(return_data.size) + ceil32(32 * mem[_3020 + mem[_3020]]) + 1
            mem[_3020 + ceil32(return_data.size)] = _3032
            require _3026 + (32 * _3032) + 32 <= return_data.size
            t = _3020 + ceil32(return_data.size) + 32
            s = _3020 + _3026 + 32
            while s < _3020 + _3026 + (32 * _3032) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3032:
                revert with 0, 50
            _4376 = mem[_3020 + ceil32(return_data.size) + 64]
            if 10^12 * _1637 / _1683 * Mask(112, 0, _1653) / 10^12 > !mem[_3020 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1584 + 128] = (10^12 * _1637 / _1683 * Mask(112, 0, _1653) / 10^12) + mem[_3020 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1637 / _1683 * Mask(112, 0, _1653) / 10^12) + _4376):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3020 + ceil32(return_data.size)
            t = 10^12 * _1637 / _1683 * Mask(112, 0, _1657) / 10^12
            u = 10^12 * _1637 / _1683 * Mask(112, 0, _1653) / 10^12
            v = _1637
            v = _1584
            v = stor9[idx].field_0
            v = v + (10^12 * _1637 / _1683 * Mask(112, 0, _1653) / 10^12) + _4376
            continue 
        mem[_663 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            _1774 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1637 / _1683 * Mask(112, 0, _1653) / 10^12
            mem[mem[64] + 36] = 64
            _1789 = mem[_663]
            mem[mem[64] + 68] = mem[_663]
            s = 0
            t = _663 + 32
            w = mem[64] + 100
            while s < _1789:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1774 + (32 * _1789) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3019 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3025 = mem[_3019]
            require mem[_3019] <= test266151307()
            require _3019 + mem[_3019] + 31 < _3019 + return_data.size
            _3031 = mem[_3019 + mem[_3019]]
            if mem[_3019 + mem[_3019]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3019 + mem[_3019]]) + 1 < 0 or _3019 + ceil32(return_data.size) + ceil32(32 * mem[_3019 + mem[_3019]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3019 + ceil32(return_data.size) + ceil32(32 * mem[_3019 + mem[_3019]]) + 1
            mem[_3019 + ceil32(return_data.size)] = _3031
            require _3025 + (32 * _3031) + 32 <= return_data.size
            t = _3019 + ceil32(return_data.size) + 32
            s = _3019 + _3025 + 32
            while s < _3019 + _3025 + (32 * _3031) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3031:
                revert with 0, 50
            _4375 = mem[_3019 + ceil32(return_data.size) + 64]
            if 10^12 * _1637 / _1683 * Mask(112, 0, _1657) / 10^12 > !mem[_3019 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1584 + 128] = (10^12 * _1637 / _1683 * Mask(112, 0, _1657) / 10^12) + mem[_3019 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1637 / _1683 * Mask(112, 0, _1657) / 10^12) + _4375):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3019 + ceil32(return_data.size)
            t = 10^12 * _1637 / _1683 * Mask(112, 0, _1657) / 10^12
            s = 10^12 * _1637 / _1683 * Mask(112, 0, _1653) / 10^12
            v = _1637
            v = _1584
            v = stor9[idx].field_0
            v = v + (10^12 * _1637 / _1683 * Mask(112, 0, _1657) / 10^12) + _4375
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1792 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1797 = mem[_1792]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1845 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1863 = mem[_1845]
        if mem[_1845] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _1797:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1961 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1990 = mem[_1961]
        if 10^12 * _1863 / _1797 and mem[_1961] > -1 / 10^12 * _1863 / _1797:
            revert with 0, 17
        _2050 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _1863 / _1797 * _1990 / 10^12
        mem[mem[64] + 36] = 64
        _2068 = mem[_663]
        mem[mem[64] + 68] = mem[_663]
        t = 0
        u = _663 + 32
        w = mem[64] + 100
        while t < _2068:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _2050 + (32 * _2068) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3018 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3024 = mem[_3018]
        require mem[_3018] <= test266151307()
        require _3018 + mem[_3018] + 31 < _3018 + return_data.size
        _3030 = mem[_3018 + mem[_3018]]
        if mem[_3018 + mem[_3018]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_3018 + mem[_3018]]) + 1 < 0 or _3018 + ceil32(return_data.size) + ceil32(32 * mem[_3018 + mem[_3018]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _3018 + ceil32(return_data.size) + ceil32(32 * mem[_3018 + mem[_3018]]) + 1
        mem[_3018 + ceil32(return_data.size)] = _3030
        require _3024 + (32 * _3030) + 32 <= return_data.size
        u = _3018 + ceil32(return_data.size) + 32
        t = _3018 + _3024 + 32
        while t < _3018 + _3024 + (32 * _3030) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _3030:
            revert with 0, 50
        _4374 = mem[_3018 + ceil32(return_data.size) + 64]
        mem[_1584 + 128] = mem[_3018 + ceil32(return_data.size) + 64]
        if v > !_4374:
            revert with 0, 17
        if 0 >= mem[_663]:
            revert with 0, 50
        mem[_663 + 32] = mem[_1584 + 236 len 20]
        _4396 = mem[_1584 + 224]
        _4397 = mem[_1584]
        require ext_code.size(mem[_1584 + 236 len 20])
        staticcall mem[_1584 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4408 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4414 = mem[_4408]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_4396))
        staticcall address(_4396).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4424 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4438 = mem[_4424]
        if mem[_4424] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _4414:
            revert with 0, 18
        mem[mem[64] + 4] = address(_4397)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_4397)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4496 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4510 = mem[_4496]
        if 10^12 * _4438 / _4414 and mem[_4496] > -1 / 10^12 * _4438 / _4414:
            revert with 0, 17
        _4556 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _4438 / _4414 * _4510 / 10^12
        mem[mem[64] + 36] = 64
        _4590 = mem[_663]
        mem[mem[64] + 68] = mem[_663]
        t = 0
        u = _663 + 32
        w = mem[64] + 100
        while t < _4590:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_4397))
        staticcall address(_4397).mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _4556 + (32 * _4590) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5786 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5788 = mem[_5786]
        require mem[_5786] <= test266151307()
        require _5786 + mem[_5786] + 31 < _5786 + return_data.size
        _5794 = mem[_5786 + mem[_5786]]
        if mem[_5786 + mem[_5786]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5786 + mem[_5786]]) + 1 < 0 or _5786 + ceil32(return_data.size) + ceil32(32 * mem[_5786 + mem[_5786]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5786 + ceil32(return_data.size) + ceil32(32 * mem[_5786 + mem[_5786]]) + 1
        mem[_5786 + ceil32(return_data.size)] = _5794
        require _5788 + (32 * _5794) + 32 <= return_data.size
        u = _5786 + ceil32(return_data.size) + 32
        t = _5786 + _5788 + 32
        while t < _5786 + _5788 + (32 * _5794) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _5794:
            revert with 0, 50
        if mem[_1584 + 128] > !mem[_5786 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_1584 + 128] = mem[_1584 + 128] + mem[_5786 + ceil32(return_data.size) + 64]
        if v + _4374 > !mem[_1584 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _1637 / _1683 * Mask(112, 0, _1657) / 10^12
        u = 10^12 * _1637 / _1683 * Mask(112, 0, _1653) / 10^12
        v = _1637
        v = _1584
        v = stor9[idx].field_0
        v = v + _4374 + mem[_1584 + 128]
        continue 
    emit 0xf9ede3d1 
}

function deposit() payable {
    mem[96] = 2
    mem[128 len 64] = call.data[calldata.size len 64]
    mem[64] = 448
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    idx = 0
    s = 192
    s = 0
    s = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _731 = mem[64]
        mem[64] = mem[64] + 256
        mem[_731] = strategyInfo[stor9[idx].field_0].field_0
        mem[_731 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_731 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_731 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_731 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_731 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_731 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_731 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _742 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _751 = mem[_742]
            if not mem[_742]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _731
                s = mem[_742]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _773 = mem[64]
            mem[64] = mem[64] + 256
            mem[_773] = strategyInfo[stor9[idx].field_0].field_0
            mem[_773 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_773 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_773 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_773 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_773 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_773 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_773 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _751
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _751
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _813 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _825 = mem[_813]
                require mem[_813] == mem[_813 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_813 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_825))
                staticcall address(_825).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _869 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _875 = mem[_869]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_825))
                staticcall address(_825).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _890 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _901 = mem[_890]
                if mem[_890] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _875:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _925 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _930 = mem[_925]
                if 10^12 * _901 / _875 and mem[_925] > -1 / 10^12 * _901 / _875:
                    revert with 0, 17
                _951 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _901 / _875 * _930 / 10^12
                mem[mem[64] + 36] = 64
                _964 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _964:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _951 + (32 * _964) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1748 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1755 = mem[_1748]
                require mem[_1748] <= test266151307()
                require _1748 + mem[_1748] + 31 < _1748 + return_data.size
                _1770 = mem[_1748 + mem[_1748]]
                if mem[_1748 + mem[_1748]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_1748 + mem[_1748]]) + 1 < 0 or _1748 + ceil32(return_data.size) + ceil32(32 * mem[_1748 + mem[_1748]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _1748 + ceil32(return_data.size) + ceil32(32 * mem[_1748 + mem[_1748]]) + 1
                mem[_1748 + ceil32(return_data.size)] = _1770
                require _1755 + (32 * _1770) + 32 <= return_data.size
                t = _1748 + ceil32(return_data.size) + 32
                s = _1748 + _1755 + 32
                while s < _1748 + _1755 + (32 * _1770) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _1770:
                    revert with 0, 50
                _3461 = mem[_1748 + ceil32(return_data.size) + 64]
                if mem[_1748 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1748 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_1748 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_1748 + ceil32(return_data.size) + 64] < 100 * mem[_1748 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _3536 = mem[_731]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_825))
                staticcall address(_825).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3567 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3580 = mem[_3567]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3580
                mem[mem[64] + 36] = _3461 - (100 * _3461 / 10000)
                mem[mem[64] + 68] = 160
                _3611 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_3536))
                call address(_3536).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3611) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5140 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5156 = mem[_5140]
                require mem[_5140] <= test266151307()
                require _5140 + mem[_5140] + 31 < _5140 + return_data.size
                _5176 = mem[_5140 + mem[_5140]]
                if mem[_5140 + mem[_5140]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5140 + mem[_5140]]) + 1 < 0 or _5140 + ceil32(return_data.size) + ceil32(32 * mem[_5140 + mem[_5140]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5140 + ceil32(return_data.size) + ceil32(32 * mem[_5140 + mem[_5140]]) + 1
                mem[_5140 + ceil32(return_data.size)] = _5176
                require _5156 + (32 * _5176) + 32 <= return_data.size
                t = _5140 + ceil32(return_data.size) + 32
                s = _5140 + _5156 + 32
                while s < _5140 + _5156 + (32 * _5176) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _6707 = mem[_731]
                _6708 = mem[_731 + 192]
                _6709 = mem[_731 + 224]
                _6719 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_6719 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_6719]:
                    revert with 0, 50
                mem[_6719 + 32] = stor21
                if stor21 == address(_6708):
                    if stor21 == address(_6709):
                        _6763 = mem[_731 + 160]
                        _6764 = mem[_731 + 64]
                        _6765 = mem[_731 + 32]
                        mem[_6719 + 100] = this.address
                        require ext_code.size(address(_6765))
                        staticcall address(_6765).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6719 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6719 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        if _6764 >= 999999:
                            mem[_6719 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_6763))
                            call address(_6763).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6719 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _6901 = mem[_731 + 32]
                            mem[_6719 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_6901))
                            staticcall address(_6901).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6719 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_731 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_6719 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6719 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _6719 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7047 = mem[_731]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_6719 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_6719 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_6719 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_6719 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _6719 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_6719 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_6719 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_7047))
                            call address(_7047).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6719 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6719 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6719 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _8236 = mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6719 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _8256 = mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6719 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _6719 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_6719 + (6 * ceil32(return_data.size)) + 96] = _8256
                            require _8236 + (32 * _8256) + 32 <= return_data.size
                            t = _6719 + (6 * ceil32(return_data.size)) + 128
                            s = _6719 + (4 * ceil32(return_data.size)) + _8236 + 128
                            while s < _6719 + (4 * ceil32(return_data.size)) + _8236 + (32 * _8256) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9413 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_9413]
                        else:
                            mem[_6719 + ceil32(return_data.size) + 100] = _6764
                            mem[_6719 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_6763))
                            call address(_6763).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _6764, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6719 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _6902 = mem[_731 + 32]
                            mem[_6719 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_6902))
                            staticcall address(_6902).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6719 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_731 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_6719 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6719 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _6719 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7048 = mem[_731]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_6719 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_6719 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_6719 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_6719 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _6719 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_6719 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_6719 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_7048))
                            call address(_7048).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6719 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6719 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6719 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _8237 = mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6719 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _8257 = mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6719 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _6719 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6719 + (4 * ceil32(return_data.size)) + mem[_6719 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_6719 + (6 * ceil32(return_data.size)) + 96] = _8257
                            require _8237 + (32 * _8257) + 32 <= return_data.size
                            t = _6719 + (6 * ceil32(return_data.size)) + 128
                            s = _6719 + (4 * ceil32(return_data.size)) + _8237 + 128
                            while s < _6719 + (4 * ceil32(return_data.size)) + _8237 + (32 * _8257) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9414 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_9414]
                    else:
                        if 1 >= mem[_6719]:
                            revert with 0, 50
                        mem[_6719 + 64] = address(_6709)
                        mem[_6719 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_6719 + 100] = eth.balance(this.address) / 2
                        mem[_6719 + 132] = 64
                        mem[_6719 + 164] = mem[_6719]
                        s = 0
                        t = _6719 + 32
                        u = _6719 + 196
                        while s < mem[_6719]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_6707))
                        staticcall address(_6707).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _6719 + (32 * mem[_6719]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8224 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8246 = mem[_8224]
                        require mem[_8224] <= test266151307()
                        require _8224 + mem[_8224] + 31 < _8224 + return_data.size
                        _8266 = mem[_8224 + mem[_8224]]
                        if mem[_8224 + mem[_8224]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_8224 + mem[_8224]]) + 1 < 0 or _8224 + ceil32(return_data.size) + ceil32(32 * mem[_8224 + mem[_8224]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _8224 + ceil32(return_data.size) + ceil32(32 * mem[_8224 + mem[_8224]]) + 1
                        mem[_8224 + ceil32(return_data.size)] = _8266
                        require _8246 + (32 * _8266) + 32 <= return_data.size
                        t = _8224 + ceil32(return_data.size) + 32
                        s = _8224 + _8246 + 32
                        while s < _8224 + _8246 + (32 * _8266) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _8266:
                            revert with 0, 50
                        _9385 = mem[_8224 + ceil32(return_data.size) + 64]
                        if mem[_8224 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8224 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_8224 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _8266:
                            revert with 0, 50
                        _9442 = mem[_8224 + ceil32(return_data.size) + 64]
                        if mem[_8224 + ceil32(return_data.size) + 64] < 100 * mem[_8224 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9454 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9442 - (100 * _9385 / 10000)
                        mem[mem[64] + 36] = 128
                        _9462 = mem[_6719]
                        mem[mem[64] + 132] = mem[_6719]
                        s = 0
                        t = _6719 + 32
                        u = mem[64] + 164
                        while s < _9462:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_9454 + 68] = this.address
                        mem[_9454 + 100] = block.timestamp + 60
                        require ext_code.size(address(_6707))
                        call address(_6707).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9454 + (32 * _9462) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10430 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10439 = mem[_10430]
                        require mem[_10430] <= test266151307()
                        require _10430 + mem[_10430] + 31 < _10430 + return_data.size
                        _10448 = mem[_10430 + mem[_10430]]
                        if mem[_10430 + mem[_10430]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10430 + mem[_10430]]) + 1 < 0 or _10430 + ceil32(return_data.size) + ceil32(32 * mem[_10430 + mem[_10430]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10430 + ceil32(return_data.size) + ceil32(32 * mem[_10430 + mem[_10430]]) + 1
                        mem[_10430 + ceil32(return_data.size)] = _10448
                        require _10439 + (32 * _10448) + 32 <= return_data.size
                        t = _10430 + ceil32(return_data.size) + 32
                        s = _10430 + _10439 + 32
                        while s < _10430 + _10439 + (32 * _10448) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _11375 = mem[_731 + 160]
                        _11376 = mem[_731 + 64]
                        _11377 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11377))
                        staticcall address(_11377).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11419 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11431 = mem[_11419]
                        if _11376 >= 999999:
                            mem[mem[64] + 4] = mem[_11419]
                            require ext_code.size(address(_11375))
                            call address(_11375).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _11431
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11431
                            emit Earn(_11431);
                            _11513 = mem[_731 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11513))
                            staticcall address(_11513).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11576 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_731 + 96] = mem[_11576]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11690 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11707 = mem[_11690]
                            _11724 = mem[_731]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11747 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11707
                            mem[mem[64] + 36] = 128
                            _11766 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11766:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11747 + 68] = this.address
                            mem[_11747 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11724))
                            call address(_11724).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11747 + (32 * _11766) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12301 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12322 = mem[_12301]
                            require mem[_12301] <= test266151307()
                            require _12301 + mem[_12301] + 31 < _12301 + return_data.size
                            _12343 = mem[_12301 + mem[_12301]]
                            if mem[_12301 + mem[_12301]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_12301 + mem[_12301]]) + 1 < 0 or _12301 + ceil32(return_data.size) + ceil32(32 * mem[_12301 + mem[_12301]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _12301 + ceil32(return_data.size) + ceil32(32 * mem[_12301 + mem[_12301]]) + 1
                            mem[_12301 + ceil32(return_data.size)] = _12343
                            require _12322 + (32 * _12343) + 32 <= return_data.size
                            t = _12301 + ceil32(return_data.size) + 32
                            s = _12301 + _12322 + 32
                            while s < _12301 + _12322 + (32 * _12343) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12842 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12842]
                        else:
                            mem[mem[64] + 4] = _11376
                            mem[mem[64] + 36] = _11431
                            require ext_code.size(address(_11375))
                            call address(_11375).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _11376, _11431
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11431
                            emit Earn(_11431);
                            _11514 = mem[_731 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11514))
                            staticcall address(_11514).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11577 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_731 + 96] = mem[_11577]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11708 = mem[_11691]
                            _11725 = mem[_731]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11748 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11708
                            mem[mem[64] + 36] = 128
                            _11767 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11767:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11748 + 68] = this.address
                            mem[_11748 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11725))
                            call address(_11725).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11748 + (32 * _11767) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12302 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12323 = mem[_12302]
                            require mem[_12302] <= test266151307()
                            require _12302 + mem[_12302] + 31 < _12302 + return_data.size
                            _12344 = mem[_12302 + mem[_12302]]
                            if mem[_12302 + mem[_12302]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_12302 + mem[_12302]]) + 1 < 0 or _12302 + ceil32(return_data.size) + ceil32(32 * mem[_12302 + mem[_12302]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _12302 + ceil32(return_data.size) + ceil32(32 * mem[_12302 + mem[_12302]]) + 1
                            mem[_12302 + ceil32(return_data.size)] = _12344
                            require _12323 + (32 * _12344) + 32 <= return_data.size
                            t = _12302 + ceil32(return_data.size) + 32
                            s = _12302 + _12323 + 32
                            while s < _12302 + _12323 + (32 * _12344) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12843 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12843]
                else:
                    if 1 >= mem[_6719]:
                        revert with 0, 50
                    mem[_6719 + 64] = address(_6708)
                    mem[_6719 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_6719 + 100] = eth.balance(this.address) / 2
                    mem[_6719 + 132] = 64
                    mem[_6719 + 164] = mem[_6719]
                    s = 0
                    t = _6719 + 32
                    u = _6719 + 196
                    while s < mem[_6719]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6707))
                    staticcall address(_6707).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _6719 + (32 * mem[_6719]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8225 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8247 = mem[_8225]
                    require mem[_8225] <= test266151307()
                    require _8225 + mem[_8225] + 31 < _8225 + return_data.size
                    _8267 = mem[_8225 + mem[_8225]]
                    if mem[_8225 + mem[_8225]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8225 + mem[_8225]]) + 1 < 0 or _8225 + ceil32(return_data.size) + ceil32(32 * mem[_8225 + mem[_8225]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8225 + ceil32(return_data.size) + ceil32(32 * mem[_8225 + mem[_8225]]) + 1
                    mem[_8225 + ceil32(return_data.size)] = _8267
                    require _8247 + (32 * _8267) + 32 <= return_data.size
                    t = _8225 + ceil32(return_data.size) + 32
                    s = _8225 + _8247 + 32
                    while s < _8225 + _8247 + (32 * _8267) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8267:
                        revert with 0, 50
                    _9386 = mem[_8225 + ceil32(return_data.size) + 64]
                    if mem[_8225 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8225 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8225 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8267:
                        revert with 0, 50
                    _9443 = mem[_8225 + ceil32(return_data.size) + 64]
                    if mem[_8225 + ceil32(return_data.size) + 64] < 100 * mem[_8225 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _9455 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _9443 - (100 * _9386 / 10000)
                    mem[mem[64] + 36] = 128
                    _9463 = mem[_6719]
                    mem[mem[64] + 132] = mem[_6719]
                    s = 0
                    t = _6719 + 32
                    u = mem[64] + 164
                    while s < _9463:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_9455 + 68] = this.address
                    mem[_9455 + 100] = block.timestamp + 60
                    require ext_code.size(address(_6707))
                    call address(_6707).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9455 + (32 * _9463) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10431 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10440 = mem[_10431]
                    require mem[_10431] <= test266151307()
                    require _10431 + mem[_10431] + 31 < _10431 + return_data.size
                    _10449 = mem[_10431 + mem[_10431]]
                    if mem[_10431 + mem[_10431]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10431 + mem[_10431]]) + 1 < 0 or _10431 + ceil32(return_data.size) + ceil32(32 * mem[_10431 + mem[_10431]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10431 + ceil32(return_data.size) + ceil32(32 * mem[_10431 + mem[_10431]]) + 1
                    mem[_10431 + ceil32(return_data.size)] = _10449
                    require _10440 + (32 * _10449) + 32 <= return_data.size
                    t = _10431 + ceil32(return_data.size) + 32
                    s = _10431 + _10440 + 32
                    while s < _10431 + _10440 + (32 * _10449) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_6709):
                        _11397 = mem[_731 + 160]
                        _11398 = mem[_731 + 64]
                        _11399 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11399))
                        staticcall address(_11399).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11437 = mem[_11425]
                        if _11398 >= 999999:
                            mem[mem[64] + 4] = mem[_11425]
                            require ext_code.size(address(_11397))
                            call address(_11397).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _11437
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11437
                            emit Earn(_11437);
                            _11543 = mem[_731 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11543))
                            staticcall address(_11543).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11586 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_731 + 96] = mem[_11586]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11716 = mem[_11699]
                            _11733 = mem[_731]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11757 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11716
                            mem[mem[64] + 36] = 128
                            _11774 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11774:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11757 + 68] = this.address
                            mem[_11757 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11733))
                            call address(_11733).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11757 + (32 * _11774) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12303 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12324 = mem[_12303]
                            require mem[_12303] <= test266151307()
                            require _12303 + mem[_12303] + 31 < _12303 + return_data.size
                            _12345 = mem[_12303 + mem[_12303]]
                            if mem[_12303 + mem[_12303]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_12303 + mem[_12303]]) + 1 < 0 or _12303 + ceil32(return_data.size) + ceil32(32 * mem[_12303 + mem[_12303]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _12303 + ceil32(return_data.size) + ceil32(32 * mem[_12303 + mem[_12303]]) + 1
                            mem[_12303 + ceil32(return_data.size)] = _12345
                            require _12324 + (32 * _12345) + 32 <= return_data.size
                            t = _12303 + ceil32(return_data.size) + 32
                            s = _12303 + _12324 + 32
                            while s < _12303 + _12324 + (32 * _12345) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12844 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12844]
                        else:
                            mem[mem[64] + 4] = _11398
                            mem[mem[64] + 36] = _11437
                            require ext_code.size(address(_11397))
                            call address(_11397).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _11398, _11437
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11437
                            emit Earn(_11437);
                            _11544 = mem[_731 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11544))
                            staticcall address(_11544).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11587 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_731 + 96] = mem[_11587]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11717 = mem[_11700]
                            _11734 = mem[_731]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11758 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11717
                            mem[mem[64] + 36] = 128
                            _11775 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11775:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11758 + 68] = this.address
                            mem[_11758 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11734))
                            call address(_11734).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11758 + (32 * _11775) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12304 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12325 = mem[_12304]
                            require mem[_12304] <= test266151307()
                            require _12304 + mem[_12304] + 31 < _12304 + return_data.size
                            _12346 = mem[_12304 + mem[_12304]]
                            if mem[_12304 + mem[_12304]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_12304 + mem[_12304]]) + 1 < 0 or _12304 + ceil32(return_data.size) + ceil32(32 * mem[_12304 + mem[_12304]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _12304 + ceil32(return_data.size) + ceil32(32 * mem[_12304 + mem[_12304]]) + 1
                            mem[_12304 + ceil32(return_data.size)] = _12346
                            require _12325 + (32 * _12346) + 32 <= return_data.size
                            t = _12304 + ceil32(return_data.size) + 32
                            s = _12304 + _12325 + 32
                            while s < _12304 + _12325 + (32 * _12346) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12845 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12845]
                    else:
                        if 1 >= mem[_6719]:
                            revert with 0, 50
                        mem[_6719 + 64] = address(_6709)
                        _11400 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _11420 = mem[_6719]
                        mem[mem[64] + 68] = mem[_6719]
                        s = 0
                        t = _6719 + 32
                        u = mem[64] + 100
                        while s < _11420:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_6707))
                        staticcall address(_6707).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _11400 + (32 * _11420) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12311 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12332 = mem[_12311]
                        require mem[_12311] <= test266151307()
                        require _12311 + mem[_12311] + 31 < _12311 + return_data.size
                        _12353 = mem[_12311 + mem[_12311]]
                        if mem[_12311 + mem[_12311]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12311 + mem[_12311]]) + 1 < 0 or _12311 + ceil32(return_data.size) + ceil32(32 * mem[_12311 + mem[_12311]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12311 + ceil32(return_data.size) + ceil32(32 * mem[_12311 + mem[_12311]]) + 1
                        mem[_12311 + ceil32(return_data.size)] = _12353
                        require _12332 + (32 * _12353) + 32 <= return_data.size
                        t = _12311 + ceil32(return_data.size) + 32
                        s = _12311 + _12332 + 32
                        while s < _12311 + _12332 + (32 * _12353) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _12353:
                            revert with 0, 50
                        _12800 = mem[_12311 + ceil32(return_data.size) + 64]
                        if mem[_12311 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_12311 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_12311 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _12353:
                            revert with 0, 50
                        _12872 = mem[_12311 + ceil32(return_data.size) + 64]
                        if mem[_12311 + ceil32(return_data.size) + 64] < 100 * mem[_12311 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12876 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12872 - (100 * _12800 / 10000)
                        mem[mem[64] + 36] = 128
                        _12880 = mem[_6719]
                        mem[mem[64] + 132] = mem[_6719]
                        s = 0
                        t = _6719 + 32
                        u = mem[64] + 164
                        while s < _12880:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_12876 + 68] = this.address
                        mem[_12876 + 100] = block.timestamp + 60
                        require ext_code.size(address(_6707))
                        call address(_6707).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12876 + (32 * _12880) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13180 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13184 = mem[_13180]
                        require mem[_13180] <= test266151307()
                        require _13180 + mem[_13180] + 31 < _13180 + return_data.size
                        _13188 = mem[_13180 + mem[_13180]]
                        if mem[_13180 + mem[_13180]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13180 + mem[_13180]]) + 1 < 0 or _13180 + ceil32(return_data.size) + ceil32(32 * mem[_13180 + mem[_13180]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13180 + ceil32(return_data.size) + ceil32(32 * mem[_13180 + mem[_13180]]) + 1
                        mem[_13180 + ceil32(return_data.size)] = _13188
                        require _13184 + (32 * _13188) + 32 <= return_data.size
                        t = _13180 + ceil32(return_data.size) + 32
                        s = _13180 + _13184 + 32
                        while s < _13180 + _13184 + (32 * _13188) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _13468 = mem[_731 + 160]
                        _13469 = mem[_731 + 64]
                        _13470 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13470))
                        staticcall address(_13470).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13484 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13488 = mem[_13484]
                        if _13469 >= 999999:
                            mem[mem[64] + 4] = mem[_13484]
                            require ext_code.size(address(_13468))
                            call address(_13468).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _13488
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13488
                            emit Earn(_13488);
                            _13526 = mem[_731 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13526))
                            staticcall address(_13526).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13550 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_731 + 96] = mem[_13550]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13598 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13606 = mem[_13598]
                            _13614 = mem[_731]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13622 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13606
                            mem[mem[64] + 36] = 128
                            _13630 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13630:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13622 + 68] = this.address
                            mem[_13622 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13614))
                            call address(_13614).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13622 + (32 * _13630) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13742 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13750 = mem[_13742]
                            require mem[_13742] <= test266151307()
                            require _13742 + mem[_13742] + 31 < _13742 + return_data.size
                            _13758 = mem[_13742 + mem[_13742]]
                            if mem[_13742 + mem[_13742]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13742 + mem[_13742]]) + 1 < 0 or _13742 + ceil32(return_data.size) + ceil32(32 * mem[_13742 + mem[_13742]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13742 + ceil32(return_data.size) + ceil32(32 * mem[_13742 + mem[_13742]]) + 1
                            mem[_13742 + ceil32(return_data.size)] = _13758
                            require _13750 + (32 * _13758) + 32 <= return_data.size
                            t = _13742 + ceil32(return_data.size) + 32
                            s = _13742 + _13750 + 32
                            while s < _13742 + _13750 + (32 * _13758) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13838 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_13838]
                        else:
                            mem[mem[64] + 4] = _13469
                            mem[mem[64] + 36] = _13488
                            require ext_code.size(address(_13468))
                            call address(_13468).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _13469, _13488
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _13488
                            emit Earn(_13488);
                            _13527 = mem[_731 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_13527))
                            staticcall address(_13527).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13551 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_731 + 96] = mem[_13551]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13599 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13607 = mem[_13599]
                            _13615 = mem[_731]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _13623 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _13607
                            mem[mem[64] + 36] = 128
                            _13631 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _13631:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13623 + 68] = this.address
                            mem[_13623 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13615))
                            call address(_13615).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13623 + (32 * _13631) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13743 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _13751 = mem[_13743]
                            require mem[_13743] <= test266151307()
                            require _13743 + mem[_13743] + 31 < _13743 + return_data.size
                            _13759 = mem[_13743 + mem[_13743]]
                            if mem[_13743 + mem[_13743]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13743 + mem[_13743]]) + 1 < 0 or _13743 + ceil32(return_data.size) + ceil32(32 * mem[_13743 + mem[_13743]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _13743 + ceil32(return_data.size) + ceil32(32 * mem[_13743 + mem[_13743]]) + 1
                            mem[_13743 + ceil32(return_data.size)] = _13759
                            require _13751 + (32 * _13759) + 32 <= return_data.size
                            t = _13743 + ceil32(return_data.size) + 32
                            s = _13743 + _13751 + 32
                            while s < _13743 + _13751 + (32 * _13759) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_13839]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _731
                s = _3461 - (100 * _3461 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _751
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _751
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _814 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _826 = mem[_814]
            require mem[_814] == mem[_814 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_814 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_826))
            staticcall address(_826).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _870 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _876 = mem[_870]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_826))
            staticcall address(_826).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _891 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _902 = mem[_891]
            if mem[_891] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _876:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _926 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _931 = mem[_926]
            if 10^12 * _902 / _876 and mem[_926] > -1 / 10^12 * _902 / _876:
                revert with 0, 17
            _952 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _902 / _876 * _931 / 10^12
            mem[mem[64] + 36] = 64
            _965 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _965:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _952 + (32 * _965) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1749 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1756 = mem[_1749]
            require mem[_1749] <= test266151307()
            require _1749 + mem[_1749] + 31 < _1749 + return_data.size
            _1771 = mem[_1749 + mem[_1749]]
            if mem[_1749 + mem[_1749]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1749 + mem[_1749]]) + 1 < 0 or _1749 + ceil32(return_data.size) + ceil32(32 * mem[_1749 + mem[_1749]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1749 + ceil32(return_data.size) + ceil32(32 * mem[_1749 + mem[_1749]]) + 1
            mem[_1749 + ceil32(return_data.size)] = _1771
            require _1756 + (32 * _1771) + 32 <= return_data.size
            t = _1749 + ceil32(return_data.size) + 32
            s = _1749 + _1756 + 32
            while s < _1749 + _1756 + (32 * _1771) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1771:
                revert with 0, 50
            _3462 = mem[_1749 + ceil32(return_data.size) + 64]
            if mem[_1749 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1749 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1749 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1749 + ceil32(return_data.size) + 64] < 100 * mem[_1749 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _3537 = mem[_731]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_826))
            staticcall address(_826).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3568 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3581 = mem[_3568]
            if 60 > !block.timestamp:
                revert with 0, 17
            _3602 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3581
            mem[mem[64] + 36] = _3462 - (100 * _3462 / 10000)
            mem[mem[64] + 68] = 160
            _3612 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _3612:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_3602 + 100] = this.address
            mem[_3602 + 132] = block.timestamp + 60
            require ext_code.size(address(_3537))
            call address(_3537).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3602 + (32 * _3612) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5141 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5157 = mem[_5141]
            require mem[_5141] <= test266151307()
            require _5141 + mem[_5141] + 31 < _5141 + return_data.size
            _5177 = mem[_5141 + mem[_5141]]
            if mem[_5141 + mem[_5141]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5141 + mem[_5141]]) + 1 < 0 or _5141 + ceil32(return_data.size) + ceil32(32 * mem[_5141 + mem[_5141]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5141 + ceil32(return_data.size) + ceil32(32 * mem[_5141 + mem[_5141]]) + 1
            mem[_5141 + ceil32(return_data.size)] = _5177
            require _5157 + (32 * _5177) + 32 <= return_data.size
            t = _5141 + ceil32(return_data.size) + 32
            s = _5141 + _5157 + 32
            while s < _5141 + _5157 + (32 * _5177) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _6710 = mem[_731]
            _6711 = mem[_731 + 192]
            _6712 = mem[_731 + 224]
            _6721 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_6721 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_6721]:
                revert with 0, 50
            mem[_6721 + 32] = stor21
            if stor21 == address(_6711):
                if stor21 == address(_6712):
                    _6767 = mem[_731 + 160]
                    _6768 = mem[_731 + 64]
                    _6769 = mem[_731 + 32]
                    mem[_6721 + 100] = this.address
                    require ext_code.size(address(_6769))
                    staticcall address(_6769).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6721 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6721 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    if _6768 >= 999999:
                        mem[_6721 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_6767))
                        call address(_6767).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6721 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6904 = mem[_731 + 32]
                        mem[_6721 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_6904))
                        staticcall address(_6904).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6721 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_731 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6721 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6721 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6721 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7049 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6721 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6721 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6721 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_6721 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6721 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6721 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6721 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7049))
                        call address(_7049).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6721 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6721 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6721 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8238 = mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6721 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _8258 = mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6721 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6721 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6721 + (6 * ceil32(return_data.size)) + 96] = _8258
                        require _8238 + (32 * _8258) + 32 <= return_data.size
                        t = _6721 + (6 * ceil32(return_data.size)) + 128
                        s = _6721 + (4 * ceil32(return_data.size)) + _8238 + 128
                        while s < _6721 + (4 * ceil32(return_data.size)) + _8238 + (32 * _8258) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9415 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_9415]
                    else:
                        mem[_6721 + ceil32(return_data.size) + 100] = _6768
                        mem[_6721 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_6767))
                        call address(_6767).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _6768, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6721 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6905 = mem[_731 + 32]
                        mem[_6721 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_6905))
                        staticcall address(_6905).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6721 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_731 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6721 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6721 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6721 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7050 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6721 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6721 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6721 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_6721 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6721 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6721 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6721 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7050))
                        call address(_7050).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6721 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6721 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6721 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8239 = mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6721 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _8259 = mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6721 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6721 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6721 + (4 * ceil32(return_data.size)) + mem[_6721 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6721 + (6 * ceil32(return_data.size)) + 96] = _8259
                        require _8239 + (32 * _8259) + 32 <= return_data.size
                        t = _6721 + (6 * ceil32(return_data.size)) + 128
                        s = _6721 + (4 * ceil32(return_data.size)) + _8239 + 128
                        while s < _6721 + (4 * ceil32(return_data.size)) + _8239 + (32 * _8259) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9416 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_9416]
                else:
                    if 1 >= mem[_6721]:
                        revert with 0, 50
                    mem[_6721 + 64] = address(_6712)
                    mem[_6721 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_6721 + 100] = eth.balance(this.address) / 2
                    mem[_6721 + 132] = 64
                    mem[_6721 + 164] = mem[_6721]
                    s = 0
                    t = _6721 + 32
                    u = _6721 + 196
                    while s < mem[_6721]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6710))
                    staticcall address(_6710).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _6721 + (32 * mem[_6721]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8226 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8248 = mem[_8226]
                    require mem[_8226] <= test266151307()
                    require _8226 + mem[_8226] + 31 < _8226 + return_data.size
                    _8268 = mem[_8226 + mem[_8226]]
                    if mem[_8226 + mem[_8226]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8226 + mem[_8226]]) + 1 < 0 or _8226 + ceil32(return_data.size) + ceil32(32 * mem[_8226 + mem[_8226]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8226 + ceil32(return_data.size) + ceil32(32 * mem[_8226 + mem[_8226]]) + 1
                    mem[_8226 + ceil32(return_data.size)] = _8268
                    require _8248 + (32 * _8268) + 32 <= return_data.size
                    t = _8226 + ceil32(return_data.size) + 32
                    s = _8226 + _8248 + 32
                    while s < _8226 + _8248 + (32 * _8268) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8268:
                        revert with 0, 50
                    _9387 = mem[_8226 + ceil32(return_data.size) + 64]
                    if mem[_8226 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8226 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8226 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8268:
                        revert with 0, 50
                    _9444 = mem[_8226 + ceil32(return_data.size) + 64]
                    if mem[_8226 + ceil32(return_data.size) + 64] < 100 * mem[_8226 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _9456 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _9444 - (100 * _9387 / 10000)
                    mem[mem[64] + 36] = 128
                    _9464 = mem[_6721]
                    mem[mem[64] + 132] = mem[_6721]
                    s = 0
                    t = _6721 + 32
                    u = mem[64] + 164
                    while s < _9464:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_9456 + 68] = this.address
                    mem[_9456 + 100] = block.timestamp + 60
                    require ext_code.size(address(_6710))
                    call address(_6710).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9456 + (32 * _9464) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10432 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10441 = mem[_10432]
                    require mem[_10432] <= test266151307()
                    require _10432 + mem[_10432] + 31 < _10432 + return_data.size
                    _10450 = mem[_10432 + mem[_10432]]
                    if mem[_10432 + mem[_10432]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10432 + mem[_10432]]) + 1 < 0 or _10432 + ceil32(return_data.size) + ceil32(32 * mem[_10432 + mem[_10432]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10432 + ceil32(return_data.size) + ceil32(32 * mem[_10432 + mem[_10432]]) + 1
                    mem[_10432 + ceil32(return_data.size)] = _10450
                    require _10441 + (32 * _10450) + 32 <= return_data.size
                    t = _10432 + ceil32(return_data.size) + 32
                    s = _10432 + _10441 + 32
                    while s < _10432 + _10441 + (32 * _10450) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _11379 = mem[_731 + 160]
                    _11380 = mem[_731 + 64]
                    _11381 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11381))
                    staticcall address(_11381).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11421 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11433 = mem[_11421]
                    if _11380 >= 999999:
                        mem[mem[64] + 4] = mem[_11421]
                        require ext_code.size(address(_11379))
                        call address(_11379).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11433
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11433
                        emit Earn(_11433);
                        _11519 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11519))
                        staticcall address(_11519).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11579 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_11579]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11692 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11709 = mem[_11692]
                        _11726 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11750 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11709
                        mem[mem[64] + 36] = 128
                        _11768 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11768:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11750 + 68] = this.address
                        mem[_11750 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11726))
                        call address(_11726).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11750 + (32 * _11768) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12305 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12326 = mem[_12305]
                        require mem[_12305] <= test266151307()
                        require _12305 + mem[_12305] + 31 < _12305 + return_data.size
                        _12347 = mem[_12305 + mem[_12305]]
                        if mem[_12305 + mem[_12305]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12305 + mem[_12305]]) + 1 < 0 or _12305 + ceil32(return_data.size) + ceil32(32 * mem[_12305 + mem[_12305]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12305 + ceil32(return_data.size) + ceil32(32 * mem[_12305 + mem[_12305]]) + 1
                        mem[_12305 + ceil32(return_data.size)] = _12347
                        require _12326 + (32 * _12347) + 32 <= return_data.size
                        t = _12305 + ceil32(return_data.size) + 32
                        s = _12305 + _12326 + 32
                        while s < _12305 + _12326 + (32 * _12347) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12846 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12846]
                    else:
                        mem[mem[64] + 4] = _11380
                        mem[mem[64] + 36] = _11433
                        require ext_code.size(address(_11379))
                        call address(_11379).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11380, _11433
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11433
                        emit Earn(_11433);
                        _11520 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11520))
                        staticcall address(_11520).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11580 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_11580]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11693 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11710 = mem[_11693]
                        _11727 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11751 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11710
                        mem[mem[64] + 36] = 128
                        _11769 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11769:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11751 + 68] = this.address
                        mem[_11751 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11727))
                        call address(_11727).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11751 + (32 * _11769) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12306 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12327 = mem[_12306]
                        require mem[_12306] <= test266151307()
                        require _12306 + mem[_12306] + 31 < _12306 + return_data.size
                        _12348 = mem[_12306 + mem[_12306]]
                        if mem[_12306 + mem[_12306]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12306 + mem[_12306]]) + 1 < 0 or _12306 + ceil32(return_data.size) + ceil32(32 * mem[_12306 + mem[_12306]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12306 + ceil32(return_data.size) + ceil32(32 * mem[_12306 + mem[_12306]]) + 1
                        mem[_12306 + ceil32(return_data.size)] = _12348
                        require _12327 + (32 * _12348) + 32 <= return_data.size
                        t = _12306 + ceil32(return_data.size) + 32
                        s = _12306 + _12327 + 32
                        while s < _12306 + _12327 + (32 * _12348) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12847 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12847]
            else:
                if 1 >= mem[_6721]:
                    revert with 0, 50
                mem[_6721 + 64] = address(_6711)
                mem[_6721 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_6721 + 100] = eth.balance(this.address) / 2
                mem[_6721 + 132] = 64
                mem[_6721 + 164] = mem[_6721]
                s = 0
                t = _6721 + 32
                u = _6721 + 196
                while s < mem[_6721]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_6710))
                staticcall address(_6710).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _6721 + (32 * mem[_6721]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8227 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8249 = mem[_8227]
                require mem[_8227] <= test266151307()
                require _8227 + mem[_8227] + 31 < _8227 + return_data.size
                _8269 = mem[_8227 + mem[_8227]]
                if mem[_8227 + mem[_8227]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8227 + mem[_8227]]) + 1 < 0 or _8227 + ceil32(return_data.size) + ceil32(32 * mem[_8227 + mem[_8227]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8227 + ceil32(return_data.size) + ceil32(32 * mem[_8227 + mem[_8227]]) + 1
                mem[_8227 + ceil32(return_data.size)] = _8269
                require _8249 + (32 * _8269) + 32 <= return_data.size
                t = _8227 + ceil32(return_data.size) + 32
                s = _8227 + _8249 + 32
                while s < _8227 + _8249 + (32 * _8269) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8269:
                    revert with 0, 50
                _9388 = mem[_8227 + ceil32(return_data.size) + 64]
                if mem[_8227 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8227 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8227 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8269:
                    revert with 0, 50
                _9445 = mem[_8227 + ceil32(return_data.size) + 64]
                if mem[_8227 + ceil32(return_data.size) + 64] < 100 * mem[_8227 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _9457 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _9445 - (100 * _9388 / 10000)
                mem[mem[64] + 36] = 128
                _9465 = mem[_6721]
                mem[mem[64] + 132] = mem[_6721]
                s = 0
                t = _6721 + 32
                u = mem[64] + 164
                while s < _9465:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_9457 + 68] = this.address
                mem[_9457 + 100] = block.timestamp + 60
                require ext_code.size(address(_6710))
                call address(_6710).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _9457 + (32 * _9465) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10433 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10442 = mem[_10433]
                require mem[_10433] <= test266151307()
                require _10433 + mem[_10433] + 31 < _10433 + return_data.size
                _10451 = mem[_10433 + mem[_10433]]
                if mem[_10433 + mem[_10433]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10433 + mem[_10433]]) + 1 < 0 or _10433 + ceil32(return_data.size) + ceil32(32 * mem[_10433 + mem[_10433]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10433 + ceil32(return_data.size) + ceil32(32 * mem[_10433 + mem[_10433]]) + 1
                mem[_10433 + ceil32(return_data.size)] = _10451
                require _10442 + (32 * _10451) + 32 <= return_data.size
                t = _10433 + ceil32(return_data.size) + 32
                s = _10433 + _10442 + 32
                while s < _10433 + _10442 + (32 * _10451) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_6712):
                    _11403 = mem[_731 + 160]
                    _11404 = mem[_731 + 64]
                    _11405 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11405))
                    staticcall address(_11405).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11426 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11438 = mem[_11426]
                    if _11404 >= 999999:
                        mem[mem[64] + 4] = mem[_11426]
                        require ext_code.size(address(_11403))
                        call address(_11403).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11438
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11438
                        emit Earn(_11438);
                        _11550 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11550))
                        staticcall address(_11550).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11588 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_11588]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11701 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11718 = mem[_11701]
                        _11735 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11759 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11718
                        mem[mem[64] + 36] = 128
                        _11776 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11776:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11759 + 68] = this.address
                        mem[_11759 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11735))
                        call address(_11735).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11759 + (32 * _11776) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12307 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12328 = mem[_12307]
                        require mem[_12307] <= test266151307()
                        require _12307 + mem[_12307] + 31 < _12307 + return_data.size
                        _12349 = mem[_12307 + mem[_12307]]
                        if mem[_12307 + mem[_12307]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12307 + mem[_12307]]) + 1 < 0 or _12307 + ceil32(return_data.size) + ceil32(32 * mem[_12307 + mem[_12307]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12307 + ceil32(return_data.size) + ceil32(32 * mem[_12307 + mem[_12307]]) + 1
                        mem[_12307 + ceil32(return_data.size)] = _12349
                        require _12328 + (32 * _12349) + 32 <= return_data.size
                        t = _12307 + ceil32(return_data.size) + 32
                        s = _12307 + _12328 + 32
                        while s < _12307 + _12328 + (32 * _12349) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12848]
                    else:
                        mem[mem[64] + 4] = _11404
                        mem[mem[64] + 36] = _11438
                        require ext_code.size(address(_11403))
                        call address(_11403).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11404, _11438
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11438
                        emit Earn(_11438);
                        _11551 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11551))
                        staticcall address(_11551).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11589 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_11589]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11702 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11719 = mem[_11702]
                        _11736 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11760 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11719
                        mem[mem[64] + 36] = 128
                        _11777 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11777:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11760 + 68] = this.address
                        mem[_11760 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11736))
                        call address(_11736).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11760 + (32 * _11777) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12308 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12329 = mem[_12308]
                        require mem[_12308] <= test266151307()
                        require _12308 + mem[_12308] + 31 < _12308 + return_data.size
                        _12350 = mem[_12308 + mem[_12308]]
                        if mem[_12308 + mem[_12308]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12308 + mem[_12308]]) + 1 < 0 or _12308 + ceil32(return_data.size) + ceil32(32 * mem[_12308 + mem[_12308]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12308 + ceil32(return_data.size) + ceil32(32 * mem[_12308 + mem[_12308]]) + 1
                        mem[_12308 + ceil32(return_data.size)] = _12350
                        require _12329 + (32 * _12350) + 32 <= return_data.size
                        t = _12308 + ceil32(return_data.size) + 32
                        s = _12308 + _12329 + 32
                        while s < _12308 + _12329 + (32 * _12350) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12849 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12849]
                else:
                    if 1 >= mem[_6721]:
                        revert with 0, 50
                    mem[_6721 + 64] = address(_6712)
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _11422 = mem[_6721]
                    mem[mem[64] + 68] = mem[_6721]
                    s = 0
                    t = _6721 + 32
                    u = mem[64] + 100
                    while s < _11422:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6710))
                    staticcall address(_6710).getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _11422) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12312 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12333 = mem[_12312]
                    require mem[_12312] <= test266151307()
                    require _12312 + mem[_12312] + 31 < _12312 + return_data.size
                    _12354 = mem[_12312 + mem[_12312]]
                    if mem[_12312 + mem[_12312]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12312 + mem[_12312]]) + 1 < 0 or _12312 + ceil32(return_data.size) + ceil32(32 * mem[_12312 + mem[_12312]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12312 + ceil32(return_data.size) + ceil32(32 * mem[_12312 + mem[_12312]]) + 1
                    mem[_12312 + ceil32(return_data.size)] = _12354
                    require _12333 + (32 * _12354) + 32 <= return_data.size
                    t = _12312 + ceil32(return_data.size) + 32
                    s = _12312 + _12333 + 32
                    while s < _12312 + _12333 + (32 * _12354) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _12354:
                        revert with 0, 50
                    _12801 = mem[_12312 + ceil32(return_data.size) + 64]
                    if mem[_12312 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_12312 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_12312 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _12354:
                        revert with 0, 50
                    _12873 = mem[_12312 + ceil32(return_data.size) + 64]
                    if mem[_12312 + ceil32(return_data.size) + 64] < 100 * mem[_12312 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _12877 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12873 - (100 * _12801 / 10000)
                    mem[mem[64] + 36] = 128
                    _12881 = mem[_6721]
                    mem[mem[64] + 132] = mem[_6721]
                    s = 0
                    t = _6721 + 32
                    u = mem[64] + 164
                    while s < _12881:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_12877 + 68] = this.address
                    mem[_12877 + 100] = block.timestamp + 60
                    require ext_code.size(address(_6710))
                    call address(_6710).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _12877 + (32 * _12881) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13181 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13185 = mem[_13181]
                    require mem[_13181] <= test266151307()
                    require _13181 + mem[_13181] + 31 < _13181 + return_data.size
                    _13189 = mem[_13181 + mem[_13181]]
                    if mem[_13181 + mem[_13181]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13181 + mem[_13181]]) + 1 < 0 or _13181 + ceil32(return_data.size) + ceil32(32 * mem[_13181 + mem[_13181]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13181 + ceil32(return_data.size) + ceil32(32 * mem[_13181 + mem[_13181]]) + 1
                    mem[_13181 + ceil32(return_data.size)] = _13189
                    require _13185 + (32 * _13189) + 32 <= return_data.size
                    t = _13181 + ceil32(return_data.size) + 32
                    s = _13181 + _13185 + 32
                    while s < _13181 + _13185 + (32 * _13189) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _13471 = mem[_731 + 160]
                    _13472 = mem[_731 + 64]
                    _13473 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13473))
                    staticcall address(_13473).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13485 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13489 = mem[_13485]
                    if _13472 >= 999999:
                        mem[mem[64] + 4] = mem[_13485]
                        require ext_code.size(address(_13471))
                        call address(_13471).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13489
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13489
                        emit Earn(_13489);
                        _13528 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13528))
                        staticcall address(_13528).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13552 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_13552]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13600 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13608 = mem[_13600]
                        _13616 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13624 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13608
                        mem[mem[64] + 36] = 128
                        _13632 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13632:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13624 + 68] = this.address
                        mem[_13624 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13616))
                        call address(_13616).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13624 + (32 * _13632) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13744 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13752 = mem[_13744]
                        require mem[_13744] <= test266151307()
                        require _13744 + mem[_13744] + 31 < _13744 + return_data.size
                        _13760 = mem[_13744 + mem[_13744]]
                        if mem[_13744 + mem[_13744]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13744 + mem[_13744]]) + 1 < 0 or _13744 + ceil32(return_data.size) + ceil32(32 * mem[_13744 + mem[_13744]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13744 + ceil32(return_data.size) + ceil32(32 * mem[_13744 + mem[_13744]]) + 1
                        mem[_13744 + ceil32(return_data.size)] = _13760
                        require _13752 + (32 * _13760) + 32 <= return_data.size
                        t = _13744 + ceil32(return_data.size) + 32
                        s = _13744 + _13752 + 32
                        while s < _13744 + _13752 + (32 * _13760) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13840 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13840]
                    else:
                        mem[mem[64] + 4] = _13472
                        mem[mem[64] + 36] = _13489
                        require ext_code.size(address(_13471))
                        call address(_13471).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _13472, _13489
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13489
                        emit Earn(_13489);
                        _13529 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13529))
                        staticcall address(_13529).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13553 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_13553]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13601 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13609 = mem[_13601]
                        _13617 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13625 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13609
                        mem[mem[64] + 36] = 128
                        _13633 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13633:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13625 + 68] = this.address
                        mem[_13625 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13617))
                        call address(_13617).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13625 + (32 * _13633) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13745 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13753 = mem[_13745]
                        require mem[_13745] <= test266151307()
                        require _13745 + mem[_13745] + 31 < _13745 + return_data.size
                        _13761 = mem[_13745 + mem[_13745]]
                        if mem[_13745 + mem[_13745]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13745 + mem[_13745]]) + 1 < 0 or _13745 + ceil32(return_data.size) + ceil32(32 * mem[_13745 + mem[_13745]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13745 + ceil32(return_data.size) + ceil32(32 * mem[_13745 + mem[_13745]]) + 1
                        mem[_13745 + ceil32(return_data.size)] = _13761
                        require _13753 + (32 * _13761) + 32 <= return_data.size
                        t = _13745 + ceil32(return_data.size) + 32
                        s = _13745 + _13753 + 32
                        while s < _13745 + _13753 + (32 * _13761) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13841]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _731
            s = _3462 - (100 * _3462 / 10000)
            s = stor9[idx].field_0
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _741 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _750 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_750] = mem[_741]
        mem[_750 + 32] = mem[_741 + 32]
        mem[_750 + 64] = mem[_741 + 64]
        require return_data.size - 96 >= 96
        _764 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_764] = mem[_741 + 96]
        mem[_764 + 32] = mem[_741 + 128]
        mem[_764 + 64] = mem[_741 + 160]
        mem[_750 + 96] = _764
        mem[_750 + 128] = mem[_741 + 192]
        require return_data.size - 224 >= 96
        _784 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_784] = mem[_741 + 224]
        mem[_784 + 32] = mem[_741 + 256]
        mem[_784 + 64] = mem[_741 + 288]
        mem[_750 + 160] = _784
        _796 = mem[_750 + 64]
        if not mem[_750 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _731
            s = mem[_750 + 64]
            s = stor9[idx].field_0
            continue 
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _817 = mem[64]
        mem[64] = mem[64] + 256
        mem[_817] = strategyInfo[stor9[idx].field_0].field_0
        mem[_817 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_817 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_817 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_817 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_817 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_817 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_817 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 4] = _796
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                 gas gas_remaining wei
                args _796
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _852 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _858 = mem[_852]
            require mem[_852] == mem[_852 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_852 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_858))
            staticcall address(_858).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _905 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _909 = mem[_905]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_858))
            staticcall address(_858).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _916 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _922 = mem[_916]
            if mem[_916] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _909:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _949 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _962 = mem[_949]
            if 10^12 * _922 / _909 and mem[_949] > -1 / 10^12 * _922 / _909:
                revert with 0, 17
            _998 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _922 / _909 * _962 / 10^12
            mem[mem[64] + 36] = 64
            _1014 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _1014:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _998 + (32 * _1014) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1746 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1753 = mem[_1746]
            require mem[_1746] <= test266151307()
            require _1746 + mem[_1746] + 31 < _1746 + return_data.size
            _1768 = mem[_1746 + mem[_1746]]
            if mem[_1746 + mem[_1746]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1746 + mem[_1746]]) + 1 < 0 or _1746 + ceil32(return_data.size) + ceil32(32 * mem[_1746 + mem[_1746]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1746 + ceil32(return_data.size) + ceil32(32 * mem[_1746 + mem[_1746]]) + 1
            mem[_1746 + ceil32(return_data.size)] = _1768
            require _1753 + (32 * _1768) + 32 <= return_data.size
            t = _1746 + ceil32(return_data.size) + 32
            s = _1746 + _1753 + 32
            while s < _1746 + _1753 + (32 * _1768) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1768:
                revert with 0, 50
            _3459 = mem[_1746 + ceil32(return_data.size) + 64]
            if mem[_1746 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1746 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_1746 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_1746 + ceil32(return_data.size) + 64] < 100 * mem[_1746 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _3534 = mem[_731]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_858))
            staticcall address(_858).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3565 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3578 = mem[_3565]
            if 60 > !block.timestamp:
                revert with 0, 17
            _3599 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3578
            mem[mem[64] + 36] = _3459 - (100 * _3459 / 10000)
            mem[mem[64] + 68] = 160
            _3609 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _3609:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_3599 + 100] = this.address
            mem[_3599 + 132] = block.timestamp + 60
            require ext_code.size(address(_3534))
            call address(_3534).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3599 + (32 * _3609) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5138 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5154 = mem[_5138]
            require mem[_5138] <= test266151307()
            require _5138 + mem[_5138] + 31 < _5138 + return_data.size
            _5174 = mem[_5138 + mem[_5138]]
            if mem[_5138 + mem[_5138]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5138 + mem[_5138]]) + 1 < 0 or _5138 + ceil32(return_data.size) + ceil32(32 * mem[_5138 + mem[_5138]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5138 + ceil32(return_data.size) + ceil32(32 * mem[_5138 + mem[_5138]]) + 1
            mem[_5138 + ceil32(return_data.size)] = _5174
            require _5154 + (32 * _5174) + 32 <= return_data.size
            t = _5138 + ceil32(return_data.size) + 32
            s = _5138 + _5154 + 32
            while s < _5138 + _5154 + (32 * _5174) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _6701 = mem[_731]
            _6702 = mem[_731 + 192]
            _6703 = mem[_731 + 224]
            _6715 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_6715 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_6715]:
                revert with 0, 50
            mem[_6715 + 32] = stor21
            if stor21 == address(_6702):
                if stor21 == address(_6703):
                    _6755 = mem[_731 + 160]
                    _6756 = mem[_731 + 64]
                    _6757 = mem[_731 + 32]
                    mem[_6715 + 100] = this.address
                    require ext_code.size(address(_6757))
                    staticcall address(_6757).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6715 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6715 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    if _6756 >= 999999:
                        mem[_6715 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_6755))
                        call address(_6755).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6715 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6895 = mem[_731 + 32]
                        mem[_6715 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_6895))
                        staticcall address(_6895).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6715 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_731 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6715 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6715 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6715 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7043 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6715 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6715 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6715 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_6715 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6715 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6715 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6715 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7043))
                        call address(_7043).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6715 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6715 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6715 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8232 = mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6715 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _8252 = mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6715 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6715 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6715 + (6 * ceil32(return_data.size)) + 96] = _8252
                        require _8232 + (32 * _8252) + 32 <= return_data.size
                        t = _6715 + (6 * ceil32(return_data.size)) + 128
                        s = _6715 + (4 * ceil32(return_data.size)) + _8232 + 128
                        while s < _6715 + (4 * ceil32(return_data.size)) + _8232 + (32 * _8252) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_9409]
                    else:
                        mem[_6715 + ceil32(return_data.size) + 100] = _6756
                        mem[_6715 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_6755))
                        call address(_6755).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _6756, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6715 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6896 = mem[_731 + 32]
                        mem[_6715 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_6896))
                        staticcall address(_6896).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6715 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_731 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6715 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6715 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6715 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7044 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6715 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6715 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6715 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_6715 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6715 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6715 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6715 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_7044))
                        call address(_7044).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6715 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6715 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6715 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8233 = mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6715 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _8253 = mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6715 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6715 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6715 + (4 * ceil32(return_data.size)) + mem[_6715 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6715 + (6 * ceil32(return_data.size)) + 96] = _8253
                        require _8233 + (32 * _8253) + 32 <= return_data.size
                        t = _6715 + (6 * ceil32(return_data.size)) + 128
                        s = _6715 + (4 * ceil32(return_data.size)) + _8233 + 128
                        while s < _6715 + (4 * ceil32(return_data.size)) + _8233 + (32 * _8253) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9410 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_9410]
                else:
                    if 1 >= mem[_6715]:
                        revert with 0, 50
                    mem[_6715 + 64] = address(_6703)
                    mem[_6715 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_6715 + 100] = eth.balance(this.address) / 2
                    mem[_6715 + 132] = 64
                    mem[_6715 + 164] = mem[_6715]
                    s = 0
                    t = _6715 + 32
                    u = _6715 + 196
                    while s < mem[_6715]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6701))
                    staticcall address(_6701).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _6715 + (32 * mem[_6715]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8220 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8242 = mem[_8220]
                    require mem[_8220] <= test266151307()
                    require _8220 + mem[_8220] + 31 < _8220 + return_data.size
                    _8262 = mem[_8220 + mem[_8220]]
                    if mem[_8220 + mem[_8220]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_8220 + mem[_8220]]) + 1 < 0 or _8220 + ceil32(return_data.size) + ceil32(32 * mem[_8220 + mem[_8220]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _8220 + ceil32(return_data.size) + ceil32(32 * mem[_8220 + mem[_8220]]) + 1
                    mem[_8220 + ceil32(return_data.size)] = _8262
                    require _8242 + (32 * _8262) + 32 <= return_data.size
                    t = _8220 + ceil32(return_data.size) + 32
                    s = _8220 + _8242 + 32
                    while s < _8220 + _8242 + (32 * _8262) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _8262:
                        revert with 0, 50
                    _9381 = mem[_8220 + ceil32(return_data.size) + 64]
                    if mem[_8220 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8220 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_8220 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _8262:
                        revert with 0, 50
                    _9438 = mem[_8220 + ceil32(return_data.size) + 64]
                    if mem[_8220 + ceil32(return_data.size) + 64] < 100 * mem[_8220 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _9438 - (100 * _9381 / 10000)
                    mem[mem[64] + 36] = 128
                    _9458 = mem[_6715]
                    mem[mem[64] + 132] = mem[_6715]
                    s = 0
                    t = _6715 + 32
                    u = mem[64] + 164
                    while s < _9458:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_6701))
                    call address(_6701).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _9438 - (100 * _9381 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _9458) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10426 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10435 = mem[_10426]
                    require mem[_10426] <= test266151307()
                    require _10426 + mem[_10426] + 31 < _10426 + return_data.size
                    _10444 = mem[_10426 + mem[_10426]]
                    if mem[_10426 + mem[_10426]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10426 + mem[_10426]]) + 1 < 0 or _10426 + ceil32(return_data.size) + ceil32(32 * mem[_10426 + mem[_10426]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10426 + ceil32(return_data.size) + ceil32(32 * mem[_10426 + mem[_10426]]) + 1
                    mem[_10426 + ceil32(return_data.size)] = _10444
                    require _10435 + (32 * _10444) + 32 <= return_data.size
                    t = _10426 + ceil32(return_data.size) + 32
                    s = _10426 + _10435 + 32
                    while s < _10426 + _10435 + (32 * _10444) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _11367 = mem[_731 + 160]
                    _11368 = mem[_731 + 64]
                    _11369 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11369))
                    staticcall address(_11369).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11415 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11427 = mem[_11415]
                    if _11368 >= 999999:
                        mem[mem[64] + 4] = mem[_11415]
                        require ext_code.size(address(_11367))
                        call address(_11367).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11427
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11427
                        emit Earn(_11427);
                        _11501 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11501))
                        staticcall address(_11501).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11570 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_11570]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11686 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11703 = mem[_11686]
                        _11720 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11741 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11703
                        mem[mem[64] + 36] = 128
                        _11762 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11762:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11741 + 68] = this.address
                        mem[_11741 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11720))
                        call address(_11720).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11741 + (32 * _11762) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12293 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12314 = mem[_12293]
                        require mem[_12293] <= test266151307()
                        require _12293 + mem[_12293] + 31 < _12293 + return_data.size
                        _12335 = mem[_12293 + mem[_12293]]
                        if mem[_12293 + mem[_12293]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12293 + mem[_12293]]) + 1 < 0 or _12293 + ceil32(return_data.size) + ceil32(32 * mem[_12293 + mem[_12293]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12293 + ceil32(return_data.size) + ceil32(32 * mem[_12293 + mem[_12293]]) + 1
                        mem[_12293 + ceil32(return_data.size)] = _12335
                        require _12314 + (32 * _12335) + 32 <= return_data.size
                        t = _12293 + ceil32(return_data.size) + 32
                        s = _12293 + _12314 + 32
                        while s < _12293 + _12314 + (32 * _12335) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12834 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12834]
                    else:
                        mem[mem[64] + 4] = _11368
                        mem[mem[64] + 36] = _11427
                        require ext_code.size(address(_11367))
                        call address(_11367).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11368, _11427
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11427
                        emit Earn(_11427);
                        _11502 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11502))
                        staticcall address(_11502).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11571 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_11571]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11687 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11704 = mem[_11687]
                        _11721 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11742 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11704
                        mem[mem[64] + 36] = 128
                        _11763 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11742 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11721))
                        call address(_11721).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11742 + (32 * _11763) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12294 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12315 = mem[_12294]
                        require mem[_12294] <= test266151307()
                        require _12294 + mem[_12294] + 31 < _12294 + return_data.size
                        _12336 = mem[_12294 + mem[_12294]]
                        if mem[_12294 + mem[_12294]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12294 + mem[_12294]]) + 1 < 0 or _12294 + ceil32(return_data.size) + ceil32(32 * mem[_12294 + mem[_12294]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12294 + ceil32(return_data.size) + ceil32(32 * mem[_12294 + mem[_12294]]) + 1
                        mem[_12294 + ceil32(return_data.size)] = _12336
                        require _12315 + (32 * _12336) + 32 <= return_data.size
                        t = _12294 + ceil32(return_data.size) + 32
                        s = _12294 + _12315 + 32
                        while s < _12294 + _12315 + (32 * _12336) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12835 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12835]
            else:
                if 1 >= mem[_6715]:
                    revert with 0, 50
                mem[_6715 + 64] = address(_6702)
                mem[_6715 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_6715 + 100] = eth.balance(this.address) / 2
                mem[_6715 + 132] = 64
                mem[_6715 + 164] = mem[_6715]
                s = 0
                t = _6715 + 32
                u = _6715 + 196
                while s < mem[_6715]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_6701))
                staticcall address(_6701).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _6715 + (32 * mem[_6715]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8221 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8243 = mem[_8221]
                require mem[_8221] <= test266151307()
                require _8221 + mem[_8221] + 31 < _8221 + return_data.size
                _8263 = mem[_8221 + mem[_8221]]
                if mem[_8221 + mem[_8221]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8221 + mem[_8221]]) + 1 < 0 or _8221 + ceil32(return_data.size) + ceil32(32 * mem[_8221 + mem[_8221]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8221 + ceil32(return_data.size) + ceil32(32 * mem[_8221 + mem[_8221]]) + 1
                mem[_8221 + ceil32(return_data.size)] = _8263
                require _8243 + (32 * _8263) + 32 <= return_data.size
                t = _8221 + ceil32(return_data.size) + 32
                s = _8221 + _8243 + 32
                while s < _8221 + _8243 + (32 * _8263) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8263:
                    revert with 0, 50
                _9382 = mem[_8221 + ceil32(return_data.size) + 64]
                if mem[_8221 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8221 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8221 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8263:
                    revert with 0, 50
                _9439 = mem[_8221 + ceil32(return_data.size) + 64]
                if mem[_8221 + ceil32(return_data.size) + 64] < 100 * mem[_8221 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _9451 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _9439 - (100 * _9382 / 10000)
                mem[mem[64] + 36] = 128
                _9459 = mem[_6715]
                mem[mem[64] + 132] = mem[_6715]
                s = 0
                t = _6715 + 32
                u = mem[64] + 164
                while s < _9459:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_9451 + 68] = this.address
                mem[_9451 + 100] = block.timestamp + 60
                require ext_code.size(address(_6701))
                call address(_6701).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _9451 + (32 * _9459) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10427 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10436 = mem[_10427]
                require mem[_10427] <= test266151307()
                require _10427 + mem[_10427] + 31 < _10427 + return_data.size
                _10445 = mem[_10427 + mem[_10427]]
                if mem[_10427 + mem[_10427]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10427 + mem[_10427]]) + 1 < 0 or _10427 + ceil32(return_data.size) + ceil32(32 * mem[_10427 + mem[_10427]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10427 + ceil32(return_data.size) + ceil32(32 * mem[_10427 + mem[_10427]]) + 1
                mem[_10427 + ceil32(return_data.size)] = _10445
                require _10436 + (32 * _10445) + 32 <= return_data.size
                t = _10427 + ceil32(return_data.size) + 32
                s = _10427 + _10436 + 32
                while s < _10427 + _10436 + (32 * _10445) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_6703):
                    _11385 = mem[_731 + 160]
                    _11386 = mem[_731 + 64]
                    _11387 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11387))
                    staticcall address(_11387).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11423 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11435 = mem[_11423]
                    if _11386 >= 999999:
                        mem[mem[64] + 4] = mem[_11423]
                        require ext_code.size(address(_11385))
                        call address(_11385).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11435
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11435
                        emit Earn(_11435);
                        _11529 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11529))
                        staticcall address(_11529).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11582 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_11582]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11695 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11712 = mem[_11695]
                        _11729 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11753 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11712
                        mem[mem[64] + 36] = 128
                        _11770 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11770:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11753 + 68] = this.address
                        mem[_11753 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11729))
                        call address(_11729).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11753 + (32 * _11770) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12295 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12316 = mem[_12295]
                        require mem[_12295] <= test266151307()
                        require _12295 + mem[_12295] + 31 < _12295 + return_data.size
                        _12337 = mem[_12295 + mem[_12295]]
                        if mem[_12295 + mem[_12295]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12295 + mem[_12295]]) + 1 < 0 or _12295 + ceil32(return_data.size) + ceil32(32 * mem[_12295 + mem[_12295]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12295 + ceil32(return_data.size) + ceil32(32 * mem[_12295 + mem[_12295]]) + 1
                        mem[_12295 + ceil32(return_data.size)] = _12337
                        require _12316 + (32 * _12337) + 32 <= return_data.size
                        t = _12295 + ceil32(return_data.size) + 32
                        s = _12295 + _12316 + 32
                        while s < _12295 + _12316 + (32 * _12337) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12836 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12836]
                    else:
                        mem[mem[64] + 4] = _11386
                        mem[mem[64] + 36] = _11435
                        require ext_code.size(address(_11385))
                        call address(_11385).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11386, _11435
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11435
                        emit Earn(_11435);
                        _11530 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11530))
                        staticcall address(_11530).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11583 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_11583]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11696 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11713 = mem[_11696]
                        _11730 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11754 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11713
                        mem[mem[64] + 36] = 128
                        _11771 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11771:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11754 + 68] = this.address
                        mem[_11754 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11730))
                        call address(_11730).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11754 + (32 * _11771) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12296 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12317 = mem[_12296]
                        require mem[_12296] <= test266151307()
                        require _12296 + mem[_12296] + 31 < _12296 + return_data.size
                        _12338 = mem[_12296 + mem[_12296]]
                        if mem[_12296 + mem[_12296]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12296 + mem[_12296]]) + 1 < 0 or _12296 + ceil32(return_data.size) + ceil32(32 * mem[_12296 + mem[_12296]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12296 + ceil32(return_data.size) + ceil32(32 * mem[_12296 + mem[_12296]]) + 1
                        mem[_12296 + ceil32(return_data.size)] = _12338
                        require _12317 + (32 * _12338) + 32 <= return_data.size
                        t = _12296 + ceil32(return_data.size) + 32
                        s = _12296 + _12317 + 32
                        while s < _12296 + _12317 + (32 * _12338) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12837 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12837]
                else:
                    if 1 >= mem[_6715]:
                        revert with 0, 50
                    mem[_6715 + 64] = address(_6703)
                    _11388 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _11416 = mem[_6715]
                    mem[mem[64] + 68] = mem[_6715]
                    s = 0
                    t = _6715 + 32
                    u = mem[64] + 100
                    while s < _11416:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_6701))
                    staticcall address(_6701).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _11388 + (32 * _11416) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12309 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12330 = mem[_12309]
                    require mem[_12309] <= test266151307()
                    require _12309 + mem[_12309] + 31 < _12309 + return_data.size
                    _12351 = mem[_12309 + mem[_12309]]
                    if mem[_12309 + mem[_12309]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12309 + mem[_12309]]) + 1 < 0 or _12309 + ceil32(return_data.size) + ceil32(32 * mem[_12309 + mem[_12309]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12309 + ceil32(return_data.size) + ceil32(32 * mem[_12309 + mem[_12309]]) + 1
                    mem[_12309 + ceil32(return_data.size)] = _12351
                    require _12330 + (32 * _12351) + 32 <= return_data.size
                    t = _12309 + ceil32(return_data.size) + 32
                    s = _12309 + _12330 + 32
                    while s < _12309 + _12330 + (32 * _12351) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _12351:
                        revert with 0, 50
                    _12798 = mem[_12309 + ceil32(return_data.size) + 64]
                    if mem[_12309 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_12309 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_12309 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _12351:
                        revert with 0, 50
                    _12870 = mem[_12309 + ceil32(return_data.size) + 64]
                    if mem[_12309 + ceil32(return_data.size) + 64] < 100 * mem[_12309 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _12874 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12870 - (100 * _12798 / 10000)
                    mem[mem[64] + 36] = 128
                    _12878 = mem[_6715]
                    mem[mem[64] + 132] = mem[_6715]
                    s = 0
                    t = _6715 + 32
                    u = mem[64] + 164
                    while s < _12878:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_12874 + 68] = this.address
                    mem[_12874 + 100] = block.timestamp + 60
                    require ext_code.size(address(_6701))
                    call address(_6701).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _12874 + (32 * _12878) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13178 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13182 = mem[_13178]
                    require mem[_13178] <= test266151307()
                    require _13178 + mem[_13178] + 31 < _13178 + return_data.size
                    _13186 = mem[_13178 + mem[_13178]]
                    if mem[_13178 + mem[_13178]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13178 + mem[_13178]]) + 1 < 0 or _13178 + ceil32(return_data.size) + ceil32(32 * mem[_13178 + mem[_13178]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13178 + ceil32(return_data.size) + ceil32(32 * mem[_13178 + mem[_13178]]) + 1
                    mem[_13178 + ceil32(return_data.size)] = _13186
                    require _13182 + (32 * _13186) + 32 <= return_data.size
                    t = _13178 + ceil32(return_data.size) + 32
                    s = _13178 + _13182 + 32
                    while s < _13178 + _13182 + (32 * _13186) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _13462 = mem[_731 + 160]
                    _13463 = mem[_731 + 64]
                    _13464 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13464))
                    staticcall address(_13464).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13482 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13486 = mem[_13482]
                    if _13463 >= 999999:
                        mem[mem[64] + 4] = mem[_13482]
                        require ext_code.size(address(_13462))
                        call address(_13462).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _13486
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13486
                        emit Earn(_13486);
                        _13522 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13522))
                        staticcall address(_13522).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13546 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_13546]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13594 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13602 = mem[_13594]
                        _13610 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13618 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13602
                        mem[mem[64] + 36] = 128
                        _13626 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _13626:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13618 + 68] = this.address
                        mem[_13618 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13610))
                        call address(_13610).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13618 + (32 * _13626) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13738 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13746 = mem[_13738]
                        require mem[_13738] <= test266151307()
                        require _13738 + mem[_13738] + 31 < _13738 + return_data.size
                        _13754 = mem[_13738 + mem[_13738]]
                        if mem[_13738 + mem[_13738]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13738 + mem[_13738]]) + 1 < 0 or _13738 + ceil32(return_data.size) + ceil32(32 * mem[_13738 + mem[_13738]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13738 + ceil32(return_data.size) + ceil32(32 * mem[_13738 + mem[_13738]]) + 1
                        mem[_13738 + ceil32(return_data.size)] = _13754
                        require _13746 + (32 * _13754) + 32 <= return_data.size
                        t = _13738 + ceil32(return_data.size) + 32
                        s = _13738 + _13746 + 32
                        while s < _13738 + _13746 + (32 * _13754) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13834 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13834]
                    else:
                        mem[mem[64] + 4] = _13463
                        mem[mem[64] + 36] = _13486
                        require ext_code.size(address(_13462))
                        call address(_13462).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _13463, _13486
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _13486
                        emit Earn(_13486);
                        _13523 = mem[_731 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_13523))
                        staticcall address(_13523).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13547 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_731 + 96] = mem[_13547]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13595 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13603 = mem[_13595]
                        _13611 = mem[_731]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _13619 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _13603
                        mem[mem[64] + 36] = 128
                        _13627 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_13619 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13611))
                        call address(_13611).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13619 + (32 * _13627) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13739 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13747 = mem[_13739]
                        require mem[_13739] <= test266151307()
                        require _13739 + mem[_13739] + 31 < _13739 + return_data.size
                        _13755 = mem[_13739 + mem[_13739]]
                        if mem[_13739 + mem[_13739]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13739 + mem[_13739]]) + 1 < 0 or _13739 + ceil32(return_data.size) + ceil32(32 * mem[_13739 + mem[_13739]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13739 + ceil32(return_data.size) + ceil32(32 * mem[_13739 + mem[_13739]]) + 1
                        mem[_13739 + ceil32(return_data.size)] = _13755
                        require _13747 + (32 * _13755) + 32 <= return_data.size
                        t = _13739 + ceil32(return_data.size) + 32
                        s = _13739 + _13747 + 32
                        while s < _13739 + _13747 + (32 * _13755) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13835 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_13835]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _731
            s = _3459 - (100 * _3459 / 10000)
            s = stor9[idx].field_0
            continue 
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
        mem[mem[64] + 36] = _796
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
             gas gas_remaining wei
            args strategyInfo[stor9[idx].field_0].field_512, _796
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _853 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _859 = mem[_853]
        require mem[_853] == mem[_853 + 12 len 20]
        if 0 >= mem[96]:
            revert with 0, 50
        mem[128] = mem[_853 + 12 len 20]
        if 1 >= mem[96]:
            revert with 0, 50
        mem[160] = stor21
        require ext_code.size(address(_859))
        staticcall address(_859).0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _906 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _910 = mem[_906]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_859))
        staticcall address(_859).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _917 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _923 = mem[_917]
        if mem[_917] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _910:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _950 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _963 = mem[_950]
        if 10^12 * _923 / _910 and mem[_950] > -1 / 10^12 * _923 / _910:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _923 / _910 * _963 / 10^12
        mem[mem[64] + 36] = 64
        _1015 = mem[96]
        mem[mem[64] + 68] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 100
        while s < mem[96]:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len (32 * _1015) + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1747 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1754 = mem[_1747]
        require mem[_1747] <= test266151307()
        require _1747 + mem[_1747] + 31 < _1747 + return_data.size
        _1769 = mem[_1747 + mem[_1747]]
        if mem[_1747 + mem[_1747]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_1747 + mem[_1747]]) + 1 < 0 or _1747 + ceil32(return_data.size) + ceil32(32 * mem[_1747 + mem[_1747]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _1747 + ceil32(return_data.size) + ceil32(32 * mem[_1747 + mem[_1747]]) + 1
        mem[_1747 + ceil32(return_data.size)] = _1769
        require _1754 + (32 * _1769) + 32 <= return_data.size
        t = _1747 + ceil32(return_data.size) + 32
        s = _1747 + _1754 + 32
        while s < _1747 + _1754 + (32 * _1769) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        if 1 >= _1769:
            revert with 0, 50
        _3460 = mem[_1747 + ceil32(return_data.size) + 64]
        if mem[_1747 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_1747 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_1747 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if mem[_1747 + ceil32(return_data.size) + 64] < 100 * mem[_1747 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        _3535 = mem[_731]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_859))
        staticcall address(_859).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3566 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3579 = mem[_3566]
        if 60 > !block.timestamp:
            revert with 0, 17
        _3600 = mem[64]
        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _3579
        mem[mem[64] + 36] = _3460 - (100 * _3460 / 10000)
        mem[mem[64] + 68] = 160
        _3610 = mem[96]
        mem[mem[64] + 164] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 196
        while s < _3610:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_3600 + 100] = this.address
        mem[_3600 + 132] = block.timestamp + 60
        require ext_code.size(address(_3535))
        call address(_3535).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _3600 + (32 * _3610) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5139 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5155 = mem[_5139]
        require mem[_5139] <= test266151307()
        require _5139 + mem[_5139] + 31 < _5139 + return_data.size
        _5175 = mem[_5139 + mem[_5139]]
        if mem[_5139 + mem[_5139]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5139 + mem[_5139]]) + 1 < 0 or _5139 + ceil32(return_data.size) + ceil32(32 * mem[_5139 + mem[_5139]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5139 + ceil32(return_data.size) + ceil32(32 * mem[_5139 + mem[_5139]]) + 1
        mem[_5139 + ceil32(return_data.size)] = _5175
        require _5155 + (32 * _5175) + 32 <= return_data.size
        t = _5139 + ceil32(return_data.size) + 32
        s = _5139 + _5155 + 32
        while s < _5139 + _5155 + (32 * _5175) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        _6704 = mem[_731]
        _6705 = mem[_731 + 192]
        _6706 = mem[_731 + 224]
        _6717 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_6717 + 32 len 64] = call.data[calldata.size len 64]
        if not mem[_6717]:
            revert with 0, 50
        mem[_6717 + 32] = stor21
        if stor21 == address(_6705):
            if stor21 == address(_6706):
                _6759 = mem[_731 + 160]
                _6760 = mem[_731 + 64]
                _6761 = mem[_731 + 32]
                mem[_6717 + 100] = this.address
                require ext_code.size(address(_6761))
                staticcall address(_6761).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_6717 + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _6717 + ceil32(return_data.size) + 96
                require return_data.size >= 32
                if _6760 >= 999999:
                    mem[_6717 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(_6759))
                    call address(_6759).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6717 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _6898 = mem[_731 + 32]
                    mem[_6717 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_6898))
                    staticcall address(_6898).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6717 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_731 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_6717 + (2 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6717 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6717 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7045 = mem[_731]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6717 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6717 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_6717 + (4 * ceil32(return_data.size)) + 132] = 128
                    mem[_6717 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _6717 + (4 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6717 + (4 * ceil32(return_data.size)) + 164] = this.address
                    mem[_6717 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_7045))
                    call address(_7045).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6717 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6717 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _6717 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _8234 = mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6717 + (4 * ceil32(return_data.size)) + return_data.size + 96
                    _8254 = mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6717 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _6717 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_6717 + (6 * ceil32(return_data.size)) + 96] = _8254
                    require _8234 + (32 * _8254) + 32 <= return_data.size
                    t = _6717 + (6 * ceil32(return_data.size)) + 128
                    s = _6717 + (4 * ceil32(return_data.size)) + _8234 + 128
                    while s < _6717 + (4 * ceil32(return_data.size)) + _8234 + (32 * _8254) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9411 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_9411]
                else:
                    mem[_6717 + ceil32(return_data.size) + 100] = _6760
                    mem[_6717 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                    require ext_code.size(address(_6759))
                    call address(_6759).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _6760, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6717 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _6899 = mem[_731 + 32]
                    mem[_6717 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_6899))
                    staticcall address(_6899).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6717 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_731 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_6717 + (2 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6717 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6717 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7046 = mem[_731]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6717 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6717 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_6717 + (4 * ceil32(return_data.size)) + 132] = 128
                    mem[_6717 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _6717 + (4 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6717 + (4 * ceil32(return_data.size)) + 164] = this.address
                    mem[_6717 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_7046))
                    call address(_7046).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6717 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6717 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _6717 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _8235 = mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6717 + (4 * ceil32(return_data.size)) + return_data.size + 96
                    _8255 = mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6717 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _6717 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_6717 + (4 * ceil32(return_data.size)) + mem[_6717 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_6717 + (6 * ceil32(return_data.size)) + 96] = _8255
                    require _8235 + (32 * _8255) + 32 <= return_data.size
                    t = _6717 + (6 * ceil32(return_data.size)) + 128
                    s = _6717 + (4 * ceil32(return_data.size)) + _8235 + 128
                    while s < _6717 + (4 * ceil32(return_data.size)) + _8235 + (32 * _8255) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9412 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_9412]
            else:
                if 1 >= mem[_6717]:
                    revert with 0, 50
                mem[_6717 + 64] = address(_6706)
                mem[_6717 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_6717 + 100] = eth.balance(this.address) / 2
                mem[_6717 + 132] = 64
                mem[_6717 + 164] = mem[_6717]
                s = 0
                t = _6717 + 32
                u = _6717 + 196
                while s < mem[_6717]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_6704))
                staticcall address(_6704).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _6717 + (32 * mem[_6717]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8222 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8244 = mem[_8222]
                require mem[_8222] <= test266151307()
                require _8222 + mem[_8222] + 31 < _8222 + return_data.size
                _8264 = mem[_8222 + mem[_8222]]
                if mem[_8222 + mem[_8222]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_8222 + mem[_8222]]) + 1 < 0 or _8222 + ceil32(return_data.size) + ceil32(32 * mem[_8222 + mem[_8222]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _8222 + ceil32(return_data.size) + ceil32(32 * mem[_8222 + mem[_8222]]) + 1
                mem[_8222 + ceil32(return_data.size)] = _8264
                require _8244 + (32 * _8264) + 32 <= return_data.size
                t = _8222 + ceil32(return_data.size) + 32
                s = _8222 + _8244 + 32
                while s < _8222 + _8244 + (32 * _8264) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _8264:
                    revert with 0, 50
                _9383 = mem[_8222 + ceil32(return_data.size) + 64]
                if mem[_8222 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8222 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_8222 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _8264:
                    revert with 0, 50
                _9440 = mem[_8222 + ceil32(return_data.size) + 64]
                if mem[_8222 + ceil32(return_data.size) + 64] < 100 * mem[_8222 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _9440 - (100 * _9383 / 10000)
                mem[mem[64] + 36] = 128
                _9460 = mem[_6717]
                mem[mem[64] + 132] = mem[_6717]
                s = 0
                t = _6717 + 32
                u = mem[64] + 164
                while s < _9460:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_6704))
                call address(_6704).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args _9440 - (100 * _9383 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _9460) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10428 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10437 = mem[_10428]
                require mem[_10428] <= test266151307()
                require _10428 + mem[_10428] + 31 < _10428 + return_data.size
                _10446 = mem[_10428 + mem[_10428]]
                if mem[_10428 + mem[_10428]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10428 + mem[_10428]]) + 1 < 0 or _10428 + ceil32(return_data.size) + ceil32(32 * mem[_10428 + mem[_10428]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10428 + ceil32(return_data.size) + ceil32(32 * mem[_10428 + mem[_10428]]) + 1
                mem[_10428 + ceil32(return_data.size)] = _10446
                require _10437 + (32 * _10446) + 32 <= return_data.size
                t = _10428 + ceil32(return_data.size) + 32
                s = _10428 + _10437 + 32
                while s < _10428 + _10437 + (32 * _10446) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _11371 = mem[_731 + 160]
                _11372 = mem[_731 + 64]
                _11373 = mem[_731 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11373))
                staticcall address(_11373).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11417 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11429 = mem[_11417]
                if _11372 >= 999999:
                    mem[mem[64] + 4] = mem[_11417]
                    require ext_code.size(address(_11371))
                    call address(_11371).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _11429
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11429
                    emit Earn(_11429);
                    _11507 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11507))
                    staticcall address(_11507).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11573 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_731 + 96] = mem[_11573]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11688 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11705 = mem[_11688]
                    _11722 = mem[_731]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11744 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11705
                    mem[mem[64] + 36] = 128
                    _11764 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11764:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11744 + 68] = this.address
                    mem[_11744 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11722))
                    call address(_11722).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11744 + (32 * _11764) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12297 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12318 = mem[_12297]
                    require mem[_12297] <= test266151307()
                    require _12297 + mem[_12297] + 31 < _12297 + return_data.size
                    _12339 = mem[_12297 + mem[_12297]]
                    if mem[_12297 + mem[_12297]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12297 + mem[_12297]]) + 1 < 0 or _12297 + ceil32(return_data.size) + ceil32(32 * mem[_12297 + mem[_12297]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12297 + ceil32(return_data.size) + ceil32(32 * mem[_12297 + mem[_12297]]) + 1
                    mem[_12297 + ceil32(return_data.size)] = _12339
                    require _12318 + (32 * _12339) + 32 <= return_data.size
                    t = _12297 + ceil32(return_data.size) + 32
                    s = _12297 + _12318 + 32
                    while s < _12297 + _12318 + (32 * _12339) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12838 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12838]
                else:
                    mem[mem[64] + 4] = _11372
                    mem[mem[64] + 36] = _11429
                    require ext_code.size(address(_11371))
                    call address(_11371).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _11372, _11429
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11429
                    emit Earn(_11429);
                    _11508 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11508))
                    staticcall address(_11508).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11574 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_731 + 96] = mem[_11574]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11689 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11706 = mem[_11689]
                    _11723 = mem[_731]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11745 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11706
                    mem[mem[64] + 36] = 128
                    _11765 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11765:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11745 + 68] = this.address
                    mem[_11745 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11723))
                    call address(_11723).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11745 + (32 * _11765) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12298 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12319 = mem[_12298]
                    require mem[_12298] <= test266151307()
                    require _12298 + mem[_12298] + 31 < _12298 + return_data.size
                    _12340 = mem[_12298 + mem[_12298]]
                    if mem[_12298 + mem[_12298]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12298 + mem[_12298]]) + 1 < 0 or _12298 + ceil32(return_data.size) + ceil32(32 * mem[_12298 + mem[_12298]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12298 + ceil32(return_data.size) + ceil32(32 * mem[_12298 + mem[_12298]]) + 1
                    mem[_12298 + ceil32(return_data.size)] = _12340
                    require _12319 + (32 * _12340) + 32 <= return_data.size
                    t = _12298 + ceil32(return_data.size) + 32
                    s = _12298 + _12319 + 32
                    while s < _12298 + _12319 + (32 * _12340) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12839 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12839]
        else:
            if 1 >= mem[_6717]:
                revert with 0, 50
            mem[_6717 + 64] = address(_6705)
            mem[_6717 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_6717 + 100] = eth.balance(this.address) / 2
            mem[_6717 + 132] = 64
            mem[_6717 + 164] = mem[_6717]
            s = 0
            t = _6717 + 32
            u = _6717 + 196
            while s < mem[_6717]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(address(_6704))
            staticcall address(_6704).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _6717 + (32 * mem[_6717]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8223 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8245 = mem[_8223]
            require mem[_8223] <= test266151307()
            require _8223 + mem[_8223] + 31 < _8223 + return_data.size
            _8265 = mem[_8223 + mem[_8223]]
            if mem[_8223 + mem[_8223]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8223 + mem[_8223]]) + 1 < 0 or _8223 + ceil32(return_data.size) + ceil32(32 * mem[_8223 + mem[_8223]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _8223 + ceil32(return_data.size) + ceil32(32 * mem[_8223 + mem[_8223]]) + 1
            mem[_8223 + ceil32(return_data.size)] = _8265
            require _8245 + (32 * _8265) + 32 <= return_data.size
            t = _8223 + ceil32(return_data.size) + 32
            s = _8223 + _8245 + 32
            while s < _8223 + _8245 + (32 * _8265) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _8265:
                revert with 0, 50
            _9384 = mem[_8223 + ceil32(return_data.size) + 64]
            if mem[_8223 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_8223 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_8223 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _8265:
                revert with 0, 50
            _9441 = mem[_8223 + ceil32(return_data.size) + 64]
            if mem[_8223 + ceil32(return_data.size) + 64] < 100 * mem[_8223 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _9453 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _9441 - (100 * _9384 / 10000)
            mem[mem[64] + 36] = 128
            _9461 = mem[_6717]
            mem[mem[64] + 132] = mem[_6717]
            s = 0
            t = _6717 + 32
            u = mem[64] + 164
            while s < _9461:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_9453 + 68] = this.address
            mem[_9453 + 100] = block.timestamp + 60
            require ext_code.size(address(_6704))
            call address(_6704).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _9453 + (32 * _9461) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10429 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10438 = mem[_10429]
            require mem[_10429] <= test266151307()
            require _10429 + mem[_10429] + 31 < _10429 + return_data.size
            _10447 = mem[_10429 + mem[_10429]]
            if mem[_10429 + mem[_10429]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_10429 + mem[_10429]]) + 1 < 0 or _10429 + ceil32(return_data.size) + ceil32(32 * mem[_10429 + mem[_10429]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _10429 + ceil32(return_data.size) + ceil32(32 * mem[_10429 + mem[_10429]]) + 1
            mem[_10429 + ceil32(return_data.size)] = _10447
            require _10438 + (32 * _10447) + 32 <= return_data.size
            t = _10429 + ceil32(return_data.size) + 32
            s = _10429 + _10438 + 32
            while s < _10429 + _10438 + (32 * _10447) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if stor21 == address(_6706):
                _11391 = mem[_731 + 160]
                _11392 = mem[_731 + 64]
                _11393 = mem[_731 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11393))
                staticcall address(_11393).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11424 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11436 = mem[_11424]
                if _11392 >= 999999:
                    mem[mem[64] + 4] = mem[_11424]
                    require ext_code.size(address(_11391))
                    call address(_11391).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _11436
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11436
                    emit Earn(_11436);
                    _11536 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11536))
                    staticcall address(_11536).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11584 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_731 + 96] = mem[_11584]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11697 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11714 = mem[_11697]
                    _11731 = mem[_731]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11755 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11714
                    mem[mem[64] + 36] = 128
                    _11772 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11772:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11755 + 68] = this.address
                    mem[_11755 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11731))
                    call address(_11731).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11755 + (32 * _11772) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12299 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12320 = mem[_12299]
                    require mem[_12299] <= test266151307()
                    require _12299 + mem[_12299] + 31 < _12299 + return_data.size
                    _12341 = mem[_12299 + mem[_12299]]
                    if mem[_12299 + mem[_12299]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12299 + mem[_12299]]) + 1 < 0 or _12299 + ceil32(return_data.size) + ceil32(32 * mem[_12299 + mem[_12299]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12299 + ceil32(return_data.size) + ceil32(32 * mem[_12299 + mem[_12299]]) + 1
                    mem[_12299 + ceil32(return_data.size)] = _12341
                    require _12320 + (32 * _12341) + 32 <= return_data.size
                    t = _12299 + ceil32(return_data.size) + 32
                    s = _12299 + _12320 + 32
                    while s < _12299 + _12320 + (32 * _12341) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12840 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12840]
                else:
                    mem[mem[64] + 4] = _11392
                    mem[mem[64] + 36] = _11436
                    require ext_code.size(address(_11391))
                    call address(_11391).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _11392, _11436
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11436
                    emit Earn(_11436);
                    _11537 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11537))
                    staticcall address(_11537).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11585 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_731 + 96] = mem[_11585]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11698 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11715 = mem[_11698]
                    _11732 = mem[_731]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11756 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11715
                    mem[mem[64] + 36] = 128
                    _11773 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11773:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11756 + 68] = this.address
                    mem[_11756 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11732))
                    call address(_11732).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11756 + (32 * _11773) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12300 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12321 = mem[_12300]
                    require mem[_12300] <= test266151307()
                    require _12300 + mem[_12300] + 31 < _12300 + return_data.size
                    _12342 = mem[_12300 + mem[_12300]]
                    if mem[_12300 + mem[_12300]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12300 + mem[_12300]]) + 1 < 0 or _12300 + ceil32(return_data.size) + ceil32(32 * mem[_12300 + mem[_12300]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12300 + ceil32(return_data.size) + ceil32(32 * mem[_12300 + mem[_12300]]) + 1
                    mem[_12300 + ceil32(return_data.size)] = _12342
                    require _12321 + (32 * _12342) + 32 <= return_data.size
                    t = _12300 + ceil32(return_data.size) + 32
                    s = _12300 + _12321 + 32
                    while s < _12300 + _12321 + (32 * _12342) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12841 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12841]
            else:
                if 1 >= mem[_6717]:
                    revert with 0, 50
                mem[_6717 + 64] = address(_6706)
                _11394 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _11418 = mem[_6717]
                mem[mem[64] + 68] = mem[_6717]
                s = 0
                t = _6717 + 32
                u = mem[64] + 100
                while s < _11418:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_6704))
                staticcall address(_6704).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _11394 + (32 * _11418) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12310 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12331 = mem[_12310]
                require mem[_12310] <= test266151307()
                require _12310 + mem[_12310] + 31 < _12310 + return_data.size
                _12352 = mem[_12310 + mem[_12310]]
                if mem[_12310 + mem[_12310]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_12310 + mem[_12310]]) + 1 < 0 or _12310 + ceil32(return_data.size) + ceil32(32 * mem[_12310 + mem[_12310]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _12310 + ceil32(return_data.size) + ceil32(32 * mem[_12310 + mem[_12310]]) + 1
                mem[_12310 + ceil32(return_data.size)] = _12352
                require _12331 + (32 * _12352) + 32 <= return_data.size
                t = _12310 + ceil32(return_data.size) + 32
                s = _12310 + _12331 + 32
                while s < _12310 + _12331 + (32 * _12352) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _12352:
                    revert with 0, 50
                _12799 = mem[_12310 + ceil32(return_data.size) + 64]
                if mem[_12310 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_12310 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_12310 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _12352:
                    revert with 0, 50
                _12871 = mem[_12310 + ceil32(return_data.size) + 64]
                if mem[_12310 + ceil32(return_data.size) + 64] < 100 * mem[_12310 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _12875 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _12871 - (100 * _12799 / 10000)
                mem[mem[64] + 36] = 128
                _12879 = mem[_6717]
                mem[mem[64] + 132] = mem[_6717]
                s = 0
                t = _6717 + 32
                u = mem[64] + 164
                while s < _12879:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_12875 + 68] = this.address
                mem[_12875 + 100] = block.timestamp + 60
                require ext_code.size(address(_6704))
                call address(_6704).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _12875 + (32 * _12879) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13179 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13183 = mem[_13179]
                require mem[_13179] <= test266151307()
                require _13179 + mem[_13179] + 31 < _13179 + return_data.size
                _13187 = mem[_13179 + mem[_13179]]
                if mem[_13179 + mem[_13179]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_13179 + mem[_13179]]) + 1 < 0 or _13179 + ceil32(return_data.size) + ceil32(32 * mem[_13179 + mem[_13179]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _13179 + ceil32(return_data.size) + ceil32(32 * mem[_13179 + mem[_13179]]) + 1
                mem[_13179 + ceil32(return_data.size)] = _13187
                require _13183 + (32 * _13187) + 32 <= return_data.size
                t = _13179 + ceil32(return_data.size) + 32
                s = _13179 + _13183 + 32
                while s < _13179 + _13183 + (32 * _13187) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _13465 = mem[_731 + 160]
                _13466 = mem[_731 + 64]
                _13467 = mem[_731 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_13467))
                staticcall address(_13467).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13483 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13487 = mem[_13483]
                if _13466 >= 999999:
                    mem[mem[64] + 4] = mem[_13483]
                    require ext_code.size(address(_13465))
                    call address(_13465).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _13487
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13487
                    emit Earn(_13487);
                    _13524 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13524))
                    staticcall address(_13524).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13548 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_731 + 96] = mem[_13548]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13596 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13604 = mem[_13596]
                    _13612 = mem[_731]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13620 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13604
                    mem[mem[64] + 36] = 128
                    _13628 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _13628:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_13620 + 68] = this.address
                    mem[_13620 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13612))
                    call address(_13612).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13620 + (32 * _13628) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13740 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13748 = mem[_13740]
                    require mem[_13740] <= test266151307()
                    require _13740 + mem[_13740] + 31 < _13740 + return_data.size
                    _13756 = mem[_13740 + mem[_13740]]
                    if mem[_13740 + mem[_13740]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13740 + mem[_13740]]) + 1 < 0 or _13740 + ceil32(return_data.size) + ceil32(32 * mem[_13740 + mem[_13740]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13740 + ceil32(return_data.size) + ceil32(32 * mem[_13740 + mem[_13740]]) + 1
                    mem[_13740 + ceil32(return_data.size)] = _13756
                    require _13748 + (32 * _13756) + 32 <= return_data.size
                    t = _13740 + ceil32(return_data.size) + 32
                    s = _13740 + _13748 + 32
                    while s < _13740 + _13748 + (32 * _13756) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13836 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_13836]
                else:
                    mem[mem[64] + 4] = _13466
                    mem[mem[64] + 36] = _13487
                    require ext_code.size(address(_13465))
                    call address(_13465).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _13466, _13487
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _13487
                    emit Earn(_13487);
                    _13525 = mem[_731 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_13525))
                    staticcall address(_13525).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13549 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_731 + 96] = mem[_13549]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13597 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13605 = mem[_13597]
                    _13613 = mem[_731]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _13621 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _13605
                    mem[mem[64] + 36] = 128
                    _13629 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_13621 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13613))
                    call address(_13613).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13621 + (32 * _13629) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13741 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13749 = mem[_13741]
                    require mem[_13741] <= test266151307()
                    require _13741 + mem[_13741] + 31 < _13741 + return_data.size
                    _13757 = mem[_13741 + mem[_13741]]
                    if mem[_13741 + mem[_13741]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13741 + mem[_13741]]) + 1 < 0 or _13741 + ceil32(return_data.size) + ceil32(32 * mem[_13741 + mem[_13741]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13741 + ceil32(return_data.size) + ceil32(32 * mem[_13741 + mem[_13741]]) + 1
                    mem[_13741 + ceil32(return_data.size)] = _13757
                    require _13749 + (32 * _13757) + 32 <= return_data.size
                    t = _13741 + ceil32(return_data.size) + 32
                    s = _13741 + _13749 + 32
                    while s < _13741 + _13749 + (32 * _13757) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13837 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_13837]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = _731
        s = _3460 - (100 * _3460 / 10000)
        s = stor9[idx].field_0
        continue 
    _732 = mem[64]
    mem[64] = mem[64] + 256
    mem[_732] = 0
    mem[_732 + 32] = 0
    mem[_732 + 64] = 0
    mem[_732 + 96] = 0
    mem[_732 + 128] = 0
    mem[_732 + 160] = 0
    mem[_732 + 192] = 0
    mem[_732 + 224] = 0
    _736 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_736 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _732
    w = 0
    w = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _1730 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1730] = strategyInfo[stor9[idx].field_0].field_0
        mem[_1730 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_1730 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_1730 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_1730 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_1730 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_1730 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_1730 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1745 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1751 = mem[_1745]
            if not mem[_1745]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_1745]
                v = _1730
                w = stor9[idx].field_0
                w = w
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1803 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1821 = mem[_1803]
            require mem[_1803] == mem[_1803 + 18 len 14]
            _1833 = mem[_1803 + 32]
            require mem[_1803 + 32] == mem[_1803 + 50 len 14]
            require mem[_1803 + 64] == mem[_1803 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1859 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1865 = mem[_1859]
            if _1751 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_1859]:
                revert with 0, 18
            if 10^12 * _1751 / mem[_1859] and Mask(112, 0, _1821) > -1 / 10^12 * _1751 / mem[_1859]:
                revert with 0, 17
            if 10^12 * _1751 / mem[_1859] and Mask(112, 0, _1833) > -1 / 10^12 * _1751 / mem[_1859]:
                revert with 0, 17
            if 1 >= mem[_736]:
                revert with 0, 50
            mem[_736 + 64] = stor21
            if 0 >= mem[_736]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_736 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _1948 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1751 / _1865 * Mask(112, 0, _1833) / 10^12
                mem[mem[64] + 36] = 64
                _1961 = mem[_736]
                mem[mem[64] + 68] = mem[_736]
                s = 0
                t = _736 + 32
                u = mem[64] + 100
                while s < _1961:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1948 + (32 * _1961) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3480 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3490 = mem[_3480]
                require mem[_3480] <= test266151307()
                require _3480 + mem[_3480] + 31 < _3480 + return_data.size
                _3502 = mem[_3480 + mem[_3480]]
                if mem[_3480 + mem[_3480]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3480 + mem[_3480]]) + 1 < 0 or _3480 + ceil32(return_data.size) + ceil32(32 * mem[_3480 + mem[_3480]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3480 + ceil32(return_data.size) + ceil32(32 * mem[_3480 + mem[_3480]]) + 1
                mem[_3480 + ceil32(return_data.size)] = _3502
                require _3490 + (32 * _3502) + 32 <= return_data.size
                t = _3480 + ceil32(return_data.size) + 32
                s = _3480 + _3490 + 32
                while s < _3480 + _3490 + (32 * _3502) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3502:
                    revert with 0, 50
                _5125 = mem[_3480 + ceil32(return_data.size) + 64]
                if 10^12 * _1751 / _1865 * Mask(112, 0, _1821) / 10^12 > !mem[_3480 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1730 + 128] = (10^12 * _1751 / _1865 * Mask(112, 0, _1821) / 10^12) + mem[_3480 + ceil32(return_data.size) + 64]
                if w > !((10^12 * _1751 / _1865 * Mask(112, 0, _1821) / 10^12) + _5125):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3480 + ceil32(return_data.size)
                t = 10^12 * _1751 / _1865 * Mask(112, 0, _1833) / 10^12
                u = 10^12 * _1751 / _1865 * Mask(112, 0, _1821) / 10^12
                v = _1751
                v = _1730
                w = stor9[idx].field_0
                w = w + (10^12 * _1751 / _1865 * Mask(112, 0, _1821) / 10^12) + _5125
                continue 
            mem[_736 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _1957 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1751 / _1865 * Mask(112, 0, _1821) / 10^12
                mem[mem[64] + 36] = 64
                _1967 = mem[_736]
                mem[mem[64] + 68] = mem[_736]
                s = 0
                t = _736 + 32
                u = mem[64] + 100
                while s < _1967:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1957 + (32 * _1967) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3479 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3489 = mem[_3479]
                require mem[_3479] <= test266151307()
                require _3479 + mem[_3479] + 31 < _3479 + return_data.size
                _3501 = mem[_3479 + mem[_3479]]
                if mem[_3479 + mem[_3479]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3479 + mem[_3479]]) + 1 < 0 or _3479 + ceil32(return_data.size) + ceil32(32 * mem[_3479 + mem[_3479]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3479 + ceil32(return_data.size) + ceil32(32 * mem[_3479 + mem[_3479]]) + 1
                mem[_3479 + ceil32(return_data.size)] = _3501
                require _3489 + (32 * _3501) + 32 <= return_data.size
                t = _3479 + ceil32(return_data.size) + 32
                s = _3479 + _3489 + 32
                while s < _3479 + _3489 + (32 * _3501) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3501:
                    revert with 0, 50
                _5124 = mem[_3479 + ceil32(return_data.size) + 64]
                if 10^12 * _1751 / _1865 * Mask(112, 0, _1833) / 10^12 > !mem[_3479 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1730 + 128] = (10^12 * _1751 / _1865 * Mask(112, 0, _1833) / 10^12) + mem[_3479 + ceil32(return_data.size) + 64]
                if w > !((10^12 * _1751 / _1865 * Mask(112, 0, _1833) / 10^12) + _5124):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3479 + ceil32(return_data.size)
                t = 10^12 * _1751 / _1865 * Mask(112, 0, _1833) / 10^12
                u = 10^12 * _1751 / _1865 * Mask(112, 0, _1821) / 10^12
                v = _1751
                v = _1730
                w = stor9[idx].field_0
                w = w + (10^12 * _1751 / _1865 * Mask(112, 0, _1833) / 10^12) + _5124
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1970 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1980 = mem[_1970]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2034 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2054 = mem[_2034]
            if mem[_2034] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1980:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2179 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2199 = mem[_2179]
            if 10^12 * _2054 / _1980 and mem[_2179] > -1 / 10^12 * _2054 / _1980:
                revert with 0, 17
            _2299 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _2054 / _1980 * _2199 / 10^12
            mem[mem[64] + 36] = 64
            _2328 = mem[_736]
            mem[mem[64] + 68] = mem[_736]
            t = 0
            u = _736 + 32
            v = mem[64] + 100
            while t < _2328:
                mem[v] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                v = v + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2299 + (32 * _2328) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3478 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3488 = mem[_3478]
            require mem[_3478] <= test266151307()
            require _3478 + mem[_3478] + 31 < _3478 + return_data.size
            _3500 = mem[_3478 + mem[_3478]]
            if mem[_3478 + mem[_3478]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3478 + mem[_3478]]) + 1 < 0 or _3478 + ceil32(return_data.size) + ceil32(32 * mem[_3478 + mem[_3478]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3478 + ceil32(return_data.size) + ceil32(32 * mem[_3478 + mem[_3478]]) + 1
            mem[_3478 + ceil32(return_data.size)] = _3500
            require _3488 + (32 * _3500) + 32 <= return_data.size
            u = _3478 + ceil32(return_data.size) + 32
            t = _3478 + _3488 + 32
            while t < _3478 + _3488 + (32 * _3500) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _3500:
                revert with 0, 50
            _5123 = mem[_3478 + ceil32(return_data.size) + 64]
            mem[_1730 + 128] = mem[_3478 + ceil32(return_data.size) + 64]
            if w > !_5123:
                revert with 0, 17
            if 0 >= mem[_736]:
                revert with 0, 50
            mem[_736 + 32] = mem[_1730 + 236 len 20]
            _5168 = mem[_1730 + 224]
            _5169 = mem[_1730]
            require ext_code.size(mem[_1730 + 236 len 20])
            staticcall mem[_1730 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5187 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5201 = mem[_5187]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_5168))
            staticcall address(_5168).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5219 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5249 = mem[_5219]
            if mem[_5219] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _5201:
                revert with 0, 18
            mem[mem[64] + 4] = address(_5169)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_5169)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5327 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5345 = mem[_5327]
            if 10^12 * _5249 / _5201 and mem[_5327] > -1 / 10^12 * _5249 / _5201:
                revert with 0, 17
            _5399 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _5249 / _5201 * _5345 / 10^12
            mem[mem[64] + 36] = 64
            _5435 = mem[_736]
            mem[mem[64] + 68] = mem[_736]
            t = 0
            u = _736 + 32
            v = mem[64] + 100
            while t < _5435:
                mem[v] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                v = v + 32
                continue 
            require ext_code.size(address(_5169))
            staticcall address(_5169).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _5399 + (32 * _5435) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6724 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6734 = mem[_6724]
            require mem[_6724] <= test266151307()
            require _6724 + mem[_6724] + 31 < _6724 + return_data.size
            _6744 = mem[_6724 + mem[_6724]]
            if mem[_6724 + mem[_6724]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_6724 + mem[_6724]]) + 1 < 0 or _6724 + ceil32(return_data.size) + ceil32(32 * mem[_6724 + mem[_6724]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _6724 + ceil32(return_data.size) + ceil32(32 * mem[_6724 + mem[_6724]]) + 1
            mem[_6724 + ceil32(return_data.size)] = _6744
            require _6734 + (32 * _6744) + 32 <= return_data.size
            u = _6724 + ceil32(return_data.size) + 32
            t = _6724 + _6734 + 32
            while t < _6724 + _6734 + (32 * _6744) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _6744:
                revert with 0, 50
            if mem[_1730 + 128] > !mem[_6724 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1730 + 128] = mem[_1730 + 128] + mem[_6724 + ceil32(return_data.size) + 64]
            if w + _5123 > !mem[_1730 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _1751 / _1865 * Mask(112, 0, _1833) / 10^12
            u = 10^12 * _1751 / _1865 * Mask(112, 0, _1821) / 10^12
            v = _1751
            v = _1730
            w = stor9[idx].field_0
            w = w + _5123 + mem[_1730 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1744 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _1750 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_1750] = mem[_1744]
        mem[_1750 + 32] = mem[_1744 + 32]
        mem[_1750 + 64] = mem[_1744 + 64]
        require return_data.size - 96 >= 96
        _1776 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1776] = mem[_1744 + 96]
        mem[_1776 + 32] = mem[_1744 + 128]
        mem[_1776 + 64] = mem[_1744 + 160]
        mem[_1750 + 96] = _1776
        mem[_1750 + 128] = mem[_1744 + 192]
        require return_data.size - 224 >= 96
        _1794 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1794] = mem[_1744 + 224]
        mem[_1794 + 32] = mem[_1744 + 256]
        mem[_1794 + 64] = mem[_1744 + 288]
        mem[_1750 + 160] = _1794
        _1811 = mem[_1750 + 64]
        if not mem[_1750 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_1750 + 64]
            v = _1730
            w = stor9[idx].field_0
            w = w
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1845 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1851 = mem[_1845]
        require mem[_1845] == mem[_1845 + 18 len 14]
        _1862 = mem[_1845 + 32]
        require mem[_1845 + 32] == mem[_1845 + 50 len 14]
        require mem[_1845 + 64] == mem[_1845 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1897 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1903 = mem[_1897]
        if _1811 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_1897]:
            revert with 0, 18
        if 10^12 * _1811 / mem[_1897] and Mask(112, 0, _1851) > -1 / 10^12 * _1811 / mem[_1897]:
            revert with 0, 17
        if 10^12 * _1811 / mem[_1897] and Mask(112, 0, _1862) > -1 / 10^12 * _1811 / mem[_1897]:
            revert with 0, 17
        if 1 >= mem[_736]:
            revert with 0, 50
        mem[_736 + 64] = stor21
        if 0 >= mem[_736]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_736 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            _2014 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1811 / _1903 * Mask(112, 0, _1862) / 10^12
            mem[mem[64] + 36] = 64
            _2049 = mem[_736]
            mem[mem[64] + 68] = mem[_736]
            s = 0
            t = _736 + 32
            u = mem[64] + 100
            while s < _2049:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2014 + (32 * _2049) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3477 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3487 = mem[_3477]
            require mem[_3477] <= test266151307()
            require _3477 + mem[_3477] + 31 < _3477 + return_data.size
            _3499 = mem[_3477 + mem[_3477]]
            if mem[_3477 + mem[_3477]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3477 + mem[_3477]]) + 1 < 0 or _3477 + ceil32(return_data.size) + ceil32(32 * mem[_3477 + mem[_3477]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3477 + ceil32(return_data.size) + ceil32(32 * mem[_3477 + mem[_3477]]) + 1
            mem[_3477 + ceil32(return_data.size)] = _3499
            require _3487 + (32 * _3499) + 32 <= return_data.size
            t = _3477 + ceil32(return_data.size) + 32
            s = _3477 + _3487 + 32
            while s < _3477 + _3487 + (32 * _3499) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3499:
                revert with 0, 50
            _5122 = mem[_3477 + ceil32(return_data.size) + 64]
            if 10^12 * _1811 / _1903 * Mask(112, 0, _1851) / 10^12 > !mem[_3477 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1730 + 128] = (10^12 * _1811 / _1903 * Mask(112, 0, _1851) / 10^12) + mem[_3477 + ceil32(return_data.size) + 64]
            if w > !((10^12 * _1811 / _1903 * Mask(112, 0, _1851) / 10^12) + _5122):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3477 + ceil32(return_data.size)
            t = 10^12 * _1811 / _1903 * Mask(112, 0, _1862) / 10^12
            u = 10^12 * _1811 / _1903 * Mask(112, 0, _1851) / 10^12
            v = _1811
            v = _1730
            w = stor9[idx].field_0
            w = w + (10^12 * _1811 / _1903 * Mask(112, 0, _1851) / 10^12) + _5122
            continue 
        mem[_736 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            _2033 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1811 / _1903 * Mask(112, 0, _1851) / 10^12
            mem[mem[64] + 36] = 64
            _2053 = mem[_736]
            mem[mem[64] + 68] = mem[_736]
            s = 0
            t = _736 + 32
            v = mem[64] + 100
            while s < _2053:
                mem[v] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                v = v + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2033 + (32 * _2053) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3476 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3486 = mem[_3476]
            require mem[_3476] <= test266151307()
            require _3476 + mem[_3476] + 31 < _3476 + return_data.size
            _3498 = mem[_3476 + mem[_3476]]
            if mem[_3476 + mem[_3476]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3476 + mem[_3476]]) + 1 < 0 or _3476 + ceil32(return_data.size) + ceil32(32 * mem[_3476 + mem[_3476]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3476 + ceil32(return_data.size) + ceil32(32 * mem[_3476 + mem[_3476]]) + 1
            mem[_3476 + ceil32(return_data.size)] = _3498
            require _3486 + (32 * _3498) + 32 <= return_data.size
            t = _3476 + ceil32(return_data.size) + 32
            s = _3476 + _3486 + 32
            while s < _3476 + _3486 + (32 * _3498) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3498:
                revert with 0, 50
            _5121 = mem[_3476 + ceil32(return_data.size) + 64]
            if 10^12 * _1811 / _1903 * Mask(112, 0, _1862) / 10^12 > !mem[_3476 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1730 + 128] = (10^12 * _1811 / _1903 * Mask(112, 0, _1862) / 10^12) + mem[_3476 + ceil32(return_data.size) + 64]
            if w > !((10^12 * _1811 / _1903 * Mask(112, 0, _1862) / 10^12) + _5121):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3476 + ceil32(return_data.size)
            t = 10^12 * _1811 / _1903 * Mask(112, 0, _1862) / 10^12
            s = 10^12 * _1811 / _1903 * Mask(112, 0, _1851) / 10^12
            v = _1811
            v = _1730
            w = stor9[idx].field_0
            w = w + (10^12 * _1811 / _1903 * Mask(112, 0, _1862) / 10^12) + _5121
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2059 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2073 = mem[_2059]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2143 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2167 = mem[_2143]
        if mem[_2143] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _2073:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2296 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2327 = mem[_2296]
        if 10^12 * _2167 / _2073 and mem[_2296] > -1 / 10^12 * _2167 / _2073:
            revert with 0, 17
        _2401 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _2167 / _2073 * _2327 / 10^12
        mem[mem[64] + 36] = 64
        _2421 = mem[_736]
        mem[mem[64] + 68] = mem[_736]
        t = 0
        u = _736 + 32
        v = mem[64] + 100
        while t < _2421:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _2401 + (32 * _2421) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3475 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3485 = mem[_3475]
        require mem[_3475] <= test266151307()
        require _3475 + mem[_3475] + 31 < _3475 + return_data.size
        _3497 = mem[_3475 + mem[_3475]]
        if mem[_3475 + mem[_3475]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_3475 + mem[_3475]]) + 1 < 0 or _3475 + ceil32(return_data.size) + ceil32(32 * mem[_3475 + mem[_3475]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _3475 + ceil32(return_data.size) + ceil32(32 * mem[_3475 + mem[_3475]]) + 1
        mem[_3475 + ceil32(return_data.size)] = _3497
        require _3485 + (32 * _3497) + 32 <= return_data.size
        u = _3475 + ceil32(return_data.size) + 32
        t = _3475 + _3485 + 32
        while t < _3475 + _3485 + (32 * _3497) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _3497:
            revert with 0, 50
        _5120 = mem[_3475 + ceil32(return_data.size) + 64]
        mem[_1730 + 128] = mem[_3475 + ceil32(return_data.size) + 64]
        if w > !_5120:
            revert with 0, 17
        if 0 >= mem[_736]:
            revert with 0, 50
        mem[_736 + 32] = mem[_1730 + 236 len 20]
        _5166 = mem[_1730 + 224]
        _5167 = mem[_1730]
        require ext_code.size(mem[_1730 + 236 len 20])
        staticcall mem[_1730 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5186 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5200 = mem[_5186]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_5166))
        staticcall address(_5166).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5218 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5248 = mem[_5218]
        if mem[_5218] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _5200:
            revert with 0, 18
        mem[mem[64] + 4] = address(_5167)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_5167)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5326 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5344 = mem[_5326]
        if 10^12 * _5248 / _5200 and mem[_5326] > -1 / 10^12 * _5248 / _5200:
            revert with 0, 17
        _5398 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _5248 / _5200 * _5344 / 10^12
        mem[mem[64] + 36] = 64
        _5434 = mem[_736]
        mem[mem[64] + 68] = mem[_736]
        t = 0
        u = _736 + 32
        v = mem[64] + 100
        while t < _5434:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        require ext_code.size(address(_5167))
        staticcall address(_5167).mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _5398 + (32 * _5434) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6723 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6733 = mem[_6723]
        require mem[_6723] <= test266151307()
        require _6723 + mem[_6723] + 31 < _6723 + return_data.size
        _6743 = mem[_6723 + mem[_6723]]
        if mem[_6723 + mem[_6723]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_6723 + mem[_6723]]) + 1 < 0 or _6723 + ceil32(return_data.size) + ceil32(32 * mem[_6723 + mem[_6723]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _6723 + ceil32(return_data.size) + ceil32(32 * mem[_6723 + mem[_6723]]) + 1
        mem[_6723 + ceil32(return_data.size)] = _6743
        require _6733 + (32 * _6743) + 32 <= return_data.size
        u = _6723 + ceil32(return_data.size) + 32
        t = _6723 + _6733 + 32
        while t < _6723 + _6733 + (32 * _6743) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _6743:
            revert with 0, 50
        if mem[_1730 + 128] > !mem[_6723 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_1730 + 128] = mem[_1730 + 128] + mem[_6723 + ceil32(return_data.size) + 64]
        if w + _5120 > !mem[_1730 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _1811 / _1903 * Mask(112, 0, _1862) / 10^12
        u = 10^12 * _1811 / _1903 * Mask(112, 0, _1851) / 10^12
        v = _1811
        v = _1730
        w = stor9[idx].field_0
        w = w + _5120 + mem[_1730 + 128]
        continue 
    emit 0xf9ede3d1 
    _1742 = mem[64]
    mem[64] = mem[64] + 256
    mem[_1742] = 0
    mem[_1742 + 32] = 0
    mem[_1742 + 64] = 0
    mem[_1742 + 96] = 0
    mem[_1742 + 128] = 0
    mem[_1742 + 160] = 0
    mem[_1742 + 192] = 0
    mem[_1742 + 224] = 0
    _1743 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_1743 + 32 len 64] = call.data[calldata.size len 64]
    s = 0
    t = 96
    u = 0
    w = 0
    x = 0
    x = _1742
    x = 0
    x = 0
    while s < stor9.length:
        mem[0] = stor9[s].field_0
        mem[32] = 6
        _3449 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3449] = strategyInfo[stor9[s].field_0].field_0
        mem[_3449 + 32] = strategyInfo[stor9[s].field_0].field_256
        mem[_3449 + 64] = strategyInfo[stor9[s].field_0].field_512
        mem[_3449 + 96] = strategyInfo[stor9[s].field_0].field_768
        mem[_3449 + 128] = strategyInfo[stor9[s].field_0].field_1024
        mem[_3449 + 160] = strategyInfo[stor9[s].field_0].field_1280
        mem[_3449 + 192] = strategyInfo[stor9[s].field_0].field_1536
        mem[_3449 + 224] = strategyInfo[stor9[s].field_0].field_1792
        if 999999 > strategyInfo[stor9[s].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[s].field_0].field_1280)
            staticcall strategyInfo[stor9[s].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[s].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3474 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _3483 = mem[_3474]
            if not mem[_3474]:
                if s == -1:
                    revert with 0, 17
                s = s + 1
                t = t
                u = u
                w = w
                x = mem[_3474]
                x = _3449
                x = stor9[s].field_0
                x = x
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_256)
            staticcall strategyInfo[stor9[s].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3526 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3547 = mem[_3526]
            require mem[_3526] == mem[_3526 + 18 len 14]
            _3570 = mem[_3526 + 32]
            require mem[_3526 + 32] == mem[_3526 + 50 len 14]
            require mem[_3526 + 64] == mem[_3526 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[s].field_0].field_256)
            staticcall strategyInfo[stor9[s].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3608 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3621 = mem[_3608]
            if _3483 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_3608]:
                revert with 0, 18
            if 10^12 * _3483 / mem[_3608] and Mask(112, 0, _3547) > -1 / 10^12 * _3483 / mem[_3608]:
                revert with 0, 17
            if 10^12 * _3483 / mem[_3608] and Mask(112, 0, _3570) > -1 / 10^12 * _3483 / mem[_3608]:
                revert with 0, 17
            if 1 >= mem[_1743]:
                revert with 0, 50
            mem[_1743 + 64] = stor21
            if 0 >= mem[_1743]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[s].field_0].field_1536:
                mem[_1743 + 32] = strategyInfo[stor9[s].field_0].field_1792
                _3716 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3483 / _3621 * Mask(112, 0, _3570) / 10^12
                mem[mem[64] + 36] = 64
                _3751 = mem[_1743]
                mem[mem[64] + 68] = mem[_1743]
                idx = 0
                t = _1743 + 32
                u = mem[64] + 100
                while idx < _3751:
                    mem[u] = mem[t + 12 len 20]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
                staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _3716 + (32 * _3751) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5149 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5165 = mem[_5149]
                require mem[_5149] <= test266151307()
                require _5149 + mem[_5149] + 31 < _5149 + return_data.size
                _5185 = mem[_5149 + mem[_5149]]
                if mem[_5149 + mem[_5149]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5149 + mem[_5149]]) + 1 < 0 or _5149 + ceil32(return_data.size) + ceil32(32 * mem[_5149 + mem[_5149]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5149 + ceil32(return_data.size) + ceil32(32 * mem[_5149 + mem[_5149]]) + 1
                mem[_5149 + ceil32(return_data.size)] = _5185
                require _5165 + (32 * _5185) + 32 <= return_data.size
                t = _5149 + ceil32(return_data.size) + 32
                idx = _5149 + _5165 + 32
                while idx < _5149 + _5165 + (32 * _5185) + 32:
                    mem[t] = mem[idx]
                    t = t + 32
                    idx = idx + 32
                    continue 
                if 1 >= _5185:
                    revert with 0, 50
                _6700 = mem[_5149 + ceil32(return_data.size) + 64]
                if 10^12 * _3483 / _3621 * Mask(112, 0, _3547) / 10^12 > !mem[_5149 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3449 + 128] = (10^12 * _3483 / _3621 * Mask(112, 0, _3547) / 10^12) + mem[_5149 + ceil32(return_data.size) + 64]
                if x > !((10^12 * _3483 / _3621 * Mask(112, 0, _3547) / 10^12) + _6700):
                    revert with 0, 17
                if s == -1:
                    revert with 0, 17
                s = s + 1
                t = _5149 + ceil32(return_data.size)
                u = 10^12 * _3483 / _3621 * Mask(112, 0, _3570) / 10^12
                w = 10^12 * _3483 / _3621 * Mask(112, 0, _3547) / 10^12
                x = _3483
                x = _3449
                x = stor9[s].field_0
                x = x + (10^12 * _3483 / _3621 * Mask(112, 0, _3547) / 10^12) + _6700
                continue 
            mem[_1743 + 32] = strategyInfo[stor9[s].field_0].field_1536
            if stor21 == strategyInfo[stor9[s].field_0].field_1792:
                _3731 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3483 / _3621 * Mask(112, 0, _3547) / 10^12
                mem[mem[64] + 36] = 64
                _3767 = mem[_1743]
                mem[mem[64] + 68] = mem[_1743]
                idx = 0
                t = _1743 + 32
                u = mem[64] + 100
                while idx < _3767:
                    mem[u] = mem[t + 12 len 20]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
                staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _3731 + (32 * _3767) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5148 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5164 = mem[_5148]
                require mem[_5148] <= test266151307()
                require _5148 + mem[_5148] + 31 < _5148 + return_data.size
                _5184 = mem[_5148 + mem[_5148]]
                if mem[_5148 + mem[_5148]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5148 + mem[_5148]]) + 1 < 0 or _5148 + ceil32(return_data.size) + ceil32(32 * mem[_5148 + mem[_5148]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5148 + ceil32(return_data.size) + ceil32(32 * mem[_5148 + mem[_5148]]) + 1
                mem[_5148 + ceil32(return_data.size)] = _5184
                require _5164 + (32 * _5184) + 32 <= return_data.size
                t = _5148 + ceil32(return_data.size) + 32
                idx = _5148 + _5164 + 32
                while idx < _5148 + _5164 + (32 * _5184) + 32:
                    mem[t] = mem[idx]
                    t = t + 32
                    idx = idx + 32
                    continue 
                if 1 >= _5184:
                    revert with 0, 50
                _6699 = mem[_5148 + ceil32(return_data.size) + 64]
                if 10^12 * _3483 / _3621 * Mask(112, 0, _3570) / 10^12 > !mem[_5148 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3449 + 128] = (10^12 * _3483 / _3621 * Mask(112, 0, _3570) / 10^12) + mem[_5148 + ceil32(return_data.size) + 64]
                if x > !((10^12 * _3483 / _3621 * Mask(112, 0, _3570) / 10^12) + _6699):
                    revert with 0, 17
                if s == -1:
                    revert with 0, 17
                s = s + 1
                t = _5148 + ceil32(return_data.size)
                u = 10^12 * _3483 / _3621 * Mask(112, 0, _3570) / 10^12
                w = 10^12 * _3483 / _3621 * Mask(112, 0, _3547) / 10^12
                x = _3483
                x = _3449
                x = stor9[s].field_0
                x = x + (10^12 * _3483 / _3621 * Mask(112, 0, _3570) / 10^12) + _6699
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_1536)
            staticcall strategyInfo[stor9[s].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3773 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3793 = mem[_3773]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[s].field_0].field_1536)
            staticcall strategyInfo[stor9[s].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3834 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3869 = mem[_3834]
            if mem[_3834] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _3793:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[s].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[s].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4006 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4033 = mem[_4006]
            if 10^12 * _3869 / _3793 and mem[_4006] > -1 / 10^12 * _3869 / _3793:
                revert with 0, 17
            _4088 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3869 / _3793 * _4033 / 10^12
            mem[mem[64] + 36] = 64
            _4103 = mem[_1743]
            mem[mem[64] + 68] = mem[_1743]
            idx = 0
            u = _1743 + 32
            v = mem[64] + 100
            while idx < _4103:
                mem[v] = mem[u + 12 len 20]
                idx = idx + 1
                u = u + 32
                v = v + 32
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
            staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4088 + (32 * _4103) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5147 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5163 = mem[_5147]
            require mem[_5147] <= test266151307()
            require _5147 + mem[_5147] + 31 < _5147 + return_data.size
            _5183 = mem[_5147 + mem[_5147]]
            if mem[_5147 + mem[_5147]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5147 + mem[_5147]]) + 1 < 0 or _5147 + ceil32(return_data.size) + ceil32(32 * mem[_5147 + mem[_5147]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5147 + ceil32(return_data.size) + ceil32(32 * mem[_5147 + mem[_5147]]) + 1
            mem[_5147 + ceil32(return_data.size)] = _5183
            require _5163 + (32 * _5183) + 32 <= return_data.size
            u = _5147 + ceil32(return_data.size) + 32
            idx = _5147 + _5163 + 32
            while idx < _5147 + _5163 + (32 * _5183) + 32:
                mem[u] = mem[idx]
                u = u + 32
                idx = idx + 32
                continue 
            if 1 >= _5183:
                revert with 0, 50
            _6698 = mem[_5147 + ceil32(return_data.size) + 64]
            mem[_3449 + 128] = mem[_5147 + ceil32(return_data.size) + 64]
            if x > !_6698:
                revert with 0, 17
            if 0 >= mem[_1743]:
                revert with 0, 50
            mem[_1743 + 32] = mem[_3449 + 236 len 20]
            _6731 = mem[_3449 + 224]
            _6732 = mem[_3449]
            require ext_code.size(mem[_3449 + 236 len 20])
            staticcall mem[_3449 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6754 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6790 = mem[_6754]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_6731))
            staticcall address(_6731).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6816 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6830 = mem[_6816]
            if mem[_6816] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _6790:
                revert with 0, 18
            mem[mem[64] + 4] = address(_6732)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_6732)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6948 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6964 = mem[_6948]
            if 10^12 * _6830 / _6790 and mem[_6948] > -1 / 10^12 * _6830 / _6790:
                revert with 0, 17
            _7030 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _6830 / _6790 * _6964 / 10^12
            mem[mem[64] + 36] = 64
            _7042 = mem[_1743]
            mem[mem[64] + 68] = mem[_1743]
            idx = 0
            u = _1743 + 32
            v = mem[64] + 100
            while idx < _7042:
                mem[v] = mem[u + 12 len 20]
                idx = idx + 1
                u = u + 32
                v = v + 32
                continue 
            require ext_code.size(address(_6732))
            staticcall address(_6732).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _7030 + (32 * _7042) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8219 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8241 = mem[_8219]
            require mem[_8219] <= test266151307()
            require _8219 + mem[_8219] + 31 < _8219 + return_data.size
            _8261 = mem[_8219 + mem[_8219]]
            if mem[_8219 + mem[_8219]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8219 + mem[_8219]]) + 1 < 0 or _8219 + ceil32(return_data.size) + ceil32(32 * mem[_8219 + mem[_8219]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _8219 + ceil32(return_data.size) + ceil32(32 * mem[_8219 + mem[_8219]]) + 1
            mem[_8219 + ceil32(return_data.size)] = _8261
            require _8241 + (32 * _8261) + 32 <= return_data.size
            u = _8219 + ceil32(return_data.size) + 32
            idx = _8219 + _8241 + 32
            while idx < _8219 + _8241 + (32 * _8261) + 32:
                mem[u] = mem[idx]
                u = u + 32
                idx = idx + 32
                continue 
            if 1 >= _8261:
                revert with 0, 50
            if mem[_3449 + 128] > !mem[_8219 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3449 + 128] = mem[_3449 + 128] + mem[_8219 + ceil32(return_data.size) + 64]
            if x + _6698 > !mem[_3449 + 128]:
                revert with 0, 17
            if s == -1:
                revert with 0, 17
            s = s + 1
            t = t
            u = 10^12 * _3483 / _3621 * Mask(112, 0, _3570) / 10^12
            w = 10^12 * _3483 / _3621 * Mask(112, 0, _3547) / 10^12
            x = _3483
            x = _3449
            x = stor9[s].field_0
            x = x + _6698 + mem[_3449 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[s].field_0].field_1280)
        staticcall strategyInfo[stor9[s].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3473 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _3482 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_3482] = mem[_3473]
        mem[_3482 + 32] = mem[_3473 + 32]
        mem[_3482 + 64] = mem[_3473 + 64]
        require return_data.size - 96 >= 96
        _3504 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_3504] = mem[_3473 + 96]
        mem[_3504 + 32] = mem[_3473 + 128]
        mem[_3504 + 64] = mem[_3473 + 160]
        mem[_3482 + 96] = _3504
        mem[_3482 + 128] = mem[_3473 + 192]
        require return_data.size - 224 >= 96
        _3521 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_3521] = mem[_3473 + 224]
        mem[_3521 + 32] = mem[_3473 + 256]
        mem[_3521 + 64] = mem[_3473 + 288]
        mem[_3482 + 160] = _3521
        _3539 = mem[_3482 + 64]
        if not mem[_3482 + 64]:
            if s == -1:
                revert with 0, 17
            s = s + 1
            t = t
            u = u
            w = w
            x = mem[_3482 + 64]
            x = _3449
            x = stor9[s].field_0
            x = x
            continue 
        require ext_code.size(strategyInfo[stor9[s].field_0].field_256)
        staticcall strategyInfo[stor9[s].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3589 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _3596 = mem[_3589]
        require mem[_3589] == mem[_3589 + 18 len 14]
        _3615 = mem[_3589 + 32]
        require mem[_3589 + 32] == mem[_3589 + 50 len 14]
        require mem[_3589 + 64] == mem[_3589 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[s].field_0].field_256)
        staticcall strategyInfo[stor9[s].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3645 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3653 = mem[_3645]
        if _3539 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_3645]:
            revert with 0, 18
        if 10^12 * _3539 / mem[_3645] and Mask(112, 0, _3596) > -1 / 10^12 * _3539 / mem[_3645]:
            revert with 0, 17
        if 10^12 * _3539 / mem[_3645] and Mask(112, 0, _3615) > -1 / 10^12 * _3539 / mem[_3645]:
            revert with 0, 17
        if 1 >= mem[_1743]:
            revert with 0, 50
        mem[_1743 + 64] = stor21
        if 0 >= mem[_1743]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[s].field_0].field_1536:
            mem[_1743 + 32] = strategyInfo[stor9[s].field_0].field_1792
            _3822 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3539 / _3653 * Mask(112, 0, _3615) / 10^12
            mem[mem[64] + 36] = 64
            _3859 = mem[_1743]
            mem[mem[64] + 68] = mem[_1743]
            idx = 0
            t = _1743 + 32
            u = mem[64] + 100
            while idx < _3859:
                mem[u] = mem[t + 12 len 20]
                idx = idx + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
            staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _3822 + (32 * _3859) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5146 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5162 = mem[_5146]
            require mem[_5146] <= test266151307()
            require _5146 + mem[_5146] + 31 < _5146 + return_data.size
            _5182 = mem[_5146 + mem[_5146]]
            if mem[_5146 + mem[_5146]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5146 + mem[_5146]]) + 1 < 0 or _5146 + ceil32(return_data.size) + ceil32(32 * mem[_5146 + mem[_5146]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5146 + ceil32(return_data.size) + ceil32(32 * mem[_5146 + mem[_5146]]) + 1
            mem[_5146 + ceil32(return_data.size)] = _5182
            require _5162 + (32 * _5182) + 32 <= return_data.size
            t = _5146 + ceil32(return_data.size) + 32
            idx = _5146 + _5162 + 32
            while idx < _5146 + _5162 + (32 * _5182) + 32:
                mem[t] = mem[idx]
                t = t + 32
                idx = idx + 32
                continue 
            if 1 >= _5182:
                revert with 0, 50
            _6697 = mem[_5146 + ceil32(return_data.size) + 64]
            if 10^12 * _3539 / _3653 * Mask(112, 0, _3596) / 10^12 > !mem[_5146 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3449 + 128] = (10^12 * _3539 / _3653 * Mask(112, 0, _3596) / 10^12) + mem[_5146 + ceil32(return_data.size) + 64]
            if x > !((10^12 * _3539 / _3653 * Mask(112, 0, _3596) / 10^12) + _6697):
                revert with 0, 17
            if s == -1:
                revert with 0, 17
            s = s + 1
            t = _5146 + ceil32(return_data.size)
            u = 10^12 * _3539 / _3653 * Mask(112, 0, _3615) / 10^12
            w = 10^12 * _3539 / _3653 * Mask(112, 0, _3596) / 10^12
            x = _3539
            x = _3449
            x = stor9[s].field_0
            x = x + (10^12 * _3539 / _3653 * Mask(112, 0, _3596) / 10^12) + _6697
            continue 
        mem[_1743 + 32] = strategyInfo[stor9[s].field_0].field_1536
        if stor21 == strategyInfo[stor9[s].field_0].field_1792:
            _3833 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3539 / _3653 * Mask(112, 0, _3596) / 10^12
            mem[mem[64] + 36] = 64
            _3868 = mem[_1743]
            mem[mem[64] + 68] = mem[_1743]
            idx = 0
            t = _1743 + 32
            u = mem[64] + 100
            while idx < _3868:
                mem[u] = mem[t + 12 len 20]
                idx = idx + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
            staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _3833 + (32 * _3868) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5145 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5161 = mem[_5145]
            require mem[_5145] <= test266151307()
            require _5145 + mem[_5145] + 31 < _5145 + return_data.size
            _5181 = mem[_5145 + mem[_5145]]
            if mem[_5145 + mem[_5145]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5145 + mem[_5145]]) + 1 < 0 or _5145 + ceil32(return_data.size) + ceil32(32 * mem[_5145 + mem[_5145]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5145 + ceil32(return_data.size) + ceil32(32 * mem[_5145 + mem[_5145]]) + 1
            mem[_5145 + ceil32(return_data.size)] = _5181
            require _5161 + (32 * _5181) + 32 <= return_data.size
            t = _5145 + ceil32(return_data.size) + 32
            idx = _5145 + _5161 + 32
            while idx < _5145 + _5161 + (32 * _5181) + 32:
                mem[t] = mem[idx]
                t = t + 32
                idx = idx + 32
                continue 
            if 1 >= _5181:
                revert with 0, 50
            _6696 = mem[_5145 + ceil32(return_data.size) + 64]
            if 10^12 * _3539 / _3653 * Mask(112, 0, _3615) / 10^12 > !mem[_5145 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3449 + 128] = (10^12 * _3539 / _3653 * Mask(112, 0, _3615) / 10^12) + mem[_5145 + ceil32(return_data.size) + 64]
            if x > !((10^12 * _3539 / _3653 * Mask(112, 0, _3615) / 10^12) + _6696):
                revert with 0, 17
            if s == -1:
                revert with 0, 17
            s = s + 1
            t = _5145 + ceil32(return_data.size)
            u = 10^12 * _3539 / _3653 * Mask(112, 0, _3615) / 10^12
            idx = 10^12 * _3539 / _3653 * Mask(112, 0, _3596) / 10^12
            x = _3539
            x = _3449
            x = stor9[s].field_0
            x = x + (10^12 * _3539 / _3653 * Mask(112, 0, _3615) / 10^12) + _6696
            continue 
        require ext_code.size(strategyInfo[stor9[s].field_0].field_1536)
        staticcall strategyInfo[stor9[s].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3875 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3916 = mem[_3875]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[s].field_0].field_1536)
        staticcall strategyInfo[stor9[s].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3960 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3982 = mem[_3960]
        if mem[_3960] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _3916:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[s].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[s].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4085 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4102 = mem[_4085]
        if 10^12 * _3982 / _3916 and mem[_4085] > -1 / 10^12 * _3982 / _3916:
            revert with 0, 17
        _4141 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _3982 / _3916 * _4102 / 10^12
        mem[mem[64] + 36] = 64
        _4159 = mem[_1743]
        mem[mem[64] + 68] = mem[_1743]
        idx = 0
        u = _1743 + 32
        v = mem[64] + 100
        while idx < _4159:
            mem[v] = mem[u + 12 len 20]
            idx = idx + 1
            u = u + 32
            v = v + 32
            continue 
        require ext_code.size(strategyInfo[stor9[s].field_0].field_0)
        staticcall strategyInfo[stor9[s].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _4141 + (32 * _4159) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5144 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5160 = mem[_5144]
        require mem[_5144] <= test266151307()
        require _5144 + mem[_5144] + 31 < _5144 + return_data.size
        _5180 = mem[_5144 + mem[_5144]]
        if mem[_5144 + mem[_5144]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5144 + mem[_5144]]) + 1 < 0 or _5144 + ceil32(return_data.size) + ceil32(32 * mem[_5144 + mem[_5144]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5144 + ceil32(return_data.size) + ceil32(32 * mem[_5144 + mem[_5144]]) + 1
        mem[_5144 + ceil32(return_data.size)] = _5180
        require _5160 + (32 * _5180) + 32 <= return_data.size
        u = _5144 + ceil32(return_data.size) + 32
        idx = _5144 + _5160 + 32
        while idx < _5144 + _5160 + (32 * _5180) + 32:
            mem[u] = mem[idx]
            u = u + 32
            idx = idx + 32
            continue 
        if 1 >= _5180:
            revert with 0, 50
        _6695 = mem[_5144 + ceil32(return_data.size) + 64]
        mem[_3449 + 128] = mem[_5144 + ceil32(return_data.size) + 64]
        if x > !_6695:
            revert with 0, 17
        if 0 >= mem[_1743]:
            revert with 0, 50
        mem[_1743 + 32] = mem[_3449 + 236 len 20]
        _6729 = mem[_3449 + 224]
        _6730 = mem[_3449]
        require ext_code.size(mem[_3449 + 236 len 20])
        staticcall mem[_3449 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6753 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6789 = mem[_6753]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_6729))
        staticcall address(_6729).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6815 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6829 = mem[_6815]
        if mem[_6815] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _6789:
            revert with 0, 18
        mem[mem[64] + 4] = address(_6730)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_6730)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6947 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6963 = mem[_6947]
        if 10^12 * _6829 / _6789 and mem[_6947] > -1 / 10^12 * _6829 / _6789:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _6829 / _6789 * _6963 / 10^12
        mem[mem[64] + 36] = 64
        _7041 = mem[_1743]
        mem[mem[64] + 68] = mem[_1743]
        idx = 0
        u = _1743 + 32
        v = mem[64] + 100
        while idx < _7041:
            mem[v] = mem[u + 12 len 20]
            idx = idx + 1
            u = u + 32
            v = v + 32
            continue 
        require ext_code.size(address(_6730))
        staticcall address(_6730).getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _6829 / _6789 * _6963 / 10^12, 64, mem[mem[64] + 68 len (32 * _7041) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8218 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8240 = mem[_8218]
        require mem[_8218] <= test266151307()
        require _8218 + mem[_8218] + 31 < _8218 + return_data.size
        _8260 = mem[_8218 + mem[_8218]]
        if mem[_8218 + mem[_8218]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_8218 + mem[_8218]]) + 1 < 0 or _8218 + ceil32(return_data.size) + ceil32(32 * mem[_8218 + mem[_8218]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _8218 + ceil32(return_data.size) + ceil32(32 * mem[_8218 + mem[_8218]]) + 1
        mem[_8218 + ceil32(return_data.size)] = _8260
        require _8240 + (32 * _8260) + 32 <= return_data.size
        u = _8218 + ceil32(return_data.size) + 32
        idx = _8218 + _8240 + 32
        while idx < _8218 + _8240 + (32 * _8260) + 32:
            mem[u] = mem[idx]
            u = u + 32
            idx = idx + 32
            continue 
        if 1 >= _8260:
            revert with 0, 50
        if mem[_3449 + 128] > !mem[_8218 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_3449 + 128] = mem[_3449 + 128] + mem[_8218 + ceil32(return_data.size) + 64]
        if x + _6695 > !mem[_3449 + 128]:
            revert with 0, 17
        if s == -1:
            revert with 0, 17
        s = s + 1
        t = t
        u = 10^12 * _3539 / _3653 * Mask(112, 0, _3615) / 10^12
        w = 10^12 * _3539 / _3653 * Mask(112, 0, _3596) / 10^12
        x = _3539
        x = _3449
        x = stor9[s].field_0
        x = x + _6695 + mem[_3449 + 128]
        continue 
    _3454 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    if not mem[_3454]:
        revert with 0, 50
    mem[_3454 + 32] = stor21
    if stor21 == stor19:
        if stor21 != stor20:
            if 1 >= mem[_3454]:
                revert with 0, 50
            mem[_3454 + 64] = stor20
            mem[_3454 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_3454 + 100] = eth.balance(this.address) / 2
            mem[_3454 + 132] = 64
            mem[_3454 + 164] = mem[_3454]
            idx = 0
            s = _3454 + 32
            t = _3454 + 196
            while idx < mem[_3454]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(stor22)
            staticcall stor22.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _3454 + (32 * mem[_3454]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5142 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5158 = mem[_5142]
            require mem[_5142] <= test266151307()
            require _5142 + mem[_5142] + 31 < _5142 + return_data.size
            _5178 = mem[_5142 + mem[_5142]]
            if mem[_5142 + mem[_5142]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5142 + mem[_5142]]) + 1 < 0 or _5142 + ceil32(return_data.size) + ceil32(32 * mem[_5142 + mem[_5142]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5142 + ceil32(return_data.size) + ceil32(32 * mem[_5142 + mem[_5142]]) + 1
            mem[_5142 + ceil32(return_data.size)] = _5178
            require _5158 + (32 * _5178) + 32 <= return_data.size
            mem[_5142 + ceil32(return_data.size) + 32 len ceil32(32 * _5178)] = mem[_5142 + _5158 + 32 len ceil32(32 * _5178)]
            if 1 >= _5178:
                revert with 0, 50
            _6693 = mem[_5142 + ceil32(return_data.size) + 64]
            if mem[_5142 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_5142 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_5142 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _5178:
                revert with 0, 50
            _6787 = mem[_5142 + ceil32(return_data.size) + 64]
            if mem[_5142 + ceil32(return_data.size) + 64] < 100 * mem[_5142 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _6837 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _6787 - (100 * _6693 / 10000)
            mem[mem[64] + 36] = 128
            _6865 = mem[_3454]
            mem[mem[64] + 132] = mem[_3454]
            idx = 0
            s = _3454 + 32
            t = mem[64] + 164
            while idx < _6865:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_6837 + 68] = this.address
            mem[_6837 + 100] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _6837 + (32 * _6865) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8208 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_8208] <= test266151307()
            require _8208 + mem[_8208] + 31 < _8208 + return_data.size
            if mem[_8208 + mem[_8208]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_8208 + mem[_8208]]) + 1 < 0 or _8208 + ceil32(return_data.size) + ceil32(32 * mem[_8208 + mem[_8208]]) + 1 > test266151307():
                revert with 0, 65
            require mem[_8208] + (32 * mem[_8208 + mem[_8208]]) + 32 <= return_data.size
    else:
        if 1 >= mem[_3454]:
            revert with 0, 50
        mem[_3454 + 64] = stor19
        mem[_3454 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[_3454 + 100] = eth.balance(this.address) / 2
        mem[_3454 + 132] = 64
        mem[_3454 + 164] = mem[_3454]
        s = 0
        t = _3454 + 32
        u = _3454 + 196
        while s < mem[_3454]:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(stor22)
        staticcall stor22.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _3454 + (32 * mem[_3454]) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5143 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5159 = mem[_5143]
        require mem[_5143] <= test266151307()
        require _5143 + mem[_5143] + 31 < _5143 + return_data.size
        _5179 = mem[_5143 + mem[_5143]]
        if mem[_5143 + mem[_5143]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5143 + mem[_5143]]) + 1 < 0 or _5143 + ceil32(return_data.size) + ceil32(32 * mem[_5143 + mem[_5143]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5143 + ceil32(return_data.size) + ceil32(32 * mem[_5143 + mem[_5143]]) + 1
        mem[_5143 + ceil32(return_data.size)] = _5179
        require _5159 + (32 * _5179) + 32 <= return_data.size
        mem[_5143 + ceil32(return_data.size) + 32 len ceil32(32 * _5179)] = mem[_5143 + _5159 + 32 len ceil32(32 * _5179)]
        if 1 >= _5179:
            revert with 0, 50
        _6694 = mem[_5143 + ceil32(return_data.size) + 64]
        if mem[_5143 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_5143 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if mem[_5143 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if 1 >= _5179:
            revert with 0, 50
        _6788 = mem[_5143 + ceil32(return_data.size) + 64]
        if mem[_5143 + ceil32(return_data.size) + 64] < 100 * mem[_5143 + ceil32(return_data.size) + 64] / 10000:
            revert with 0, 17
        if 60 > !block.timestamp:
            revert with 0, 17
        _6838 = mem[64]
        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _6788 - (100 * _6694 / 10000)
        mem[mem[64] + 36] = 128
        _6866 = mem[_3454]
        mem[mem[64] + 132] = mem[_3454]
        s = 0
        t = _3454 + 32
        u = mem[64] + 164
        while s < _6866:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[_6838 + 68] = this.address
        mem[_6838 + 100] = block.timestamp + 60
        require ext_code.size(stor22)
        call stor22.mem[mem[64] len 4] with:
           value eth.balance(this.address) / 2 wei
             gas gas_remaining wei
            args mem[mem[64] + 4 len _6838 + (32 * _6866) + -mem[64] + 160]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8209 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8229 = mem[_8209]
        require mem[_8209] <= test266151307()
        require _8209 + mem[_8209] + 31 < _8209 + return_data.size
        _8251 = mem[_8209 + mem[_8209]]
        if mem[_8209 + mem[_8209]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_8209 + mem[_8209]]) + 1 < 0 or _8209 + ceil32(return_data.size) + ceil32(32 * mem[_8209 + mem[_8209]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _8209 + ceil32(return_data.size) + ceil32(32 * mem[_8209 + mem[_8209]]) + 1
        mem[_8209 + ceil32(return_data.size)] = _8251
        require _8229 + (32 * _8251) + 32 <= return_data.size
        mem[_8209 + ceil32(return_data.size) + 32 len ceil32(32 * _8251)] = mem[_8209 + _8229 + 32 len ceil32(32 * _8251)]
        if stor21 != stor20:
            if 1 >= mem[_3454]:
                revert with 0, 50
            mem[_3454 + 64] = stor20
            _9408 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = eth.balance(this.address) / 2
            mem[mem[64] + 36] = 64
            _9417 = mem[_3454]
            mem[mem[64] + 68] = mem[_3454]
            s = 0
            t = _3454 + 32
            u = mem[64] + 100
            while s < _9417:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(stor22)
            staticcall stor22.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _9408 + (32 * _9417) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10434 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10443 = mem[_10434]
            require mem[_10434] <= test266151307()
            require _10434 + mem[_10434] + 31 < _10434 + return_data.size
            _10452 = mem[_10434 + mem[_10434]]
            if mem[_10434 + mem[_10434]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_10434 + mem[_10434]]) + 1 < 0 or _10434 + ceil32(return_data.size) + ceil32(32 * mem[_10434 + mem[_10434]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _10434 + ceil32(return_data.size) + ceil32(32 * mem[_10434 + mem[_10434]]) + 1
            mem[_10434 + ceil32(return_data.size)] = _10452
            require _10443 + (32 * _10452) + 32 <= return_data.size
            mem[_10434 + ceil32(return_data.size) + 32 len ceil32(32 * _10452)] = mem[_10434 + _10443 + 32 len ceil32(32 * _10452)]
            if 1 >= _10452:
                revert with 0, 50
            _11366 = mem[_10434 + ceil32(return_data.size) + 64]
            if mem[_10434 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_10434 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_10434 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _10452:
                revert with 0, 50
            _11444 = mem[_10434 + ceil32(return_data.size) + 64]
            if mem[_10434 + ceil32(return_data.size) + 64] < 100 * mem[_10434 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _11569 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _11444 - (100 * _11366 / 10000)
            mem[mem[64] + 36] = 128
            _11590 = mem[_3454]
            mem[mem[64] + 132] = mem[_3454]
            idx = 0
            s = _3454 + 32
            t = mem[64] + 164
            while idx < _11590:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_11569 + 68] = this.address
            mem[_11569 + 100] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _11569 + (32 * _11590) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12292 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_12292] <= test266151307()
            require _12292 + mem[_12292] + 31 < _12292 + return_data.size
            if mem[_12292 + mem[_12292]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_12292 + mem[_12292]]) + 1 < 0 or _12292 + ceil32(return_data.size) + ceil32(32 * mem[_12292 + mem[_12292]]) + 1 > test266151307():
                revert with 0, 65
            require mem[_12292] + (32 * mem[_12292 + mem[_12292]]) + 32 <= return_data.size
}

function migrate(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        if governmentAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: caller is not the owner or government'
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'The _contract can not be a zero address'
        mem[96] = 2
        mem[128 len 64] = call.data[calldata.size len 64]
        mem[64] = 448
        mem[192] = 0
        mem[224] = 0
        mem[256] = 0
        mem[288] = 0
        mem[320] = 0
        mem[352] = 0
        mem[384] = 0
        mem[416] = 0
        idx = 0
        s = 192
        s = 0
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1508 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1508] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1508 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1508 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1508 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1508 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1508 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1508 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1508 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1530 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1553 = mem[_1530]
                if not mem[_1530]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1508
                    s = mem[_1530]
                    s = stor9[idx].field_0
                    continue 
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _1596 = mem[64]
                mem[64] = mem[64] + 256
                mem[_1596] = strategyInfo[stor9[idx].field_0].field_0
                mem[_1596 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_1596 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_1596 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_1596 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_1596 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_1596 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_1596 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                    mem[mem[64] + 36] = _1553
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args strategyInfo[stor9[idx].field_0].field_512, _1553
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1674 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1694 = mem[_1674]
                    require mem[_1674] == mem[_1674 + 12 len 20]
                    if 0 >= mem[96]:
                        revert with 0, 50
                    mem[128] = mem[_1674 + 12 len 20]
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = stor21
                    require ext_code.size(address(_1694))
                    staticcall address(_1694).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1774 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1796 = mem[_1774]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1694))
                    staticcall address(_1694).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1840 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1864 = mem[_1840]
                    if mem[_1840] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not _1796:
                        revert with 0, 18
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1952 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1962 = mem[_1952]
                    if 10^12 * _1864 / _1796 and mem[_1952] > -1 / 10^12 * _1864 / _1796:
                        revert with 0, 17
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _1864 / _1796 * _1962 / 10^12
                    mem[mem[64] + 36] = 64
                    _2054 = mem[96]
                    mem[mem[64] + 68] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 100
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len (32 * _2054) + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3754 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3770 = mem[_3754]
                    require mem[_3754] <= test266151307()
                    require _3754 + mem[_3754] + 31 < _3754 + return_data.size
                    _3786 = mem[_3754 + mem[_3754]]
                    if mem[_3754 + mem[_3754]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_3754 + mem[_3754]]) + 1 < 0 or _3754 + ceil32(return_data.size) + ceil32(32 * mem[_3754 + mem[_3754]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _3754 + ceil32(return_data.size) + ceil32(32 * mem[_3754 + mem[_3754]]) + 1
                    mem[_3754 + ceil32(return_data.size)] = _3786
                    require _3770 + (32 * _3786) + 32 <= return_data.size
                    t = _3754 + ceil32(return_data.size) + 32
                    s = _3754 + _3770 + 32
                    while s < _3754 + _3770 + (32 * _3786) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _3786:
                        revert with 0, 50
                    _6934 = mem[_3754 + ceil32(return_data.size) + 64]
                    if mem[_3754 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3754 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_3754 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if mem[_3754 + ceil32(return_data.size) + 64] < 100 * mem[_3754 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    _7112 = mem[_1508]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1694))
                    staticcall address(_1694).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7170 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7208 = mem[_7170]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7208
                    mem[mem[64] + 36] = _6934 - (100 * _6934 / 10000)
                    mem[mem[64] + 68] = 160
                    _7282 = mem[96]
                    mem[mem[64] + 164] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 196
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 60
                    require ext_code.size(address(_7112))
                    call address(_7112).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7282) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10480 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10500 = mem[_10480]
                    require mem[_10480] <= test266151307()
                    require _10480 + mem[_10480] + 31 < _10480 + return_data.size
                    _10526 = mem[_10480 + mem[_10480]]
                    if mem[_10480 + mem[_10480]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10480 + mem[_10480]]) + 1 < 0 or _10480 + ceil32(return_data.size) + ceil32(32 * mem[_10480 + mem[_10480]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10480 + ceil32(return_data.size) + ceil32(32 * mem[_10480 + mem[_10480]]) + 1
                    mem[_10480 + ceil32(return_data.size)] = _10526
                    require _10500 + (32 * _10526) + 32 <= return_data.size
                    t = _10480 + ceil32(return_data.size) + 32
                    s = _10480 + _10500 + 32
                    while s < _10480 + _10500 + (32 * _10526) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _13944 = mem[_1508]
                    _13945 = mem[_1508 + 192]
                    _13946 = mem[_1508 + 224]
                    _13975 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    mem[_13975 + 32 len 64] = call.data[calldata.size len 64]
                    if not mem[_13975]:
                        revert with 0, 50
                    mem[_13975 + 32] = stor21
                    if stor21 == address(_13945):
                        if stor21 == address(_13946):
                            _14071 = mem[_1508 + 160]
                            _14072 = mem[_1508 + 64]
                            _14073 = mem[_1508 + 32]
                            mem[_13975 + 100] = this.address
                            require ext_code.size(address(_14073))
                            staticcall address(_14073).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13975 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13975 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            if _14072 >= 999999:
                                mem[_13975 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                                require ext_code.size(address(_14071))
                                call address(_14071).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13975 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _14344 = mem[_1508 + 32]
                                mem[_13975 + ceil32(return_data.size) + 100] = this.address
                                require ext_code.size(address(_14344))
                                staticcall address(_14344).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_13975 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1508 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_13975 + (2 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_13975 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13975 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _14631 = mem[_1508]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_13975 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_13975 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_13975 + (4 * ceil32(return_data.size)) + 132] = 128
                                mem[_13975 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _13975 + (4 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_13975 + (4 * ceil32(return_data.size)) + 164] = this.address
                                mem[_13975 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_14631))
                                call address(_14631).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13975 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13975 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _13975 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _17397 = mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13975 + (4 * ceil32(return_data.size)) + return_data.size + 96
                                _17429 = mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13975 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _13975 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_13975 + (6 * ceil32(return_data.size)) + 96] = mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                require _17397 + (32 * _17429) + 32 <= return_data.size
                                t = _13975 + (6 * ceil32(return_data.size)) + 128
                                s = _13975 + (4 * ceil32(return_data.size)) + _17397 + 128
                                while s < _13975 + (4 * ceil32(return_data.size)) + _17397 + (32 * _17429) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20203 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_20203]
                            else:
                                mem[_13975 + ceil32(return_data.size) + 100] = _14072
                                mem[_13975 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                require ext_code.size(address(_14071))
                                call address(_14071).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _14072, ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13975 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _14345 = mem[_1508 + 32]
                                mem[_13975 + ceil32(return_data.size) + 100] = this.address
                                require ext_code.size(address(_14345))
                                staticcall address(_14345).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_13975 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1508 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_13975 + (2 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_13975 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13975 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _14632 = mem[_1508]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_13975 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_13975 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_13975 + (4 * ceil32(return_data.size)) + 132] = 128
                                mem[_13975 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _13975 + (4 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_13975 + (4 * ceil32(return_data.size)) + 164] = this.address
                                mem[_13975 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_14632))
                                call address(_14632).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13975 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13975 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _13975 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _17398 = mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13975 + (4 * ceil32(return_data.size)) + return_data.size + 96
                                _17430 = mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13975 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _13975 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_13975 + (6 * ceil32(return_data.size)) + 96] = mem[_13975 + (4 * ceil32(return_data.size)) + mem[_13975 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                require _17398 + (32 * _17430) + 32 <= return_data.size
                                t = _13975 + (6 * ceil32(return_data.size)) + 128
                                s = _13975 + (4 * ceil32(return_data.size)) + _17398 + 128
                                while s < _13975 + (4 * ceil32(return_data.size)) + _17398 + (32 * _17430) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20204 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_20204]
                        else:
                            if 1 >= mem[_13975]:
                                revert with 0, 50
                            mem[_13975 + 64] = address(_13946)
                            mem[_13975 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_13975 + 100] = eth.balance(this.address) / 2
                            mem[_13975 + 132] = 64
                            mem[_13975 + 164] = mem[_13975]
                            s = 0
                            t = _13975 + 32
                            u = _13975 + 196
                            while s < mem[_13975]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            require ext_code.size(address(_13944))
                            staticcall address(_13944).mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _13975 + (32 * mem[_13975]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17377 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17413 = mem[_17377]
                            require mem[_17377] <= test266151307()
                            require _17377 + mem[_17377] + 31 < _17377 + return_data.size
                            _17445 = mem[_17377 + mem[_17377]]
                            if mem[_17377 + mem[_17377]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_17377 + mem[_17377]]) + 1 < 0 or _17377 + ceil32(return_data.size) + ceil32(32 * mem[_17377 + mem[_17377]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _17377 + ceil32(return_data.size) + ceil32(32 * mem[_17377 + mem[_17377]]) + 1
                            mem[_17377 + ceil32(return_data.size)] = _17445
                            require _17413 + (32 * _17445) + 32 <= return_data.size
                            t = _17377 + ceil32(return_data.size) + 32
                            s = _17377 + _17413 + 32
                            while s < _17377 + _17413 + (32 * _17445) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            if 1 >= _17445:
                                revert with 0, 50
                            _20145 = mem[_17377 + ceil32(return_data.size) + 64]
                            if mem[_17377 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17377 + ceil32(return_data.size) + 64]:
                                revert with 0, 17
                            if mem[_17377 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                revert with 0, 17
                            if 1 >= _17445:
                                revert with 0, 50
                            _20281 = mem[_17377 + ceil32(return_data.size) + 64]
                            if mem[_17377 + ceil32(return_data.size) + 64] < 100 * mem[_17377 + ceil32(return_data.size) + 64] / 10000:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _20319 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20281 - (100 * _20145 / 10000)
                            mem[mem[64] + 36] = 128
                            _20357 = mem[_13975]
                            mem[mem[64] + 132] = mem[_13975]
                            s = 0
                            t = _13975 + 32
                            u = mem[64] + 164
                            while s < _20357:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_20319 + 68] = this.address
                            mem[_20319 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13944))
                            call address(_13944).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _20319 + (32 * _20357) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22677 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22715 = mem[_22677]
                            require mem[_22677] <= test266151307()
                            require _22677 + mem[_22677] + 31 < _22677 + return_data.size
                            _22743 = mem[_22677 + mem[_22677]]
                            if mem[_22677 + mem[_22677]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_22677 + mem[_22677]]) + 1 < 0 or _22677 + ceil32(return_data.size) + ceil32(32 * mem[_22677 + mem[_22677]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _22677 + ceil32(return_data.size) + ceil32(32 * mem[_22677 + mem[_22677]]) + 1
                            mem[_22677 + ceil32(return_data.size)] = _22743
                            require _22715 + (32 * _22743) + 32 <= return_data.size
                            t = _22677 + ceil32(return_data.size) + 32
                            s = _22677 + _22715 + 32
                            while s < _22677 + _22715 + (32 * _22743) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            _24977 = mem[_1508 + 160]
                            _24978 = mem[_1508 + 64]
                            _24979 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_24979))
                            staticcall address(_24979).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25067 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25099 = mem[_25067]
                            if _24978 >= 999999:
                                mem[mem[64] + 4] = mem[_25067]
                                require ext_code.size(address(_24977))
                                call address(_24977).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _25099
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _25099
                                emit Earn(_25099);
                                _25295 = mem[_1508 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25295))
                                staticcall address(_25295).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25426 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1508 + 96] = mem[_25426]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25647 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25679 = mem[_25647]
                                _25715 = mem[_1508]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _25782 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25679
                                mem[mem[64] + 36] = 128
                                _25823 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_25782 + 100] = block.timestamp + 60
                                require ext_code.size(address(_25715))
                                call address(_25715).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _25782 + (32 * _25823) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27097 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27137 = mem[_27097]
                                require mem[_27097] <= test266151307()
                                require _27097 + mem[_27097] + 31 < _27097 + return_data.size
                                _27177 = mem[_27097 + mem[_27097]]
                                if mem[_27097 + mem[_27097]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_27097 + mem[_27097]]) + 1 < 0 or _27097 + ceil32(return_data.size) + ceil32(32 * mem[_27097 + mem[_27097]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _27097 + ceil32(return_data.size) + ceil32(32 * mem[_27097 + mem[_27097]]) + 1
                                mem[_27097 + ceil32(return_data.size)] = _27177
                                require _27137 + (32 * _27177) + 32 <= return_data.size
                                t = _27097 + ceil32(return_data.size) + 32
                                s = _27097 + _27137 + 32
                                while s < _27097 + _27137 + (32 * _27177) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28409 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28409]
                            else:
                                mem[mem[64] + 4] = _24978
                                mem[mem[64] + 36] = _25099
                                require ext_code.size(address(_24977))
                                call address(_24977).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _24978, _25099
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _25099
                                emit Earn(_25099);
                                _25296 = mem[_1508 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25296))
                                staticcall address(_25296).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25427 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1508 + 96] = mem[_25427]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25648 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25680 = mem[_25648]
                                _25716 = mem[_1508]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _25783 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25680
                                mem[mem[64] + 36] = 128
                                _25824 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _25824:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_25783 + 68] = this.address
                                mem[_25783 + 100] = block.timestamp + 60
                                require ext_code.size(address(_25716))
                                call address(_25716).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _25783 + (32 * _25824) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27098 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27138 = mem[_27098]
                                require mem[_27098] <= test266151307()
                                require _27098 + mem[_27098] + 31 < _27098 + return_data.size
                                _27178 = mem[_27098 + mem[_27098]]
                                if mem[_27098 + mem[_27098]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_27098 + mem[_27098]]) + 1 < 0 or _27098 + ceil32(return_data.size) + ceil32(32 * mem[_27098 + mem[_27098]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _27098 + ceil32(return_data.size) + ceil32(32 * mem[_27098 + mem[_27098]]) + 1
                                mem[_27098 + ceil32(return_data.size)] = _27178
                                require _27138 + (32 * _27178) + 32 <= return_data.size
                                t = _27098 + ceil32(return_data.size) + 32
                                s = _27098 + _27138 + 32
                                while s < _27098 + _27138 + (32 * _27178) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28410 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28410]
                    else:
                        if 1 >= mem[_13975]:
                            revert with 0, 50
                        mem[_13975 + 64] = address(_13945)
                        mem[_13975 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_13975 + 100] = eth.balance(this.address) / 2
                        mem[_13975 + 132] = 64
                        mem[_13975 + 164] = mem[_13975]
                        s = 0
                        t = _13975 + 32
                        u = _13975 + 196
                        while s < mem[_13975]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13944))
                        staticcall address(_13944).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _13975 + (32 * mem[_13975]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17378 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17414 = mem[_17378]
                        require mem[_17378] <= test266151307()
                        require _17378 + mem[_17378] + 31 < _17378 + return_data.size
                        _17446 = mem[_17378 + mem[_17378]]
                        if mem[_17378 + mem[_17378]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_17378 + mem[_17378]]) + 1 < 0 or _17378 + ceil32(return_data.size) + ceil32(32 * mem[_17378 + mem[_17378]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _17378 + ceil32(return_data.size) + ceil32(32 * mem[_17378 + mem[_17378]]) + 1
                        mem[_17378 + ceil32(return_data.size)] = _17446
                        require _17414 + (32 * _17446) + 32 <= return_data.size
                        t = _17378 + ceil32(return_data.size) + 32
                        s = _17378 + _17414 + 32
                        while s < _17378 + _17414 + (32 * _17446) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _17446:
                            revert with 0, 50
                        _20146 = mem[_17378 + ceil32(return_data.size) + 64]
                        if mem[_17378 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17378 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_17378 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _17446:
                            revert with 0, 50
                        _20282 = mem[_17378 + ceil32(return_data.size) + 64]
                        if mem[_17378 + ceil32(return_data.size) + 64] < 100 * mem[_17378 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _20320 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20282 - (100 * _20146 / 10000)
                        mem[mem[64] + 36] = 128
                        _20358 = mem[_13975]
                        mem[mem[64] + 132] = mem[_13975]
                        s = 0
                        t = _13975 + 32
                        u = mem[64] + 164
                        while s < _20358:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_20320 + 68] = this.address
                        mem[_20320 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13944))
                        call address(_13944).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _20320 + (32 * _20358) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22678 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22716 = mem[_22678]
                        require mem[_22678] <= test266151307()
                        require _22678 + mem[_22678] + 31 < _22678 + return_data.size
                        _22744 = mem[_22678 + mem[_22678]]
                        if mem[_22678 + mem[_22678]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22678 + mem[_22678]]) + 1 < 0 or _22678 + ceil32(return_data.size) + ceil32(32 * mem[_22678 + mem[_22678]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22678 + ceil32(return_data.size) + ceil32(32 * mem[_22678 + mem[_22678]]) + 1
                        mem[_22678 + ceil32(return_data.size)] = _22744
                        require _22716 + (32 * _22744) + 32 <= return_data.size
                        t = _22678 + ceil32(return_data.size) + 32
                        s = _22678 + _22716 + 32
                        while s < _22678 + _22716 + (32 * _22744) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if stor21 == address(_13946):
                            _25025 = mem[_1508 + 160]
                            _25026 = mem[_1508 + 64]
                            _25027 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25027))
                            staticcall address(_25027).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25084 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25116 = mem[_25084]
                            if _25026 >= 999999:
                                mem[mem[64] + 4] = mem[_25084]
                                require ext_code.size(address(_25025))
                                call address(_25025).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _25116
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _25116
                                emit Earn(_25116);
                                _25362 = mem[_1508 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25362))
                                staticcall address(_25362).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25443 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1508 + 96] = mem[_25443]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25663 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25695 = mem[_25663]
                                _25731 = mem[_1508]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _25801 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25695
                                mem[mem[64] + 36] = 128
                                _25841 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _25841:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_25801 + 68] = this.address
                                mem[_25801 + 100] = block.timestamp + 60
                                require ext_code.size(address(_25731))
                                call address(_25731).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _25801 + (32 * _25841) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27099 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27139 = mem[_27099]
                                require mem[_27099] <= test266151307()
                                require _27099 + mem[_27099] + 31 < _27099 + return_data.size
                                _27179 = mem[_27099 + mem[_27099]]
                                if mem[_27099 + mem[_27099]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_27099 + mem[_27099]]) + 1 < 0 or _27099 + ceil32(return_data.size) + ceil32(32 * mem[_27099 + mem[_27099]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _27099 + ceil32(return_data.size) + ceil32(32 * mem[_27099 + mem[_27099]]) + 1
                                mem[_27099 + ceil32(return_data.size)] = _27179
                                require _27139 + (32 * _27179) + 32 <= return_data.size
                                t = _27099 + ceil32(return_data.size) + 32
                                s = _27099 + _27139 + 32
                                while s < _27099 + _27139 + (32 * _27179) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28411 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28411]
                            else:
                                mem[mem[64] + 4] = _25026
                                mem[mem[64] + 36] = _25116
                                require ext_code.size(address(_25025))
                                call address(_25025).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _25026, _25116
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _25116
                                emit Earn(_25116);
                                _25363 = mem[_1508 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25363))
                                staticcall address(_25363).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25444 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1508 + 96] = mem[_25444]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25664 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25696 = mem[_25664]
                                _25732 = mem[_1508]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _25802 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25696
                                mem[mem[64] + 36] = 128
                                _25842 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _25842:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_25802 + 68] = this.address
                                mem[_25802 + 100] = block.timestamp + 60
                                require ext_code.size(address(_25732))
                                call address(_25732).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _25802 + (32 * _25842) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27100 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27140 = mem[_27100]
                                require mem[_27100] <= test266151307()
                                require _27100 + mem[_27100] + 31 < _27100 + return_data.size
                                _27180 = mem[_27100 + mem[_27100]]
                                if mem[_27100 + mem[_27100]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_27100 + mem[_27100]]) + 1 < 0 or _27100 + ceil32(return_data.size) + ceil32(32 * mem[_27100 + mem[_27100]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _27100 + ceil32(return_data.size) + ceil32(32 * mem[_27100 + mem[_27100]]) + 1
                                mem[_27100 + ceil32(return_data.size)] = _27180
                                require _27140 + (32 * _27180) + 32 <= return_data.size
                                t = _27100 + ceil32(return_data.size) + 32
                                s = _27100 + _27140 + 32
                                while s < _27100 + _27140 + (32 * _27180) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28412 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28412]
                        else:
                            if 1 >= mem[_13975]:
                                revert with 0, 50
                            mem[_13975 + 64] = address(_13946)
                            _25028 = mem[64]
                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = eth.balance(this.address) / 2
                            mem[mem[64] + 36] = 64
                            _25068 = mem[_13975]
                            mem[mem[64] + 68] = mem[_13975]
                            s = 0
                            t = _13975 + 32
                            u = mem[64] + 100
                            while s < _25068:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            require ext_code.size(address(_13944))
                            staticcall address(_13944).mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _25028 + (32 * _25068) + -mem[64] + 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27108 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27148 = mem[_27108]
                            require mem[_27108] <= test266151307()
                            require _27108 + mem[_27108] + 31 < _27108 + return_data.size
                            _27188 = mem[_27108 + mem[_27108]]
                            if mem[_27108 + mem[_27108]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27108 + mem[_27108]]) + 1 < 0 or _27108 + ceil32(return_data.size) + ceil32(32 * mem[_27108 + mem[_27108]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27108 + ceil32(return_data.size) + ceil32(32 * mem[_27108 + mem[_27108]]) + 1
                            mem[_27108 + ceil32(return_data.size)] = _27188
                            require _27148 + (32 * _27188) + 32 <= return_data.size
                            t = _27108 + ceil32(return_data.size) + 32
                            s = _27108 + _27148 + 32
                            while s < _27108 + _27148 + (32 * _27188) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            if 1 >= _27188:
                                revert with 0, 50
                            _28308 = mem[_27108 + ceil32(return_data.size) + 64]
                            if mem[_27108 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27108 + ceil32(return_data.size) + 64]:
                                revert with 0, 17
                            if mem[_27108 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                revert with 0, 17
                            if 1 >= _27188:
                                revert with 0, 50
                            _28484 = mem[_27108 + ceil32(return_data.size) + 64]
                            if mem[_27108 + ceil32(return_data.size) + 64] < 100 * mem[_27108 + ceil32(return_data.size) + 64] / 10000:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28506 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28484 - (100 * _28308 / 10000)
                            mem[mem[64] + 36] = 128
                            _28520 = mem[_13975]
                            mem[mem[64] + 132] = mem[_13975]
                            s = 0
                            t = _13975 + 32
                            u = mem[64] + 164
                            while s < _28520:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28506 + 68] = this.address
                            mem[_28506 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13944))
                            call address(_13944).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28506 + (32 * _28520) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29234 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29248 = mem[_29234]
                            require mem[_29234] <= test266151307()
                            require _29234 + mem[_29234] + 31 < _29234 + return_data.size
                            _29260 = mem[_29234 + mem[_29234]]
                            if mem[_29234 + mem[_29234]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29234 + mem[_29234]]) + 1 < 0 or _29234 + ceil32(return_data.size) + ceil32(32 * mem[_29234 + mem[_29234]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29234 + ceil32(return_data.size) + ceil32(32 * mem[_29234 + mem[_29234]]) + 1
                            mem[_29234 + ceil32(return_data.size)] = _29260
                            require _29248 + (32 * _29260) + 32 <= return_data.size
                            t = _29234 + ceil32(return_data.size) + 32
                            s = _29234 + _29248 + 32
                            while s < _29234 + _29248 + (32 * _29260) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            _29926 = mem[_1508 + 160]
                            _29927 = mem[_1508 + 64]
                            _29928 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_29928))
                            staticcall address(_29928).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29964 = mem[_29954]
                            if _29927 >= 999999:
                                mem[mem[64] + 4] = mem[_29954]
                                require ext_code.size(address(_29926))
                                call address(_29926).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _29964
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _29964
                                emit Earn(_29964);
                                _30049 = mem[_1508 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_30049))
                                staticcall address(_30049).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30101 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1508 + 96] = mem[_30101]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30197 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _30213 = mem[_30197]
                                _30231 = mem[_1508]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _30253 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _30213
                                mem[mem[64] + 36] = 128
                                _30271 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _30271:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_30253 + 68] = this.address
                                mem[_30253 + 100] = block.timestamp + 60
                                require ext_code.size(address(_30231))
                                call address(_30231).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _30253 + (32 * _30271) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30519 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _30535 = mem[_30519]
                                require mem[_30519] <= test266151307()
                                require _30519 + mem[_30519] + 31 < _30519 + return_data.size
                                _30551 = mem[_30519 + mem[_30519]]
                                if mem[_30519 + mem[_30519]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_30519 + mem[_30519]]) + 1 < 0 or _30519 + ceil32(return_data.size) + ceil32(32 * mem[_30519 + mem[_30519]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _30519 + ceil32(return_data.size) + ceil32(32 * mem[_30519 + mem[_30519]]) + 1
                                mem[_30519 + ceil32(return_data.size)] = _30551
                                require _30535 + (32 * _30551) + 32 <= return_data.size
                                t = _30519 + ceil32(return_data.size) + 32
                                s = _30519 + _30535 + 32
                                while s < _30519 + _30535 + (32 * _30551) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30745 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_30745]
                            else:
                                mem[mem[64] + 4] = _29927
                                mem[mem[64] + 36] = _29964
                                require ext_code.size(address(_29926))
                                call address(_29926).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _29927, _29964
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _29964
                                emit Earn(_29964);
                                _30050 = mem[_1508 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_30050))
                                staticcall address(_30050).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30102 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1508 + 96] = mem[_30102]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30198 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _30214 = mem[_30198]
                                _30232 = mem[_1508]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _30254 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _30214
                                mem[mem[64] + 36] = 128
                                _30272 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_30254 + 100] = block.timestamp + 60
                                require ext_code.size(address(_30232))
                                call address(_30232).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _30254 + (32 * _30272) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30520 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _30536 = mem[_30520]
                                require mem[_30520] <= test266151307()
                                require _30520 + mem[_30520] + 31 < _30520 + return_data.size
                                _30552 = mem[_30520 + mem[_30520]]
                                if mem[_30520 + mem[_30520]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_30520 + mem[_30520]]) + 1 < 0 or _30520 + ceil32(return_data.size) + ceil32(32 * mem[_30520 + mem[_30520]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _30520 + ceil32(return_data.size) + ceil32(32 * mem[_30520 + mem[_30520]]) + 1
                                mem[_30520 + ceil32(return_data.size)] = _30552
                                require _30536 + (32 * _30552) + 32 <= return_data.size
                                t = _30520 + ceil32(return_data.size) + 32
                                s = _30520 + _30536 + 32
                                while s < _30520 + _30536 + (32 * _30552) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30746 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_30746]
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1508
                    s = _6934 - (100 * _6934 / 10000)
                    s = stor9[idx].field_0
                    continue 
                mem[mem[64] + 4] = _1553
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _1553
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1673 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1693 = mem[_1673]
                require mem[_1673] == mem[_1673 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1673 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1693))
                staticcall address(_1693).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1773 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1795 = mem[_1773]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1693))
                staticcall address(_1693).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1839 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1863 = mem[_1839]
                if mem[_1839] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1795:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1951 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1961 = mem[_1951]
                if 10^12 * _1863 / _1795 and mem[_1951] > -1 / 10^12 * _1863 / _1795:
                    revert with 0, 17
                _2023 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1863 / _1795 * _1961 / 10^12
                mem[mem[64] + 36] = 64
                _2053 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _2053:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _2023 + (32 * _2053) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3753 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3769 = mem[_3753]
                require mem[_3753] <= test266151307()
                require _3753 + mem[_3753] + 31 < _3753 + return_data.size
                _3785 = mem[_3753 + mem[_3753]]
                if mem[_3753 + mem[_3753]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3753 + mem[_3753]]) + 1 < 0 or _3753 + ceil32(return_data.size) + ceil32(32 * mem[_3753 + mem[_3753]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3753 + ceil32(return_data.size) + ceil32(32 * mem[_3753 + mem[_3753]]) + 1
                mem[_3753 + ceil32(return_data.size)] = _3785
                require _3769 + (32 * _3785) + 32 <= return_data.size
                t = _3753 + ceil32(return_data.size) + 32
                s = _3753 + _3769 + 32
                while s < _3753 + _3769 + (32 * _3785) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3785:
                    revert with 0, 50
                _6933 = mem[_3753 + ceil32(return_data.size) + 64]
                if mem[_3753 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3753 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_3753 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_3753 + ceil32(return_data.size) + 64] < 100 * mem[_3753 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _7111 = mem[_1508]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1693))
                staticcall address(_1693).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7169 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7207 = mem[_7169]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _7249 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7207
                mem[mem[64] + 36] = _6933 - (100 * _6933 / 10000)
                mem[mem[64] + 68] = 160
                _7281 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _7281:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7249 + 100] = this.address
                mem[_7249 + 132] = block.timestamp + 60
                require ext_code.size(address(_7111))
                call address(_7111).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7249 + (32 * _7281) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10479 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10499 = mem[_10479]
                require mem[_10479] <= test266151307()
                require _10479 + mem[_10479] + 31 < _10479 + return_data.size
                _10525 = mem[_10479 + mem[_10479]]
                if mem[_10479 + mem[_10479]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10479 + mem[_10479]]) + 1 < 0 or _10479 + ceil32(return_data.size) + ceil32(32 * mem[_10479 + mem[_10479]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10479 + ceil32(return_data.size) + ceil32(32 * mem[_10479 + mem[_10479]]) + 1
                mem[_10479 + ceil32(return_data.size)] = _10525
                require _10499 + (32 * _10525) + 32 <= return_data.size
                t = _10479 + ceil32(return_data.size) + 32
                s = _10479 + _10499 + 32
                while s < _10479 + _10499 + (32 * _10525) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _13941 = mem[_1508]
                _13942 = mem[_1508 + 192]
                _13943 = mem[_1508 + 224]
                _13973 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_13973 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_13973]:
                    revert with 0, 50
                mem[_13973 + 32] = stor21
                if stor21 == address(_13942):
                    if stor21 == address(_13943):
                        _14067 = mem[_1508 + 160]
                        _14068 = mem[_1508 + 64]
                        _14069 = mem[_1508 + 32]
                        mem[_13973 + 100] = this.address
                        require ext_code.size(address(_14069))
                        staticcall address(_14069).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13973 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13973 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        if _14068 >= 999999:
                            mem[_13973 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_14067))
                            call address(_14067).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13973 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _14341 = mem[_1508 + 32]
                            mem[_13973 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_14341))
                            staticcall address(_14341).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13973 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1508 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_13973 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13973 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13973 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _14629 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_13973 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_13973 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_13973 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_13973 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _13973 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13973 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_13973 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_14629))
                            call address(_14629).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13973 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13973 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _13973 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17395 = mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13973 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _17427 = mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13973 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _13973 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_13973 + (6 * ceil32(return_data.size)) + 96] = _17427
                            require _17395 + (32 * _17427) + 32 <= return_data.size
                            t = _13973 + (6 * ceil32(return_data.size)) + 128
                            s = _13973 + (4 * ceil32(return_data.size)) + _17395 + 128
                            while s < _13973 + (4 * ceil32(return_data.size)) + _17395 + (32 * _17427) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20201 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_20201]
                        else:
                            mem[_13973 + ceil32(return_data.size) + 100] = _14068
                            mem[_13973 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_14067))
                            call address(_14067).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _14068, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13973 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _14342 = mem[_1508 + 32]
                            mem[_13973 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_14342))
                            staticcall address(_14342).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13973 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1508 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_13973 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13973 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13973 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _14630 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_13973 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_13973 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_13973 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_13973 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _13973 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13973 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_13973 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_14630))
                            call address(_14630).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13973 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13973 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _13973 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17396 = mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13973 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _17428 = mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13973 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _13973 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13973 + (4 * ceil32(return_data.size)) + mem[_13973 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_13973 + (6 * ceil32(return_data.size)) + 96] = _17428
                            require _17396 + (32 * _17428) + 32 <= return_data.size
                            t = _13973 + (6 * ceil32(return_data.size)) + 128
                            s = _13973 + (4 * ceil32(return_data.size)) + _17396 + 128
                            while s < _13973 + (4 * ceil32(return_data.size)) + _17396 + (32 * _17428) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_20202]
                    else:
                        if 1 >= mem[_13973]:
                            revert with 0, 50
                        mem[_13973 + 64] = address(_13943)
                        mem[_13973 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_13973 + 100] = eth.balance(this.address) / 2
                        mem[_13973 + 132] = 64
                        mem[_13973 + 164] = mem[_13973]
                        s = 0
                        t = _13973 + 32
                        u = _13973 + 196
                        while s < mem[_13973]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13941))
                        staticcall address(_13941).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _13973 + (32 * mem[_13973]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17375 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17411 = mem[_17375]
                        require mem[_17375] <= test266151307()
                        require _17375 + mem[_17375] + 31 < _17375 + return_data.size
                        _17443 = mem[_17375 + mem[_17375]]
                        if mem[_17375 + mem[_17375]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_17375 + mem[_17375]]) + 1 < 0 or _17375 + ceil32(return_data.size) + ceil32(32 * mem[_17375 + mem[_17375]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _17375 + ceil32(return_data.size) + ceil32(32 * mem[_17375 + mem[_17375]]) + 1
                        mem[_17375 + ceil32(return_data.size)] = _17443
                        require _17411 + (32 * _17443) + 32 <= return_data.size
                        t = _17375 + ceil32(return_data.size) + 32
                        s = _17375 + _17411 + 32
                        while s < _17375 + _17411 + (32 * _17443) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _17443:
                            revert with 0, 50
                        _20143 = mem[_17375 + ceil32(return_data.size) + 64]
                        if mem[_17375 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17375 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_17375 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _17443:
                            revert with 0, 50
                        _20279 = mem[_17375 + ceil32(return_data.size) + 64]
                        if mem[_17375 + ceil32(return_data.size) + 64] < 100 * mem[_17375 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _20317 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20279 - (100 * _20143 / 10000)
                        mem[mem[64] + 36] = 128
                        _20355 = mem[_13973]
                        mem[mem[64] + 132] = mem[_13973]
                        s = 0
                        t = _13973 + 32
                        u = mem[64] + 164
                        while s < _20355:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_20317 + 68] = this.address
                        mem[_20317 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13941))
                        call address(_13941).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _20317 + (32 * _20355) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22675 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22713 = mem[_22675]
                        require mem[_22675] <= test266151307()
                        require _22675 + mem[_22675] + 31 < _22675 + return_data.size
                        _22741 = mem[_22675 + mem[_22675]]
                        if mem[_22675 + mem[_22675]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22675 + mem[_22675]]) + 1 < 0 or _22675 + ceil32(return_data.size) + ceil32(32 * mem[_22675 + mem[_22675]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22675 + ceil32(return_data.size) + ceil32(32 * mem[_22675 + mem[_22675]]) + 1
                        mem[_22675 + ceil32(return_data.size)] = _22741
                        require _22713 + (32 * _22741) + 32 <= return_data.size
                        t = _22675 + ceil32(return_data.size) + 32
                        s = _22675 + _22713 + 32
                        while s < _22675 + _22713 + (32 * _22741) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _24973 = mem[_1508 + 160]
                        _24974 = mem[_1508 + 64]
                        _24975 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24975))
                        staticcall address(_24975).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25065 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25097 = mem[_25065]
                        if _24974 >= 999999:
                            mem[mem[64] + 4] = mem[_25065]
                            require ext_code.size(address(_24973))
                            call address(_24973).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _25097
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25097
                            emit Earn(_25097);
                            _25289 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25289))
                            staticcall address(_25289).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25423 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_25423]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25645 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25677 = mem[_25645]
                            _25713 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25779 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25677
                            mem[mem[64] + 36] = 128
                            _25821 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25821:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25779 + 68] = this.address
                            mem[_25779 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25713))
                            call address(_25713).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25779 + (32 * _25821) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27093 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27133 = mem[_27093]
                            require mem[_27093] <= test266151307()
                            require _27093 + mem[_27093] + 31 < _27093 + return_data.size
                            _27173 = mem[_27093 + mem[_27093]]
                            if mem[_27093 + mem[_27093]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27093 + mem[_27093]]) + 1 < 0 or _27093 + ceil32(return_data.size) + ceil32(32 * mem[_27093 + mem[_27093]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27093 + ceil32(return_data.size) + ceil32(32 * mem[_27093 + mem[_27093]]) + 1
                            mem[_27093 + ceil32(return_data.size)] = _27173
                            require _27133 + (32 * _27173) + 32 <= return_data.size
                            t = _27093 + ceil32(return_data.size) + 32
                            s = _27093 + _27133 + 32
                            while s < _27093 + _27133 + (32 * _27173) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28405 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28405]
                        else:
                            mem[mem[64] + 4] = _24974
                            mem[mem[64] + 36] = _25097
                            require ext_code.size(address(_24973))
                            call address(_24973).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _24974, _25097
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25097
                            emit Earn(_25097);
                            _25290 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25290))
                            staticcall address(_25290).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25424 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_25424]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25646 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25678 = mem[_25646]
                            _25714 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25780 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25678
                            mem[mem[64] + 36] = 128
                            _25822 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25822:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25780 + 68] = this.address
                            mem[_25780 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25714))
                            call address(_25714).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25780 + (32 * _25822) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27094 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27134 = mem[_27094]
                            require mem[_27094] <= test266151307()
                            require _27094 + mem[_27094] + 31 < _27094 + return_data.size
                            _27174 = mem[_27094 + mem[_27094]]
                            if mem[_27094 + mem[_27094]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27094 + mem[_27094]]) + 1 < 0 or _27094 + ceil32(return_data.size) + ceil32(32 * mem[_27094 + mem[_27094]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27094 + ceil32(return_data.size) + ceil32(32 * mem[_27094 + mem[_27094]]) + 1
                            mem[_27094 + ceil32(return_data.size)] = _27174
                            require _27134 + (32 * _27174) + 32 <= return_data.size
                            t = _27094 + ceil32(return_data.size) + 32
                            s = _27094 + _27134 + 32
                            while s < _27094 + _27134 + (32 * _27174) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28406 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28406]
                else:
                    if 1 >= mem[_13973]:
                        revert with 0, 50
                    mem[_13973 + 64] = address(_13942)
                    mem[_13973 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_13973 + 100] = eth.balance(this.address) / 2
                    mem[_13973 + 132] = 64
                    mem[_13973 + 164] = mem[_13973]
                    s = 0
                    t = _13973 + 32
                    u = _13973 + 196
                    while s < mem[_13973]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_13941))
                    staticcall address(_13941).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _13973 + (32 * mem[_13973]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17376 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17412 = mem[_17376]
                    require mem[_17376] <= test266151307()
                    require _17376 + mem[_17376] + 31 < _17376 + return_data.size
                    _17444 = mem[_17376 + mem[_17376]]
                    if mem[_17376 + mem[_17376]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_17376 + mem[_17376]]) + 1 < 0 or _17376 + ceil32(return_data.size) + ceil32(32 * mem[_17376 + mem[_17376]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _17376 + ceil32(return_data.size) + ceil32(32 * mem[_17376 + mem[_17376]]) + 1
                    mem[_17376 + ceil32(return_data.size)] = _17444
                    require _17412 + (32 * _17444) + 32 <= return_data.size
                    t = _17376 + ceil32(return_data.size) + 32
                    s = _17376 + _17412 + 32
                    while s < _17376 + _17412 + (32 * _17444) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _17444:
                        revert with 0, 50
                    _20144 = mem[_17376 + ceil32(return_data.size) + 64]
                    if mem[_17376 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17376 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_17376 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _17444:
                        revert with 0, 50
                    _20280 = mem[_17376 + ceil32(return_data.size) + 64]
                    if mem[_17376 + ceil32(return_data.size) + 64] < 100 * mem[_17376 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _20318 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _20280 - (100 * _20144 / 10000)
                    mem[mem[64] + 36] = 128
                    _20356 = mem[_13973]
                    mem[mem[64] + 132] = mem[_13973]
                    s = 0
                    t = _13973 + 32
                    u = mem[64] + 164
                    while s < _20356:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_20318 + 68] = this.address
                    mem[_20318 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13941))
                    call address(_13941).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _20318 + (32 * _20356) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22676 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22714 = mem[_22676]
                    require mem[_22676] <= test266151307()
                    require _22676 + mem[_22676] + 31 < _22676 + return_data.size
                    _22742 = mem[_22676 + mem[_22676]]
                    if mem[_22676 + mem[_22676]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_22676 + mem[_22676]]) + 1 < 0 or _22676 + ceil32(return_data.size) + ceil32(32 * mem[_22676 + mem[_22676]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _22676 + ceil32(return_data.size) + ceil32(32 * mem[_22676 + mem[_22676]]) + 1
                    mem[_22676 + ceil32(return_data.size)] = _22742
                    require _22714 + (32 * _22742) + 32 <= return_data.size
                    t = _22676 + ceil32(return_data.size) + 32
                    s = _22676 + _22714 + 32
                    while s < _22676 + _22714 + (32 * _22742) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_13943):
                        _25019 = mem[_1508 + 160]
                        _25020 = mem[_1508 + 64]
                        _25021 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25021))
                        staticcall address(_25021).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25083 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25115 = mem[_25083]
                        if _25020 >= 999999:
                            mem[mem[64] + 4] = mem[_25083]
                            require ext_code.size(address(_25019))
                            call address(_25019).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _25115
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25115
                            emit Earn(_25115);
                            _25355 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25355))
                            staticcall address(_25355).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25441 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_25441]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25661 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25693 = mem[_25661]
                            _25729 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25799 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25693
                            mem[mem[64] + 36] = 128
                            _25839 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25839:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25799 + 68] = this.address
                            mem[_25799 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25729))
                            call address(_25729).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25799 + (32 * _25839) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27095 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27135 = mem[_27095]
                            require mem[_27095] <= test266151307()
                            require _27095 + mem[_27095] + 31 < _27095 + return_data.size
                            _27175 = mem[_27095 + mem[_27095]]
                            if mem[_27095 + mem[_27095]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27095 + mem[_27095]]) + 1 < 0 or _27095 + ceil32(return_data.size) + ceil32(32 * mem[_27095 + mem[_27095]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27095 + ceil32(return_data.size) + ceil32(32 * mem[_27095 + mem[_27095]]) + 1
                            mem[_27095 + ceil32(return_data.size)] = _27175
                            require _27135 + (32 * _27175) + 32 <= return_data.size
                            t = _27095 + ceil32(return_data.size) + 32
                            s = _27095 + _27135 + 32
                            while s < _27095 + _27135 + (32 * _27175) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28407 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28407]
                        else:
                            mem[mem[64] + 4] = _25020
                            mem[mem[64] + 36] = _25115
                            require ext_code.size(address(_25019))
                            call address(_25019).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _25020, _25115
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25115
                            emit Earn(_25115);
                            _25356 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25356))
                            staticcall address(_25356).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25442 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_25442]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25694 = mem[_25662]
                            _25730 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25800 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25694
                            mem[mem[64] + 36] = 128
                            _25840 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25840:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25800 + 68] = this.address
                            mem[_25800 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25730))
                            call address(_25730).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25800 + (32 * _25840) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27096 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27136 = mem[_27096]
                            require mem[_27096] <= test266151307()
                            require _27096 + mem[_27096] + 31 < _27096 + return_data.size
                            _27176 = mem[_27096 + mem[_27096]]
                            if mem[_27096 + mem[_27096]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27096 + mem[_27096]]) + 1 < 0 or _27096 + ceil32(return_data.size) + ceil32(32 * mem[_27096 + mem[_27096]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27096 + ceil32(return_data.size) + ceil32(32 * mem[_27096 + mem[_27096]]) + 1
                            mem[_27096 + ceil32(return_data.size)] = _27176
                            require _27136 + (32 * _27176) + 32 <= return_data.size
                            t = _27096 + ceil32(return_data.size) + 32
                            s = _27096 + _27136 + 32
                            while s < _27096 + _27136 + (32 * _27176) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28408 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28408]
                    else:
                        if 1 >= mem[_13973]:
                            revert with 0, 50
                        mem[_13973 + 64] = address(_13943)
                        _25022 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _25066 = mem[_13973]
                        mem[mem[64] + 68] = mem[_13973]
                        s = 0
                        t = _13973 + 32
                        u = mem[64] + 100
                        while s < _25066:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13941))
                        staticcall address(_13941).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _25022 + (32 * _25066) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27107 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27147 = mem[_27107]
                        require mem[_27107] <= test266151307()
                        require _27107 + mem[_27107] + 31 < _27107 + return_data.size
                        _27187 = mem[_27107 + mem[_27107]]
                        if mem[_27107 + mem[_27107]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27107 + mem[_27107]]) + 1 < 0 or _27107 + ceil32(return_data.size) + ceil32(32 * mem[_27107 + mem[_27107]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27107 + ceil32(return_data.size) + ceil32(32 * mem[_27107 + mem[_27107]]) + 1
                        mem[_27107 + ceil32(return_data.size)] = _27187
                        require _27147 + (32 * _27187) + 32 <= return_data.size
                        t = _27107 + ceil32(return_data.size) + 32
                        s = _27107 + _27147 + 32
                        while s < _27107 + _27147 + (32 * _27187) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27187:
                            revert with 0, 50
                        _28307 = mem[_27107 + ceil32(return_data.size) + 64]
                        if mem[_27107 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27107 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_27107 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _27187:
                            revert with 0, 50
                        _28483 = mem[_27107 + ceil32(return_data.size) + 64]
                        if mem[_27107 + ceil32(return_data.size) + 64] < 100 * mem[_27107 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28505 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28483 - (100 * _28307 / 10000)
                        mem[mem[64] + 36] = 128
                        _28519 = mem[_13973]
                        mem[mem[64] + 132] = mem[_13973]
                        s = 0
                        t = _13973 + 32
                        u = mem[64] + 164
                        while s < _28519:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28505 + 68] = this.address
                        mem[_28505 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13941))
                        call address(_13941).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28505 + (32 * _28519) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29233 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29247 = mem[_29233]
                        require mem[_29233] <= test266151307()
                        require _29233 + mem[_29233] + 31 < _29233 + return_data.size
                        _29259 = mem[_29233 + mem[_29233]]
                        if mem[_29233 + mem[_29233]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29233 + mem[_29233]]) + 1 < 0 or _29233 + ceil32(return_data.size) + ceil32(32 * mem[_29233 + mem[_29233]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29233 + ceil32(return_data.size) + ceil32(32 * mem[_29233 + mem[_29233]]) + 1
                        mem[_29233 + ceil32(return_data.size)] = _29259
                        require _29247 + (32 * _29259) + 32 <= return_data.size
                        t = _29233 + ceil32(return_data.size) + 32
                        s = _29233 + _29247 + 32
                        while s < _29233 + _29247 + (32 * _29259) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _29923 = mem[_1508 + 160]
                        _29924 = mem[_1508 + 64]
                        _29925 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_29925))
                        staticcall address(_29925).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29953 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29963 = mem[_29953]
                        if _29924 >= 999999:
                            mem[mem[64] + 4] = mem[_29953]
                            require ext_code.size(address(_29923))
                            call address(_29923).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _29963
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _29963
                            emit Earn(_29963);
                            _30047 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_30047))
                            staticcall address(_30047).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30099 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_30099]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30195 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30211 = mem[_30195]
                            _30229 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _30251 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _30211
                            mem[mem[64] + 36] = 128
                            _30269 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _30269:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_30251 + 68] = this.address
                            mem[_30251 + 100] = block.timestamp + 60
                            require ext_code.size(address(_30229))
                            call address(_30229).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _30251 + (32 * _30269) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30517 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30533 = mem[_30517]
                            require mem[_30517] <= test266151307()
                            require _30517 + mem[_30517] + 31 < _30517 + return_data.size
                            _30549 = mem[_30517 + mem[_30517]]
                            if mem[_30517 + mem[_30517]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_30517 + mem[_30517]]) + 1 < 0 or _30517 + ceil32(return_data.size) + ceil32(32 * mem[_30517 + mem[_30517]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _30517 + ceil32(return_data.size) + ceil32(32 * mem[_30517 + mem[_30517]]) + 1
                            mem[_30517 + ceil32(return_data.size)] = _30549
                            require _30533 + (32 * _30549) + 32 <= return_data.size
                            t = _30517 + ceil32(return_data.size) + 32
                            s = _30517 + _30533 + 32
                            while s < _30517 + _30533 + (32 * _30549) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30743 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_30743]
                        else:
                            mem[mem[64] + 4] = _29924
                            mem[mem[64] + 36] = _29963
                            require ext_code.size(address(_29923))
                            call address(_29923).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _29924, _29963
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _29963
                            emit Earn(_29963);
                            _30048 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_30048))
                            staticcall address(_30048).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30100 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_30100]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30196 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30212 = mem[_30196]
                            _30230 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _30252 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _30212
                            mem[mem[64] + 36] = 128
                            _30270 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _30270:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_30252 + 68] = this.address
                            mem[_30252 + 100] = block.timestamp + 60
                            require ext_code.size(address(_30230))
                            call address(_30230).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _30252 + (32 * _30270) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30518 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30534 = mem[_30518]
                            require mem[_30518] <= test266151307()
                            require _30518 + mem[_30518] + 31 < _30518 + return_data.size
                            _30550 = mem[_30518 + mem[_30518]]
                            if mem[_30518 + mem[_30518]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_30518 + mem[_30518]]) + 1 < 0 or _30518 + ceil32(return_data.size) + ceil32(32 * mem[_30518 + mem[_30518]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _30518 + ceil32(return_data.size) + ceil32(32 * mem[_30518 + mem[_30518]]) + 1
                            mem[_30518 + ceil32(return_data.size)] = _30550
                            require _30534 + (32 * _30550) + 32 <= return_data.size
                            t = _30518 + ceil32(return_data.size) + 32
                            s = _30518 + _30534 + 32
                            while s < _30518 + _30534 + (32 * _30550) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30744 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_30744]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1508
                s = _6933 - (100 * _6933 / 10000)
                s = stor9[idx].field_0
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1529 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _1552 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_1552] = mem[_1529]
            mem[_1552 + 32] = mem[_1529 + 32]
            mem[_1552 + 64] = mem[_1529 + 64]
            require return_data.size - 96 >= 96
            _1576 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1576] = mem[_1529 + 96]
            mem[_1576 + 32] = mem[_1529 + 128]
            mem[_1576 + 64] = mem[_1529 + 160]
            mem[_1552 + 96] = _1576
            mem[_1552 + 128] = mem[_1529 + 192]
            require return_data.size - 224 >= 96
            _1618 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1618] = mem[_1529 + 224]
            mem[_1618 + 32] = mem[_1529 + 256]
            mem[_1618 + 64] = mem[_1529 + 288]
            mem[_1552 + 160] = _1618
            _1644 = mem[_1552 + 64]
            if not mem[_1552 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1508
                s = mem[_1552 + 64]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1678 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1678] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1678 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1678 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1678 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1678 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1678 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1678 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1678 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _1644
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _1644
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1743 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1753 = mem[_1743]
                require mem[_1743] == mem[_1743 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1743 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1753))
                staticcall address(_1753).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1869 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1893 = mem[_1869]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1753))
                staticcall address(_1753).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1933 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1947 = mem[_1933]
                if mem[_1933] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1893:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2021 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2051 = mem[_2021]
                if 10^12 * _1947 / _1893 and mem[_2021] > -1 / 10^12 * _1947 / _1893:
                    revert with 0, 17
                _2129 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1947 / _1893 * _2051 / 10^12
                mem[mem[64] + 36] = 64
                _2163 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _2163:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _2129 + (32 * _2163) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3751 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3767 = mem[_3751]
                require mem[_3751] <= test266151307()
                require _3751 + mem[_3751] + 31 < _3751 + return_data.size
                _3783 = mem[_3751 + mem[_3751]]
                if mem[_3751 + mem[_3751]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3751 + mem[_3751]]) + 1 < 0 or _3751 + ceil32(return_data.size) + ceil32(32 * mem[_3751 + mem[_3751]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3751 + ceil32(return_data.size) + ceil32(32 * mem[_3751 + mem[_3751]]) + 1
                mem[_3751 + ceil32(return_data.size)] = _3783
                require _3767 + (32 * _3783) + 32 <= return_data.size
                t = _3751 + ceil32(return_data.size) + 32
                s = _3751 + _3767 + 32
                while s < _3751 + _3767 + (32 * _3783) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3783:
                    revert with 0, 50
                _6931 = mem[_3751 + ceil32(return_data.size) + 64]
                if mem[_3751 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3751 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_3751 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_3751 + ceil32(return_data.size) + 64] < 100 * mem[_3751 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _7109 = mem[_1508]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1753))
                staticcall address(_1753).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7167 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7205 = mem[_7167]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7205
                mem[mem[64] + 36] = _6931 - (100 * _6931 / 10000)
                mem[mem[64] + 68] = 160
                _7279 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_7109))
                call address(_7109).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7279) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10477 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10497 = mem[_10477]
                require mem[_10477] <= test266151307()
                require _10477 + mem[_10477] + 31 < _10477 + return_data.size
                _10523 = mem[_10477 + mem[_10477]]
                if mem[_10477 + mem[_10477]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10477 + mem[_10477]]) + 1 < 0 or _10477 + ceil32(return_data.size) + ceil32(32 * mem[_10477 + mem[_10477]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10477 + ceil32(return_data.size) + ceil32(32 * mem[_10477 + mem[_10477]]) + 1
                mem[_10477 + ceil32(return_data.size)] = _10523
                require _10497 + (32 * _10523) + 32 <= return_data.size
                t = _10477 + ceil32(return_data.size) + 32
                s = _10477 + _10497 + 32
                while s < _10477 + _10497 + (32 * _10523) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _13935 = mem[_1508]
                _13936 = mem[_1508 + 192]
                _13937 = mem[_1508 + 224]
                _13969 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_13969 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_13969]:
                    revert with 0, 50
                mem[_13969 + 32] = stor21
                if stor21 == address(_13936):
                    if stor21 == address(_13937):
                        _14059 = mem[_1508 + 160]
                        _14060 = mem[_1508 + 64]
                        _14061 = mem[_1508 + 32]
                        mem[_13969 + 100] = this.address
                        require ext_code.size(address(_14061))
                        staticcall address(_14061).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13969 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13969 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        if _14060 >= 999999:
                            mem[_13969 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_14059))
                            call address(_14059).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13969 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _14335 = mem[_1508 + 32]
                            mem[_13969 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_14335))
                            staticcall address(_14335).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13969 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1508 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_13969 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13969 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13969 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _14625 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_13969 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_13969 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_13969 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_13969 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _13969 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13969 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_13969 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_14625))
                            call address(_14625).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13969 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13969 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _13969 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17391 = mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13969 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _17423 = mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13969 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _13969 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_13969 + (6 * ceil32(return_data.size)) + 96] = _17423
                            require _17391 + (32 * _17423) + 32 <= return_data.size
                            t = _13969 + (6 * ceil32(return_data.size)) + 128
                            s = _13969 + (4 * ceil32(return_data.size)) + _17391 + 128
                            while s < _13969 + (4 * ceil32(return_data.size)) + _17391 + (32 * _17423) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20197 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_20197]
                        else:
                            mem[_13969 + ceil32(return_data.size) + 100] = _14060
                            mem[_13969 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_14059))
                            call address(_14059).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _14060, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13969 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _14336 = mem[_1508 + 32]
                            mem[_13969 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_14336))
                            staticcall address(_14336).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13969 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1508 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_13969 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13969 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13969 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _14626 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_13969 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_13969 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_13969 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_13969 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _13969 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13969 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_13969 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_14626))
                            call address(_14626).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13969 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13969 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _13969 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17392 = mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13969 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _17424 = mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13969 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _13969 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13969 + (4 * ceil32(return_data.size)) + mem[_13969 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_13969 + (6 * ceil32(return_data.size)) + 96] = _17424
                            require _17392 + (32 * _17424) + 32 <= return_data.size
                            t = _13969 + (6 * ceil32(return_data.size)) + 128
                            s = _13969 + (4 * ceil32(return_data.size)) + _17392 + 128
                            while s < _13969 + (4 * ceil32(return_data.size)) + _17392 + (32 * _17424) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20198 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_20198]
                    else:
                        if 1 >= mem[_13969]:
                            revert with 0, 50
                        mem[_13969 + 64] = address(_13937)
                        mem[_13969 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_13969 + 100] = eth.balance(this.address) / 2
                        mem[_13969 + 132] = 64
                        mem[_13969 + 164] = mem[_13969]
                        s = 0
                        t = _13969 + 32
                        u = _13969 + 196
                        while s < mem[_13969]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13935))
                        staticcall address(_13935).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _13969 + (32 * mem[_13969]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17371 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17407 = mem[_17371]
                        require mem[_17371] <= test266151307()
                        require _17371 + mem[_17371] + 31 < _17371 + return_data.size
                        _17439 = mem[_17371 + mem[_17371]]
                        if mem[_17371 + mem[_17371]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_17371 + mem[_17371]]) + 1 < 0 or _17371 + ceil32(return_data.size) + ceil32(32 * mem[_17371 + mem[_17371]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _17371 + ceil32(return_data.size) + ceil32(32 * mem[_17371 + mem[_17371]]) + 1
                        mem[_17371 + ceil32(return_data.size)] = _17439
                        require _17407 + (32 * _17439) + 32 <= return_data.size
                        t = _17371 + ceil32(return_data.size) + 32
                        s = _17371 + _17407 + 32
                        while s < _17371 + _17407 + (32 * _17439) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _17439:
                            revert with 0, 50
                        _20139 = mem[_17371 + ceil32(return_data.size) + 64]
                        if mem[_17371 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17371 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_17371 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _17439:
                            revert with 0, 50
                        _20275 = mem[_17371 + ceil32(return_data.size) + 64]
                        if mem[_17371 + ceil32(return_data.size) + 64] < 100 * mem[_17371 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20275 - (100 * _20139 / 10000)
                        mem[mem[64] + 36] = 128
                        _20351 = mem[_13969]
                        mem[mem[64] + 132] = mem[_13969]
                        s = 0
                        t = _13969 + 32
                        u = mem[64] + 164
                        while s < _20351:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_13935))
                        call address(_13935).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args _20275 - (100 * _20139 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _20351) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22671 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22709 = mem[_22671]
                        require mem[_22671] <= test266151307()
                        require _22671 + mem[_22671] + 31 < _22671 + return_data.size
                        _22737 = mem[_22671 + mem[_22671]]
                        if mem[_22671 + mem[_22671]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22671 + mem[_22671]]) + 1 < 0 or _22671 + ceil32(return_data.size) + ceil32(32 * mem[_22671 + mem[_22671]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22671 + ceil32(return_data.size) + ceil32(32 * mem[_22671 + mem[_22671]]) + 1
                        mem[_22671 + ceil32(return_data.size)] = _22737
                        require _22709 + (32 * _22737) + 32 <= return_data.size
                        t = _22671 + ceil32(return_data.size) + 32
                        s = _22671 + _22709 + 32
                        while s < _22671 + _22709 + (32 * _22737) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _24965 = mem[_1508 + 160]
                        _24966 = mem[_1508 + 64]
                        _24967 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24967))
                        staticcall address(_24967).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25061 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25093 = mem[_25061]
                        if _24966 >= 999999:
                            mem[mem[64] + 4] = mem[_25061]
                            require ext_code.size(address(_24965))
                            call address(_24965).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _25093
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25093
                            emit Earn(_25093);
                            _25277 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25277))
                            staticcall address(_25277).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25417 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_25417]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25641 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25673 = mem[_25641]
                            _25709 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25773 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25673
                            mem[mem[64] + 36] = 128
                            _25817 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25817:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25773 + 68] = this.address
                            mem[_25773 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25709))
                            call address(_25709).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25773 + (32 * _25817) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27085 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27125 = mem[_27085]
                            require mem[_27085] <= test266151307()
                            require _27085 + mem[_27085] + 31 < _27085 + return_data.size
                            _27165 = mem[_27085 + mem[_27085]]
                            if mem[_27085 + mem[_27085]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27085 + mem[_27085]]) + 1 < 0 or _27085 + ceil32(return_data.size) + ceil32(32 * mem[_27085 + mem[_27085]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27085 + ceil32(return_data.size) + ceil32(32 * mem[_27085 + mem[_27085]]) + 1
                            mem[_27085 + ceil32(return_data.size)] = _27165
                            require _27125 + (32 * _27165) + 32 <= return_data.size
                            t = _27085 + ceil32(return_data.size) + 32
                            s = _27085 + _27125 + 32
                            while s < _27085 + _27125 + (32 * _27165) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28397 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28397]
                        else:
                            mem[mem[64] + 4] = _24966
                            mem[mem[64] + 36] = _25093
                            require ext_code.size(address(_24965))
                            call address(_24965).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _24966, _25093
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25093
                            emit Earn(_25093);
                            _25278 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25278))
                            staticcall address(_25278).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25418 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_25418]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25674 = mem[_25642]
                            _25710 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25774 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25674
                            mem[mem[64] + 36] = 128
                            _25818 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25818:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25774 + 68] = this.address
                            mem[_25774 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25710))
                            call address(_25710).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25774 + (32 * _25818) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27086 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27126 = mem[_27086]
                            require mem[_27086] <= test266151307()
                            require _27086 + mem[_27086] + 31 < _27086 + return_data.size
                            _27166 = mem[_27086 + mem[_27086]]
                            if mem[_27086 + mem[_27086]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27086 + mem[_27086]]) + 1 < 0 or _27086 + ceil32(return_data.size) + ceil32(32 * mem[_27086 + mem[_27086]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27086 + ceil32(return_data.size) + ceil32(32 * mem[_27086 + mem[_27086]]) + 1
                            mem[_27086 + ceil32(return_data.size)] = _27166
                            require _27126 + (32 * _27166) + 32 <= return_data.size
                            t = _27086 + ceil32(return_data.size) + 32
                            s = _27086 + _27126 + 32
                            while s < _27086 + _27126 + (32 * _27166) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28398 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28398]
                else:
                    if 1 >= mem[_13969]:
                        revert with 0, 50
                    mem[_13969 + 64] = address(_13936)
                    mem[_13969 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_13969 + 100] = eth.balance(this.address) / 2
                    mem[_13969 + 132] = 64
                    mem[_13969 + 164] = mem[_13969]
                    s = 0
                    t = _13969 + 32
                    u = _13969 + 196
                    while s < mem[_13969]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_13935))
                    staticcall address(_13935).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _13969 + (32 * mem[_13969]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17372 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17408 = mem[_17372]
                    require mem[_17372] <= test266151307()
                    require _17372 + mem[_17372] + 31 < _17372 + return_data.size
                    _17440 = mem[_17372 + mem[_17372]]
                    if mem[_17372 + mem[_17372]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_17372 + mem[_17372]]) + 1 < 0 or _17372 + ceil32(return_data.size) + ceil32(32 * mem[_17372 + mem[_17372]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _17372 + ceil32(return_data.size) + ceil32(32 * mem[_17372 + mem[_17372]]) + 1
                    mem[_17372 + ceil32(return_data.size)] = _17440
                    require _17408 + (32 * _17440) + 32 <= return_data.size
                    t = _17372 + ceil32(return_data.size) + 32
                    s = _17372 + _17408 + 32
                    while s < _17372 + _17408 + (32 * _17440) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _17440:
                        revert with 0, 50
                    _20140 = mem[_17372 + ceil32(return_data.size) + 64]
                    if mem[_17372 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17372 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_17372 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _17440:
                        revert with 0, 50
                    _20276 = mem[_17372 + ceil32(return_data.size) + 64]
                    if mem[_17372 + ceil32(return_data.size) + 64] < 100 * mem[_17372 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _20276 - (100 * _20140 / 10000)
                    mem[mem[64] + 36] = 128
                    _20352 = mem[_13969]
                    mem[mem[64] + 132] = mem[_13969]
                    s = 0
                    t = _13969 + 32
                    u = mem[64] + 164
                    while s < _20352:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_13935))
                    call address(_13935).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _20276 - (100 * _20140 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _20352) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22672 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22710 = mem[_22672]
                    require mem[_22672] <= test266151307()
                    require _22672 + mem[_22672] + 31 < _22672 + return_data.size
                    _22738 = mem[_22672 + mem[_22672]]
                    if mem[_22672 + mem[_22672]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_22672 + mem[_22672]]) + 1 < 0 or _22672 + ceil32(return_data.size) + ceil32(32 * mem[_22672 + mem[_22672]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _22672 + ceil32(return_data.size) + ceil32(32 * mem[_22672 + mem[_22672]]) + 1
                    mem[_22672 + ceil32(return_data.size)] = _22738
                    require _22710 + (32 * _22738) + 32 <= return_data.size
                    t = _22672 + ceil32(return_data.size) + 32
                    s = _22672 + _22710 + 32
                    while s < _22672 + _22710 + (32 * _22738) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_13937):
                        _25007 = mem[_1508 + 160]
                        _25008 = mem[_1508 + 64]
                        _25009 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25009))
                        staticcall address(_25009).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25081 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25113 = mem[_25081]
                        if _25008 >= 999999:
                            mem[mem[64] + 4] = mem[_25081]
                            require ext_code.size(address(_25007))
                            call address(_25007).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _25113
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25113
                            emit Earn(_25113);
                            _25341 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25341))
                            staticcall address(_25341).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25437 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_25437]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25689 = mem[_25657]
                            _25725 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25795 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25689
                            mem[mem[64] + 36] = 128
                            _25835 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25835:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25795 + 68] = this.address
                            mem[_25795 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25725))
                            call address(_25725).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25795 + (32 * _25835) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27087 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27127 = mem[_27087]
                            require mem[_27087] <= test266151307()
                            require _27087 + mem[_27087] + 31 < _27087 + return_data.size
                            _27167 = mem[_27087 + mem[_27087]]
                            if mem[_27087 + mem[_27087]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27087 + mem[_27087]]) + 1 < 0 or _27087 + ceil32(return_data.size) + ceil32(32 * mem[_27087 + mem[_27087]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27087 + ceil32(return_data.size) + ceil32(32 * mem[_27087 + mem[_27087]]) + 1
                            mem[_27087 + ceil32(return_data.size)] = _27167
                            require _27127 + (32 * _27167) + 32 <= return_data.size
                            t = _27087 + ceil32(return_data.size) + 32
                            s = _27087 + _27127 + 32
                            while s < _27087 + _27127 + (32 * _27167) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28399 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28399]
                        else:
                            mem[mem[64] + 4] = _25008
                            mem[mem[64] + 36] = _25113
                            require ext_code.size(address(_25007))
                            call address(_25007).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _25008, _25113
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25113
                            emit Earn(_25113);
                            _25342 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25342))
                            staticcall address(_25342).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25438 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_25438]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25658 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25690 = mem[_25658]
                            _25726 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25796 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25690
                            mem[mem[64] + 36] = 128
                            _25836 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25836:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25796 + 68] = this.address
                            mem[_25796 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25726))
                            call address(_25726).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25796 + (32 * _25836) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27088 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27128 = mem[_27088]
                            require mem[_27088] <= test266151307()
                            require _27088 + mem[_27088] + 31 < _27088 + return_data.size
                            _27168 = mem[_27088 + mem[_27088]]
                            if mem[_27088 + mem[_27088]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27088 + mem[_27088]]) + 1 < 0 or _27088 + ceil32(return_data.size) + ceil32(32 * mem[_27088 + mem[_27088]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27088 + ceil32(return_data.size) + ceil32(32 * mem[_27088 + mem[_27088]]) + 1
                            mem[_27088 + ceil32(return_data.size)] = _27168
                            require _27128 + (32 * _27168) + 32 <= return_data.size
                            t = _27088 + ceil32(return_data.size) + 32
                            s = _27088 + _27128 + 32
                            while s < _27088 + _27128 + (32 * _27168) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28400 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28400]
                    else:
                        if 1 >= mem[_13969]:
                            revert with 0, 50
                        mem[_13969 + 64] = address(_13937)
                        _25010 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _25062 = mem[_13969]
                        mem[mem[64] + 68] = mem[_13969]
                        s = 0
                        t = _13969 + 32
                        u = mem[64] + 100
                        while s < _25062:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13935))
                        staticcall address(_13935).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _25010 + (32 * _25062) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27105 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27145 = mem[_27105]
                        require mem[_27105] <= test266151307()
                        require _27105 + mem[_27105] + 31 < _27105 + return_data.size
                        _27185 = mem[_27105 + mem[_27105]]
                        if mem[_27105 + mem[_27105]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27105 + mem[_27105]]) + 1 < 0 or _27105 + ceil32(return_data.size) + ceil32(32 * mem[_27105 + mem[_27105]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27105 + ceil32(return_data.size) + ceil32(32 * mem[_27105 + mem[_27105]]) + 1
                        mem[_27105 + ceil32(return_data.size)] = _27185
                        require _27145 + (32 * _27185) + 32 <= return_data.size
                        t = _27105 + ceil32(return_data.size) + 32
                        s = _27105 + _27145 + 32
                        while s < _27105 + _27145 + (32 * _27185) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27185:
                            revert with 0, 50
                        _28305 = mem[_27105 + ceil32(return_data.size) + 64]
                        if mem[_27105 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27105 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_27105 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _27185:
                            revert with 0, 50
                        _28481 = mem[_27105 + ceil32(return_data.size) + 64]
                        if mem[_27105 + ceil32(return_data.size) + 64] < 100 * mem[_27105 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28503 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28481 - (100 * _28305 / 10000)
                        mem[mem[64] + 36] = 128
                        _28517 = mem[_13969]
                        mem[mem[64] + 132] = mem[_13969]
                        s = 0
                        t = _13969 + 32
                        u = mem[64] + 164
                        while s < _28517:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28503 + 68] = this.address
                        mem[_28503 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13935))
                        call address(_13935).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28503 + (32 * _28517) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29231 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29245 = mem[_29231]
                        require mem[_29231] <= test266151307()
                        require _29231 + mem[_29231] + 31 < _29231 + return_data.size
                        _29257 = mem[_29231 + mem[_29231]]
                        if mem[_29231 + mem[_29231]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29231 + mem[_29231]]) + 1 < 0 or _29231 + ceil32(return_data.size) + ceil32(32 * mem[_29231 + mem[_29231]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29231 + ceil32(return_data.size) + ceil32(32 * mem[_29231 + mem[_29231]]) + 1
                        mem[_29231 + ceil32(return_data.size)] = _29257
                        require _29245 + (32 * _29257) + 32 <= return_data.size
                        t = _29231 + ceil32(return_data.size) + 32
                        s = _29231 + _29245 + 32
                        while s < _29231 + _29245 + (32 * _29257) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _29917 = mem[_1508 + 160]
                        _29918 = mem[_1508 + 64]
                        _29919 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_29919))
                        staticcall address(_29919).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29951 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29961 = mem[_29951]
                        if _29918 >= 999999:
                            mem[mem[64] + 4] = mem[_29951]
                            require ext_code.size(address(_29917))
                            call address(_29917).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _29961
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _29961
                            emit Earn(_29961);
                            _30043 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_30043))
                            staticcall address(_30043).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30095 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_30095]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30191 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30207 = mem[_30191]
                            _30225 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _30247 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _30207
                            mem[mem[64] + 36] = 128
                            _30265 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _30265:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_30247 + 68] = this.address
                            mem[_30247 + 100] = block.timestamp + 60
                            require ext_code.size(address(_30225))
                            call address(_30225).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _30247 + (32 * _30265) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30513 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30529 = mem[_30513]
                            require mem[_30513] <= test266151307()
                            require _30513 + mem[_30513] + 31 < _30513 + return_data.size
                            _30545 = mem[_30513 + mem[_30513]]
                            if mem[_30513 + mem[_30513]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_30513 + mem[_30513]]) + 1 < 0 or _30513 + ceil32(return_data.size) + ceil32(32 * mem[_30513 + mem[_30513]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _30513 + ceil32(return_data.size) + ceil32(32 * mem[_30513 + mem[_30513]]) + 1
                            mem[_30513 + ceil32(return_data.size)] = _30545
                            require _30529 + (32 * _30545) + 32 <= return_data.size
                            t = _30513 + ceil32(return_data.size) + 32
                            s = _30513 + _30529 + 32
                            while s < _30513 + _30529 + (32 * _30545) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30739 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_30739]
                        else:
                            mem[mem[64] + 4] = _29918
                            mem[mem[64] + 36] = _29961
                            require ext_code.size(address(_29917))
                            call address(_29917).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _29918, _29961
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _29961
                            emit Earn(_29961);
                            _30044 = mem[_1508 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_30044))
                            staticcall address(_30044).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30096 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1508 + 96] = mem[_30096]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30192 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30208 = mem[_30192]
                            _30226 = mem[_1508]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _30248 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _30208
                            mem[mem[64] + 36] = 128
                            _30266 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _30266:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_30248 + 68] = this.address
                            mem[_30248 + 100] = block.timestamp + 60
                            require ext_code.size(address(_30226))
                            call address(_30226).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _30248 + (32 * _30266) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30514 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30530 = mem[_30514]
                            require mem[_30514] <= test266151307()
                            require _30514 + mem[_30514] + 31 < _30514 + return_data.size
                            _30546 = mem[_30514 + mem[_30514]]
                            if mem[_30514 + mem[_30514]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_30514 + mem[_30514]]) + 1 < 0 or _30514 + ceil32(return_data.size) + ceil32(32 * mem[_30514 + mem[_30514]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _30514 + ceil32(return_data.size) + ceil32(32 * mem[_30514 + mem[_30514]]) + 1
                            mem[_30514 + ceil32(return_data.size)] = _30546
                            require _30530 + (32 * _30546) + 32 <= return_data.size
                            t = _30514 + ceil32(return_data.size) + 32
                            s = _30514 + _30530 + 32
                            while s < _30514 + _30530 + (32 * _30546) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30740 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_30740]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1508
                s = _6931 - (100 * _6931 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _1644
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _1644
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1744 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1754 = mem[_1744]
            require mem[_1744] == mem[_1744 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_1744 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_1754))
            staticcall address(_1754).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1870 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1894 = mem[_1870]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1754))
            staticcall address(_1754).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1934 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1948 = mem[_1934]
            if mem[_1934] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1894:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2022 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2052 = mem[_2022]
            if 10^12 * _1948 / _1894 and mem[_2022] > -1 / 10^12 * _1948 / _1894:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1948 / _1894 * _2052 / 10^12
            mem[mem[64] + 36] = 64
            _2164 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _2164) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3752 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3768 = mem[_3752]
            require mem[_3752] <= test266151307()
            require _3752 + mem[_3752] + 31 < _3752 + return_data.size
            _3784 = mem[_3752 + mem[_3752]]
            if mem[_3752 + mem[_3752]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3752 + mem[_3752]]) + 1 < 0 or _3752 + ceil32(return_data.size) + ceil32(32 * mem[_3752 + mem[_3752]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3752 + ceil32(return_data.size) + ceil32(32 * mem[_3752 + mem[_3752]]) + 1
            mem[_3752 + ceil32(return_data.size)] = _3784
            require _3768 + (32 * _3784) + 32 <= return_data.size
            t = _3752 + ceil32(return_data.size) + 32
            s = _3752 + _3768 + 32
            while s < _3752 + _3768 + (32 * _3784) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3784:
                revert with 0, 50
            _6932 = mem[_3752 + ceil32(return_data.size) + 64]
            if mem[_3752 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3752 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_3752 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_3752 + ceil32(return_data.size) + 64] < 100 * mem[_3752 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _7110 = mem[_1508]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1754))
            staticcall address(_1754).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7168 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7206 = mem[_7168]
            if 60 > !block.timestamp:
                revert with 0, 17
            _7248 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7206
            mem[mem[64] + 36] = _6932 - (100 * _6932 / 10000)
            mem[mem[64] + 68] = 160
            _7280 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _7280:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_7248 + 100] = this.address
            mem[_7248 + 132] = block.timestamp + 60
            require ext_code.size(address(_7110))
            call address(_7110).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _7248 + (32 * _7280) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10478 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10498 = mem[_10478]
            require mem[_10478] <= test266151307()
            require _10478 + mem[_10478] + 31 < _10478 + return_data.size
            _10524 = mem[_10478 + mem[_10478]]
            if mem[_10478 + mem[_10478]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_10478 + mem[_10478]]) + 1 < 0 or _10478 + ceil32(return_data.size) + ceil32(32 * mem[_10478 + mem[_10478]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _10478 + ceil32(return_data.size) + ceil32(32 * mem[_10478 + mem[_10478]]) + 1
            mem[_10478 + ceil32(return_data.size)] = _10524
            require _10498 + (32 * _10524) + 32 <= return_data.size
            t = _10478 + ceil32(return_data.size) + 32
            s = _10478 + _10498 + 32
            while s < _10478 + _10498 + (32 * _10524) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _13938 = mem[_1508]
            _13939 = mem[_1508 + 192]
            _13940 = mem[_1508 + 224]
            _13971 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_13971 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_13971]:
                revert with 0, 50
            mem[_13971 + 32] = stor21
            if stor21 == address(_13939):
                if stor21 == address(_13940):
                    _14063 = mem[_1508 + 160]
                    _14064 = mem[_1508 + 64]
                    _14065 = mem[_1508 + 32]
                    mem[_13971 + 100] = this.address
                    require ext_code.size(address(_14065))
                    staticcall address(_14065).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_13971 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _13971 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    if _14064 >= 999999:
                        mem[_13971 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_14063))
                        call address(_14063).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13971 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _14338 = mem[_1508 + 32]
                        mem[_13971 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_14338))
                        staticcall address(_14338).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13971 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1508 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_13971 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13971 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13971 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _14627 = mem[_1508]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_13971 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_13971 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_13971 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_13971 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _13971 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13971 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_13971 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_14627))
                        call address(_14627).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13971 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13971 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _13971 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _17393 = mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13971 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _17425 = mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13971 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _13971 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_13971 + (6 * ceil32(return_data.size)) + 96] = _17425
                        require _17393 + (32 * _17425) + 32 <= return_data.size
                        t = _13971 + (6 * ceil32(return_data.size)) + 128
                        s = _13971 + (4 * ceil32(return_data.size)) + _17393 + 128
                        while s < _13971 + (4 * ceil32(return_data.size)) + _17393 + (32 * _17425) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20199 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_20199]
                    else:
                        mem[_13971 + ceil32(return_data.size) + 100] = _14064
                        mem[_13971 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_14063))
                        call address(_14063).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _14064, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13971 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _14339 = mem[_1508 + 32]
                        mem[_13971 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_14339))
                        staticcall address(_14339).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13971 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1508 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_13971 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13971 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13971 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _14628 = mem[_1508]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_13971 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_13971 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_13971 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_13971 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _13971 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13971 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_13971 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_14628))
                        call address(_14628).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13971 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13971 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _13971 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _17394 = mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13971 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _17426 = mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13971 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _13971 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13971 + (4 * ceil32(return_data.size)) + mem[_13971 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_13971 + (6 * ceil32(return_data.size)) + 96] = _17426
                        require _17394 + (32 * _17426) + 32 <= return_data.size
                        t = _13971 + (6 * ceil32(return_data.size)) + 128
                        s = _13971 + (4 * ceil32(return_data.size)) + _17394 + 128
                        while s < _13971 + (4 * ceil32(return_data.size)) + _17394 + (32 * _17426) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20200 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_20200]
                else:
                    if 1 >= mem[_13971]:
                        revert with 0, 50
                    mem[_13971 + 64] = address(_13940)
                    mem[_13971 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_13971 + 100] = eth.balance(this.address) / 2
                    mem[_13971 + 132] = 64
                    mem[_13971 + 164] = mem[_13971]
                    s = 0
                    t = _13971 + 32
                    u = _13971 + 196
                    while s < mem[_13971]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_13938))
                    staticcall address(_13938).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _13971 + (32 * mem[_13971]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17373 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17409 = mem[_17373]
                    require mem[_17373] <= test266151307()
                    require _17373 + mem[_17373] + 31 < _17373 + return_data.size
                    _17441 = mem[_17373 + mem[_17373]]
                    if mem[_17373 + mem[_17373]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_17373 + mem[_17373]]) + 1 < 0 or _17373 + ceil32(return_data.size) + ceil32(32 * mem[_17373 + mem[_17373]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _17373 + ceil32(return_data.size) + ceil32(32 * mem[_17373 + mem[_17373]]) + 1
                    mem[_17373 + ceil32(return_data.size)] = _17441
                    require _17409 + (32 * _17441) + 32 <= return_data.size
                    t = _17373 + ceil32(return_data.size) + 32
                    s = _17373 + _17409 + 32
                    while s < _17373 + _17409 + (32 * _17441) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _17441:
                        revert with 0, 50
                    _20141 = mem[_17373 + ceil32(return_data.size) + 64]
                    if mem[_17373 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17373 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_17373 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _17441:
                        revert with 0, 50
                    _20277 = mem[_17373 + ceil32(return_data.size) + 64]
                    if mem[_17373 + ceil32(return_data.size) + 64] < 100 * mem[_17373 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _20315 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _20277 - (100 * _20141 / 10000)
                    mem[mem[64] + 36] = 128
                    _20353 = mem[_13971]
                    mem[mem[64] + 132] = mem[_13971]
                    s = 0
                    t = _13971 + 32
                    u = mem[64] + 164
                    while s < _20353:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_20315 + 68] = this.address
                    mem[_20315 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13938))
                    call address(_13938).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _20315 + (32 * _20353) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22673 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22711 = mem[_22673]
                    require mem[_22673] <= test266151307()
                    require _22673 + mem[_22673] + 31 < _22673 + return_data.size
                    _22739 = mem[_22673 + mem[_22673]]
                    if mem[_22673 + mem[_22673]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_22673 + mem[_22673]]) + 1 < 0 or _22673 + ceil32(return_data.size) + ceil32(32 * mem[_22673 + mem[_22673]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _22673 + ceil32(return_data.size) + ceil32(32 * mem[_22673 + mem[_22673]]) + 1
                    mem[_22673 + ceil32(return_data.size)] = _22739
                    require _22711 + (32 * _22739) + 32 <= return_data.size
                    t = _22673 + ceil32(return_data.size) + 32
                    s = _22673 + _22711 + 32
                    while s < _22673 + _22711 + (32 * _22739) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _24969 = mem[_1508 + 160]
                    _24970 = mem[_1508 + 64]
                    _24971 = mem[_1508 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_24971))
                    staticcall address(_24971).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25063 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25095 = mem[_25063]
                    if _24970 >= 999999:
                        mem[mem[64] + 4] = mem[_25063]
                        require ext_code.size(address(_24969))
                        call address(_24969).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _25095
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _25095
                        emit Earn(_25095);
                        _25283 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25283))
                        staticcall address(_25283).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25420 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1508 + 96] = mem[_25420]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25643 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25675 = mem[_25643]
                        _25711 = mem[_1508]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _25776 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _25675
                        mem[mem[64] + 36] = 128
                        _25819 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_25776 + 100] = block.timestamp + 60
                        require ext_code.size(address(_25711))
                        call address(_25711).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _25776 + (32 * _25819) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27089 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27129 = mem[_27089]
                        require mem[_27089] <= test266151307()
                        require _27089 + mem[_27089] + 31 < _27089 + return_data.size
                        _27169 = mem[_27089 + mem[_27089]]
                        if mem[_27089 + mem[_27089]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27089 + mem[_27089]]) + 1 < 0 or _27089 + ceil32(return_data.size) + ceil32(32 * mem[_27089 + mem[_27089]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27089 + ceil32(return_data.size) + ceil32(32 * mem[_27089 + mem[_27089]]) + 1
                        mem[_27089 + ceil32(return_data.size)] = _27169
                        require _27129 + (32 * _27169) + 32 <= return_data.size
                        t = _27089 + ceil32(return_data.size) + 32
                        s = _27089 + _27129 + 32
                        while s < _27089 + _27129 + (32 * _27169) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28401 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28401]
                    else:
                        mem[mem[64] + 4] = _24970
                        mem[mem[64] + 36] = _25095
                        require ext_code.size(address(_24969))
                        call address(_24969).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _24970, _25095
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _25095
                        emit Earn(_25095);
                        _25284 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25284))
                        staticcall address(_25284).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25421 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1508 + 96] = mem[_25421]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25676 = mem[_25644]
                        _25712 = mem[_1508]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _25777 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _25676
                        mem[mem[64] + 36] = 128
                        _25820 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _25820:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_25777 + 68] = this.address
                        mem[_25777 + 100] = block.timestamp + 60
                        require ext_code.size(address(_25712))
                        call address(_25712).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _25777 + (32 * _25820) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27090 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27130 = mem[_27090]
                        require mem[_27090] <= test266151307()
                        require _27090 + mem[_27090] + 31 < _27090 + return_data.size
                        _27170 = mem[_27090 + mem[_27090]]
                        if mem[_27090 + mem[_27090]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27090 + mem[_27090]]) + 1 < 0 or _27090 + ceil32(return_data.size) + ceil32(32 * mem[_27090 + mem[_27090]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27090 + ceil32(return_data.size) + ceil32(32 * mem[_27090 + mem[_27090]]) + 1
                        mem[_27090 + ceil32(return_data.size)] = _27170
                        require _27130 + (32 * _27170) + 32 <= return_data.size
                        t = _27090 + ceil32(return_data.size) + 32
                        s = _27090 + _27130 + 32
                        while s < _27090 + _27130 + (32 * _27170) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28402 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28402]
            else:
                if 1 >= mem[_13971]:
                    revert with 0, 50
                mem[_13971 + 64] = address(_13939)
                mem[_13971 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_13971 + 100] = eth.balance(this.address) / 2
                mem[_13971 + 132] = 64
                mem[_13971 + 164] = mem[_13971]
                s = 0
                t = _13971 + 32
                u = _13971 + 196
                while s < mem[_13971]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_13938))
                staticcall address(_13938).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _13971 + (32 * mem[_13971]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _17374 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _17410 = mem[_17374]
                require mem[_17374] <= test266151307()
                require _17374 + mem[_17374] + 31 < _17374 + return_data.size
                _17442 = mem[_17374 + mem[_17374]]
                if mem[_17374 + mem[_17374]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_17374 + mem[_17374]]) + 1 < 0 or _17374 + ceil32(return_data.size) + ceil32(32 * mem[_17374 + mem[_17374]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _17374 + ceil32(return_data.size) + ceil32(32 * mem[_17374 + mem[_17374]]) + 1
                mem[_17374 + ceil32(return_data.size)] = _17442
                require _17410 + (32 * _17442) + 32 <= return_data.size
                t = _17374 + ceil32(return_data.size) + 32
                s = _17374 + _17410 + 32
                while s < _17374 + _17410 + (32 * _17442) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _17442:
                    revert with 0, 50
                _20142 = mem[_17374 + ceil32(return_data.size) + 64]
                if mem[_17374 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17374 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_17374 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _17442:
                    revert with 0, 50
                _20278 = mem[_17374 + ceil32(return_data.size) + 64]
                if mem[_17374 + ceil32(return_data.size) + 64] < 100 * mem[_17374 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _20278 - (100 * _20142 / 10000)
                mem[mem[64] + 36] = 128
                _20354 = mem[_13971]
                mem[mem[64] + 132] = mem[_13971]
                s = 0
                t = _13971 + 32
                u = mem[64] + 164
                while s < _20354:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_13938))
                call address(_13938).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args _20278 - (100 * _20142 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _20354) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22674 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22712 = mem[_22674]
                require mem[_22674] <= test266151307()
                require _22674 + mem[_22674] + 31 < _22674 + return_data.size
                _22740 = mem[_22674 + mem[_22674]]
                if mem[_22674 + mem[_22674]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_22674 + mem[_22674]]) + 1 < 0 or _22674 + ceil32(return_data.size) + ceil32(32 * mem[_22674 + mem[_22674]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _22674 + ceil32(return_data.size) + ceil32(32 * mem[_22674 + mem[_22674]]) + 1
                mem[_22674 + ceil32(return_data.size)] = _22740
                require _22712 + (32 * _22740) + 32 <= return_data.size
                t = _22674 + ceil32(return_data.size) + 32
                s = _22674 + _22712 + 32
                while s < _22674 + _22712 + (32 * _22740) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_13940):
                    _25013 = mem[_1508 + 160]
                    _25014 = mem[_1508 + 64]
                    _25015 = mem[_1508 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25015))
                    staticcall address(_25015).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25082 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25114 = mem[_25082]
                    if _25014 >= 999999:
                        mem[mem[64] + 4] = mem[_25082]
                        require ext_code.size(address(_25013))
                        call address(_25013).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _25114
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _25114
                        emit Earn(_25114);
                        _25348 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25348))
                        staticcall address(_25348).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25439 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1508 + 96] = mem[_25439]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25659 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25691 = mem[_25659]
                        _25727 = mem[_1508]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _25797 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _25691
                        mem[mem[64] + 36] = 128
                        _25837 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _25837:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_25797 + 68] = this.address
                        mem[_25797 + 100] = block.timestamp + 60
                        require ext_code.size(address(_25727))
                        call address(_25727).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _25797 + (32 * _25837) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27091 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27131 = mem[_27091]
                        require mem[_27091] <= test266151307()
                        require _27091 + mem[_27091] + 31 < _27091 + return_data.size
                        _27171 = mem[_27091 + mem[_27091]]
                        if mem[_27091 + mem[_27091]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27091 + mem[_27091]]) + 1 < 0 or _27091 + ceil32(return_data.size) + ceil32(32 * mem[_27091 + mem[_27091]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27091 + ceil32(return_data.size) + ceil32(32 * mem[_27091 + mem[_27091]]) + 1
                        mem[_27091 + ceil32(return_data.size)] = _27171
                        require _27131 + (32 * _27171) + 32 <= return_data.size
                        t = _27091 + ceil32(return_data.size) + 32
                        s = _27091 + _27131 + 32
                        while s < _27091 + _27131 + (32 * _27171) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28403 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28403]
                    else:
                        mem[mem[64] + 4] = _25014
                        mem[mem[64] + 36] = _25114
                        require ext_code.size(address(_25013))
                        call address(_25013).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _25014, _25114
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _25114
                        emit Earn(_25114);
                        _25349 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25349))
                        staticcall address(_25349).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25440 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1508 + 96] = mem[_25440]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25660 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25692 = mem[_25660]
                        _25728 = mem[_1508]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _25798 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _25692
                        mem[mem[64] + 36] = 128
                        _25838 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _25838:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_25798 + 68] = this.address
                        mem[_25798 + 100] = block.timestamp + 60
                        require ext_code.size(address(_25728))
                        call address(_25728).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _25798 + (32 * _25838) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27092 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27132 = mem[_27092]
                        require mem[_27092] <= test266151307()
                        require _27092 + mem[_27092] + 31 < _27092 + return_data.size
                        _27172 = mem[_27092 + mem[_27092]]
                        if mem[_27092 + mem[_27092]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27092 + mem[_27092]]) + 1 < 0 or _27092 + ceil32(return_data.size) + ceil32(32 * mem[_27092 + mem[_27092]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27092 + ceil32(return_data.size) + ceil32(32 * mem[_27092 + mem[_27092]]) + 1
                        mem[_27092 + ceil32(return_data.size)] = _27172
                        require _27132 + (32 * _27172) + 32 <= return_data.size
                        t = _27092 + ceil32(return_data.size) + 32
                        s = _27092 + _27132 + 32
                        while s < _27092 + _27132 + (32 * _27172) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28404 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28404]
                else:
                    if 1 >= mem[_13971]:
                        revert with 0, 50
                    mem[_13971 + 64] = address(_13940)
                    _25016 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _25064 = mem[_13971]
                    mem[mem[64] + 68] = mem[_13971]
                    s = 0
                    t = _13971 + 32
                    u = mem[64] + 100
                    while s < _25064:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_13938))
                    staticcall address(_13938).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _25016 + (32 * _25064) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27106 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27146 = mem[_27106]
                    require mem[_27106] <= test266151307()
                    require _27106 + mem[_27106] + 31 < _27106 + return_data.size
                    _27186 = mem[_27106 + mem[_27106]]
                    if mem[_27106 + mem[_27106]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_27106 + mem[_27106]]) + 1 < 0 or _27106 + ceil32(return_data.size) + ceil32(32 * mem[_27106 + mem[_27106]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _27106 + ceil32(return_data.size) + ceil32(32 * mem[_27106 + mem[_27106]]) + 1
                    mem[_27106 + ceil32(return_data.size)] = _27186
                    require _27146 + (32 * _27186) + 32 <= return_data.size
                    t = _27106 + ceil32(return_data.size) + 32
                    s = _27106 + _27146 + 32
                    while s < _27106 + _27146 + (32 * _27186) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _27186:
                        revert with 0, 50
                    _28306 = mem[_27106 + ceil32(return_data.size) + 64]
                    if mem[_27106 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27106 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_27106 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _27186:
                        revert with 0, 50
                    _28482 = mem[_27106 + ceil32(return_data.size) + 64]
                    if mem[_27106 + ceil32(return_data.size) + 64] < 100 * mem[_27106 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _28504 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _28482 - (100 * _28306 / 10000)
                    mem[mem[64] + 36] = 128
                    _28518 = mem[_13971]
                    mem[mem[64] + 132] = mem[_13971]
                    s = 0
                    t = _13971 + 32
                    u = mem[64] + 164
                    while s < _28518:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_28504 + 68] = this.address
                    mem[_28504 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13938))
                    call address(_13938).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _28504 + (32 * _28518) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29232 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29246 = mem[_29232]
                    require mem[_29232] <= test266151307()
                    require _29232 + mem[_29232] + 31 < _29232 + return_data.size
                    _29258 = mem[_29232 + mem[_29232]]
                    if mem[_29232 + mem[_29232]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_29232 + mem[_29232]]) + 1 < 0 or _29232 + ceil32(return_data.size) + ceil32(32 * mem[_29232 + mem[_29232]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _29232 + ceil32(return_data.size) + ceil32(32 * mem[_29232 + mem[_29232]]) + 1
                    mem[_29232 + ceil32(return_data.size)] = _29258
                    require _29246 + (32 * _29258) + 32 <= return_data.size
                    t = _29232 + ceil32(return_data.size) + 32
                    s = _29232 + _29246 + 32
                    while s < _29232 + _29246 + (32 * _29258) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _29920 = mem[_1508 + 160]
                    _29921 = mem[_1508 + 64]
                    _29922 = mem[_1508 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_29922))
                    staticcall address(_29922).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29952 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29962 = mem[_29952]
                    if _29921 >= 999999:
                        mem[mem[64] + 4] = mem[_29952]
                        require ext_code.size(address(_29920))
                        call address(_29920).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _29962
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _29962
                        emit Earn(_29962);
                        _30045 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_30045))
                        staticcall address(_30045).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30097 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1508 + 96] = mem[_30097]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30193 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30209 = mem[_30193]
                        _30227 = mem[_1508]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _30249 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _30209
                        mem[mem[64] + 36] = 128
                        _30267 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _30267:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_30249 + 68] = this.address
                        mem[_30249 + 100] = block.timestamp + 60
                        require ext_code.size(address(_30227))
                        call address(_30227).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _30249 + (32 * _30267) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30515 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30531 = mem[_30515]
                        require mem[_30515] <= test266151307()
                        require _30515 + mem[_30515] + 31 < _30515 + return_data.size
                        _30547 = mem[_30515 + mem[_30515]]
                        if mem[_30515 + mem[_30515]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_30515 + mem[_30515]]) + 1 < 0 or _30515 + ceil32(return_data.size) + ceil32(32 * mem[_30515 + mem[_30515]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _30515 + ceil32(return_data.size) + ceil32(32 * mem[_30515 + mem[_30515]]) + 1
                        mem[_30515 + ceil32(return_data.size)] = _30547
                        require _30531 + (32 * _30547) + 32 <= return_data.size
                        t = _30515 + ceil32(return_data.size) + 32
                        s = _30515 + _30531 + 32
                        while s < _30515 + _30531 + (32 * _30547) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30741 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_30741]
                    else:
                        mem[mem[64] + 4] = _29921
                        mem[mem[64] + 36] = _29962
                        require ext_code.size(address(_29920))
                        call address(_29920).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _29921, _29962
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _29962
                        emit Earn(_29962);
                        _30046 = mem[_1508 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_30046))
                        staticcall address(_30046).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30098 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1508 + 96] = mem[_30098]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30194 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30210 = mem[_30194]
                        _30228 = mem[_1508]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _30250 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _30210
                        mem[mem[64] + 36] = 128
                        _30268 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _30268:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_30250 + 68] = this.address
                        mem[_30250 + 100] = block.timestamp + 60
                        require ext_code.size(address(_30228))
                        call address(_30228).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _30250 + (32 * _30268) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30516 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30532 = mem[_30516]
                        require mem[_30516] <= test266151307()
                        require _30516 + mem[_30516] + 31 < _30516 + return_data.size
                        _30548 = mem[_30516 + mem[_30516]]
                        if mem[_30516 + mem[_30516]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_30516 + mem[_30516]]) + 1 < 0 or _30516 + ceil32(return_data.size) + ceil32(32 * mem[_30516 + mem[_30516]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _30516 + ceil32(return_data.size) + ceil32(32 * mem[_30516 + mem[_30516]]) + 1
                        mem[_30516 + ceil32(return_data.size)] = _30548
                        require _30532 + (32 * _30548) + 32 <= return_data.size
                        t = _30516 + ceil32(return_data.size) + 32
                        s = _30516 + _30532 + 32
                        while s < _30516 + _30532 + (32 * _30548) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30742 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_30742]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _1508
            s = _6932 - (100 * _6932 / 10000)
            s = stor9[idx].field_0
            continue 
        _1513 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1513] = 0
        mem[_1513 + 32] = 0
        mem[_1513 + 64] = 0
        mem[_1513 + 96] = 0
        mem[_1513 + 128] = 0
        mem[_1513 + 160] = 0
        mem[_1513 + 192] = 0
        mem[_1513 + 224] = 0
        _1522 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_1522 + 32 len 64] = call.data[calldata.size len 64]
        idx = 0
        s = 96
        t = 0
        u = 0
        v = 0
        v = _1513
        v = 0
        v = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _3714 = mem[64]
            mem[64] = mem[64] + 256
            mem[_3714] = strategyInfo[stor9[idx].field_0].field_0
            mem[_3714 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_3714 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_3714 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_3714 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_3714 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_3714 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_3714 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3750 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _3765 = mem[_3750]
                if not mem[_3750]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    t = t
                    u = u
                    v = mem[_3750]
                    v = _3714
                    v = stor9[idx].field_0
                    v = v
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3824 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _3850 = mem[_3824]
                require mem[_3824] == mem[_3824 + 18 len 14]
                _3860 = mem[_3824 + 32]
                require mem[_3824 + 32] == mem[_3824 + 50 len 14]
                require mem[_3824 + 64] == mem[_3824 + 92 len 4]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3890 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3906 = mem[_3890]
                if _3765 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not mem[_3890]:
                    revert with 0, 18
                if 10^12 * _3765 / mem[_3890] and Mask(112, 0, _3850) > -1 / 10^12 * _3765 / mem[_3890]:
                    revert with 0, 17
                if 10^12 * _3765 / mem[_3890] and Mask(112, 0, _3860) > -1 / 10^12 * _3765 / mem[_3890]:
                    revert with 0, 17
                if 1 >= mem[_1522]:
                    revert with 0, 50
                mem[_1522 + 64] = stor21
                if 0 >= mem[_1522]:
                    revert with 0, 50
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    mem[_1522 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                    _4128 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3765 / _3906 * Mask(112, 0, _3860) / 10^12
                    mem[mem[64] + 36] = 64
                    _4158 = mem[_1522]
                    mem[mem[64] + 68] = mem[_1522]
                    s = 0
                    t = _1522 + 32
                    u = mem[64] + 100
                    while s < _4158:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _4128 + (32 * _4158) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6980 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7004 = mem[_6980]
                    require mem[_6980] <= test266151307()
                    require _6980 + mem[_6980] + 31 < _6980 + return_data.size
                    _7026 = mem[_6980 + mem[_6980]]
                    if mem[_6980 + mem[_6980]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6980 + mem[_6980]]) + 1 < 0 or _6980 + ceil32(return_data.size) + ceil32(32 * mem[_6980 + mem[_6980]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6980 + ceil32(return_data.size) + ceil32(32 * mem[_6980 + mem[_6980]]) + 1
                    mem[_6980 + ceil32(return_data.size)] = _7026
                    require _7004 + (32 * _7026) + 32 <= return_data.size
                    t = _6980 + ceil32(return_data.size) + 32
                    s = _6980 + _7004 + 32
                    while s < _6980 + _7004 + (32 * _7026) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7026:
                        revert with 0, 50
                    _10462 = mem[_6980 + ceil32(return_data.size) + 64]
                    if 10^12 * _3765 / _3906 * Mask(112, 0, _3850) / 10^12 > !mem[_6980 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3714 + 128] = (10^12 * _3765 / _3906 * Mask(112, 0, _3850) / 10^12) + mem[_6980 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3765 / _3906 * Mask(112, 0, _3850) / 10^12) + _10462):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _6980 + ceil32(return_data.size)
                    t = 10^12 * _3765 / _3906 * Mask(112, 0, _3860) / 10^12
                    u = 10^12 * _3765 / _3906 * Mask(112, 0, _3850) / 10^12
                    v = _3765
                    v = _3714
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3765 / _3906 * Mask(112, 0, _3850) / 10^12) + _10462
                    continue 
                mem[_1522 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                    _4142 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3765 / _3906 * Mask(112, 0, _3850) / 10^12
                    mem[mem[64] + 36] = 64
                    _4166 = mem[_1522]
                    mem[mem[64] + 68] = mem[_1522]
                    s = 0
                    t = _1522 + 32
                    u = mem[64] + 100
                    while s < _4166:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _4142 + (32 * _4166) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6979 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7003 = mem[_6979]
                    require mem[_6979] <= test266151307()
                    require _6979 + mem[_6979] + 31 < _6979 + return_data.size
                    _7025 = mem[_6979 + mem[_6979]]
                    if mem[_6979 + mem[_6979]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6979 + mem[_6979]]) + 1 < 0 or _6979 + ceil32(return_data.size) + ceil32(32 * mem[_6979 + mem[_6979]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6979 + ceil32(return_data.size) + ceil32(32 * mem[_6979 + mem[_6979]]) + 1
                    mem[_6979 + ceil32(return_data.size)] = _7025
                    require _7003 + (32 * _7025) + 32 <= return_data.size
                    t = _6979 + ceil32(return_data.size) + 32
                    s = _6979 + _7003 + 32
                    while s < _6979 + _7003 + (32 * _7025) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7025:
                        revert with 0, 50
                    _10461 = mem[_6979 + ceil32(return_data.size) + 64]
                    if 10^12 * _3765 / _3906 * Mask(112, 0, _3860) / 10^12 > !mem[_6979 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3714 + 128] = (10^12 * _3765 / _3906 * Mask(112, 0, _3860) / 10^12) + mem[_6979 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3765 / _3906 * Mask(112, 0, _3860) / 10^12) + _10461):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _6979 + ceil32(return_data.size)
                    t = 10^12 * _3765 / _3906 * Mask(112, 0, _3860) / 10^12
                    u = 10^12 * _3765 / _3906 * Mask(112, 0, _3850) / 10^12
                    v = _3765
                    v = _3714
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3765 / _3906 * Mask(112, 0, _3860) / 10^12) + _10461
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4173 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4184 = mem[_4173]
                mem[mem[64] + 4] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4279 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4307 = mem[_4279]
                if mem[_4279] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _4184:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4498 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4526 = mem[_4498]
                if 10^12 * _4307 / _4184 and mem[_4498] > -1 / 10^12 * _4307 / _4184:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _4307 / _4184 * _4526 / 10^12
                mem[mem[64] + 36] = 64
                _4748 = mem[_1522]
                mem[mem[64] + 68] = mem[_1522]
                t = 0
                u = _1522 + 32
                w = mem[64] + 100
                while t < _4748:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _4307 / _4184 * _4526 / 10^12, 64, mem[mem[64] + 68 len (32 * _4748) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6978 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7002 = mem[_6978]
                require mem[_6978] <= test266151307()
                require _6978 + mem[_6978] + 31 < _6978 + return_data.size
                _7024 = mem[_6978 + mem[_6978]]
                if mem[_6978 + mem[_6978]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6978 + mem[_6978]]) + 1 < 0 or _6978 + ceil32(return_data.size) + ceil32(32 * mem[_6978 + mem[_6978]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6978 + ceil32(return_data.size) + ceil32(32 * mem[_6978 + mem[_6978]]) + 1
                mem[_6978 + ceil32(return_data.size)] = _7024
                require _7002 + (32 * _7024) + 32 <= return_data.size
                u = _6978 + ceil32(return_data.size) + 32
                t = _6978 + _7002 + 32
                while t < _6978 + _7002 + (32 * _7024) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _7024:
                    revert with 0, 50
                _10460 = mem[_6978 + ceil32(return_data.size) + 64]
                mem[_3714 + 128] = mem[_6978 + ceil32(return_data.size) + 64]
                if v > !_10460:
                    revert with 0, 17
                if 0 >= mem[_1522]:
                    revert with 0, 50
                mem[_1522 + 32] = mem[_3714 + 236 len 20]
                _10509 = mem[_3714 + 224]
                _10510 = mem[_3714]
                require ext_code.size(mem[_3714 + 236 len 20])
                staticcall mem[_3714 + 236 len 20].0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10544 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10554 = mem[_10544]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_10509))
                staticcall address(_10509).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10582 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10622 = mem[_10582]
                if mem[_10582] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _10554:
                    revert with 0, 18
                mem[mem[64] + 4] = address(_10510)
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args address(_10510)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10786 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10822 = mem[_10786]
                if 10^12 * _10622 / _10554 and mem[_10786] > -1 / 10^12 * _10622 / _10554:
                    revert with 0, 17
                _10976 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _10622 / _10554 * _10822 / 10^12
                mem[mem[64] + 36] = 64
                _11056 = mem[_1522]
                mem[mem[64] + 68] = mem[_1522]
                t = 0
                u = _1522 + 32
                w = mem[64] + 100
                while t < _11056:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(address(_10510))
                staticcall address(_10510).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _10976 + (32 * _11056) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13990 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _14004 = mem[_13990]
                require mem[_13990] <= test266151307()
                require _13990 + mem[_13990] + 31 < _13990 + return_data.size
                _14034 = mem[_13990 + mem[_13990]]
                if mem[_13990 + mem[_13990]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_13990 + mem[_13990]]) + 1 < 0 or _13990 + ceil32(return_data.size) + ceil32(32 * mem[_13990 + mem[_13990]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _13990 + ceil32(return_data.size) + ceil32(32 * mem[_13990 + mem[_13990]]) + 1
                mem[_13990 + ceil32(return_data.size)] = _14034
                require _14004 + (32 * _14034) + 32 <= return_data.size
                u = _13990 + ceil32(return_data.size) + 32
                t = _13990 + _14004 + 32
                while t < _13990 + _14004 + (32 * _14034) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _14034:
                    revert with 0, 50
                if mem[_3714 + 128] > !mem[_13990 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3714 + 128] = mem[_3714 + 128] + mem[_13990 + ceil32(return_data.size) + 64]
                if v + _10460 > !mem[_3714 + 128]:
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = 10^12 * _3765 / _3906 * Mask(112, 0, _3860) / 10^12
                u = 10^12 * _3765 / _3906 * Mask(112, 0, _3850) / 10^12
                v = _3765
                v = _3714
                v = stor9[idx].field_0
                v = v + _10460 + mem[_3714 + 128]
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3749 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _3764 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_3764] = mem[_3749]
            mem[_3764 + 32] = mem[_3749 + 32]
            mem[_3764 + 64] = mem[_3749 + 64]
            require return_data.size - 96 >= 96
            _3788 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3788] = mem[_3749 + 96]
            mem[_3788 + 32] = mem[_3749 + 128]
            mem[_3788 + 64] = mem[_3749 + 160]
            mem[_3764 + 96] = _3788
            mem[_3764 + 128] = mem[_3749 + 192]
            require return_data.size - 224 >= 96
            _3814 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3814] = mem[_3749 + 224]
            mem[_3814 + 32] = mem[_3749 + 256]
            mem[_3814 + 64] = mem[_3749 + 288]
            mem[_3764 + 160] = _3814
            _3838 = mem[_3764 + 64]
            if not mem[_3764 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_3764 + 64]
                v = _3714
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3870 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3874 = mem[_3870]
            require mem[_3870] == mem[_3870 + 18 len 14]
            _3900 = mem[_3870 + 32]
            require mem[_3870 + 32] == mem[_3870 + 50 len 14]
            require mem[_3870 + 64] == mem[_3870 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3980 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4006 = mem[_3980]
            if _3838 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_3980]:
                revert with 0, 18
            if 10^12 * _3838 / mem[_3980] and Mask(112, 0, _3874) > -1 / 10^12 * _3838 / mem[_3980]:
                revert with 0, 17
            if 10^12 * _3838 / mem[_3980] and Mask(112, 0, _3900) > -1 / 10^12 * _3838 / mem[_3980]:
                revert with 0, 17
            if 1 >= mem[_1522]:
                revert with 0, 50
            mem[_1522 + 64] = stor21
            if 0 >= mem[_1522]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_1522 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12
                mem[mem[64] + 36] = 64
                _4297 = mem[_1522]
                mem[mem[64] + 68] = mem[_1522]
                s = 0
                t = _1522 + 32
                u = mem[64] + 100
                while s < _4297:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12, 64, mem[mem[64] + 68 len (32 * _4297) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6977 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7001 = mem[_6977]
                require mem[_6977] <= test266151307()
                require _6977 + mem[_6977] + 31 < _6977 + return_data.size
                _7023 = mem[_6977 + mem[_6977]]
                if mem[_6977 + mem[_6977]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6977 + mem[_6977]]) + 1 < 0 or _6977 + ceil32(return_data.size) + ceil32(32 * mem[_6977 + mem[_6977]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6977 + ceil32(return_data.size) + ceil32(32 * mem[_6977 + mem[_6977]]) + 1
                mem[_6977 + ceil32(return_data.size)] = _7023
                require _7001 + (32 * _7023) + 32 <= return_data.size
                t = _6977 + ceil32(return_data.size) + 32
                s = _6977 + _7001 + 32
                while s < _6977 + _7001 + (32 * _7023) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7023:
                    revert with 0, 50
                _10459 = mem[_6977 + ceil32(return_data.size) + 64]
                if 10^12 * _3838 / _4006 * Mask(112, 0, _3874) / 10^12 > !mem[_6977 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3714 + 128] = (10^12 * _3838 / _4006 * Mask(112, 0, _3874) / 10^12) + mem[_6977 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3838 / _4006 * Mask(112, 0, _3874) / 10^12) + _10459):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6977 + ceil32(return_data.size)
                t = 10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12
                u = 10^12 * _3838 / _4006 * Mask(112, 0, _3874) / 10^12
                v = _3838
                v = _3714
                v = stor9[idx].field_0
                v = v + (10^12 * _3838 / _4006 * Mask(112, 0, _3874) / 10^12) + _10459
                continue 
            mem[_1522 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _4278 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3838 / _4006 * Mask(112, 0, _3874) / 10^12
                mem[mem[64] + 36] = 64
                _4306 = mem[_1522]
                mem[mem[64] + 68] = mem[_1522]
                s = 0
                t = _1522 + 32
                w = mem[64] + 100
                while s < _4306:
                    mem[w] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4278 + (32 * _4306) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6976 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7000 = mem[_6976]
                require mem[_6976] <= test266151307()
                require _6976 + mem[_6976] + 31 < _6976 + return_data.size
                _7022 = mem[_6976 + mem[_6976]]
                if mem[_6976 + mem[_6976]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6976 + mem[_6976]]) + 1 < 0 or _6976 + ceil32(return_data.size) + ceil32(32 * mem[_6976 + mem[_6976]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6976 + ceil32(return_data.size) + ceil32(32 * mem[_6976 + mem[_6976]]) + 1
                mem[_6976 + ceil32(return_data.size)] = _7022
                require _7000 + (32 * _7022) + 32 <= return_data.size
                t = _6976 + ceil32(return_data.size) + 32
                s = _6976 + _7000 + 32
                while s < _6976 + _7000 + (32 * _7022) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7022:
                    revert with 0, 50
                _10458 = mem[_6976 + ceil32(return_data.size) + 64]
                if 10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12 > !mem[_6976 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3714 + 128] = (10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12) + mem[_6976 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12) + _10458):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6976 + ceil32(return_data.size)
                t = 10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12
                s = 10^12 * _3838 / _4006 * Mask(112, 0, _3874) / 10^12
                v = _3838
                v = _3714
                v = stor9[idx].field_0
                v = v + (10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12) + _10458
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4314 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4335 = mem[_4314]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4433 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4477 = mem[_4433]
            if mem[_4433] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4335:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4697 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4747 = mem[_4697]
            if 10^12 * _4477 / _4335 and mem[_4697] > -1 / 10^12 * _4477 / _4335:
                revert with 0, 17
            _4879 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4477 / _4335 * _4747 / 10^12
            mem[mem[64] + 36] = 64
            _4911 = mem[_1522]
            mem[mem[64] + 68] = mem[_1522]
            t = 0
            u = _1522 + 32
            w = mem[64] + 100
            while t < _4911:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4879 + (32 * _4911) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6975 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6999 = mem[_6975]
            require mem[_6975] <= test266151307()
            require _6975 + mem[_6975] + 31 < _6975 + return_data.size
            _7021 = mem[_6975 + mem[_6975]]
            if mem[_6975 + mem[_6975]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_6975 + mem[_6975]]) + 1 < 0 or _6975 + ceil32(return_data.size) + ceil32(32 * mem[_6975 + mem[_6975]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _6975 + ceil32(return_data.size) + ceil32(32 * mem[_6975 + mem[_6975]]) + 1
            mem[_6975 + ceil32(return_data.size)] = _7021
            require _6999 + (32 * _7021) + 32 <= return_data.size
            u = _6975 + ceil32(return_data.size) + 32
            t = _6975 + _6999 + 32
            while t < _6975 + _6999 + (32 * _7021) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7021:
                revert with 0, 50
            _10457 = mem[_6975 + ceil32(return_data.size) + 64]
            mem[_3714 + 128] = mem[_6975 + ceil32(return_data.size) + 64]
            if v > !_10457:
                revert with 0, 17
            if 0 >= mem[_1522]:
                revert with 0, 50
            mem[_1522 + 32] = mem[_3714 + 236 len 20]
            _10507 = mem[_3714 + 224]
            _10508 = mem[_3714]
            require ext_code.size(mem[_3714 + 236 len 20])
            staticcall mem[_3714 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10543 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10553 = mem[_10543]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_10507))
            staticcall address(_10507).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10581 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10621 = mem[_10581]
            if mem[_10581] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _10553:
                revert with 0, 18
            mem[mem[64] + 4] = address(_10508)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_10508)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10785 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10821 = mem[_10785]
            if 10^12 * _10621 / _10553 and mem[_10785] > -1 / 10^12 * _10621 / _10553:
                revert with 0, 17
            _10975 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _10621 / _10553 * _10821 / 10^12
            mem[mem[64] + 36] = 64
            _11055 = mem[_1522]
            mem[mem[64] + 68] = mem[_1522]
            t = 0
            u = _1522 + 32
            w = mem[64] + 100
            while t < _11055:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_10508))
            staticcall address(_10508).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _10975 + (32 * _11055) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13989 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _14003 = mem[_13989]
            require mem[_13989] <= test266151307()
            require _13989 + mem[_13989] + 31 < _13989 + return_data.size
            _14033 = mem[_13989 + mem[_13989]]
            if mem[_13989 + mem[_13989]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_13989 + mem[_13989]]) + 1 < 0 or _13989 + ceil32(return_data.size) + ceil32(32 * mem[_13989 + mem[_13989]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _13989 + ceil32(return_data.size) + ceil32(32 * mem[_13989 + mem[_13989]]) + 1
            mem[_13989 + ceil32(return_data.size)] = _14033
            require _14003 + (32 * _14033) + 32 <= return_data.size
            u = _13989 + ceil32(return_data.size) + 32
            t = _13989 + _14003 + 32
            while t < _13989 + _14003 + (32 * _14033) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _14033:
                revert with 0, 50
            if mem[_3714 + 128] > !mem[_13989 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3714 + 128] = mem[_3714 + 128] + mem[_13989 + ceil32(return_data.size) + 64]
            if v + _10457 > !mem[_3714 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _3838 / _4006 * Mask(112, 0, _3900) / 10^12
            u = 10^12 * _3838 / _4006 * Mask(112, 0, _3874) / 10^12
            v = _3838
            v = _3714
            v = stor9[idx].field_0
            v = v + _10457 + mem[_3714 + 128]
            continue 
        emit 0xf9ede3d1 
        require ext_code.size(arg1)
        staticcall arg1.0x83249ef9 with:
                gas gas_remaining wei
        mem[mem[64] len 192] = ext_call.return_data[0 len 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3742 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 192
        _3756 = mem[_3742]
        require mem[_3742] == mem[_3742 + 12 len 20]
        _3782 = mem[_3742 + 32]
        require mem[_3742 + 32] == mem[_3742 + 44 len 20]
        require mem[_3742 + 64] == mem[_3742 + 76 len 20]
        require mem[_3742 + 96] == mem[_3742 + 108 len 20]
        require mem[_3742 + 128] == mem[_3742 + 140 len 20]
        _3869 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3869] = 0
        mem[_3869 + 32] = 0
        mem[_3869 + 64] = 0
        mem[_3869 + 96] = 0
        mem[_3869 + 128] = 0
        mem[_3869 + 160] = 0
        mem[_3869 + 192] = 0
        mem[_3869 + 224] = 0
        idx = 0
        s = _3869
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _6916 = mem[64]
            mem[64] = mem[64] + 256
            mem[_6916] = strategyInfo[stor9[idx].field_0].field_0
            mem[_6916 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_6916 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_6916 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_6916 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_6916 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_6916 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_6916 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6974 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _6997 = mem[_6974]
                if idx >= stor9.length:
                    revert with 0, 50
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _7060 = mem[64]
                mem[64] = mem[64] + 256
                mem[_7060] = strategyInfo[stor9[idx].field_0].field_0
                mem[_7060 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_7060 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_7060 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_7060 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_7060 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_7060 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_7060 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _6997
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _6997
                else:
                    mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                    mem[mem[64] + 36] = _6997
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args strategyInfo[stor9[idx].field_0].field_512, _6997
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6916
                s = _6997
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6973 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _6996 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_6996] = mem[_6973]
            mem[_6996 + 32] = mem[_6973 + 32]
            mem[_6996 + 64] = mem[_6973 + 64]
            require return_data.size - 96 >= 96
            _7030 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7030] = mem[_6973 + 96]
            mem[_7030 + 32] = mem[_6973 + 128]
            mem[_7030 + 64] = mem[_6973 + 160]
            mem[_6996 + 96] = _7030
            mem[_6996 + 128] = mem[_6973 + 192]
            require return_data.size - 224 >= 96
            _7082 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7082] = mem[_6973 + 224]
            mem[_7082 + 32] = mem[_6973 + 256]
            mem[_7082 + 64] = mem[_6973 + 288]
            mem[_6996 + 160] = _7082
            _7124 = mem[_6996 + 64]
            if idx >= stor9.length:
                revert with 0, 50
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _7178 = mem[64]
            mem[64] = mem[64] + 256
            mem[_7178] = strategyInfo[stor9[idx].field_0].field_0
            mem[_7178 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_7178 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_7178 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_7178 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_7178 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_7178 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_7178 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7124
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _7124
            else:
                mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _7124
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _7124
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _6916
            s = _7124
            continue 
        idx = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _10456 = mem[64]
            mem[64] = mem[64] + 256
            mem[_10456] = strategyInfo[stor9[idx].field_0].field_0
            mem[_10456 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_10456 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_10456 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_10456 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_10456 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_10456 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_10456 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10484 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10506 = mem[_10484]
            if mem[_10484]:
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 36] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64] + 68] = _10506
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = 0
                mem[mem[64] + 164] = this.address
                mem[mem[64] + 196] = block.timestamp + 60
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                call strategyInfo[stor9[idx].field_0].field_0.removeLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, address arg6, uint256 arg7) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_1536, strategyInfo[stor9[idx].field_0].field_1792, _10506, 0, 0, address(this.address), block.timestamp + 60
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _10637 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_10637 + 32 len 64] = call.data[calldata.size len 64]
                if 1 >= mem[_10637]:
                    revert with 0, 50
                mem[_10637 + 64] = stor21
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                                gas gas_remaining wei
                        mem[_10637 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_10637 + ceil32(return_data.size) + 96] = 2
                        mem[_10637 + ceil32(return_data.size) + 128] = address(ext_call.return_data[0])
                        mem[_10637 + ceil32(return_data.size) + 160] = stor21
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_10637 + ceil32(return_data.size) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_10637 + (2 * ceil32(return_data.size)) + 196] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_10637 + (2 * ceil32(return_data.size)) + 196 len ceil32(return_data.size) + 32]
                        mem[_10637 + (2 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_10637 + (4 * ceil32(return_data.size)) + 196] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_10637 + (4 * ceil32(return_data.size)) + 196 len (5 * ceil32(return_data.size)) + 32]
                        mem[_10637 + (4 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_10637 + (6 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_10637 + (6 * ceil32(return_data.size)) + 196] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_10637 + (6 * ceil32(return_data.size)) + 228] = 64
                        mem[_10637 + (6 * ceil32(return_data.size)) + 260] = 2
                        s = 0
                        t = _10637 + ceil32(return_data.size) + 128
                        u = _10637 + (6 * ceil32(return_data.size)) + 292
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, Array(len=2, data=mem[_10637 + (6 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_10637 + (6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _10637 + (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _14000 = mem[_10637 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_10637 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _10637 + (6 * ceil32(return_data.size)) + mem[_10637 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 223 < _10637 + (6 * ceil32(return_data.size)) + return_data.size + 192
                        _14030 = mem[_10637 + (6 * ceil32(return_data.size)) + mem[_10637 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]
                        if mem[_10637 + (6 * ceil32(return_data.size)) + mem[_10637 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10637 + (6 * ceil32(return_data.size)) + mem[_10637 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 1 < 0 or _10637 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_10637 + (6 * ceil32(return_data.size)) + mem[_10637 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193 > test266151307():
                            revert with 0, 65
                        mem[64] = _10637 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_10637 + (6 * ceil32(return_data.size)) + mem[_10637 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193
                        mem[_10637 + (7 * ceil32(return_data.size)) + 192] = _14030
                        require _14000 + (32 * _14030) + 32 <= return_data.size
                        t = _10637 + (7 * ceil32(return_data.size)) + 224
                        s = _10637 + (6 * ceil32(return_data.size)) + _14000 + 224
                        while s < _10637 + (6 * ceil32(return_data.size)) + _14000 + (32 * _14030) + 224:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14030:
                            revert with 0, 50
                        _17314 = mem[_10637 + (7 * ceil32(return_data.size)) + 256]
                        if mem[_10637 + (7 * ceil32(return_data.size)) + 256] and 1 > -1 / mem[_10637 + (7 * ceil32(return_data.size)) + 256]:
                            revert with 0, 17
                        if mem[_10637 + (7 * ceil32(return_data.size)) + 256] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_10637 + (7 * ceil32(return_data.size)) + 256] < 100 * mem[_10637 + (7 * ceil32(return_data.size)) + 256] / 10000:
                            revert with 0, 17
                        _17512 = mem[_10456]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17612 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17638 = mem[_17612]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _17638
                        mem[mem[64] + 36] = _17314 - (100 * _17314 / 10000)
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        s = 0
                        t = _10637 + ceil32(return_data.size) + 128
                        u = mem[64] + 196
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_17512))
                        call address(_17512).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _17638, _17314 - (100 * _17314 / 10000), Array(len=2, data=mem[mem[64] + 196 len 64]), address(this.address), block.timestamp + 60
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20186 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _20212 = mem[_20186]
                        require mem[_20186] <= test266151307()
                        require _20186 + mem[_20186] + 31 < _20186 + return_data.size
                        _20238 = mem[_20186 + mem[_20186]]
                        if mem[_20186 + mem[_20186]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_20186 + mem[_20186]]) + 1 < 0 or _20186 + ceil32(return_data.size) + ceil32(32 * mem[_20186 + mem[_20186]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _20186 + ceil32(return_data.size) + ceil32(32 * mem[_20186 + mem[_20186]]) + 1
                        mem[_20186 + ceil32(return_data.size)] = _20238
                        require _20212 + (32 * _20238) + 32 <= return_data.size
                        t = _20186 + ceil32(return_data.size) + 32
                        s = _20186 + _20212 + 32
                        while s < _20186 + _20212 + (32 * _20238) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_10637]:
                            revert with 0, 50
                        mem[_10637 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[_10637 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_10637 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_10637 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_10637 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[_10637 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _10637 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_10637 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_10637 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_10637 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_10637 + (4 * ceil32(return_data.size)) + 164] = mem[_10637]
                        s = 0
                        t = _10637 + 32
                        u = _10637 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_10637]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_10637 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_10637]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_10637 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _10637 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _14001 = mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _10637 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _14031 = mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _10637 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _10637 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_10637 + (6 * ceil32(return_data.size)) + 96] = mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _14001 + (32 * _14031) + 32 <= return_data.size
                        t = _10637 + (6 * ceil32(return_data.size)) + 128
                        s = _10637 + (4 * ceil32(return_data.size)) + _14001 + 128
                        while s < _10637 + (4 * ceil32(return_data.size)) + _14001 + (32 * _14031) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14031:
                            revert with 0, 50
                        _17315 = mem[_10637 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_10637 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_10637 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_10637 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_10637 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_10637 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17613 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17639 = mem[_17613]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _17673 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _17639
                        mem[mem[64] + 36] = _17315 - (100 * _17315 / 10000)
                        mem[mem[64] + 68] = 160
                        _17707 = mem[_10637]
                        mem[mem[64] + 164] = mem[_10637]
                        s = 0
                        t = _10637 + 32
                        u = mem[64] + 196
                        while s < _17707:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17673 + 100] = this.address
                        mem[_17673 + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17673 + (32 * _17707) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20187 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _20213 = mem[_20187]
                        require mem[_20187] <= test266151307()
                        require _20187 + mem[_20187] + 31 < _20187 + return_data.size
                        _20239 = mem[_20187 + mem[_20187]]
                        if mem[_20187 + mem[_20187]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_20187 + mem[_20187]]) + 1 < 0 or _20187 + ceil32(return_data.size) + ceil32(32 * mem[_20187 + mem[_20187]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _20187 + ceil32(return_data.size) + ceil32(32 * mem[_20187 + mem[_20187]]) + 1
                        mem[_20187 + ceil32(return_data.size)] = _20239
                        require _20213 + (32 * _20239) + 32 <= return_data.size
                        t = _20187 + ceil32(return_data.size) + 32
                        s = _20187 + _20213 + 32
                        while s < _20187 + _20213 + (32 * _20239) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_10456 + 172 len 20])
                        staticcall mem[_10456 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22720 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22748 = mem[_22720]
                        require mem[_22720] == mem[_22720 + 12 len 20]
                        _22794 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_22794]:
                            revert with 0, 50
                        mem[_22794 + 32] = address(_22748)
                        if 1 >= mem[_22794]:
                            revert with 0, 50
                        mem[_22794 + 64] = stor21
                        _22830 = mem[_10456]
                        require ext_code.size(address(_22748))
                        staticcall address(_22748).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_22794 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_22794 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_22748))
                        staticcall address(_22748).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_22794 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_22794 + (2 * ceil32(return_data.size)) + 100] = address(_22830)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_22830)
                        mem[_22794 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _22794 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_22794 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_22794 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_22794 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_22794 + (4 * ceil32(return_data.size)) + 164] = mem[_22794]
                        s = 0
                        t = _22794 + 32
                        u = _22794 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_22794]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_22830))
                        staticcall address(_22830).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_22794 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_22794]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_22794 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _22794 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _25078 = mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _22794 + (4 * ceil32(return_data.size)) + mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _22794 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _25110 = mem[_22794 + (4 * ceil32(return_data.size)) + mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_22794 + (4 * ceil32(return_data.size)) + mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22794 + (4 * ceil32(return_data.size)) + mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _22794 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_22794 + (4 * ceil32(return_data.size)) + mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _22794 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_22794 + (4 * ceil32(return_data.size)) + mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_22794 + (6 * ceil32(return_data.size)) + 96] = mem[_22794 + (4 * ceil32(return_data.size)) + mem[_22794 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _25078 + (32 * _25110) + 32 <= return_data.size
                        t = _22794 + (6 * ceil32(return_data.size)) + 128
                        s = _22794 + (4 * ceil32(return_data.size)) + _25078 + 128
                        while s < _22794 + (4 * ceil32(return_data.size)) + _25078 + (32 * _25110) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _25110:
                            revert with 0, 50
                        _27042 = mem[_22794 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_22794 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_22794 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_22794 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_22794 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_22794 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        _27271 = mem[_10456]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_22748))
                        staticcall address(_22748).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27430 = mem[_27390]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _27462 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27430
                        mem[mem[64] + 36] = _27042 - (100 * _27042 / 10000)
                        mem[mem[64] + 68] = 160
                        _27482 = mem[_22794]
                        mem[mem[64] + 164] = mem[_22794]
                        s = 0
                        t = _22794 + 32
                        u = mem[64] + 196
                        while s < _27482:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_27462 + 100] = this.address
                        mem[_27462 + 132] = block.timestamp + 60
                        require ext_code.size(address(_27271))
                        call address(_27271).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _27462 + (32 * _27482) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28378 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28418 = mem[_28378]
                        require mem[_28378] <= test266151307()
                        require _28378 + mem[_28378] + 31 < _28378 + return_data.size
                        _28458 = mem[_28378 + mem[_28378]]
                        if mem[_28378 + mem[_28378]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28378 + mem[_28378]]) + 1 < 0 or _28378 + ceil32(return_data.size) + ceil32(32 * mem[_28378 + mem[_28378]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28378 + ceil32(return_data.size) + ceil32(32 * mem[_28378 + mem[_28378]]) + 1
                        mem[_28378 + ceil32(return_data.size)] = _28458
                        require _28418 + (32 * _28458) + 32 <= return_data.size
                        t = _28378 + ceil32(return_data.size) + 32
                        s = _28378 + _28418 + 32
                        while s < _28378 + _28418 + (32 * _28458) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                else:
                    if 0 >= mem[_10637]:
                        revert with 0, 50
                    mem[_10637 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                            gas gas_remaining wei
                    mem[_10637 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_10637 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_10637 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not ext_call.return_data[0]:
                        revert with 0, 18
                    mem[_10637 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[_10637 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _10637 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[_10637 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_10637 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                    mem[_10637 + (4 * ceil32(return_data.size)) + 132] = 64
                    mem[_10637 + (4 * ceil32(return_data.size)) + 164] = mem[_10637]
                    s = 0
                    t = _10637 + 32
                    u = _10637 + (4 * ceil32(return_data.size)) + 196
                    while s < mem[_10637]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_10637 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_10637]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_10637 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _10637 + (6 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _14002 = mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                    require mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                    require _10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _10637 + (4 * ceil32(return_data.size)) + return_data.size + 96
                    _14032 = mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                    if mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _10637 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _10637 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                    mem[_10637 + (6 * ceil32(return_data.size)) + 96] = mem[_10637 + (4 * ceil32(return_data.size)) + mem[_10637 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                    require _14002 + (32 * _14032) + 32 <= return_data.size
                    t = _10637 + (6 * ceil32(return_data.size)) + 128
                    s = _10637 + (4 * ceil32(return_data.size)) + _14002 + 128
                    while s < _10637 + (4 * ceil32(return_data.size)) + _14002 + (32 * _14032) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _14032:
                        revert with 0, 50
                    _17316 = mem[_10637 + (6 * ceil32(return_data.size)) + 160]
                    if mem[_10637 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_10637 + (6 * ceil32(return_data.size)) + 160]:
                        revert with 0, 17
                    if mem[_10637 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if mem[_10637 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_10637 + (6 * ceil32(return_data.size)) + 160] / 10000:
                        revert with 0, 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17614 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17640 = mem[_17614]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _17674 = mem[64]
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _17640
                    mem[mem[64] + 36] = _17316 - (100 * _17316 / 10000)
                    mem[mem[64] + 68] = 160
                    _17708 = mem[_10637]
                    mem[mem[64] + 164] = mem[_10637]
                    s = 0
                    t = _10637 + 32
                    u = mem[64] + 196
                    while s < _17708:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_17674 + 100] = this.address
                    mem[_17674 + 132] = block.timestamp + 60
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _17674 + (32 * _17708) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _20188 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _20214 = mem[_20188]
                    require mem[_20188] <= test266151307()
                    require _20188 + mem[_20188] + 31 < _20188 + return_data.size
                    _20240 = mem[_20188 + mem[_20188]]
                    if mem[_20188 + mem[_20188]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_20188 + mem[_20188]]) + 1 < 0 or _20188 + ceil32(return_data.size) + ceil32(32 * mem[_20188 + mem[_20188]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _20188 + ceil32(return_data.size) + ceil32(32 * mem[_20188 + mem[_20188]]) + 1
                    mem[_20188 + ceil32(return_data.size)] = _20240
                    require _20214 + (32 * _20240) + 32 <= return_data.size
                    t = _20188 + ceil32(return_data.size) + 32
                    s = _20188 + _20214 + 32
                    while s < _20188 + _20214 + (32 * _20240) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(mem[_10456 + 172 len 20])
                        staticcall mem[_10456 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22735 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22763 = mem[_22735]
                        require mem[_22735] == mem[_22735 + 12 len 20]
                        _22813 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_22813]:
                            revert with 0, 50
                        mem[_22813 + 32] = address(_22763)
                        if 1 >= mem[_22813]:
                            revert with 0, 50
                        mem[_22813 + 64] = stor21
                        _22840 = mem[_10456]
                        require ext_code.size(address(_22763))
                        staticcall address(_22763).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_22813 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_22813 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_22763))
                        staticcall address(_22763).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_22813 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_22813 + (2 * ceil32(return_data.size)) + 100] = address(_22840)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_22840)
                        mem[_22813 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _22813 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_22813 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_22813 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_22813 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_22813 + (4 * ceil32(return_data.size)) + 164] = mem[_22813]
                        s = 0
                        t = _22813 + 32
                        u = _22813 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_22813]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_22840))
                        staticcall address(_22840).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _22813 + (4 * ceil32(return_data.size)) + (32 * mem[_22813]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25043 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25079 = mem[_25043]
                        require mem[_25043] <= test266151307()
                        require _25043 + mem[_25043] + 31 < _25043 + return_data.size
                        _25111 = mem[_25043 + mem[_25043]]
                        if mem[_25043 + mem[_25043]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25043 + mem[_25043]]) + 1 < 0 or _25043 + ceil32(return_data.size) + ceil32(32 * mem[_25043 + mem[_25043]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25043 + ceil32(return_data.size) + ceil32(32 * mem[_25043 + mem[_25043]]) + 1
                        mem[_25043 + ceil32(return_data.size)] = _25111
                        require _25079 + (32 * _25111) + 32 <= return_data.size
                        t = _25043 + ceil32(return_data.size) + 32
                        s = _25043 + _25079 + 32
                        while s < _25043 + _25079 + (32 * _25111) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _25111:
                            revert with 0, 50
                        _27043 = mem[_25043 + ceil32(return_data.size) + 64]
                        if mem[_25043 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_25043 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_25043 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_25043 + ceil32(return_data.size) + 64] < 100 * mem[_25043 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        _27272 = mem[_10456]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_22763))
                        staticcall address(_22763).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27391 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27431 = mem[_27391]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _27463 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27431
                        mem[mem[64] + 36] = _27043 - (100 * _27043 / 10000)
                        mem[mem[64] + 68] = 160
                        _27483 = mem[_22813]
                        mem[mem[64] + 164] = mem[_22813]
                        s = 0
                        t = _22813 + 32
                        u = mem[64] + 196
                        while s < _27483:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_27463 + 100] = this.address
                        mem[_27463 + 132] = block.timestamp + 60
                        require ext_code.size(address(_27272))
                        call address(_27272).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _27463 + (32 * _27483) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28379 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28419 = mem[_28379]
                        require mem[_28379] <= test266151307()
                        require _28379 + mem[_28379] + 31 < _28379 + return_data.size
                        _28459 = mem[_28379 + mem[_28379]]
                        if mem[_28379 + mem[_28379]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28379 + mem[_28379]]) + 1 < 0 or _28379 + ceil32(return_data.size) + ceil32(32 * mem[_28379 + mem[_28379]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28379 + ceil32(return_data.size) + ceil32(32 * mem[_28379 + mem[_28379]]) + 1
                        mem[_28379 + ceil32(return_data.size)] = _28459
                        require _28419 + (32 * _28459) + 32 <= return_data.size
                        t = _28379 + ceil32(return_data.size) + 32
                        s = _28379 + _28419 + 32
                        while s < _28379 + _28419 + (32 * _28459) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_10637]:
                            revert with 0, 50
                        mem[_10637 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22736 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22764 = mem[_22736]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22796 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22832 = mem[_22796]
                        if mem[_22796] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not _22764:
                            revert with 0, 18
                        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23028 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23090 = mem[_23028]
                        if 10^12 * _22832 / _22764 and mem[_23028] > -1 / 10^12 * _22832 / _22764:
                            revert with 0, 17
                        _23324 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 10^12 * _22832 / _22764 * _23090 / 10^12
                        mem[mem[64] + 36] = 64
                        _23368 = mem[_10637]
                        mem[mem[64] + 68] = mem[_10637]
                        s = 0
                        t = _10637 + 32
                        u = mem[64] + 100
                        while s < _23368:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _23324 + (32 * _23368) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25044 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25080 = mem[_25044]
                        require mem[_25044] <= test266151307()
                        require _25044 + mem[_25044] + 31 < _25044 + return_data.size
                        _25112 = mem[_25044 + mem[_25044]]
                        if mem[_25044 + mem[_25044]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25044 + mem[_25044]]) + 1 < 0 or _25044 + ceil32(return_data.size) + ceil32(32 * mem[_25044 + mem[_25044]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25044 + ceil32(return_data.size) + ceil32(32 * mem[_25044 + mem[_25044]]) + 1
                        mem[_25044 + ceil32(return_data.size)] = _25112
                        require _25080 + (32 * _25112) + 32 <= return_data.size
                        t = _25044 + ceil32(return_data.size) + 32
                        s = _25044 + _25080 + 32
                        while s < _25044 + _25080 + (32 * _25112) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _25112:
                            revert with 0, 50
                        _27044 = mem[_25044 + ceil32(return_data.size) + 64]
                        if mem[_25044 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_25044 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_25044 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_25044 + ceil32(return_data.size) + 64] < 100 * mem[_25044 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27392 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27432 = mem[_27392]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _27464 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27432
                        mem[mem[64] + 36] = _27044 - (100 * _27044 / 10000)
                        mem[mem[64] + 68] = 160
                        _27484 = mem[_10637]
                        mem[mem[64] + 164] = mem[_10637]
                        s = 0
                        t = _10637 + 32
                        u = mem[64] + 196
                        while s < _27484:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_27464 + 100] = this.address
                        mem[_27464 + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _27464 + (32 * _27484) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28380 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28420 = mem[_28380]
                        require mem[_28380] <= test266151307()
                        require _28380 + mem[_28380] + 31 < _28380 + return_data.size
                        _28460 = mem[_28380 + mem[_28380]]
                        if mem[_28380 + mem[_28380]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28380 + mem[_28380]]) + 1 < 0 or _28380 + ceil32(return_data.size) + ceil32(32 * mem[_28380 + mem[_28380]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28380 + ceil32(return_data.size) + ceil32(32 * mem[_28380 + mem[_28380]]) + 1
                        mem[_28380 + ceil32(return_data.size)] = _28460
                        require _28420 + (32 * _28460) + 32 <= return_data.size
                        t = _28380 + ceil32(return_data.size) + 32
                        s = _28380 + _28420 + 32
                        while s < _28380 + _28420 + (32 * _28460) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_10456 + 172 len 20])
                        staticcall mem[_10456 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29250 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29262 = mem[_29250]
                        require mem[_29250] == mem[_29250 + 12 len 20]
                        _29281 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_29281]:
                            revert with 0, 50
                        mem[_29281 + 32] = address(_29262)
                        if 1 >= mem[_29281]:
                            revert with 0, 50
                        mem[_29281 + 64] = stor21
                        _29298 = mem[_10456]
                        require ext_code.size(address(_29262))
                        staticcall address(_29262).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_29281 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_29281 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_29262))
                        staticcall address(_29262).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_29281 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_29281 + (2 * ceil32(return_data.size)) + 100] = address(_29298)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_29298)
                        mem[_29281 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _29281 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_29281 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_29281 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_29281 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_29281 + (4 * ceil32(return_data.size)) + 164] = mem[_29281]
                        s = 0
                        t = _29281 + 32
                        u = _29281 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_29281]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_29298))
                        staticcall address(_29298).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_29281 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_29281]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_29281 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _29281 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _29956 = mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _29281 + (4 * ceil32(return_data.size)) + mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _29281 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _29966 = mem[_29281 + (4 * ceil32(return_data.size)) + mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_29281 + (4 * ceil32(return_data.size)) + mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29281 + (4 * ceil32(return_data.size)) + mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _29281 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_29281 + (4 * ceil32(return_data.size)) + mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _29281 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_29281 + (4 * ceil32(return_data.size)) + mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_29281 + (6 * ceil32(return_data.size)) + 96] = mem[_29281 + (4 * ceil32(return_data.size)) + mem[_29281 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _29956 + (32 * _29966) + 32 <= return_data.size
                        t = _29281 + (6 * ceil32(return_data.size)) + 128
                        s = _29281 + (4 * ceil32(return_data.size)) + _29956 + 128
                        while s < _29281 + (4 * ceil32(return_data.size)) + _29956 + (32 * _29966) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _29966:
                            revert with 0, 50
                        _30496 = mem[_29281 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_29281 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_29281 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_29281 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_29281 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_29281 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        _30586 = mem[_10456]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_29262))
                        staticcall address(_29262).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30632 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30650 = mem[_30632]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _30660 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _30650
                        mem[mem[64] + 36] = _30496 - (100 * _30496 / 10000)
                        mem[mem[64] + 68] = 160
                        _30662 = mem[_29281]
                        mem[mem[64] + 164] = mem[_29281]
                        s = 0
                        t = _29281 + 32
                        u = mem[64] + 196
                        while s < _30662:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_30660 + 100] = this.address
                        mem[_30660 + 132] = block.timestamp + 60
                        require ext_code.size(address(_30586))
                        call address(_30586).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _30660 + (32 * _30662) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30730 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30748 = mem[_30730]
                        require mem[_30730] <= test266151307()
                        require _30730 + mem[_30730] + 31 < _30730 + return_data.size
                        _30766 = mem[_30730 + mem[_30730]]
                        if mem[_30730 + mem[_30730]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_30730 + mem[_30730]]) + 1 < 0 or _30730 + ceil32(return_data.size) + ceil32(32 * mem[_30730 + mem[_30730]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _30730 + ceil32(return_data.size) + ceil32(32 * mem[_30730 + mem[_30730]]) + 1
                        mem[_30730 + ceil32(return_data.size)] = _30766
                        require _30748 + (32 * _30766) + 32 <= return_data.size
                        t = _30730 + ceil32(return_data.size) + 32
                        s = _30730 + _30748 + 32
                        while s < _30730 + _30748 + (32 * _30766) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        require ext_code.size(address(_3756))
        staticcall address(_3756).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _10470 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _10483 = mem[_10470]
        require mem[_10470] == mem[_10470 + 12 len 20]
        require ext_code.size(address(_3756))
        staticcall address(_3756).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _10550 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _10556 = mem[_10550]
        require mem[_10550] == mem[_10550 + 12 len 20]
        _10633 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        if not mem[_10633]:
            revert with 0, 50
        mem[_10633 + 32] = stor21
        if stor21 == address(_10556):
            if stor21 == address(_3782):
                require ext_code.size(address(_3756))
                staticcall address(_3756).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(_3756))
                call address(_3756).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if 1 >= mem[_10633]:
                    revert with 0, 50
                mem[_10633 + 64] = address(_3782)
                mem[_10633 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_10633 + 100] = eth.balance(this.address) / 2
                mem[_10633 + 132] = 64
                mem[_10633 + 164] = mem[_10633]
                idx = 0
                s = _10633 + 32
                t = _10633 + 196
                while idx < mem[_10633]:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(address(_10483))
                staticcall address(_10483).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _10633 + (32 * mem[_10633]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13984 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13998 = mem[_13984]
                require mem[_13984] <= test266151307()
                require _13984 + mem[_13984] + 31 < _13984 + return_data.size
                _14028 = mem[_13984 + mem[_13984]]
                if mem[_13984 + mem[_13984]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_13984 + mem[_13984]]) + 1 < 0 or _13984 + ceil32(return_data.size) + ceil32(32 * mem[_13984 + mem[_13984]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _13984 + ceil32(return_data.size) + ceil32(32 * mem[_13984 + mem[_13984]]) + 1
                mem[_13984 + ceil32(return_data.size)] = _14028
                require _13998 + (32 * _14028) + 32 <= return_data.size
                mem[_13984 + ceil32(return_data.size) + 32 len ceil32(32 * _14028)] = mem[_13984 + _13998 + 32 len ceil32(32 * _14028)]
                if 1 >= _14028:
                    revert with 0, 50
                _17312 = mem[_13984 + ceil32(return_data.size) + 64]
                if mem[_13984 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13984 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_13984 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _14028:
                    revert with 0, 50
                _17485 = mem[_13984 + ceil32(return_data.size) + 64]
                if mem[_13984 + ceil32(return_data.size) + 64] < 100 * mem[_13984 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _17599 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _17485 - (100 * _17312 / 10000)
                mem[mem[64] + 36] = 128
                _17625 = mem[_10633]
                mem[mem[64] + 132] = mem[_10633]
                idx = 0
                s = _10633 + 32
                t = mem[64] + 164
                while idx < _17625:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_17599 + 68] = this.address
                mem[_17599 + 100] = block.timestamp + 60
                require ext_code.size(address(_10483))
                call address(_10483).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _17599 + (32 * _17625) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20184 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _20210 = mem[_20184]
                require mem[_20184] <= test266151307()
                require _20184 + mem[_20184] + 31 < _20184 + return_data.size
                _20236 = mem[_20184 + mem[_20184]]
                if mem[_20184 + mem[_20184]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_20184 + mem[_20184]]) + 1 < 0 or _20184 + ceil32(return_data.size) + ceil32(32 * mem[_20184 + mem[_20184]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _20184 + ceil32(return_data.size) + ceil32(32 * mem[_20184 + mem[_20184]]) + 1
                mem[_20184 + ceil32(return_data.size)] = _20236
                require _20210 + (32 * _20236) + 32 <= return_data.size
                mem[_20184 + ceil32(return_data.size) + 32 len ceil32(32 * _20236)] = mem[_20184 + _20210 + 32 len ceil32(32 * _20236)]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3756))
                staticcall address(_3756).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22703 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22733 = mem[_22703]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _22733
                require ext_code.size(address(_3756))
                call address(_3756).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _22733
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22782 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_22782] == bool(mem[_22782])
        else:
            if 1 >= mem[_10633]:
                revert with 0, 50
            mem[_10633 + 64] = address(_10556)
            mem[_10633 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_10633 + 100] = eth.balance(this.address) / 2
            mem[_10633 + 132] = 64
            mem[_10633 + 164] = mem[_10633]
            idx = 0
            s = _10633 + 32
            t = _10633 + 196
            while idx < mem[_10633]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(_10483))
            staticcall address(_10483).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _10633 + (32 * mem[_10633]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13985 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _13999 = mem[_13985]
            require mem[_13985] <= test266151307()
            require _13985 + mem[_13985] + 31 < _13985 + return_data.size
            _14029 = mem[_13985 + mem[_13985]]
            if mem[_13985 + mem[_13985]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_13985 + mem[_13985]]) + 1 < 0 or _13985 + ceil32(return_data.size) + ceil32(32 * mem[_13985 + mem[_13985]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _13985 + ceil32(return_data.size) + ceil32(32 * mem[_13985 + mem[_13985]]) + 1
            mem[_13985 + ceil32(return_data.size)] = _14029
            require _13999 + (32 * _14029) + 32 <= return_data.size
            mem[_13985 + ceil32(return_data.size) + 32 len ceil32(32 * _14029)] = mem[_13985 + _13999 + 32 len ceil32(32 * _14029)]
            if 1 >= _14029:
                revert with 0, 50
            _17313 = mem[_13985 + ceil32(return_data.size) + 64]
            if mem[_13985 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13985 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_13985 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _14029:
                revert with 0, 50
            _17486 = mem[_13985 + ceil32(return_data.size) + 64]
            if mem[_13985 + ceil32(return_data.size) + 64] < 100 * mem[_13985 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _17486 - (100 * _17313 / 10000)
            mem[mem[64] + 36] = 128
            _17626 = mem[_10633]
            mem[mem[64] + 132] = mem[_10633]
            idx = 0
            s = _10633 + 32
            t = mem[64] + 164
            while idx < _17626:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 68] = this.address
            mem[mem[64] + 100] = block.timestamp + 60
            require ext_code.size(address(_10483))
            call address(_10483).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args _17486 - (100 * _17313 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _17626) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _20185 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _20211 = mem[_20185]
            require mem[_20185] <= test266151307()
            require _20185 + mem[_20185] + 31 < _20185 + return_data.size
            _20237 = mem[_20185 + mem[_20185]]
            if mem[_20185 + mem[_20185]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_20185 + mem[_20185]]) + 1 < 0 or _20185 + ceil32(return_data.size) + ceil32(32 * mem[_20185 + mem[_20185]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _20185 + ceil32(return_data.size) + ceil32(32 * mem[_20185 + mem[_20185]]) + 1
            mem[_20185 + ceil32(return_data.size)] = _20237
            require _20211 + (32 * _20237) + 32 <= return_data.size
            mem[_20185 + ceil32(return_data.size) + 32 len ceil32(32 * _20237)] = mem[_20185 + _20211 + 32 len ceil32(32 * _20237)]
            if stor21 == address(_3782):
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3756))
                staticcall address(_3756).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22719 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22747 = mem[_22719]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _22747
                require ext_code.size(address(_3756))
                call address(_3756).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _22747
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22787 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_22787] == bool(mem[_22787])
            else:
                if 1 >= mem[_10633]:
                    revert with 0, 50
                mem[_10633 + 64] = address(_3782)
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _22704 = mem[_10633]
                mem[mem[64] + 68] = mem[_10633]
                idx = 0
                s = _10633 + 32
                t = mem[64] + 100
                while idx < _22704:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(address(_10483))
                staticcall address(_10483).getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _22704) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25041 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25077 = mem[_25041]
                require mem[_25041] <= test266151307()
                require _25041 + mem[_25041] + 31 < _25041 + return_data.size
                _25109 = mem[_25041 + mem[_25041]]
                if mem[_25041 + mem[_25041]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_25041 + mem[_25041]]) + 1 < 0 or _25041 + ceil32(return_data.size) + ceil32(32 * mem[_25041 + mem[_25041]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _25041 + ceil32(return_data.size) + ceil32(32 * mem[_25041 + mem[_25041]]) + 1
                mem[_25041 + ceil32(return_data.size)] = _25109
                require _25077 + (32 * _25109) + 32 <= return_data.size
                mem[_25041 + ceil32(return_data.size) + 32 len ceil32(32 * _25109)] = mem[_25041 + _25077 + 32 len ceil32(32 * _25109)]
                if 1 >= _25109:
                    revert with 0, 50
                _27041 = mem[_25041 + ceil32(return_data.size) + 64]
                if mem[_25041 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_25041 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_25041 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _25109:
                    revert with 0, 50
                _27232 = mem[_25041 + ceil32(return_data.size) + 64]
                if mem[_25041 + ceil32(return_data.size) + 64] < 100 * mem[_25041 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _27370 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _27232 - (100 * _27041 / 10000)
                mem[mem[64] + 36] = 128
                _27410 = mem[_10633]
                mem[mem[64] + 132] = mem[_10633]
                idx = 0
                s = _10633 + 32
                t = mem[64] + 164
                while idx < _27410:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_27370 + 68] = this.address
                mem[_27370 + 100] = block.timestamp + 60
                require ext_code.size(address(_10483))
                call address(_10483).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _27370 + (32 * _27410) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28377 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28417 = mem[_28377]
                require mem[_28377] <= test266151307()
                require _28377 + mem[_28377] + 31 < _28377 + return_data.size
                _28457 = mem[_28377 + mem[_28377]]
                if mem[_28377 + mem[_28377]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_28377 + mem[_28377]]) + 1 < 0 or _28377 + ceil32(return_data.size) + ceil32(32 * mem[_28377 + mem[_28377]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _28377 + ceil32(return_data.size) + ceil32(32 * mem[_28377 + mem[_28377]]) + 1
                mem[_28377 + ceil32(return_data.size)] = _28457
                require _28417 + (32 * _28457) + 32 <= return_data.size
                mem[_28377 + ceil32(return_data.size) + 32 len ceil32(32 * _28457)] = mem[_28377 + _28417 + 32 len ceil32(32 * _28457)]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3756))
                staticcall address(_3756).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29244 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29256 = mem[_29244]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _29256
                require ext_code.size(address(_3756))
                call address(_3756).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _29256
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29276 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_29276] == bool(mem[_29276])
    else:
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'The _contract can not be a zero address'
        mem[96] = 2
        mem[128 len 64] = call.data[calldata.size len 64]
        mem[64] = 448
        mem[192] = 0
        mem[224] = 0
        mem[256] = 0
        mem[288] = 0
        mem[320] = 0
        mem[352] = 0
        mem[384] = 0
        mem[416] = 0
        idx = 0
        s = 192
        s = 0
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1505 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1505] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1505 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1505 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1505 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1505 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1505 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1505 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1505 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1528 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1545 = mem[_1528]
                if not mem[_1528]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1505
                    s = mem[_1528]
                    s = stor9[idx].field_0
                    continue 
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _1590 = mem[64]
                mem[64] = mem[64] + 256
                mem[_1590] = strategyInfo[stor9[idx].field_0].field_0
                mem[_1590 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_1590 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_1590 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_1590 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_1590 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_1590 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_1590 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                    mem[mem[64] + 36] = _1545
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args strategyInfo[stor9[idx].field_0].field_512, _1545
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1667 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1686 = mem[_1667]
                    require mem[_1667] == mem[_1667 + 12 len 20]
                    if 0 >= mem[96]:
                        revert with 0, 50
                    mem[128] = mem[_1667 + 12 len 20]
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = stor21
                    require ext_code.size(address(_1686))
                    staticcall address(_1686).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1769 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1789 = mem[_1769]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1686))
                    staticcall address(_1686).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1835 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1860 = mem[_1835]
                    if mem[_1835] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not _1789:
                        revert with 0, 18
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1950 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1958 = mem[_1950]
                    if 10^12 * _1860 / _1789 and mem[_1950] > -1 / 10^12 * _1860 / _1789:
                        revert with 0, 17
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _1860 / _1789 * _1958 / 10^12
                    mem[mem[64] + 36] = 64
                    _2044 = mem[96]
                    mem[mem[64] + 68] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 100
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len (32 * _2044) + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3748 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3763 = mem[_3748]
                    require mem[_3748] <= test266151307()
                    require _3748 + mem[_3748] + 31 < _3748 + return_data.size
                    _3781 = mem[_3748 + mem[_3748]]
                    if mem[_3748 + mem[_3748]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_3748 + mem[_3748]]) + 1 < 0 or _3748 + ceil32(return_data.size) + ceil32(32 * mem[_3748 + mem[_3748]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _3748 + ceil32(return_data.size) + ceil32(32 * mem[_3748 + mem[_3748]]) + 1
                    mem[_3748 + ceil32(return_data.size)] = _3781
                    require _3763 + (32 * _3781) + 32 <= return_data.size
                    t = _3748 + ceil32(return_data.size) + 32
                    s = _3748 + _3763 + 32
                    while s < _3748 + _3763 + (32 * _3781) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _3781:
                        revert with 0, 50
                    _6927 = mem[_3748 + ceil32(return_data.size) + 64]
                    if mem[_3748 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3748 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_3748 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if mem[_3748 + ceil32(return_data.size) + 64] < 100 * mem[_3748 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    _7101 = mem[_1505]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1686))
                    staticcall address(_1686).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7165 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7193 = mem[_7165]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _7245 = mem[64]
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7193
                    mem[mem[64] + 36] = _6927 - (100 * _6927 / 10000)
                    mem[mem[64] + 68] = 160
                    _7273 = mem[96]
                    mem[mem[64] + 164] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 196
                    while s < _7273:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7245 + 100] = this.address
                    mem[_7245 + 132] = block.timestamp + 60
                    require ext_code.size(address(_7101))
                    call address(_7101).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _7245 + (32 * _7273) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10476 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10492 = mem[_10476]
                    require mem[_10476] <= test266151307()
                    require _10476 + mem[_10476] + 31 < _10476 + return_data.size
                    _10518 = mem[_10476 + mem[_10476]]
                    if mem[_10476 + mem[_10476]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10476 + mem[_10476]]) + 1 < 0 or _10476 + ceil32(return_data.size) + ceil32(32 * mem[_10476 + mem[_10476]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10476 + ceil32(return_data.size) + ceil32(32 * mem[_10476 + mem[_10476]]) + 1
                    mem[_10476 + ceil32(return_data.size)] = _10518
                    require _10492 + (32 * _10518) + 32 <= return_data.size
                    t = _10476 + ceil32(return_data.size) + 32
                    s = _10476 + _10492 + 32
                    while s < _10476 + _10492 + (32 * _10518) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _13932 = mem[_1505]
                    _13933 = mem[_1505 + 192]
                    _13934 = mem[_1505 + 224]
                    _13960 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    mem[_13960 + 32 len 64] = call.data[calldata.size len 64]
                    if not mem[_13960]:
                        revert with 0, 50
                    mem[_13960 + 32] = stor21
                    if stor21 == address(_13933):
                        if stor21 == address(_13934):
                            _14055 = mem[_1505 + 160]
                            _14056 = mem[_1505 + 64]
                            _14057 = mem[_1505 + 32]
                            mem[_13960 + 100] = this.address
                            require ext_code.size(address(_14057))
                            staticcall address(_14057).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13960 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13960 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            if _14056 >= 999999:
                                mem[_13960 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                                require ext_code.size(address(_14055))
                                call address(_14055).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13960 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _14332 = mem[_1505 + 32]
                                mem[_13960 + ceil32(return_data.size) + 100] = this.address
                                require ext_code.size(address(_14332))
                                staticcall address(_14332).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_13960 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1505 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_13960 + (2 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_13960 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13960 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _14621 = mem[_1505]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_13960 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_13960 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_13960 + (4 * ceil32(return_data.size)) + 132] = 128
                                mem[_13960 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _13960 + (4 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_13960 + (4 * ceil32(return_data.size)) + 164] = this.address
                                mem[_13960 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_14621))
                                call address(_14621).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13960 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13960 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _13960 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _17387 = mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13960 + (4 * ceil32(return_data.size)) + return_data.size + 96
                                _17421 = mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13960 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _13960 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_13960 + (6 * ceil32(return_data.size)) + 96] = _17421
                                require _17387 + (32 * _17421) + 32 <= return_data.size
                                t = _13960 + (6 * ceil32(return_data.size)) + 128
                                s = _13960 + (4 * ceil32(return_data.size)) + _17387 + 128
                                while s < _13960 + (4 * ceil32(return_data.size)) + _17387 + (32 * _17421) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20195 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_20195]
                            else:
                                mem[_13960 + ceil32(return_data.size) + 100] = _14056
                                mem[_13960 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                require ext_code.size(address(_14055))
                                call address(_14055).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _14056, ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13960 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _14333 = mem[_1505 + 32]
                                mem[_13960 + ceil32(return_data.size) + 100] = this.address
                                require ext_code.size(address(_14333))
                                staticcall address(_14333).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_13960 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1505 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_13960 + (2 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_13960 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13960 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _14622 = mem[_1505]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_13960 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_13960 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_13960 + (4 * ceil32(return_data.size)) + 132] = 128
                                mem[_13960 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _13960 + (4 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_13960 + (4 * ceil32(return_data.size)) + 164] = this.address
                                mem[_13960 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_14622))
                                call address(_14622).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13960 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13960 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _13960 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _17388 = mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13960 + (4 * ceil32(return_data.size)) + return_data.size + 96
                                _17422 = mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13960 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _13960 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13960 + (4 * ceil32(return_data.size)) + mem[_13960 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_13960 + (6 * ceil32(return_data.size)) + 96] = _17422
                                require _17388 + (32 * _17422) + 32 <= return_data.size
                                t = _13960 + (6 * ceil32(return_data.size)) + 128
                                s = _13960 + (4 * ceil32(return_data.size)) + _17388 + 128
                                while s < _13960 + (4 * ceil32(return_data.size)) + _17388 + (32 * _17422) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20196 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_20196]
                        else:
                            if 1 >= mem[_13960]:
                                revert with 0, 50
                            mem[_13960 + 64] = address(_13934)
                            mem[_13960 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_13960 + 100] = eth.balance(this.address) / 2
                            mem[_13960 + 132] = 64
                            mem[_13960 + 164] = mem[_13960]
                            s = 0
                            t = _13960 + 32
                            u = _13960 + 196
                            while s < mem[_13960]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            require ext_code.size(address(_13932))
                            staticcall address(_13932).mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _13960 + (32 * mem[_13960]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _17369 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17405 = mem[_17369]
                            require mem[_17369] <= test266151307()
                            require _17369 + mem[_17369] + 31 < _17369 + return_data.size
                            _17437 = mem[_17369 + mem[_17369]]
                            if mem[_17369 + mem[_17369]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_17369 + mem[_17369]]) + 1 < 0 or _17369 + ceil32(return_data.size) + ceil32(32 * mem[_17369 + mem[_17369]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _17369 + ceil32(return_data.size) + ceil32(32 * mem[_17369 + mem[_17369]]) + 1
                            mem[_17369 + ceil32(return_data.size)] = _17437
                            require _17405 + (32 * _17437) + 32 <= return_data.size
                            t = _17369 + ceil32(return_data.size) + 32
                            s = _17369 + _17405 + 32
                            while s < _17369 + _17405 + (32 * _17437) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            if 1 >= _17437:
                                revert with 0, 50
                            _20132 = mem[_17369 + ceil32(return_data.size) + 64]
                            if mem[_17369 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17369 + ceil32(return_data.size) + 64]:
                                revert with 0, 17
                            if mem[_17369 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                revert with 0, 17
                            if 1 >= _17437:
                                revert with 0, 50
                            _20273 = mem[_17369 + ceil32(return_data.size) + 64]
                            if mem[_17369 + ceil32(return_data.size) + 64] < 100 * mem[_17369 + ceil32(return_data.size) + 64] / 10000:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20273 - (100 * _20132 / 10000)
                            mem[mem[64] + 36] = 128
                            _20343 = mem[_13960]
                            mem[mem[64] + 132] = mem[_13960]
                            s = 0
                            t = _13960 + 32
                            u = mem[64] + 164
                            while s < _20343:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[mem[64] + 100] = block.timestamp + 60
                            require ext_code.size(address(_13932))
                            call address(_13932).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args _20273 - (100 * _20132 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _20343) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22665 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22701 = mem[_22665]
                            require mem[_22665] <= test266151307()
                            require _22665 + mem[_22665] + 31 < _22665 + return_data.size
                            _22731 = mem[_22665 + mem[_22665]]
                            if mem[_22665 + mem[_22665]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_22665 + mem[_22665]]) + 1 < 0 or _22665 + ceil32(return_data.size) + ceil32(32 * mem[_22665 + mem[_22665]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _22665 + ceil32(return_data.size) + ceil32(32 * mem[_22665 + mem[_22665]]) + 1
                            mem[_22665 + ceil32(return_data.size)] = _22731
                            require _22701 + (32 * _22731) + 32 <= return_data.size
                            t = _22665 + ceil32(return_data.size) + 32
                            s = _22665 + _22701 + 32
                            while s < _22665 + _22701 + (32 * _22731) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            _24957 = mem[_1505 + 160]
                            _24958 = mem[_1505 + 64]
                            _24959 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_24959))
                            staticcall address(_24959).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25059 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25091 = mem[_25059]
                            if _24958 >= 999999:
                                mem[mem[64] + 4] = mem[_25059]
                                require ext_code.size(address(_24957))
                                call address(_24957).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _25091
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _25091
                                emit Earn(_25091);
                                _25267 = mem[_1505 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25267))
                                staticcall address(_25267).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25414 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1505 + 96] = mem[_25414]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25638 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25671 = mem[_25638]
                                _25705 = mem[_1505]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _25767 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25671
                                mem[mem[64] + 36] = 128
                                _25812 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _25812:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_25767 + 68] = this.address
                                mem[_25767 + 100] = block.timestamp + 60
                                require ext_code.size(address(_25705))
                                call address(_25705).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _25767 + (32 * _25812) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27081 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27121 = mem[_27081]
                                require mem[_27081] <= test266151307()
                                require _27081 + mem[_27081] + 31 < _27081 + return_data.size
                                _27161 = mem[_27081 + mem[_27081]]
                                if mem[_27081 + mem[_27081]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_27081 + mem[_27081]]) + 1 < 0 or _27081 + ceil32(return_data.size) + ceil32(32 * mem[_27081 + mem[_27081]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _27081 + ceil32(return_data.size) + ceil32(32 * mem[_27081 + mem[_27081]]) + 1
                                mem[_27081 + ceil32(return_data.size)] = _27161
                                require _27121 + (32 * _27161) + 32 <= return_data.size
                                t = _27081 + ceil32(return_data.size) + 32
                                s = _27081 + _27121 + 32
                                while s < _27081 + _27121 + (32 * _27161) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28393 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28393]
                            else:
                                mem[mem[64] + 4] = _24958
                                mem[mem[64] + 36] = _25091
                                require ext_code.size(address(_24957))
                                call address(_24957).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _24958, _25091
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _25091
                                emit Earn(_25091);
                                _25268 = mem[_1505 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25268))
                                staticcall address(_25268).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25415 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1505 + 96] = mem[_25415]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25639 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25672 = mem[_25639]
                                _25706 = mem[_1505]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _25768 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25672
                                mem[mem[64] + 36] = 128
                                _25813 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _25813:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_25768 + 68] = this.address
                                mem[_25768 + 100] = block.timestamp + 60
                                require ext_code.size(address(_25706))
                                call address(_25706).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _25768 + (32 * _25813) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27082 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27122 = mem[_27082]
                                require mem[_27082] <= test266151307()
                                require _27082 + mem[_27082] + 31 < _27082 + return_data.size
                                _27162 = mem[_27082 + mem[_27082]]
                                if mem[_27082 + mem[_27082]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_27082 + mem[_27082]]) + 1 < 0 or _27082 + ceil32(return_data.size) + ceil32(32 * mem[_27082 + mem[_27082]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _27082 + ceil32(return_data.size) + ceil32(32 * mem[_27082 + mem[_27082]]) + 1
                                mem[_27082 + ceil32(return_data.size)] = _27162
                                require _27122 + (32 * _27162) + 32 <= return_data.size
                                t = _27082 + ceil32(return_data.size) + 32
                                s = _27082 + _27122 + 32
                                while s < _27082 + _27122 + (32 * _27162) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28394 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28394]
                    else:
                        if 1 >= mem[_13960]:
                            revert with 0, 50
                        mem[_13960 + 64] = address(_13933)
                        mem[_13960 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_13960 + 100] = eth.balance(this.address) / 2
                        mem[_13960 + 132] = 64
                        mem[_13960 + 164] = mem[_13960]
                        s = 0
                        t = _13960 + 32
                        u = _13960 + 196
                        while s < mem[_13960]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13932))
                        staticcall address(_13932).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _13960 + (32 * mem[_13960]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17370 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17406 = mem[_17370]
                        require mem[_17370] <= test266151307()
                        require _17370 + mem[_17370] + 31 < _17370 + return_data.size
                        _17438 = mem[_17370 + mem[_17370]]
                        if mem[_17370 + mem[_17370]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_17370 + mem[_17370]]) + 1 < 0 or _17370 + ceil32(return_data.size) + ceil32(32 * mem[_17370 + mem[_17370]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _17370 + ceil32(return_data.size) + ceil32(32 * mem[_17370 + mem[_17370]]) + 1
                        mem[_17370 + ceil32(return_data.size)] = _17438
                        require _17406 + (32 * _17438) + 32 <= return_data.size
                        t = _17370 + ceil32(return_data.size) + 32
                        s = _17370 + _17406 + 32
                        while s < _17370 + _17406 + (32 * _17438) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _17438:
                            revert with 0, 50
                        _20133 = mem[_17370 + ceil32(return_data.size) + 64]
                        if mem[_17370 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17370 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_17370 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _17438:
                            revert with 0, 50
                        _20274 = mem[_17370 + ceil32(return_data.size) + 64]
                        if mem[_17370 + ceil32(return_data.size) + 64] < 100 * mem[_17370 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _20308 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20274 - (100 * _20133 / 10000)
                        mem[mem[64] + 36] = 128
                        _20344 = mem[_13960]
                        mem[mem[64] + 132] = mem[_13960]
                        s = 0
                        t = _13960 + 32
                        u = mem[64] + 164
                        while s < _20344:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_20308 + 68] = this.address
                        mem[_20308 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13932))
                        call address(_13932).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _20308 + (32 * _20344) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22666 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22702 = mem[_22666]
                        require mem[_22666] <= test266151307()
                        require _22666 + mem[_22666] + 31 < _22666 + return_data.size
                        _22732 = mem[_22666 + mem[_22666]]
                        if mem[_22666 + mem[_22666]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22666 + mem[_22666]]) + 1 < 0 or _22666 + ceil32(return_data.size) + ceil32(32 * mem[_22666 + mem[_22666]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22666 + ceil32(return_data.size) + ceil32(32 * mem[_22666 + mem[_22666]]) + 1
                        mem[_22666 + ceil32(return_data.size)] = _22732
                        require _22702 + (32 * _22732) + 32 <= return_data.size
                        t = _22666 + ceil32(return_data.size) + 32
                        s = _22666 + _22702 + 32
                        while s < _22666 + _22702 + (32 * _22732) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if stor21 == address(_13934):
                            _25001 = mem[_1505 + 160]
                            _25002 = mem[_1505 + 64]
                            _25003 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25003))
                            staticcall address(_25003).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25076 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25108 = mem[_25076]
                            if _25002 >= 999999:
                                mem[mem[64] + 4] = mem[_25076]
                                require ext_code.size(address(_25001))
                                call address(_25001).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _25108
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _25108
                                emit Earn(_25108);
                                _25330 = mem[_1505 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25330))
                                staticcall address(_25330).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25435 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1505 + 96] = mem[_25435]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25655 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25687 = mem[_25655]
                                _25723 = mem[_1505]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _25792 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25687
                                mem[mem[64] + 36] = 128
                                _25832 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _25832:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_25792 + 68] = this.address
                                mem[_25792 + 100] = block.timestamp + 60
                                require ext_code.size(address(_25723))
                                call address(_25723).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _25792 + (32 * _25832) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27083 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27123 = mem[_27083]
                                require mem[_27083] <= test266151307()
                                require _27083 + mem[_27083] + 31 < _27083 + return_data.size
                                _27163 = mem[_27083 + mem[_27083]]
                                if mem[_27083 + mem[_27083]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_27083 + mem[_27083]]) + 1 < 0 or _27083 + ceil32(return_data.size) + ceil32(32 * mem[_27083 + mem[_27083]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _27083 + ceil32(return_data.size) + ceil32(32 * mem[_27083 + mem[_27083]]) + 1
                                mem[_27083 + ceil32(return_data.size)] = _27163
                                require _27123 + (32 * _27163) + 32 <= return_data.size
                                t = _27083 + ceil32(return_data.size) + 32
                                s = _27083 + _27123 + 32
                                while s < _27083 + _27123 + (32 * _27163) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28395 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28395]
                            else:
                                mem[mem[64] + 4] = _25002
                                mem[mem[64] + 36] = _25108
                                require ext_code.size(address(_25001))
                                call address(_25001).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _25002, _25108
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _25108
                                emit Earn(_25108);
                                _25331 = mem[_1505 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25331))
                                staticcall address(_25331).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25436 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1505 + 96] = mem[_25436]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25656 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25688 = mem[_25656]
                                _25724 = mem[_1505]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _25793 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _25688
                                mem[mem[64] + 36] = 128
                                _25833 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_25793 + 100] = block.timestamp + 60
                                require ext_code.size(address(_25724))
                                call address(_25724).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _25793 + (32 * _25833) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27084 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27124 = mem[_27084]
                                require mem[_27084] <= test266151307()
                                require _27084 + mem[_27084] + 31 < _27084 + return_data.size
                                _27164 = mem[_27084 + mem[_27084]]
                                if mem[_27084 + mem[_27084]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_27084 + mem[_27084]]) + 1 < 0 or _27084 + ceil32(return_data.size) + ceil32(32 * mem[_27084 + mem[_27084]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _27084 + ceil32(return_data.size) + ceil32(32 * mem[_27084 + mem[_27084]]) + 1
                                mem[_27084 + ceil32(return_data.size)] = _27164
                                require _27124 + (32 * _27164) + 32 <= return_data.size
                                t = _27084 + ceil32(return_data.size) + 32
                                s = _27084 + _27124 + 32
                                while s < _27084 + _27124 + (32 * _27164) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28396 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28396]
                        else:
                            if 1 >= mem[_13960]:
                                revert with 0, 50
                            mem[_13960 + 64] = address(_13934)
                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = eth.balance(this.address) / 2
                            mem[mem[64] + 36] = 64
                            _25060 = mem[_13960]
                            mem[mem[64] + 68] = mem[_13960]
                            s = 0
                            t = _13960 + 32
                            u = mem[64] + 100
                            while s < _25060:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            require ext_code.size(address(_13932))
                            staticcall address(_13932).getAmountsOut(uint256 arg1, address[] arg2) with:
                                    gas gas_remaining wei
                                   args Mask(255, 1, eth.balance(this.address)), 64, mem[mem[64] + 68 len (32 * _25060) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27104 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27144 = mem[_27104]
                            require mem[_27104] <= test266151307()
                            require _27104 + mem[_27104] + 31 < _27104 + return_data.size
                            _27184 = mem[_27104 + mem[_27104]]
                            if mem[_27104 + mem[_27104]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27104 + mem[_27104]]) + 1 < 0 or _27104 + ceil32(return_data.size) + ceil32(32 * mem[_27104 + mem[_27104]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27104 + ceil32(return_data.size) + ceil32(32 * mem[_27104 + mem[_27104]]) + 1
                            mem[_27104 + ceil32(return_data.size)] = _27184
                            require _27144 + (32 * _27184) + 32 <= return_data.size
                            t = _27104 + ceil32(return_data.size) + 32
                            s = _27104 + _27144 + 32
                            while s < _27104 + _27144 + (32 * _27184) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            if 1 >= _27184:
                                revert with 0, 50
                            _28300 = mem[_27104 + ceil32(return_data.size) + 64]
                            if mem[_27104 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27104 + ceil32(return_data.size) + 64]:
                                revert with 0, 17
                            if mem[_27104 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                revert with 0, 17
                            if 1 >= _27184:
                                revert with 0, 50
                            _28480 = mem[_27104 + ceil32(return_data.size) + 64]
                            if mem[_27104 + ceil32(return_data.size) + 64] < 100 * mem[_27104 + ceil32(return_data.size) + 64] / 10000:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _28499 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _28480 - (100 * _28300 / 10000)
                            mem[mem[64] + 36] = 128
                            _28515 = mem[_13960]
                            mem[mem[64] + 132] = mem[_13960]
                            s = 0
                            t = _13960 + 32
                            u = mem[64] + 164
                            while s < _28515:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_28499 + 68] = this.address
                            mem[_28499 + 100] = block.timestamp + 60
                            require ext_code.size(address(_13932))
                            call address(_13932).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _28499 + (32 * _28515) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29227 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29243 = mem[_29227]
                            require mem[_29227] <= test266151307()
                            require _29227 + mem[_29227] + 31 < _29227 + return_data.size
                            _29255 = mem[_29227 + mem[_29227]]
                            if mem[_29227 + mem[_29227]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_29227 + mem[_29227]]) + 1 < 0 or _29227 + ceil32(return_data.size) + ceil32(32 * mem[_29227 + mem[_29227]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _29227 + ceil32(return_data.size) + ceil32(32 * mem[_29227 + mem[_29227]]) + 1
                            mem[_29227 + ceil32(return_data.size)] = _29255
                            require _29243 + (32 * _29255) + 32 <= return_data.size
                            t = _29227 + ceil32(return_data.size) + 32
                            s = _29227 + _29243 + 32
                            while s < _29227 + _29243 + (32 * _29255) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            _29913 = mem[_1505 + 160]
                            _29914 = mem[_1505 + 64]
                            _29915 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_29915))
                            staticcall address(_29915).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29950 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _29960 = mem[_29950]
                            if _29914 >= 999999:
                                mem[mem[64] + 4] = mem[_29950]
                                require ext_code.size(address(_29913))
                                call address(_29913).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _29960
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _29960
                                emit Earn(_29960);
                                _30040 = mem[_1505 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_30040))
                                staticcall address(_30040).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30093 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1505 + 96] = mem[_30093]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30189 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _30205 = mem[_30189]
                                _30222 = mem[_1505]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _30244 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _30205
                                mem[mem[64] + 36] = 128
                                _30262 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _30262:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_30244 + 68] = this.address
                                mem[_30244 + 100] = block.timestamp + 60
                                require ext_code.size(address(_30222))
                                call address(_30222).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _30244 + (32 * _30262) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30511 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _30527 = mem[_30511]
                                require mem[_30511] <= test266151307()
                                require _30511 + mem[_30511] + 31 < _30511 + return_data.size
                                _30543 = mem[_30511 + mem[_30511]]
                                if mem[_30511 + mem[_30511]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_30511 + mem[_30511]]) + 1 < 0 or _30511 + ceil32(return_data.size) + ceil32(32 * mem[_30511 + mem[_30511]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _30511 + ceil32(return_data.size) + ceil32(32 * mem[_30511 + mem[_30511]]) + 1
                                mem[_30511 + ceil32(return_data.size)] = _30543
                                require _30527 + (32 * _30543) + 32 <= return_data.size
                                t = _30511 + ceil32(return_data.size) + 32
                                s = _30511 + _30527 + 32
                                while s < _30511 + _30527 + (32 * _30543) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30737 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_30737]
                            else:
                                mem[mem[64] + 4] = _29914
                                mem[mem[64] + 36] = _29960
                                require ext_code.size(address(_29913))
                                call address(_29913).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _29914, _29960
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _29960
                                emit Earn(_29960);
                                _30041 = mem[_1505 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_30041))
                                staticcall address(_30041).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30094 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1505 + 96] = mem[_30094]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30190 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _30206 = mem[_30190]
                                _30223 = mem[_1505]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _30245 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _30206
                                mem[mem[64] + 36] = 128
                                _30263 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _30263:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_30245 + 68] = this.address
                                mem[_30245 + 100] = block.timestamp + 60
                                require ext_code.size(address(_30223))
                                call address(_30223).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _30245 + (32 * _30263) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30512 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _30528 = mem[_30512]
                                require mem[_30512] <= test266151307()
                                require _30512 + mem[_30512] + 31 < _30512 + return_data.size
                                _30544 = mem[_30512 + mem[_30512]]
                                if mem[_30512 + mem[_30512]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_30512 + mem[_30512]]) + 1 < 0 or _30512 + ceil32(return_data.size) + ceil32(32 * mem[_30512 + mem[_30512]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _30512 + ceil32(return_data.size) + ceil32(32 * mem[_30512 + mem[_30512]]) + 1
                                mem[_30512 + ceil32(return_data.size)] = _30544
                                require _30528 + (32 * _30544) + 32 <= return_data.size
                                t = _30512 + ceil32(return_data.size) + 32
                                s = _30512 + _30528 + 32
                                while s < _30512 + _30528 + (32 * _30544) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30738 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_30738]
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1505
                    s = _6927 - (100 * _6927 / 10000)
                    s = stor9[idx].field_0
                    continue 
                mem[mem[64] + 4] = _1545
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _1545
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1666 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1685 = mem[_1666]
                require mem[_1666] == mem[_1666 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1666 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1685))
                staticcall address(_1685).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1768 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1788 = mem[_1768]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1685))
                staticcall address(_1685).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1834 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1859 = mem[_1834]
                if mem[_1834] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1788:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1949 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1957 = mem[_1949]
                if 10^12 * _1859 / _1788 and mem[_1949] > -1 / 10^12 * _1859 / _1788:
                    revert with 0, 17
                _2011 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1859 / _1788 * _1957 / 10^12
                mem[mem[64] + 36] = 64
                _2043 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _2043:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _2011 + (32 * _2043) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3747 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3762 = mem[_3747]
                require mem[_3747] <= test266151307()
                require _3747 + mem[_3747] + 31 < _3747 + return_data.size
                _3780 = mem[_3747 + mem[_3747]]
                if mem[_3747 + mem[_3747]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3747 + mem[_3747]]) + 1 < 0 or _3747 + ceil32(return_data.size) + ceil32(32 * mem[_3747 + mem[_3747]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3747 + ceil32(return_data.size) + ceil32(32 * mem[_3747 + mem[_3747]]) + 1
                mem[_3747 + ceil32(return_data.size)] = _3780
                require _3762 + (32 * _3780) + 32 <= return_data.size
                t = _3747 + ceil32(return_data.size) + 32
                s = _3747 + _3762 + 32
                while s < _3747 + _3762 + (32 * _3780) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3780:
                    revert with 0, 50
                _6926 = mem[_3747 + ceil32(return_data.size) + 64]
                if mem[_3747 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3747 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_3747 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_3747 + ceil32(return_data.size) + 64] < 100 * mem[_3747 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _7100 = mem[_1505]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1685))
                staticcall address(_1685).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7164 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7192 = mem[_7164]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _7244 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7192
                mem[mem[64] + 36] = _6926 - (100 * _6926 / 10000)
                mem[mem[64] + 68] = 160
                _7272 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _7272:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7244 + 100] = this.address
                mem[_7244 + 132] = block.timestamp + 60
                require ext_code.size(address(_7100))
                call address(_7100).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7244 + (32 * _7272) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10475 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10491 = mem[_10475]
                require mem[_10475] <= test266151307()
                require _10475 + mem[_10475] + 31 < _10475 + return_data.size
                _10517 = mem[_10475 + mem[_10475]]
                if mem[_10475 + mem[_10475]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10475 + mem[_10475]]) + 1 < 0 or _10475 + ceil32(return_data.size) + ceil32(32 * mem[_10475 + mem[_10475]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10475 + ceil32(return_data.size) + ceil32(32 * mem[_10475 + mem[_10475]]) + 1
                mem[_10475 + ceil32(return_data.size)] = _10517
                require _10491 + (32 * _10517) + 32 <= return_data.size
                t = _10475 + ceil32(return_data.size) + 32
                s = _10475 + _10491 + 32
                while s < _10475 + _10491 + (32 * _10517) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _13929 = mem[_1505]
                _13930 = mem[_1505 + 192]
                _13931 = mem[_1505 + 224]
                _13958 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_13958 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_13958]:
                    revert with 0, 50
                mem[_13958 + 32] = stor21
                if stor21 == address(_13930):
                    if stor21 == address(_13931):
                        _14051 = mem[_1505 + 160]
                        _14052 = mem[_1505 + 64]
                        _14053 = mem[_1505 + 32]
                        mem[_13958 + 100] = this.address
                        require ext_code.size(address(_14053))
                        staticcall address(_14053).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13958 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13958 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        if _14052 >= 999999:
                            mem[_13958 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_14051))
                            call address(_14051).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13958 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _14329 = mem[_1505 + 32]
                            mem[_13958 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_14329))
                            staticcall address(_14329).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13958 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1505 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_13958 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13958 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13958 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _14619 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_13958 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_13958 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_13958 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_13958 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _13958 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13958 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_13958 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_14619))
                            call address(_14619).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13958 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13958 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _13958 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17385 = mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13958 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _17419 = mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13958 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _13958 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_13958 + (6 * ceil32(return_data.size)) + 96] = mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _17385 + (32 * _17419) + 32 <= return_data.size
                            t = _13958 + (6 * ceil32(return_data.size)) + 128
                            s = _13958 + (4 * ceil32(return_data.size)) + _17385 + 128
                            while s < _13958 + (4 * ceil32(return_data.size)) + _17385 + (32 * _17419) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20193 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_20193]
                        else:
                            mem[_13958 + ceil32(return_data.size) + 100] = _14052
                            mem[_13958 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_14051))
                            call address(_14051).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _14052, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13958 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _14330 = mem[_1505 + 32]
                            mem[_13958 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_14330))
                            staticcall address(_14330).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13958 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1505 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_13958 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13958 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13958 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _14620 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_13958 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_13958 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_13958 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_13958 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _13958 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13958 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_13958 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_14620))
                            call address(_14620).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13958 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13958 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _13958 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17386 = mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13958 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _17420 = mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13958 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _13958 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_13958 + (6 * ceil32(return_data.size)) + 96] = mem[_13958 + (4 * ceil32(return_data.size)) + mem[_13958 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _17386 + (32 * _17420) + 32 <= return_data.size
                            t = _13958 + (6 * ceil32(return_data.size)) + 128
                            s = _13958 + (4 * ceil32(return_data.size)) + _17386 + 128
                            while s < _13958 + (4 * ceil32(return_data.size)) + _17386 + (32 * _17420) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20194 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_20194]
                    else:
                        if 1 >= mem[_13958]:
                            revert with 0, 50
                        mem[_13958 + 64] = address(_13931)
                        mem[_13958 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_13958 + 100] = eth.balance(this.address) / 2
                        mem[_13958 + 132] = 64
                        mem[_13958 + 164] = mem[_13958]
                        s = 0
                        t = _13958 + 32
                        u = _13958 + 196
                        while s < mem[_13958]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13929))
                        staticcall address(_13929).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _13958 + (32 * mem[_13958]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17367 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17403 = mem[_17367]
                        require mem[_17367] <= test266151307()
                        require _17367 + mem[_17367] + 31 < _17367 + return_data.size
                        _17435 = mem[_17367 + mem[_17367]]
                        if mem[_17367 + mem[_17367]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_17367 + mem[_17367]]) + 1 < 0 or _17367 + ceil32(return_data.size) + ceil32(32 * mem[_17367 + mem[_17367]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _17367 + ceil32(return_data.size) + ceil32(32 * mem[_17367 + mem[_17367]]) + 1
                        mem[_17367 + ceil32(return_data.size)] = _17435
                        require _17403 + (32 * _17435) + 32 <= return_data.size
                        t = _17367 + ceil32(return_data.size) + 32
                        s = _17367 + _17403 + 32
                        while s < _17367 + _17403 + (32 * _17435) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _17435:
                            revert with 0, 50
                        _20130 = mem[_17367 + ceil32(return_data.size) + 64]
                        if mem[_17367 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17367 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_17367 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _17435:
                            revert with 0, 50
                        _20271 = mem[_17367 + ceil32(return_data.size) + 64]
                        if mem[_17367 + ceil32(return_data.size) + 64] < 100 * mem[_17367 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _20305 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20271 - (100 * _20130 / 10000)
                        mem[mem[64] + 36] = 128
                        _20341 = mem[_13958]
                        mem[mem[64] + 132] = mem[_13958]
                        s = 0
                        t = _13958 + 32
                        u = mem[64] + 164
                        while s < _20341:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_20305 + 68] = this.address
                        mem[_20305 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13929))
                        call address(_13929).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _20305 + (32 * _20341) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22663 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22699 = mem[_22663]
                        require mem[_22663] <= test266151307()
                        require _22663 + mem[_22663] + 31 < _22663 + return_data.size
                        _22729 = mem[_22663 + mem[_22663]]
                        if mem[_22663 + mem[_22663]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22663 + mem[_22663]]) + 1 < 0 or _22663 + ceil32(return_data.size) + ceil32(32 * mem[_22663 + mem[_22663]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22663 + ceil32(return_data.size) + ceil32(32 * mem[_22663 + mem[_22663]]) + 1
                        mem[_22663 + ceil32(return_data.size)] = _22729
                        require _22699 + (32 * _22729) + 32 <= return_data.size
                        t = _22663 + ceil32(return_data.size) + 32
                        s = _22663 + _22699 + 32
                        while s < _22663 + _22699 + (32 * _22729) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _24953 = mem[_1505 + 160]
                        _24954 = mem[_1505 + 64]
                        _24955 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24955))
                        staticcall address(_24955).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25057 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25089 = mem[_25057]
                        if _24954 >= 999999:
                            mem[mem[64] + 4] = mem[_25057]
                            require ext_code.size(address(_24953))
                            call address(_24953).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _25089
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25089
                            emit Earn(_25089);
                            _25261 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25261))
                            staticcall address(_25261).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25411 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_25411]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25636 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25669 = mem[_25636]
                            _25703 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25764 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25669
                            mem[mem[64] + 36] = 128
                            _25810 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25810:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25764 + 68] = this.address
                            mem[_25764 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25703))
                            call address(_25703).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25764 + (32 * _25810) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27077 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27117 = mem[_27077]
                            require mem[_27077] <= test266151307()
                            require _27077 + mem[_27077] + 31 < _27077 + return_data.size
                            _27157 = mem[_27077 + mem[_27077]]
                            if mem[_27077 + mem[_27077]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27077 + mem[_27077]]) + 1 < 0 or _27077 + ceil32(return_data.size) + ceil32(32 * mem[_27077 + mem[_27077]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27077 + ceil32(return_data.size) + ceil32(32 * mem[_27077 + mem[_27077]]) + 1
                            mem[_27077 + ceil32(return_data.size)] = _27157
                            require _27117 + (32 * _27157) + 32 <= return_data.size
                            t = _27077 + ceil32(return_data.size) + 32
                            s = _27077 + _27117 + 32
                            while s < _27077 + _27117 + (32 * _27157) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28389 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28389]
                        else:
                            mem[mem[64] + 4] = _24954
                            mem[mem[64] + 36] = _25089
                            require ext_code.size(address(_24953))
                            call address(_24953).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _24954, _25089
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25089
                            emit Earn(_25089);
                            _25262 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25262))
                            staticcall address(_25262).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25412 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_25412]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25637 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25670 = mem[_25637]
                            _25704 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25765 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25670
                            mem[mem[64] + 36] = 128
                            _25811 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25811:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25765 + 68] = this.address
                            mem[_25765 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25704))
                            call address(_25704).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25765 + (32 * _25811) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27078 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27118 = mem[_27078]
                            require mem[_27078] <= test266151307()
                            require _27078 + mem[_27078] + 31 < _27078 + return_data.size
                            _27158 = mem[_27078 + mem[_27078]]
                            if mem[_27078 + mem[_27078]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27078 + mem[_27078]]) + 1 < 0 or _27078 + ceil32(return_data.size) + ceil32(32 * mem[_27078 + mem[_27078]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27078 + ceil32(return_data.size) + ceil32(32 * mem[_27078 + mem[_27078]]) + 1
                            mem[_27078 + ceil32(return_data.size)] = _27158
                            require _27118 + (32 * _27158) + 32 <= return_data.size
                            t = _27078 + ceil32(return_data.size) + 32
                            s = _27078 + _27118 + 32
                            while s < _27078 + _27118 + (32 * _27158) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28390 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28390]
                else:
                    if 1 >= mem[_13958]:
                        revert with 0, 50
                    mem[_13958 + 64] = address(_13930)
                    mem[_13958 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_13958 + 100] = eth.balance(this.address) / 2
                    mem[_13958 + 132] = 64
                    mem[_13958 + 164] = mem[_13958]
                    s = 0
                    t = _13958 + 32
                    u = _13958 + 196
                    while s < mem[_13958]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_13929))
                    staticcall address(_13929).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _13958 + (32 * mem[_13958]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17368 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17404 = mem[_17368]
                    require mem[_17368] <= test266151307()
                    require _17368 + mem[_17368] + 31 < _17368 + return_data.size
                    _17436 = mem[_17368 + mem[_17368]]
                    if mem[_17368 + mem[_17368]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_17368 + mem[_17368]]) + 1 < 0 or _17368 + ceil32(return_data.size) + ceil32(32 * mem[_17368 + mem[_17368]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _17368 + ceil32(return_data.size) + ceil32(32 * mem[_17368 + mem[_17368]]) + 1
                    mem[_17368 + ceil32(return_data.size)] = _17436
                    require _17404 + (32 * _17436) + 32 <= return_data.size
                    t = _17368 + ceil32(return_data.size) + 32
                    s = _17368 + _17404 + 32
                    while s < _17368 + _17404 + (32 * _17436) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _17436:
                        revert with 0, 50
                    _20131 = mem[_17368 + ceil32(return_data.size) + 64]
                    if mem[_17368 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17368 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_17368 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _17436:
                        revert with 0, 50
                    _20272 = mem[_17368 + ceil32(return_data.size) + 64]
                    if mem[_17368 + ceil32(return_data.size) + 64] < 100 * mem[_17368 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _20306 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _20272 - (100 * _20131 / 10000)
                    mem[mem[64] + 36] = 128
                    _20342 = mem[_13958]
                    mem[mem[64] + 132] = mem[_13958]
                    s = 0
                    t = _13958 + 32
                    u = mem[64] + 164
                    while s < _20342:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_20306 + 68] = this.address
                    mem[_20306 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13929))
                    call address(_13929).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _20306 + (32 * _20342) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22664 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22700 = mem[_22664]
                    require mem[_22664] <= test266151307()
                    require _22664 + mem[_22664] + 31 < _22664 + return_data.size
                    _22730 = mem[_22664 + mem[_22664]]
                    if mem[_22664 + mem[_22664]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_22664 + mem[_22664]]) + 1 < 0 or _22664 + ceil32(return_data.size) + ceil32(32 * mem[_22664 + mem[_22664]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _22664 + ceil32(return_data.size) + ceil32(32 * mem[_22664 + mem[_22664]]) + 1
                    mem[_22664 + ceil32(return_data.size)] = _22730
                    require _22700 + (32 * _22730) + 32 <= return_data.size
                    t = _22664 + ceil32(return_data.size) + 32
                    s = _22664 + _22700 + 32
                    while s < _22664 + _22700 + (32 * _22730) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_13931):
                        _24995 = mem[_1505 + 160]
                        _24996 = mem[_1505 + 64]
                        _24997 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24997))
                        staticcall address(_24997).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25075 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25107 = mem[_25075]
                        if _24996 >= 999999:
                            mem[mem[64] + 4] = mem[_25075]
                            require ext_code.size(address(_24995))
                            call address(_24995).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _25107
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25107
                            emit Earn(_25107);
                            _25323 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25323))
                            staticcall address(_25323).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25433 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_25433]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25653 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25685 = mem[_25653]
                            _25721 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25790 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25685
                            mem[mem[64] + 36] = 128
                            _25830 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25830:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25790 + 68] = this.address
                            mem[_25790 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25721))
                            call address(_25721).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25790 + (32 * _25830) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27079 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27119 = mem[_27079]
                            require mem[_27079] <= test266151307()
                            require _27079 + mem[_27079] + 31 < _27079 + return_data.size
                            _27159 = mem[_27079 + mem[_27079]]
                            if mem[_27079 + mem[_27079]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27079 + mem[_27079]]) + 1 < 0 or _27079 + ceil32(return_data.size) + ceil32(32 * mem[_27079 + mem[_27079]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27079 + ceil32(return_data.size) + ceil32(32 * mem[_27079 + mem[_27079]]) + 1
                            mem[_27079 + ceil32(return_data.size)] = _27159
                            require _27119 + (32 * _27159) + 32 <= return_data.size
                            t = _27079 + ceil32(return_data.size) + 32
                            s = _27079 + _27119 + 32
                            while s < _27079 + _27119 + (32 * _27159) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28391 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28391]
                        else:
                            mem[mem[64] + 4] = _24996
                            mem[mem[64] + 36] = _25107
                            require ext_code.size(address(_24995))
                            call address(_24995).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _24996, _25107
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25107
                            emit Earn(_25107);
                            _25324 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25324))
                            staticcall address(_25324).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25434 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_25434]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25654 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25686 = mem[_25654]
                            _25722 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25791 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25686
                            mem[mem[64] + 36] = 128
                            _25831 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25831:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25791 + 68] = this.address
                            mem[_25791 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25722))
                            call address(_25722).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25791 + (32 * _25831) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27080 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27120 = mem[_27080]
                            require mem[_27080] <= test266151307()
                            require _27080 + mem[_27080] + 31 < _27080 + return_data.size
                            _27160 = mem[_27080 + mem[_27080]]
                            if mem[_27080 + mem[_27080]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27080 + mem[_27080]]) + 1 < 0 or _27080 + ceil32(return_data.size) + ceil32(32 * mem[_27080 + mem[_27080]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27080 + ceil32(return_data.size) + ceil32(32 * mem[_27080 + mem[_27080]]) + 1
                            mem[_27080 + ceil32(return_data.size)] = _27160
                            require _27120 + (32 * _27160) + 32 <= return_data.size
                            t = _27080 + ceil32(return_data.size) + 32
                            s = _27080 + _27120 + 32
                            while s < _27080 + _27120 + (32 * _27160) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28392 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28392]
                    else:
                        if 1 >= mem[_13958]:
                            revert with 0, 50
                        mem[_13958 + 64] = address(_13931)
                        _24998 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _25058 = mem[_13958]
                        mem[mem[64] + 68] = mem[_13958]
                        s = 0
                        t = _13958 + 32
                        u = mem[64] + 100
                        while s < _25058:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13929))
                        staticcall address(_13929).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _24998 + (32 * _25058) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27103 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27143 = mem[_27103]
                        require mem[_27103] <= test266151307()
                        require _27103 + mem[_27103] + 31 < _27103 + return_data.size
                        _27183 = mem[_27103 + mem[_27103]]
                        if mem[_27103 + mem[_27103]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27103 + mem[_27103]]) + 1 < 0 or _27103 + ceil32(return_data.size) + ceil32(32 * mem[_27103 + mem[_27103]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27103 + ceil32(return_data.size) + ceil32(32 * mem[_27103 + mem[_27103]]) + 1
                        mem[_27103 + ceil32(return_data.size)] = _27183
                        require _27143 + (32 * _27183) + 32 <= return_data.size
                        t = _27103 + ceil32(return_data.size) + 32
                        s = _27103 + _27143 + 32
                        while s < _27103 + _27143 + (32 * _27183) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27183:
                            revert with 0, 50
                        _28299 = mem[_27103 + ceil32(return_data.size) + 64]
                        if mem[_27103 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27103 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_27103 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _27183:
                            revert with 0, 50
                        _28479 = mem[_27103 + ceil32(return_data.size) + 64]
                        if mem[_27103 + ceil32(return_data.size) + 64] < 100 * mem[_27103 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28498 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28479 - (100 * _28299 / 10000)
                        mem[mem[64] + 36] = 128
                        _28514 = mem[_13958]
                        mem[mem[64] + 132] = mem[_13958]
                        s = 0
                        t = _13958 + 32
                        u = mem[64] + 164
                        while s < _28514:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28498 + 68] = this.address
                        mem[_28498 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13929))
                        call address(_13929).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28498 + (32 * _28514) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29226 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29242 = mem[_29226]
                        require mem[_29226] <= test266151307()
                        require _29226 + mem[_29226] + 31 < _29226 + return_data.size
                        _29254 = mem[_29226 + mem[_29226]]
                        if mem[_29226 + mem[_29226]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29226 + mem[_29226]]) + 1 < 0 or _29226 + ceil32(return_data.size) + ceil32(32 * mem[_29226 + mem[_29226]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29226 + ceil32(return_data.size) + ceil32(32 * mem[_29226 + mem[_29226]]) + 1
                        mem[_29226 + ceil32(return_data.size)] = _29254
                        require _29242 + (32 * _29254) + 32 <= return_data.size
                        t = _29226 + ceil32(return_data.size) + 32
                        s = _29226 + _29242 + 32
                        while s < _29226 + _29242 + (32 * _29254) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _29910 = mem[_1505 + 160]
                        _29911 = mem[_1505 + 64]
                        _29912 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_29912))
                        staticcall address(_29912).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29949 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29959 = mem[_29949]
                        if _29911 >= 999999:
                            mem[mem[64] + 4] = mem[_29949]
                            require ext_code.size(address(_29910))
                            call address(_29910).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _29959
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _29959
                            emit Earn(_29959);
                            _30038 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_30038))
                            staticcall address(_30038).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30091 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_30091]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30187 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30203 = mem[_30187]
                            _30220 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _30242 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _30203
                            mem[mem[64] + 36] = 128
                            _30260 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _30260:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_30242 + 68] = this.address
                            mem[_30242 + 100] = block.timestamp + 60
                            require ext_code.size(address(_30220))
                            call address(_30220).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _30242 + (32 * _30260) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30509 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30525 = mem[_30509]
                            require mem[_30509] <= test266151307()
                            require _30509 + mem[_30509] + 31 < _30509 + return_data.size
                            _30541 = mem[_30509 + mem[_30509]]
                            if mem[_30509 + mem[_30509]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_30509 + mem[_30509]]) + 1 < 0 or _30509 + ceil32(return_data.size) + ceil32(32 * mem[_30509 + mem[_30509]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _30509 + ceil32(return_data.size) + ceil32(32 * mem[_30509 + mem[_30509]]) + 1
                            mem[_30509 + ceil32(return_data.size)] = _30541
                            require _30525 + (32 * _30541) + 32 <= return_data.size
                            t = _30509 + ceil32(return_data.size) + 32
                            s = _30509 + _30525 + 32
                            while s < _30509 + _30525 + (32 * _30541) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30735 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_30735]
                        else:
                            mem[mem[64] + 4] = _29911
                            mem[mem[64] + 36] = _29959
                            require ext_code.size(address(_29910))
                            call address(_29910).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _29911, _29959
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _29959
                            emit Earn(_29959);
                            _30039 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_30039))
                            staticcall address(_30039).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30092 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_30092]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30188 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30204 = mem[_30188]
                            _30221 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _30243 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _30204
                            mem[mem[64] + 36] = 128
                            _30261 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _30261:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_30243 + 68] = this.address
                            mem[_30243 + 100] = block.timestamp + 60
                            require ext_code.size(address(_30221))
                            call address(_30221).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _30243 + (32 * _30261) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30510 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30526 = mem[_30510]
                            require mem[_30510] <= test266151307()
                            require _30510 + mem[_30510] + 31 < _30510 + return_data.size
                            _30542 = mem[_30510 + mem[_30510]]
                            if mem[_30510 + mem[_30510]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_30510 + mem[_30510]]) + 1 < 0 or _30510 + ceil32(return_data.size) + ceil32(32 * mem[_30510 + mem[_30510]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _30510 + ceil32(return_data.size) + ceil32(32 * mem[_30510 + mem[_30510]]) + 1
                            mem[_30510 + ceil32(return_data.size)] = _30542
                            require _30526 + (32 * _30542) + 32 <= return_data.size
                            t = _30510 + ceil32(return_data.size) + 32
                            s = _30510 + _30526 + 32
                            while s < _30510 + _30526 + (32 * _30542) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30736 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_30736]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1505
                s = _6926 - (100 * _6926 / 10000)
                s = stor9[idx].field_0
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1527 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _1544 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_1544] = mem[_1527]
            mem[_1544 + 32] = mem[_1527 + 32]
            mem[_1544 + 64] = mem[_1527 + 64]
            require return_data.size - 96 >= 96
            _1573 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1573] = mem[_1527 + 96]
            mem[_1573 + 32] = mem[_1527 + 128]
            mem[_1573 + 64] = mem[_1527 + 160]
            mem[_1544 + 96] = _1573
            mem[_1544 + 128] = mem[_1527 + 192]
            require return_data.size - 224 >= 96
            _1614 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1614] = mem[_1527 + 224]
            mem[_1614 + 32] = mem[_1527 + 256]
            mem[_1614 + 64] = mem[_1527 + 288]
            mem[_1544 + 160] = _1614
            _1639 = mem[_1544 + 64]
            if not mem[_1544 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1505
                s = mem[_1544 + 64]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1676 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1676] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1676 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1676 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1676 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1676 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1676 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1676 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1676 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _1639
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _1639
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1737 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1747 = mem[_1737]
                require mem[_1737] == mem[_1737 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1737 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1747))
                staticcall address(_1747).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1866 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1886 = mem[_1866]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1747))
                staticcall address(_1747).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1930 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1945 = mem[_1930]
                if mem[_1930] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1886:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2009 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2041 = mem[_2009]
                if 10^12 * _1945 / _1886 and mem[_2009] > -1 / 10^12 * _1945 / _1886:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1945 / _1886 * _2041 / 10^12
                mem[mem[64] + 36] = 64
                _2154 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _2154) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3745 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3760 = mem[_3745]
                require mem[_3745] <= test266151307()
                require _3745 + mem[_3745] + 31 < _3745 + return_data.size
                _3778 = mem[_3745 + mem[_3745]]
                if mem[_3745 + mem[_3745]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3745 + mem[_3745]]) + 1 < 0 or _3745 + ceil32(return_data.size) + ceil32(32 * mem[_3745 + mem[_3745]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3745 + ceil32(return_data.size) + ceil32(32 * mem[_3745 + mem[_3745]]) + 1
                mem[_3745 + ceil32(return_data.size)] = _3778
                require _3760 + (32 * _3778) + 32 <= return_data.size
                t = _3745 + ceil32(return_data.size) + 32
                s = _3745 + _3760 + 32
                while s < _3745 + _3760 + (32 * _3778) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3778:
                    revert with 0, 50
                _6924 = mem[_3745 + ceil32(return_data.size) + 64]
                if mem[_3745 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3745 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_3745 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if mem[_3745 + ceil32(return_data.size) + 64] < 100 * mem[_3745 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                _7098 = mem[_1505]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1747))
                staticcall address(_1747).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7162 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7190 = mem[_7162]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _7242 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7190
                mem[mem[64] + 36] = _6924 - (100 * _6924 / 10000)
                mem[mem[64] + 68] = 160
                _7270 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _7270:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7242 + 100] = this.address
                mem[_7242 + 132] = block.timestamp + 60
                require ext_code.size(address(_7098))
                call address(_7098).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7242 + (32 * _7270) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10473 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10489 = mem[_10473]
                require mem[_10473] <= test266151307()
                require _10473 + mem[_10473] + 31 < _10473 + return_data.size
                _10515 = mem[_10473 + mem[_10473]]
                if mem[_10473 + mem[_10473]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10473 + mem[_10473]]) + 1 < 0 or _10473 + ceil32(return_data.size) + ceil32(32 * mem[_10473 + mem[_10473]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10473 + ceil32(return_data.size) + ceil32(32 * mem[_10473 + mem[_10473]]) + 1
                mem[_10473 + ceil32(return_data.size)] = _10515
                require _10489 + (32 * _10515) + 32 <= return_data.size
                t = _10473 + ceil32(return_data.size) + 32
                s = _10473 + _10489 + 32
                while s < _10473 + _10489 + (32 * _10515) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _13923 = mem[_1505]
                _13924 = mem[_1505 + 192]
                _13925 = mem[_1505 + 224]
                _13954 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_13954 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_13954]:
                    revert with 0, 50
                mem[_13954 + 32] = stor21
                if stor21 == address(_13924):
                    if stor21 == address(_13925):
                        _14043 = mem[_1505 + 160]
                        _14044 = mem[_1505 + 64]
                        _14045 = mem[_1505 + 32]
                        mem[_13954 + 100] = this.address
                        require ext_code.size(address(_14045))
                        staticcall address(_14045).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13954 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13954 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        if _14044 >= 999999:
                            mem[_13954 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_14043))
                            call address(_14043).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13954 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _14323 = mem[_1505 + 32]
                            mem[_13954 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_14323))
                            staticcall address(_14323).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13954 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1505 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_13954 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13954 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13954 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _14615 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_13954 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_13954 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_13954 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_13954 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _13954 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13954 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_13954 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_14615))
                            call address(_14615).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13954 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13954 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _13954 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17381 = mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13954 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _17415 = mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13954 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _13954 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_13954 + (6 * ceil32(return_data.size)) + 96] = mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _17381 + (32 * _17415) + 32 <= return_data.size
                            t = _13954 + (6 * ceil32(return_data.size)) + 128
                            s = _13954 + (4 * ceil32(return_data.size)) + _17381 + 128
                            while s < _13954 + (4 * ceil32(return_data.size)) + _17381 + (32 * _17415) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20189 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_20189]
                        else:
                            mem[_13954 + ceil32(return_data.size) + 100] = _14044
                            mem[_13954 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_14043))
                            call address(_14043).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _14044, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13954 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _14324 = mem[_1505 + 32]
                            mem[_13954 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_14324))
                            staticcall address(_14324).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13954 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1505 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_13954 + (2 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_13954 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13954 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _14616 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_13954 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_13954 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_13954 + (4 * ceil32(return_data.size)) + 132] = 128
                            mem[_13954 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _13954 + (4 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_13954 + (4 * ceil32(return_data.size)) + 164] = this.address
                            mem[_13954 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_14616))
                            call address(_14616).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13954 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13954 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _13954 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17382 = mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13954 + (4 * ceil32(return_data.size)) + return_data.size + 96
                            _17416 = mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13954 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _13954 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_13954 + (6 * ceil32(return_data.size)) + 96] = mem[_13954 + (4 * ceil32(return_data.size)) + mem[_13954 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _17382 + (32 * _17416) + 32 <= return_data.size
                            t = _13954 + (6 * ceil32(return_data.size)) + 128
                            s = _13954 + (4 * ceil32(return_data.size)) + _17382 + 128
                            while s < _13954 + (4 * ceil32(return_data.size)) + _17382 + (32 * _17416) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20190 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_20190]
                    else:
                        if 1 >= mem[_13954]:
                            revert with 0, 50
                        mem[_13954 + 64] = address(_13925)
                        mem[_13954 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_13954 + 100] = eth.balance(this.address) / 2
                        mem[_13954 + 132] = 64
                        mem[_13954 + 164] = mem[_13954]
                        s = 0
                        t = _13954 + 32
                        u = _13954 + 196
                        while s < mem[_13954]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13923))
                        staticcall address(_13923).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _13954 + (32 * mem[_13954]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17363 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17399 = mem[_17363]
                        require mem[_17363] <= test266151307()
                        require _17363 + mem[_17363] + 31 < _17363 + return_data.size
                        _17431 = mem[_17363 + mem[_17363]]
                        if mem[_17363 + mem[_17363]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_17363 + mem[_17363]]) + 1 < 0 or _17363 + ceil32(return_data.size) + ceil32(32 * mem[_17363 + mem[_17363]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _17363 + ceil32(return_data.size) + ceil32(32 * mem[_17363 + mem[_17363]]) + 1
                        mem[_17363 + ceil32(return_data.size)] = _17431
                        require _17399 + (32 * _17431) + 32 <= return_data.size
                        t = _17363 + ceil32(return_data.size) + 32
                        s = _17363 + _17399 + 32
                        while s < _17363 + _17399 + (32 * _17431) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _17431:
                            revert with 0, 50
                        _20126 = mem[_17363 + ceil32(return_data.size) + 64]
                        if mem[_17363 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17363 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_17363 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _17431:
                            revert with 0, 50
                        _20267 = mem[_17363 + ceil32(return_data.size) + 64]
                        if mem[_17363 + ceil32(return_data.size) + 64] < 100 * mem[_17363 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _20301 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20267 - (100 * _20126 / 10000)
                        mem[mem[64] + 36] = 128
                        _20337 = mem[_13954]
                        mem[mem[64] + 132] = mem[_13954]
                        s = 0
                        t = _13954 + 32
                        u = mem[64] + 164
                        while s < _20337:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_20301 + 68] = this.address
                        mem[_20301 + 100] = block.timestamp + 60
                        require ext_code.size(address(_13923))
                        call address(_13923).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _20301 + (32 * _20337) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22659 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22695 = mem[_22659]
                        require mem[_22659] <= test266151307()
                        require _22659 + mem[_22659] + 31 < _22659 + return_data.size
                        _22725 = mem[_22659 + mem[_22659]]
                        if mem[_22659 + mem[_22659]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22659 + mem[_22659]]) + 1 < 0 or _22659 + ceil32(return_data.size) + ceil32(32 * mem[_22659 + mem[_22659]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22659 + ceil32(return_data.size) + ceil32(32 * mem[_22659 + mem[_22659]]) + 1
                        mem[_22659 + ceil32(return_data.size)] = _22725
                        require _22695 + (32 * _22725) + 32 <= return_data.size
                        t = _22659 + ceil32(return_data.size) + 32
                        s = _22659 + _22695 + 32
                        while s < _22659 + _22695 + (32 * _22725) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _24945 = mem[_1505 + 160]
                        _24946 = mem[_1505 + 64]
                        _24947 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24947))
                        staticcall address(_24947).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25053 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25085 = mem[_25053]
                        if _24946 >= 999999:
                            mem[mem[64] + 4] = mem[_25053]
                            require ext_code.size(address(_24945))
                            call address(_24945).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _25085
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25085
                            emit Earn(_25085);
                            _25249 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25249))
                            staticcall address(_25249).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25405 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_25405]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25632 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25665 = mem[_25632]
                            _25699 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25758 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25665
                            mem[mem[64] + 36] = 128
                            _25806 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25806:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25758 + 68] = this.address
                            mem[_25758 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25699))
                            call address(_25699).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25758 + (32 * _25806) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27069 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27109 = mem[_27069]
                            require mem[_27069] <= test266151307()
                            require _27069 + mem[_27069] + 31 < _27069 + return_data.size
                            _27149 = mem[_27069 + mem[_27069]]
                            if mem[_27069 + mem[_27069]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27069 + mem[_27069]]) + 1 < 0 or _27069 + ceil32(return_data.size) + ceil32(32 * mem[_27069 + mem[_27069]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27069 + ceil32(return_data.size) + ceil32(32 * mem[_27069 + mem[_27069]]) + 1
                            mem[_27069 + ceil32(return_data.size)] = _27149
                            require _27109 + (32 * _27149) + 32 <= return_data.size
                            t = _27069 + ceil32(return_data.size) + 32
                            s = _27069 + _27109 + 32
                            while s < _27069 + _27109 + (32 * _27149) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28381 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28381]
                        else:
                            mem[mem[64] + 4] = _24946
                            mem[mem[64] + 36] = _25085
                            require ext_code.size(address(_24945))
                            call address(_24945).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _24946, _25085
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25085
                            emit Earn(_25085);
                            _25250 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25250))
                            staticcall address(_25250).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25406 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_25406]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25633 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25666 = mem[_25633]
                            _25700 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25759 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25666
                            mem[mem[64] + 36] = 128
                            _25807 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_25759 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25700))
                            call address(_25700).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25759 + (32 * _25807) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27070 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27110 = mem[_27070]
                            require mem[_27070] <= test266151307()
                            require _27070 + mem[_27070] + 31 < _27070 + return_data.size
                            _27150 = mem[_27070 + mem[_27070]]
                            if mem[_27070 + mem[_27070]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27070 + mem[_27070]]) + 1 < 0 or _27070 + ceil32(return_data.size) + ceil32(32 * mem[_27070 + mem[_27070]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27070 + ceil32(return_data.size) + ceil32(32 * mem[_27070 + mem[_27070]]) + 1
                            mem[_27070 + ceil32(return_data.size)] = _27150
                            require _27110 + (32 * _27150) + 32 <= return_data.size
                            t = _27070 + ceil32(return_data.size) + 32
                            s = _27070 + _27110 + 32
                            while s < _27070 + _27110 + (32 * _27150) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28382 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28382]
                else:
                    if 1 >= mem[_13954]:
                        revert with 0, 50
                    mem[_13954 + 64] = address(_13924)
                    mem[_13954 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_13954 + 100] = eth.balance(this.address) / 2
                    mem[_13954 + 132] = 64
                    mem[_13954 + 164] = mem[_13954]
                    s = 0
                    t = _13954 + 32
                    u = _13954 + 196
                    while s < mem[_13954]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_13923))
                    staticcall address(_13923).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _13954 + (32 * mem[_13954]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17364 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17400 = mem[_17364]
                    require mem[_17364] <= test266151307()
                    require _17364 + mem[_17364] + 31 < _17364 + return_data.size
                    _17432 = mem[_17364 + mem[_17364]]
                    if mem[_17364 + mem[_17364]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_17364 + mem[_17364]]) + 1 < 0 or _17364 + ceil32(return_data.size) + ceil32(32 * mem[_17364 + mem[_17364]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _17364 + ceil32(return_data.size) + ceil32(32 * mem[_17364 + mem[_17364]]) + 1
                    mem[_17364 + ceil32(return_data.size)] = _17432
                    require _17400 + (32 * _17432) + 32 <= return_data.size
                    t = _17364 + ceil32(return_data.size) + 32
                    s = _17364 + _17400 + 32
                    while s < _17364 + _17400 + (32 * _17432) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _17432:
                        revert with 0, 50
                    _20127 = mem[_17364 + ceil32(return_data.size) + 64]
                    if mem[_17364 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17364 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_17364 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _17432:
                        revert with 0, 50
                    _20268 = mem[_17364 + ceil32(return_data.size) + 64]
                    if mem[_17364 + ceil32(return_data.size) + 64] < 100 * mem[_17364 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _20302 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _20268 - (100 * _20127 / 10000)
                    mem[mem[64] + 36] = 128
                    _20338 = mem[_13954]
                    mem[mem[64] + 132] = mem[_13954]
                    s = 0
                    t = _13954 + 32
                    u = mem[64] + 164
                    while s < _20338:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_20302 + 68] = this.address
                    mem[_20302 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13923))
                    call address(_13923).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _20302 + (32 * _20338) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22660 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22696 = mem[_22660]
                    require mem[_22660] <= test266151307()
                    require _22660 + mem[_22660] + 31 < _22660 + return_data.size
                    _22726 = mem[_22660 + mem[_22660]]
                    if mem[_22660 + mem[_22660]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_22660 + mem[_22660]]) + 1 < 0 or _22660 + ceil32(return_data.size) + ceil32(32 * mem[_22660 + mem[_22660]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _22660 + ceil32(return_data.size) + ceil32(32 * mem[_22660 + mem[_22660]]) + 1
                    mem[_22660 + ceil32(return_data.size)] = _22726
                    require _22696 + (32 * _22726) + 32 <= return_data.size
                    t = _22660 + ceil32(return_data.size) + 32
                    s = _22660 + _22696 + 32
                    while s < _22660 + _22696 + (32 * _22726) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_13925):
                        _24983 = mem[_1505 + 160]
                        _24984 = mem[_1505 + 64]
                        _24985 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24985))
                        staticcall address(_24985).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25073 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25105 = mem[_25073]
                        if _24984 >= 999999:
                            mem[mem[64] + 4] = mem[_25073]
                            require ext_code.size(address(_24983))
                            call address(_24983).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _25105
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25105
                            emit Earn(_25105);
                            _25309 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25309))
                            staticcall address(_25309).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25429 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_25429]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25649 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25681 = mem[_25649]
                            _25717 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25786 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25681
                            mem[mem[64] + 36] = 128
                            _25826 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_25786 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25717))
                            call address(_25717).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25786 + (32 * _25826) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27071 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27111 = mem[_27071]
                            require mem[_27071] <= test266151307()
                            require _27071 + mem[_27071] + 31 < _27071 + return_data.size
                            _27151 = mem[_27071 + mem[_27071]]
                            if mem[_27071 + mem[_27071]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27071 + mem[_27071]]) + 1 < 0 or _27071 + ceil32(return_data.size) + ceil32(32 * mem[_27071 + mem[_27071]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27071 + ceil32(return_data.size) + ceil32(32 * mem[_27071 + mem[_27071]]) + 1
                            mem[_27071 + ceil32(return_data.size)] = _27151
                            require _27111 + (32 * _27151) + 32 <= return_data.size
                            t = _27071 + ceil32(return_data.size) + 32
                            s = _27071 + _27111 + 32
                            while s < _27071 + _27111 + (32 * _27151) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28383 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28383]
                        else:
                            mem[mem[64] + 4] = _24984
                            mem[mem[64] + 36] = _25105
                            require ext_code.size(address(_24983))
                            call address(_24983).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _24984, _25105
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _25105
                            emit Earn(_25105);
                            _25310 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25310))
                            staticcall address(_25310).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25430 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_25430]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25650 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25682 = mem[_25650]
                            _25718 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _25787 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _25682
                            mem[mem[64] + 36] = 128
                            _25827 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _25827:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_25787 + 68] = this.address
                            mem[_25787 + 100] = block.timestamp + 60
                            require ext_code.size(address(_25718))
                            call address(_25718).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _25787 + (32 * _25827) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27072 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27112 = mem[_27072]
                            require mem[_27072] <= test266151307()
                            require _27072 + mem[_27072] + 31 < _27072 + return_data.size
                            _27152 = mem[_27072 + mem[_27072]]
                            if mem[_27072 + mem[_27072]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_27072 + mem[_27072]]) + 1 < 0 or _27072 + ceil32(return_data.size) + ceil32(32 * mem[_27072 + mem[_27072]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _27072 + ceil32(return_data.size) + ceil32(32 * mem[_27072 + mem[_27072]]) + 1
                            mem[_27072 + ceil32(return_data.size)] = _27152
                            require _27112 + (32 * _27152) + 32 <= return_data.size
                            t = _27072 + ceil32(return_data.size) + 32
                            s = _27072 + _27112 + 32
                            while s < _27072 + _27112 + (32 * _27152) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28384 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28384]
                    else:
                        if 1 >= mem[_13954]:
                            revert with 0, 50
                        mem[_13954 + 64] = address(_13925)
                        _24986 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 64
                        _25054 = mem[_13954]
                        mem[mem[64] + 68] = mem[_13954]
                        s = 0
                        t = _13954 + 32
                        u = mem[64] + 100
                        while s < _25054:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_13923))
                        staticcall address(_13923).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _24986 + (32 * _25054) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27101 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27141 = mem[_27101]
                        require mem[_27101] <= test266151307()
                        require _27101 + mem[_27101] + 31 < _27101 + return_data.size
                        _27181 = mem[_27101 + mem[_27101]]
                        if mem[_27101 + mem[_27101]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27101 + mem[_27101]]) + 1 < 0 or _27101 + ceil32(return_data.size) + ceil32(32 * mem[_27101 + mem[_27101]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27101 + ceil32(return_data.size) + ceil32(32 * mem[_27101 + mem[_27101]]) + 1
                        mem[_27101 + ceil32(return_data.size)] = _27181
                        require _27141 + (32 * _27181) + 32 <= return_data.size
                        t = _27101 + ceil32(return_data.size) + 32
                        s = _27101 + _27141 + 32
                        while s < _27101 + _27141 + (32 * _27181) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27181:
                            revert with 0, 50
                        _28297 = mem[_27101 + ceil32(return_data.size) + 64]
                        if mem[_27101 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27101 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_27101 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if 1 >= _27181:
                            revert with 0, 50
                        _28477 = mem[_27101 + ceil32(return_data.size) + 64]
                        if mem[_27101 + ceil32(return_data.size) + 64] < 100 * mem[_27101 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28477 - (100 * _28297 / 10000)
                        mem[mem[64] + 36] = 128
                        _28512 = mem[_13954]
                        mem[mem[64] + 132] = mem[_13954]
                        s = 0
                        t = _13954 + 32
                        u = mem[64] + 164
                        while s < _28512:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_13923))
                        call address(_13923).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args _28477 - (100 * _28297 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _28512) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29224 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29240 = mem[_29224]
                        require mem[_29224] <= test266151307()
                        require _29224 + mem[_29224] + 31 < _29224 + return_data.size
                        _29252 = mem[_29224 + mem[_29224]]
                        if mem[_29224 + mem[_29224]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29224 + mem[_29224]]) + 1 < 0 or _29224 + ceil32(return_data.size) + ceil32(32 * mem[_29224 + mem[_29224]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _29224 + ceil32(return_data.size) + ceil32(32 * mem[_29224 + mem[_29224]]) + 1
                        mem[_29224 + ceil32(return_data.size)] = _29252
                        require _29240 + (32 * _29252) + 32 <= return_data.size
                        t = _29224 + ceil32(return_data.size) + 32
                        s = _29224 + _29240 + 32
                        while s < _29224 + _29240 + (32 * _29252) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        _29904 = mem[_1505 + 160]
                        _29905 = mem[_1505 + 64]
                        _29906 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_29906))
                        staticcall address(_29906).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29947 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29957 = mem[_29947]
                        if _29905 >= 999999:
                            mem[mem[64] + 4] = mem[_29947]
                            require ext_code.size(address(_29904))
                            call address(_29904).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _29957
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _29957
                            emit Earn(_29957);
                            _30034 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_30034))
                            staticcall address(_30034).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30087 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_30087]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30183 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30199 = mem[_30183]
                            _30216 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _30238 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _30199
                            mem[mem[64] + 36] = 128
                            _30256 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _30256:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_30238 + 68] = this.address
                            mem[_30238 + 100] = block.timestamp + 60
                            require ext_code.size(address(_30216))
                            call address(_30216).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _30238 + (32 * _30256) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30505 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30521 = mem[_30505]
                            require mem[_30505] <= test266151307()
                            require _30505 + mem[_30505] + 31 < _30505 + return_data.size
                            _30537 = mem[_30505 + mem[_30505]]
                            if mem[_30505 + mem[_30505]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_30505 + mem[_30505]]) + 1 < 0 or _30505 + ceil32(return_data.size) + ceil32(32 * mem[_30505 + mem[_30505]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _30505 + ceil32(return_data.size) + ceil32(32 * mem[_30505 + mem[_30505]]) + 1
                            mem[_30505 + ceil32(return_data.size)] = _30537
                            require _30521 + (32 * _30537) + 32 <= return_data.size
                            t = _30505 + ceil32(return_data.size) + 32
                            s = _30505 + _30521 + 32
                            while s < _30505 + _30521 + (32 * _30537) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30731 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_30731]
                        else:
                            mem[mem[64] + 4] = _29905
                            mem[mem[64] + 36] = _29957
                            require ext_code.size(address(_29904))
                            call address(_29904).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _29905, _29957
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _29957
                            emit Earn(_29957);
                            _30035 = mem[_1505 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_30035))
                            staticcall address(_30035).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30088 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1505 + 96] = mem[_30088]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30184 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30200 = mem[_30184]
                            _30217 = mem[_1505]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _30239 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _30200
                            mem[mem[64] + 36] = 128
                            _30257 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_30239 + 100] = block.timestamp + 60
                            require ext_code.size(address(_30217))
                            call address(_30217).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _30239 + (32 * _30257) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30506 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _30522 = mem[_30506]
                            require mem[_30506] <= test266151307()
                            require _30506 + mem[_30506] + 31 < _30506 + return_data.size
                            _30538 = mem[_30506 + mem[_30506]]
                            if mem[_30506 + mem[_30506]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_30506 + mem[_30506]]) + 1 < 0 or _30506 + ceil32(return_data.size) + ceil32(32 * mem[_30506 + mem[_30506]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _30506 + ceil32(return_data.size) + ceil32(32 * mem[_30506 + mem[_30506]]) + 1
                            mem[_30506 + ceil32(return_data.size)] = _30538
                            require _30522 + (32 * _30538) + 32 <= return_data.size
                            t = _30506 + ceil32(return_data.size) + 32
                            s = _30506 + _30522 + 32
                            while s < _30506 + _30522 + (32 * _30538) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30732 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_30732]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1505
                s = _6924 - (100 * _6924 / 10000)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _1639
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _1639
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1738 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1748 = mem[_1738]
            require mem[_1738] == mem[_1738 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_1738 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_1748))
            staticcall address(_1748).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1867 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1887 = mem[_1867]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1748))
            staticcall address(_1748).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1931 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1946 = mem[_1931]
            if mem[_1931] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1887:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2010 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2042 = mem[_2010]
            if 10^12 * _1946 / _1887 and mem[_2010] > -1 / 10^12 * _1946 / _1887:
                revert with 0, 17
            _2118 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1946 / _1887 * _2042 / 10^12
            mem[mem[64] + 36] = 64
            _2155 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _2155:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2118 + (32 * _2155) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3746 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3761 = mem[_3746]
            require mem[_3746] <= test266151307()
            require _3746 + mem[_3746] + 31 < _3746 + return_data.size
            _3779 = mem[_3746 + mem[_3746]]
            if mem[_3746 + mem[_3746]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3746 + mem[_3746]]) + 1 < 0 or _3746 + ceil32(return_data.size) + ceil32(32 * mem[_3746 + mem[_3746]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3746 + ceil32(return_data.size) + ceil32(32 * mem[_3746 + mem[_3746]]) + 1
            mem[_3746 + ceil32(return_data.size)] = _3779
            require _3761 + (32 * _3779) + 32 <= return_data.size
            t = _3746 + ceil32(return_data.size) + 32
            s = _3746 + _3761 + 32
            while s < _3746 + _3761 + (32 * _3779) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3779:
                revert with 0, 50
            _6925 = mem[_3746 + ceil32(return_data.size) + 64]
            if mem[_3746 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_3746 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_3746 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if mem[_3746 + ceil32(return_data.size) + 64] < 100 * mem[_3746 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            _7099 = mem[_1505]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1748))
            staticcall address(_1748).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7163 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7191 = mem[_7163]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7191
            mem[mem[64] + 36] = _6925 - (100 * _6925 / 10000)
            mem[mem[64] + 68] = 160
            _7271 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_7099))
            call address(_7099).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7271) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10474 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10490 = mem[_10474]
            require mem[_10474] <= test266151307()
            require _10474 + mem[_10474] + 31 < _10474 + return_data.size
            _10516 = mem[_10474 + mem[_10474]]
            if mem[_10474 + mem[_10474]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_10474 + mem[_10474]]) + 1 < 0 or _10474 + ceil32(return_data.size) + ceil32(32 * mem[_10474 + mem[_10474]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _10474 + ceil32(return_data.size) + ceil32(32 * mem[_10474 + mem[_10474]]) + 1
            mem[_10474 + ceil32(return_data.size)] = _10516
            require _10490 + (32 * _10516) + 32 <= return_data.size
            t = _10474 + ceil32(return_data.size) + 32
            s = _10474 + _10490 + 32
            while s < _10474 + _10490 + (32 * _10516) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _13926 = mem[_1505]
            _13927 = mem[_1505 + 192]
            _13928 = mem[_1505 + 224]
            _13956 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_13956 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_13956]:
                revert with 0, 50
            mem[_13956 + 32] = stor21
            if stor21 == address(_13927):
                if stor21 == address(_13928):
                    _14047 = mem[_1505 + 160]
                    _14048 = mem[_1505 + 64]
                    _14049 = mem[_1505 + 32]
                    mem[_13956 + 100] = this.address
                    require ext_code.size(address(_14049))
                    staticcall address(_14049).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_13956 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _13956 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    if _14048 >= 999999:
                        mem[_13956 + ceil32(return_data.size) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_14047))
                        call address(_14047).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13956 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _14326 = mem[_1505 + 32]
                        mem[_13956 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_14326))
                        staticcall address(_14326).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13956 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1505 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_13956 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13956 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13956 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _14617 = mem[_1505]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_13956 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_13956 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_13956 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_13956 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _13956 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13956 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_13956 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_14617))
                        call address(_14617).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13956 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13956 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _13956 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _17383 = mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13956 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _17417 = mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13956 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _13956 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_13956 + (6 * ceil32(return_data.size)) + 96] = _17417
                        require _17383 + (32 * _17417) + 32 <= return_data.size
                        t = _13956 + (6 * ceil32(return_data.size)) + 128
                        s = _13956 + (4 * ceil32(return_data.size)) + _17383 + 128
                        while s < _13956 + (4 * ceil32(return_data.size)) + _17383 + (32 * _17417) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20191 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_20191]
                    else:
                        mem[_13956 + ceil32(return_data.size) + 100] = _14048
                        mem[_13956 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_14047))
                        call address(_14047).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _14048, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13956 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _14327 = mem[_1505 + 32]
                        mem[_13956 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_14327))
                        staticcall address(_14327).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13956 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1505 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_13956 + (2 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_13956 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13956 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _14618 = mem[_1505]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_13956 + (4 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_13956 + (4 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_13956 + (4 * ceil32(return_data.size)) + 132] = 128
                        mem[_13956 + (4 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _13956 + (4 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_13956 + (4 * ceil32(return_data.size)) + 164] = this.address
                        mem[_13956 + (4 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_14618))
                        call address(_14618).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_13956 + (4 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13956 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _13956 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _17384 = mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _13956 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _17418 = mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _13956 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _13956 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_13956 + (4 * ceil32(return_data.size)) + mem[_13956 + (4 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_13956 + (6 * ceil32(return_data.size)) + 96] = _17418
                        require _17384 + (32 * _17418) + 32 <= return_data.size
                        t = _13956 + (6 * ceil32(return_data.size)) + 128
                        s = _13956 + (4 * ceil32(return_data.size)) + _17384 + 128
                        while s < _13956 + (4 * ceil32(return_data.size)) + _17384 + (32 * _17418) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20192 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_20192]
                else:
                    if 1 >= mem[_13956]:
                        revert with 0, 50
                    mem[_13956 + 64] = address(_13928)
                    mem[_13956 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_13956 + 100] = eth.balance(this.address) / 2
                    mem[_13956 + 132] = 64
                    mem[_13956 + 164] = mem[_13956]
                    s = 0
                    t = _13956 + 32
                    u = _13956 + 196
                    while s < mem[_13956]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_13926))
                    staticcall address(_13926).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _13956 + (32 * mem[_13956]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17365 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17401 = mem[_17365]
                    require mem[_17365] <= test266151307()
                    require _17365 + mem[_17365] + 31 < _17365 + return_data.size
                    _17433 = mem[_17365 + mem[_17365]]
                    if mem[_17365 + mem[_17365]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_17365 + mem[_17365]]) + 1 < 0 or _17365 + ceil32(return_data.size) + ceil32(32 * mem[_17365 + mem[_17365]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _17365 + ceil32(return_data.size) + ceil32(32 * mem[_17365 + mem[_17365]]) + 1
                    mem[_17365 + ceil32(return_data.size)] = _17433
                    require _17401 + (32 * _17433) + 32 <= return_data.size
                    t = _17365 + ceil32(return_data.size) + 32
                    s = _17365 + _17401 + 32
                    while s < _17365 + _17401 + (32 * _17433) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _17433:
                        revert with 0, 50
                    _20128 = mem[_17365 + ceil32(return_data.size) + 64]
                    if mem[_17365 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17365 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_17365 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _17433:
                        revert with 0, 50
                    _20269 = mem[_17365 + ceil32(return_data.size) + 64]
                    if mem[_17365 + ceil32(return_data.size) + 64] < 100 * mem[_17365 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _20303 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _20269 - (100 * _20128 / 10000)
                    mem[mem[64] + 36] = 128
                    _20339 = mem[_13956]
                    mem[mem[64] + 132] = mem[_13956]
                    s = 0
                    t = _13956 + 32
                    u = mem[64] + 164
                    while s < _20339:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_20303 + 68] = this.address
                    mem[_20303 + 100] = block.timestamp + 60
                    require ext_code.size(address(_13926))
                    call address(_13926).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _20303 + (32 * _20339) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22661 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22697 = mem[_22661]
                    require mem[_22661] <= test266151307()
                    require _22661 + mem[_22661] + 31 < _22661 + return_data.size
                    _22727 = mem[_22661 + mem[_22661]]
                    if mem[_22661 + mem[_22661]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_22661 + mem[_22661]]) + 1 < 0 or _22661 + ceil32(return_data.size) + ceil32(32 * mem[_22661 + mem[_22661]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _22661 + ceil32(return_data.size) + ceil32(32 * mem[_22661 + mem[_22661]]) + 1
                    mem[_22661 + ceil32(return_data.size)] = _22727
                    require _22697 + (32 * _22727) + 32 <= return_data.size
                    t = _22661 + ceil32(return_data.size) + 32
                    s = _22661 + _22697 + 32
                    while s < _22661 + _22697 + (32 * _22727) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _24949 = mem[_1505 + 160]
                    _24950 = mem[_1505 + 64]
                    _24951 = mem[_1505 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_24951))
                    staticcall address(_24951).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25055 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25087 = mem[_25055]
                    if _24950 >= 999999:
                        mem[mem[64] + 4] = mem[_25055]
                        require ext_code.size(address(_24949))
                        call address(_24949).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _25087
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _25087
                        emit Earn(_25087);
                        _25255 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25255))
                        staticcall address(_25255).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25408 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1505 + 96] = mem[_25408]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25634 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25667 = mem[_25634]
                        _25701 = mem[_1505]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _25761 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _25667
                        mem[mem[64] + 36] = 128
                        _25808 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _25808:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_25761 + 68] = this.address
                        mem[_25761 + 100] = block.timestamp + 60
                        require ext_code.size(address(_25701))
                        call address(_25701).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _25761 + (32 * _25808) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27073 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27113 = mem[_27073]
                        require mem[_27073] <= test266151307()
                        require _27073 + mem[_27073] + 31 < _27073 + return_data.size
                        _27153 = mem[_27073 + mem[_27073]]
                        if mem[_27073 + mem[_27073]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27073 + mem[_27073]]) + 1 < 0 or _27073 + ceil32(return_data.size) + ceil32(32 * mem[_27073 + mem[_27073]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27073 + ceil32(return_data.size) + ceil32(32 * mem[_27073 + mem[_27073]]) + 1
                        mem[_27073 + ceil32(return_data.size)] = _27153
                        require _27113 + (32 * _27153) + 32 <= return_data.size
                        t = _27073 + ceil32(return_data.size) + 32
                        s = _27073 + _27113 + 32
                        while s < _27073 + _27113 + (32 * _27153) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28385 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28385]
                    else:
                        mem[mem[64] + 4] = _24950
                        mem[mem[64] + 36] = _25087
                        require ext_code.size(address(_24949))
                        call address(_24949).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _24950, _25087
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _25087
                        emit Earn(_25087);
                        _25256 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25256))
                        staticcall address(_25256).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1505 + 96] = mem[_25409]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25635 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25668 = mem[_25635]
                        _25702 = mem[_1505]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _25762 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _25668
                        mem[mem[64] + 36] = 128
                        _25809 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _25809:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_25762 + 68] = this.address
                        mem[_25762 + 100] = block.timestamp + 60
                        require ext_code.size(address(_25702))
                        call address(_25702).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _25762 + (32 * _25809) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27074 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27114 = mem[_27074]
                        require mem[_27074] <= test266151307()
                        require _27074 + mem[_27074] + 31 < _27074 + return_data.size
                        _27154 = mem[_27074 + mem[_27074]]
                        if mem[_27074 + mem[_27074]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27074 + mem[_27074]]) + 1 < 0 or _27074 + ceil32(return_data.size) + ceil32(32 * mem[_27074 + mem[_27074]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27074 + ceil32(return_data.size) + ceil32(32 * mem[_27074 + mem[_27074]]) + 1
                        mem[_27074 + ceil32(return_data.size)] = _27154
                        require _27114 + (32 * _27154) + 32 <= return_data.size
                        t = _27074 + ceil32(return_data.size) + 32
                        s = _27074 + _27114 + 32
                        while s < _27074 + _27114 + (32 * _27154) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28386 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28386]
            else:
                if 1 >= mem[_13956]:
                    revert with 0, 50
                mem[_13956 + 64] = address(_13927)
                mem[_13956 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_13956 + 100] = eth.balance(this.address) / 2
                mem[_13956 + 132] = 64
                mem[_13956 + 164] = mem[_13956]
                s = 0
                t = _13956 + 32
                u = _13956 + 196
                while s < mem[_13956]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_13926))
                staticcall address(_13926).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _13956 + (32 * mem[_13956]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _17366 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _17402 = mem[_17366]
                require mem[_17366] <= test266151307()
                require _17366 + mem[_17366] + 31 < _17366 + return_data.size
                _17434 = mem[_17366 + mem[_17366]]
                if mem[_17366 + mem[_17366]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_17366 + mem[_17366]]) + 1 < 0 or _17366 + ceil32(return_data.size) + ceil32(32 * mem[_17366 + mem[_17366]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _17366 + ceil32(return_data.size) + ceil32(32 * mem[_17366 + mem[_17366]]) + 1
                mem[_17366 + ceil32(return_data.size)] = _17434
                require _17402 + (32 * _17434) + 32 <= return_data.size
                t = _17366 + ceil32(return_data.size) + 32
                s = _17366 + _17402 + 32
                while s < _17366 + _17402 + (32 * _17434) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _17434:
                    revert with 0, 50
                _20129 = mem[_17366 + ceil32(return_data.size) + 64]
                if mem[_17366 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_17366 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_17366 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _17434:
                    revert with 0, 50
                _20270 = mem[_17366 + ceil32(return_data.size) + 64]
                if mem[_17366 + ceil32(return_data.size) + 64] < 100 * mem[_17366 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _20304 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _20270 - (100 * _20129 / 10000)
                mem[mem[64] + 36] = 128
                _20340 = mem[_13956]
                mem[mem[64] + 132] = mem[_13956]
                s = 0
                t = _13956 + 32
                u = mem[64] + 164
                while s < _20340:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_20304 + 68] = this.address
                mem[_20304 + 100] = block.timestamp + 60
                require ext_code.size(address(_13926))
                call address(_13926).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _20304 + (32 * _20340) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22662 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22698 = mem[_22662]
                require mem[_22662] <= test266151307()
                require _22662 + mem[_22662] + 31 < _22662 + return_data.size
                _22728 = mem[_22662 + mem[_22662]]
                if mem[_22662 + mem[_22662]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_22662 + mem[_22662]]) + 1 < 0 or _22662 + ceil32(return_data.size) + ceil32(32 * mem[_22662 + mem[_22662]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _22662 + ceil32(return_data.size) + ceil32(32 * mem[_22662 + mem[_22662]]) + 1
                mem[_22662 + ceil32(return_data.size)] = _22728
                require _22698 + (32 * _22728) + 32 <= return_data.size
                t = _22662 + ceil32(return_data.size) + 32
                s = _22662 + _22698 + 32
                while s < _22662 + _22698 + (32 * _22728) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_13928):
                    _24989 = mem[_1505 + 160]
                    _24990 = mem[_1505 + 64]
                    _24991 = mem[_1505 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_24991))
                    staticcall address(_24991).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25074 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25106 = mem[_25074]
                    if _24990 >= 999999:
                        mem[mem[64] + 4] = mem[_25074]
                        require ext_code.size(address(_24989))
                        call address(_24989).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _25106
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _25106
                        emit Earn(_25106);
                        _25316 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25316))
                        staticcall address(_25316).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25431 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1505 + 96] = mem[_25431]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25651 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25683 = mem[_25651]
                        _25719 = mem[_1505]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _25788 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _25683
                        mem[mem[64] + 36] = 128
                        _25828 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _25828:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_25788 + 68] = this.address
                        mem[_25788 + 100] = block.timestamp + 60
                        require ext_code.size(address(_25719))
                        call address(_25719).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _25788 + (32 * _25828) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27075 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27115 = mem[_27075]
                        require mem[_27075] <= test266151307()
                        require _27075 + mem[_27075] + 31 < _27075 + return_data.size
                        _27155 = mem[_27075 + mem[_27075]]
                        if mem[_27075 + mem[_27075]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27075 + mem[_27075]]) + 1 < 0 or _27075 + ceil32(return_data.size) + ceil32(32 * mem[_27075 + mem[_27075]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27075 + ceil32(return_data.size) + ceil32(32 * mem[_27075 + mem[_27075]]) + 1
                        mem[_27075 + ceil32(return_data.size)] = _27155
                        require _27115 + (32 * _27155) + 32 <= return_data.size
                        t = _27075 + ceil32(return_data.size) + 32
                        s = _27075 + _27115 + 32
                        while s < _27075 + _27115 + (32 * _27155) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28387 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28387]
                    else:
                        mem[mem[64] + 4] = _24990
                        mem[mem[64] + 36] = _25106
                        require ext_code.size(address(_24989))
                        call address(_24989).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _24990, _25106
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _25106
                        emit Earn(_25106);
                        _25317 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25317))
                        staticcall address(_25317).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25432 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1505 + 96] = mem[_25432]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25652 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25684 = mem[_25652]
                        _25720 = mem[_1505]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _25789 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _25684
                        mem[mem[64] + 36] = 128
                        _25829 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _25829:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_25789 + 68] = this.address
                        mem[_25789 + 100] = block.timestamp + 60
                        require ext_code.size(address(_25720))
                        call address(_25720).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _25789 + (32 * _25829) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27076 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27116 = mem[_27076]
                        require mem[_27076] <= test266151307()
                        require _27076 + mem[_27076] + 31 < _27076 + return_data.size
                        _27156 = mem[_27076 + mem[_27076]]
                        if mem[_27076 + mem[_27076]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27076 + mem[_27076]]) + 1 < 0 or _27076 + ceil32(return_data.size) + ceil32(32 * mem[_27076 + mem[_27076]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27076 + ceil32(return_data.size) + ceil32(32 * mem[_27076 + mem[_27076]]) + 1
                        mem[_27076 + ceil32(return_data.size)] = _27156
                        require _27116 + (32 * _27156) + 32 <= return_data.size
                        t = _27076 + ceil32(return_data.size) + 32
                        s = _27076 + _27116 + 32
                        while s < _27076 + _27116 + (32 * _27156) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28388 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28388]
                else:
                    if 1 >= mem[_13956]:
                        revert with 0, 50
                    mem[_13956 + 64] = address(_13928)
                    _24992 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 64
                    _25056 = mem[_13956]
                    mem[mem[64] + 68] = mem[_13956]
                    s = 0
                    t = _13956 + 32
                    u = mem[64] + 100
                    while s < _25056:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(address(_13926))
                    staticcall address(_13926).mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _24992 + (32 * _25056) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27102 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27142 = mem[_27102]
                    require mem[_27102] <= test266151307()
                    require _27102 + mem[_27102] + 31 < _27102 + return_data.size
                    _27182 = mem[_27102 + mem[_27102]]
                    if mem[_27102 + mem[_27102]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_27102 + mem[_27102]]) + 1 < 0 or _27102 + ceil32(return_data.size) + ceil32(32 * mem[_27102 + mem[_27102]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _27102 + ceil32(return_data.size) + ceil32(32 * mem[_27102 + mem[_27102]]) + 1
                    mem[_27102 + ceil32(return_data.size)] = _27182
                    require _27142 + (32 * _27182) + 32 <= return_data.size
                    t = _27102 + ceil32(return_data.size) + 32
                    s = _27102 + _27142 + 32
                    while s < _27102 + _27142 + (32 * _27182) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _27182:
                        revert with 0, 50
                    _28298 = mem[_27102 + ceil32(return_data.size) + 64]
                    if mem[_27102 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_27102 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_27102 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if 1 >= _27182:
                        revert with 0, 50
                    _28478 = mem[_27102 + ceil32(return_data.size) + 64]
                    if mem[_27102 + ceil32(return_data.size) + 64] < 100 * mem[_27102 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _28478 - (100 * _28298 / 10000)
                    mem[mem[64] + 36] = 128
                    _28513 = mem[_13956]
                    mem[mem[64] + 132] = mem[_13956]
                    s = 0
                    t = _13956 + 32
                    u = mem[64] + 164
                    while s < _28513:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_13926))
                    call address(_13926).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args _28478 - (100 * _28298 / 10000), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _28513) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29225 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29241 = mem[_29225]
                    require mem[_29225] <= test266151307()
                    require _29225 + mem[_29225] + 31 < _29225 + return_data.size
                    _29253 = mem[_29225 + mem[_29225]]
                    if mem[_29225 + mem[_29225]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_29225 + mem[_29225]]) + 1 < 0 or _29225 + ceil32(return_data.size) + ceil32(32 * mem[_29225 + mem[_29225]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _29225 + ceil32(return_data.size) + ceil32(32 * mem[_29225 + mem[_29225]]) + 1
                    mem[_29225 + ceil32(return_data.size)] = _29253
                    require _29241 + (32 * _29253) + 32 <= return_data.size
                    t = _29225 + ceil32(return_data.size) + 32
                    s = _29225 + _29241 + 32
                    while s < _29225 + _29241 + (32 * _29253) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _29907 = mem[_1505 + 160]
                    _29908 = mem[_1505 + 64]
                    _29909 = mem[_1505 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_29909))
                    staticcall address(_29909).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29948 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29958 = mem[_29948]
                    if _29908 >= 999999:
                        mem[mem[64] + 4] = mem[_29948]
                        require ext_code.size(address(_29907))
                        call address(_29907).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _29958
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _29958
                        emit Earn(_29958);
                        _30036 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_30036))
                        staticcall address(_30036).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30089 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1505 + 96] = mem[_30089]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30201 = mem[_30185]
                        _30218 = mem[_1505]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _30240 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _30201
                        mem[mem[64] + 36] = 128
                        _30258 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _30258:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_30240 + 68] = this.address
                        mem[_30240 + 100] = block.timestamp + 60
                        require ext_code.size(address(_30218))
                        call address(_30218).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _30240 + (32 * _30258) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30507 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30523 = mem[_30507]
                        require mem[_30507] <= test266151307()
                        require _30507 + mem[_30507] + 31 < _30507 + return_data.size
                        _30539 = mem[_30507 + mem[_30507]]
                        if mem[_30507 + mem[_30507]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_30507 + mem[_30507]]) + 1 < 0 or _30507 + ceil32(return_data.size) + ceil32(32 * mem[_30507 + mem[_30507]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _30507 + ceil32(return_data.size) + ceil32(32 * mem[_30507 + mem[_30507]]) + 1
                        mem[_30507 + ceil32(return_data.size)] = _30539
                        require _30523 + (32 * _30539) + 32 <= return_data.size
                        t = _30507 + ceil32(return_data.size) + 32
                        s = _30507 + _30523 + 32
                        while s < _30507 + _30523 + (32 * _30539) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30733 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_30733]
                    else:
                        mem[mem[64] + 4] = _29908
                        mem[mem[64] + 36] = _29958
                        require ext_code.size(address(_29907))
                        call address(_29907).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _29908, _29958
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _29958
                        emit Earn(_29958);
                        _30037 = mem[_1505 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_30037))
                        staticcall address(_30037).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30090 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1505 + 96] = mem[_30090]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30186 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30202 = mem[_30186]
                        _30219 = mem[_1505]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _30241 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _30202
                        mem[mem[64] + 36] = 128
                        _30259 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _30259:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_30241 + 68] = this.address
                        mem[_30241 + 100] = block.timestamp + 60
                        require ext_code.size(address(_30219))
                        call address(_30219).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _30241 + (32 * _30259) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30508 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30524 = mem[_30508]
                        require mem[_30508] <= test266151307()
                        require _30508 + mem[_30508] + 31 < _30508 + return_data.size
                        _30540 = mem[_30508 + mem[_30508]]
                        if mem[_30508 + mem[_30508]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_30508 + mem[_30508]]) + 1 < 0 or _30508 + ceil32(return_data.size) + ceil32(32 * mem[_30508 + mem[_30508]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _30508 + ceil32(return_data.size) + ceil32(32 * mem[_30508 + mem[_30508]]) + 1
                        mem[_30508 + ceil32(return_data.size)] = _30540
                        require _30524 + (32 * _30540) + 32 <= return_data.size
                        t = _30508 + ceil32(return_data.size) + 32
                        s = _30508 + _30524 + 32
                        while s < _30508 + _30524 + (32 * _30540) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30734 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_30734]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _1505
            s = _6925 - (100 * _6925 / 10000)
            s = stor9[idx].field_0
            continue 
        _1509 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1509] = 0
        mem[_1509 + 32] = 0
        mem[_1509 + 64] = 0
        mem[_1509 + 96] = 0
        mem[_1509 + 128] = 0
        mem[_1509 + 160] = 0
        mem[_1509 + 192] = 0
        mem[_1509 + 224] = 0
        _1517 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_1517 + 32 len 64] = call.data[calldata.size len 64]
        idx = 0
        s = 96
        t = 0
        u = 0
        v = 0
        v = _1509
        v = 0
        v = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _3710 = mem[64]
            mem[64] = mem[64] + 256
            mem[_3710] = strategyInfo[stor9[idx].field_0].field_0
            mem[_3710 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_3710 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_3710 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_3710 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_3710 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_3710 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_3710 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3744 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _3758 = mem[_3744]
                if not mem[_3744]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    t = t
                    u = u
                    v = mem[_3744]
                    v = _3710
                    v = stor9[idx].field_0
                    v = v
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3819 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _3844 = mem[_3819]
                require mem[_3819] == mem[_3819 + 18 len 14]
                _3858 = mem[_3819 + 32]
                require mem[_3819 + 32] == mem[_3819 + 50 len 14]
                require mem[_3819 + 64] == mem[_3819 + 92 len 4]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3886 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3903 = mem[_3886]
                if _3758 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not mem[_3886]:
                    revert with 0, 18
                if 10^12 * _3758 / mem[_3886] and Mask(112, 0, _3844) > -1 / 10^12 * _3758 / mem[_3886]:
                    revert with 0, 17
                if 10^12 * _3758 / mem[_3886] and Mask(112, 0, _3858) > -1 / 10^12 * _3758 / mem[_3886]:
                    revert with 0, 17
                if 1 >= mem[_1517]:
                    revert with 0, 50
                mem[_1517 + 64] = stor21
                if 0 >= mem[_1517]:
                    revert with 0, 50
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    mem[_1517 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                    _4116 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3758 / _3903 * Mask(112, 0, _3858) / 10^12
                    mem[mem[64] + 36] = 64
                    _4148 = mem[_1517]
                    mem[mem[64] + 68] = mem[_1517]
                    s = 0
                    t = _1517 + 32
                    u = mem[64] + 100
                    while s < _4148:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _4116 + (32 * _4148) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6970 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6995 = mem[_6970]
                    require mem[_6970] <= test266151307()
                    require _6970 + mem[_6970] + 31 < _6970 + return_data.size
                    _7020 = mem[_6970 + mem[_6970]]
                    if mem[_6970 + mem[_6970]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6970 + mem[_6970]]) + 1 < 0 or _6970 + ceil32(return_data.size) + ceil32(32 * mem[_6970 + mem[_6970]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6970 + ceil32(return_data.size) + ceil32(32 * mem[_6970 + mem[_6970]]) + 1
                    mem[_6970 + ceil32(return_data.size)] = _7020
                    require _6995 + (32 * _7020) + 32 <= return_data.size
                    t = _6970 + ceil32(return_data.size) + 32
                    s = _6970 + _6995 + 32
                    while s < _6970 + _6995 + (32 * _7020) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7020:
                        revert with 0, 50
                    _10450 = mem[_6970 + ceil32(return_data.size) + 64]
                    if 10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12 > !mem[_6970 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3710 + 128] = (10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12) + mem[_6970 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12) + _10450):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _6970 + ceil32(return_data.size)
                    t = 10^12 * _3758 / _3903 * Mask(112, 0, _3858) / 10^12
                    u = 10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12
                    v = _3758
                    v = _3710
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12) + _10450
                    continue 
                mem[_1517 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12
                    mem[mem[64] + 36] = 64
                    _4164 = mem[_1517]
                    mem[mem[64] + 68] = mem[_1517]
                    s = 0
                    t = _1517 + 32
                    u = mem[64] + 100
                    while s < _4164:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12, 64, mem[mem[64] + 68 len (32 * _4164) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6969 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _6994 = mem[_6969]
                    require mem[_6969] <= test266151307()
                    require _6969 + mem[_6969] + 31 < _6969 + return_data.size
                    _7019 = mem[_6969 + mem[_6969]]
                    if mem[_6969 + mem[_6969]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6969 + mem[_6969]]) + 1 < 0 or _6969 + ceil32(return_data.size) + ceil32(32 * mem[_6969 + mem[_6969]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _6969 + ceil32(return_data.size) + ceil32(32 * mem[_6969 + mem[_6969]]) + 1
                    mem[_6969 + ceil32(return_data.size)] = _7019
                    require _6994 + (32 * _7019) + 32 <= return_data.size
                    t = _6969 + ceil32(return_data.size) + 32
                    s = _6969 + _6994 + 32
                    while s < _6969 + _6994 + (32 * _7019) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7019:
                        revert with 0, 50
                    _10449 = mem[_6969 + ceil32(return_data.size) + 64]
                    if 10^12 * _3758 / _3903 * Mask(112, 0, _3858) / 10^12 > !mem[_6969 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3710 + 128] = (10^12 * _3758 / _3903 * Mask(112, 0, _3858) / 10^12) + mem[_6969 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3758 / _3903 * Mask(112, 0, _3858) / 10^12) + _10449):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _6969 + ceil32(return_data.size)
                    t = 10^12 * _3758 / _3903 * Mask(112, 0, _3858) / 10^12
                    u = 10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12
                    v = _3758
                    v = _3710
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3758 / _3903 * Mask(112, 0, _3858) / 10^12) + _10449
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4169 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4181 = mem[_4169]
                mem[mem[64] + 4] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4263 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4302 = mem[_4263]
                if mem[_4263] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _4181:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4488 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4520 = mem[_4488]
                if 10^12 * _4302 / _4181 and mem[_4488] > -1 / 10^12 * _4302 / _4181:
                    revert with 0, 17
                _4675 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _4302 / _4181 * _4520 / 10^12
                mem[mem[64] + 36] = 64
                _4737 = mem[_1517]
                mem[mem[64] + 68] = mem[_1517]
                t = 0
                u = _1517 + 32
                w = mem[64] + 100
                while t < _4737:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4675 + (32 * _4737) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6968 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6993 = mem[_6968]
                require mem[_6968] <= test266151307()
                require _6968 + mem[_6968] + 31 < _6968 + return_data.size
                _7018 = mem[_6968 + mem[_6968]]
                if mem[_6968 + mem[_6968]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6968 + mem[_6968]]) + 1 < 0 or _6968 + ceil32(return_data.size) + ceil32(32 * mem[_6968 + mem[_6968]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6968 + ceil32(return_data.size) + ceil32(32 * mem[_6968 + mem[_6968]]) + 1
                mem[_6968 + ceil32(return_data.size)] = _7018
                require _6993 + (32 * _7018) + 32 <= return_data.size
                u = _6968 + ceil32(return_data.size) + 32
                t = _6968 + _6993 + 32
                while t < _6968 + _6993 + (32 * _7018) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _7018:
                    revert with 0, 50
                _10448 = mem[_6968 + ceil32(return_data.size) + 64]
                mem[_3710 + 128] = mem[_6968 + ceil32(return_data.size) + 64]
                if v > !_10448:
                    revert with 0, 17
                if 0 >= mem[_1517]:
                    revert with 0, 50
                mem[_1517 + 32] = mem[_3710 + 236 len 20]
                _10504 = mem[_3710 + 224]
                _10505 = mem[_3710]
                require ext_code.size(mem[_3710 + 236 len 20])
                staticcall mem[_3710 + 236 len 20].0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10535 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10552 = mem[_10535]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_10504))
                staticcall address(_10504).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10579 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10610 = mem[_10579]
                if mem[_10579] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _10552:
                    revert with 0, 18
                mem[mem[64] + 4] = address(_10505)
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args address(_10505)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10773 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10813 = mem[_10773]
                if 10^12 * _10610 / _10552 and mem[_10773] > -1 / 10^12 * _10610 / _10552:
                    revert with 0, 17
                _10951 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _10610 / _10552 * _10813 / 10^12
                mem[mem[64] + 36] = 64
                _11029 = mem[_1517]
                mem[mem[64] + 68] = mem[_1517]
                t = 0
                u = _1517 + 32
                w = mem[64] + 100
                while t < _11029:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(address(_10505))
                staticcall address(_10505).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _10951 + (32 * _11029) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13983 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13997 = mem[_13983]
                require mem[_13983] <= test266151307()
                require _13983 + mem[_13983] + 31 < _13983 + return_data.size
                _14019 = mem[_13983 + mem[_13983]]
                if mem[_13983 + mem[_13983]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_13983 + mem[_13983]]) + 1 < 0 or _13983 + ceil32(return_data.size) + ceil32(32 * mem[_13983 + mem[_13983]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _13983 + ceil32(return_data.size) + ceil32(32 * mem[_13983 + mem[_13983]]) + 1
                mem[_13983 + ceil32(return_data.size)] = _14019
                require _13997 + (32 * _14019) + 32 <= return_data.size
                u = _13983 + ceil32(return_data.size) + 32
                t = _13983 + _13997 + 32
                while t < _13983 + _13997 + (32 * _14019) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _14019:
                    revert with 0, 50
                if mem[_3710 + 128] > !mem[_13983 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3710 + 128] = mem[_3710 + 128] + mem[_13983 + ceil32(return_data.size) + 64]
                if v + _10448 > !mem[_3710 + 128]:
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = 10^12 * _3758 / _3903 * Mask(112, 0, _3858) / 10^12
                u = 10^12 * _3758 / _3903 * Mask(112, 0, _3844) / 10^12
                v = _3758
                v = _3710
                v = stor9[idx].field_0
                v = v + _10448 + mem[_3710 + 128]
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3743 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _3757 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_3757] = mem[_3743]
            mem[_3757 + 32] = mem[_3743 + 32]
            mem[_3757 + 64] = mem[_3743 + 64]
            require return_data.size - 96 >= 96
            _3787 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3787] = mem[_3743 + 96]
            mem[_3787 + 32] = mem[_3743 + 128]
            mem[_3787 + 64] = mem[_3743 + 160]
            mem[_3757 + 96] = _3787
            mem[_3757 + 128] = mem[_3743 + 192]
            require return_data.size - 224 >= 96
            _3813 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3813] = mem[_3743 + 224]
            mem[_3813 + 32] = mem[_3743 + 256]
            mem[_3813 + 64] = mem[_3743 + 288]
            mem[_3757 + 160] = _3813
            _3833 = mem[_3757 + 64]
            if not mem[_3757 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_3757 + 64]
                v = _3710
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3868 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3871 = mem[_3868]
            require mem[_3868] == mem[_3868 + 18 len 14]
            _3895 = mem[_3868 + 32]
            require mem[_3868 + 32] == mem[_3868 + 50 len 14]
            require mem[_3868 + 64] == mem[_3868 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3971 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4000 = mem[_3971]
            if _3833 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_3971]:
                revert with 0, 18
            if 10^12 * _3833 / mem[_3971] and Mask(112, 0, _3871) > -1 / 10^12 * _3833 / mem[_3971]:
                revert with 0, 17
            if 10^12 * _3833 / mem[_3971] and Mask(112, 0, _3895) > -1 / 10^12 * _3833 / mem[_3971]:
                revert with 0, 17
            if 1 >= mem[_1517]:
                revert with 0, 50
            mem[_1517 + 64] = stor21
            if 0 >= mem[_1517]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_1517 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _4223 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3833 / _4000 * Mask(112, 0, _3895) / 10^12
                mem[mem[64] + 36] = 64
                _4292 = mem[_1517]
                mem[mem[64] + 68] = mem[_1517]
                s = 0
                t = _1517 + 32
                u = mem[64] + 100
                while s < _4292:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4223 + (32 * _4292) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6967 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6992 = mem[_6967]
                require mem[_6967] <= test266151307()
                require _6967 + mem[_6967] + 31 < _6967 + return_data.size
                _7017 = mem[_6967 + mem[_6967]]
                if mem[_6967 + mem[_6967]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6967 + mem[_6967]]) + 1 < 0 or _6967 + ceil32(return_data.size) + ceil32(32 * mem[_6967 + mem[_6967]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6967 + ceil32(return_data.size) + ceil32(32 * mem[_6967 + mem[_6967]]) + 1
                mem[_6967 + ceil32(return_data.size)] = _7017
                require _6992 + (32 * _7017) + 32 <= return_data.size
                t = _6967 + ceil32(return_data.size) + 32
                s = _6967 + _6992 + 32
                while s < _6967 + _6992 + (32 * _7017) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7017:
                    revert with 0, 50
                _10447 = mem[_6967 + ceil32(return_data.size) + 64]
                if 10^12 * _3833 / _4000 * Mask(112, 0, _3871) / 10^12 > !mem[_6967 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3710 + 128] = (10^12 * _3833 / _4000 * Mask(112, 0, _3871) / 10^12) + mem[_6967 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3833 / _4000 * Mask(112, 0, _3871) / 10^12) + _10447):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6967 + ceil32(return_data.size)
                t = 10^12 * _3833 / _4000 * Mask(112, 0, _3895) / 10^12
                u = 10^12 * _3833 / _4000 * Mask(112, 0, _3871) / 10^12
                v = _3833
                v = _3710
                v = stor9[idx].field_0
                v = v + (10^12 * _3833 / _4000 * Mask(112, 0, _3871) / 10^12) + _10447
                continue 
            mem[_1517 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _4262 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3833 / _4000 * Mask(112, 0, _3871) / 10^12
                mem[mem[64] + 36] = 64
                _4301 = mem[_1517]
                mem[mem[64] + 68] = mem[_1517]
                s = 0
                t = _1517 + 32
                w = mem[64] + 100
                while s < _4301:
                    mem[w] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4262 + (32 * _4301) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6966 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6991 = mem[_6966]
                require mem[_6966] <= test266151307()
                require _6966 + mem[_6966] + 31 < _6966 + return_data.size
                _7016 = mem[_6966 + mem[_6966]]
                if mem[_6966 + mem[_6966]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_6966 + mem[_6966]]) + 1 < 0 or _6966 + ceil32(return_data.size) + ceil32(32 * mem[_6966 + mem[_6966]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _6966 + ceil32(return_data.size) + ceil32(32 * mem[_6966 + mem[_6966]]) + 1
                mem[_6966 + ceil32(return_data.size)] = _7016
                require _6991 + (32 * _7016) + 32 <= return_data.size
                t = _6966 + ceil32(return_data.size) + 32
                s = _6966 + _6991 + 32
                while s < _6966 + _6991 + (32 * _7016) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7016:
                    revert with 0, 50
                _10446 = mem[_6966 + ceil32(return_data.size) + 64]
                if 10^12 * _3833 / _4000 * Mask(112, 0, _3895) / 10^12 > !mem[_6966 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3710 + 128] = (10^12 * _3833 / _4000 * Mask(112, 0, _3895) / 10^12) + mem[_6966 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3833 / _4000 * Mask(112, 0, _3895) / 10^12) + _10446):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6966 + ceil32(return_data.size)
                t = 10^12 * _3833 / _4000 * Mask(112, 0, _3895) / 10^12
                s = 10^12 * _3833 / _4000 * Mask(112, 0, _3871) / 10^12
                v = _3833
                v = _3710
                v = stor9[idx].field_0
                v = v + (10^12 * _3833 / _4000 * Mask(112, 0, _3895) / 10^12) + _10446
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4310 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4328 = mem[_4310]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4427 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4467 = mem[_4427]
            if mem[_4427] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4328:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4672 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4736 = mem[_4672]
            if 10^12 * _4467 / _4328 and mem[_4672] > -1 / 10^12 * _4467 / _4328:
                revert with 0, 17
            _4860 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4467 / _4328 * _4736 / 10^12
            mem[mem[64] + 36] = 64
            _4900 = mem[_1517]
            mem[mem[64] + 68] = mem[_1517]
            t = 0
            u = _1517 + 32
            w = mem[64] + 100
            while t < _4900:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4860 + (32 * _4900) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6965 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6990 = mem[_6965]
            require mem[_6965] <= test266151307()
            require _6965 + mem[_6965] + 31 < _6965 + return_data.size
            _7015 = mem[_6965 + mem[_6965]]
            if mem[_6965 + mem[_6965]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_6965 + mem[_6965]]) + 1 < 0 or _6965 + ceil32(return_data.size) + ceil32(32 * mem[_6965 + mem[_6965]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _6965 + ceil32(return_data.size) + ceil32(32 * mem[_6965 + mem[_6965]]) + 1
            mem[_6965 + ceil32(return_data.size)] = _7015
            require _6990 + (32 * _7015) + 32 <= return_data.size
            u = _6965 + ceil32(return_data.size) + 32
            t = _6965 + _6990 + 32
            while t < _6965 + _6990 + (32 * _7015) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7015:
                revert with 0, 50
            _10445 = mem[_6965 + ceil32(return_data.size) + 64]
            mem[_3710 + 128] = mem[_6965 + ceil32(return_data.size) + 64]
            if v > !_10445:
                revert with 0, 17
            if 0 >= mem[_1517]:
                revert with 0, 50
            mem[_1517 + 32] = mem[_3710 + 236 len 20]
            _10502 = mem[_3710 + 224]
            _10503 = mem[_3710]
            require ext_code.size(mem[_3710 + 236 len 20])
            staticcall mem[_3710 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10534 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10551 = mem[_10534]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_10502))
            staticcall address(_10502).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10578 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10609 = mem[_10578]
            if mem[_10578] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _10551:
                revert with 0, 18
            mem[mem[64] + 4] = address(_10503)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_10503)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10772 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10812 = mem[_10772]
            if 10^12 * _10609 / _10551 and mem[_10772] > -1 / 10^12 * _10609 / _10551:
                revert with 0, 17
            _10950 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _10609 / _10551 * _10812 / 10^12
            mem[mem[64] + 36] = 64
            _11028 = mem[_1517]
            mem[mem[64] + 68] = mem[_1517]
            t = 0
            u = _1517 + 32
            w = mem[64] + 100
            while t < _11028:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_10503))
            staticcall address(_10503).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _10950 + (32 * _11028) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13982 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _13996 = mem[_13982]
            require mem[_13982] <= test266151307()
            require _13982 + mem[_13982] + 31 < _13982 + return_data.size
            _14018 = mem[_13982 + mem[_13982]]
            if mem[_13982 + mem[_13982]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_13982 + mem[_13982]]) + 1 < 0 or _13982 + ceil32(return_data.size) + ceil32(32 * mem[_13982 + mem[_13982]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _13982 + ceil32(return_data.size) + ceil32(32 * mem[_13982 + mem[_13982]]) + 1
            mem[_13982 + ceil32(return_data.size)] = _14018
            require _13996 + (32 * _14018) + 32 <= return_data.size
            u = _13982 + ceil32(return_data.size) + 32
            t = _13982 + _13996 + 32
            while t < _13982 + _13996 + (32 * _14018) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _14018:
                revert with 0, 50
            if mem[_3710 + 128] > !mem[_13982 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3710 + 128] = mem[_3710 + 128] + mem[_13982 + ceil32(return_data.size) + 64]
            if v + _10445 > !mem[_3710 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _3833 / _4000 * Mask(112, 0, _3895) / 10^12
            u = 10^12 * _3833 / _4000 * Mask(112, 0, _3871) / 10^12
            v = _3833
            v = _3710
            v = stor9[idx].field_0
            v = v + _10445 + mem[_3710 + 128]
            continue 
        emit 0xf9ede3d1 
        require ext_code.size(arg1)
        staticcall arg1.0x83249ef9 with:
                gas gas_remaining wei
        mem[mem[64] len 192] = ext_call.return_data[0 len 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3741 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 192
        _3755 = mem[_3741]
        require mem[_3741] == mem[_3741 + 12 len 20]
        _3777 = mem[_3741 + 32]
        require mem[_3741 + 32] == mem[_3741 + 44 len 20]
        require mem[_3741 + 64] == mem[_3741 + 76 len 20]
        require mem[_3741 + 96] == mem[_3741 + 108 len 20]
        require mem[_3741 + 128] == mem[_3741 + 140 len 20]
        _3867 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3867] = 0
        mem[_3867 + 32] = 0
        mem[_3867 + 64] = 0
        mem[_3867 + 96] = 0
        mem[_3867 + 128] = 0
        mem[_3867 + 160] = 0
        mem[_3867 + 192] = 0
        mem[_3867 + 224] = 0
        idx = 0
        s = _3867
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _6909 = mem[64]
            mem[64] = mem[64] + 256
            mem[_6909] = strategyInfo[stor9[idx].field_0].field_0
            mem[_6909 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_6909 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_6909 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_6909 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_6909 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_6909 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_6909 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6964 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _6988 = mem[_6964]
                if idx >= stor9.length:
                    revert with 0, 50
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _7055 = mem[64]
                mem[64] = mem[64] + 256
                mem[_7055] = strategyInfo[stor9[idx].field_0].field_0
                mem[_7055 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_7055 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_7055 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_7055 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_7055 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_7055 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_7055 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _6988
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _6988
                else:
                    mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                    mem[mem[64] + 36] = _6988
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args strategyInfo[stor9[idx].field_0].field_512, _6988
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _6909
                s = _6988
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6963 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _6987 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_6987] = mem[_6963]
            mem[_6987 + 32] = mem[_6963 + 32]
            mem[_6987 + 64] = mem[_6963 + 64]
            require return_data.size - 96 >= 96
            _7028 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7028] = mem[_6963 + 96]
            mem[_7028 + 32] = mem[_6963 + 128]
            mem[_7028 + 64] = mem[_6963 + 160]
            mem[_6987 + 96] = _7028
            mem[_6987 + 128] = mem[_6963 + 192]
            require return_data.size - 224 >= 96
            _7078 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7078] = mem[_6963 + 224]
            mem[_7078 + 32] = mem[_6963 + 256]
            mem[_7078 + 64] = mem[_6963 + 288]
            mem[_6987 + 160] = _7078
            _7115 = mem[_6987 + 64]
            if idx >= stor9.length:
                revert with 0, 50
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _7174 = mem[64]
            mem[64] = mem[64] + 256
            mem[_7174] = strategyInfo[stor9[idx].field_0].field_0
            mem[_7174 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_7174 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_7174 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_7174 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_7174 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_7174 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_7174 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7115
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _7115
            else:
                mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _7115
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _7115
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _6909
            s = _7115
            continue 
        idx = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _10444 = mem[64]
            mem[64] = mem[64] + 256
            mem[_10444] = strategyInfo[stor9[idx].field_0].field_0
            mem[_10444 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_10444 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_10444 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_10444 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_10444 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_10444 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_10444 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10482 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10501 = mem[_10482]
            if mem[_10482]:
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 36] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64] + 68] = _10501
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = 0
                mem[mem[64] + 164] = this.address
                mem[mem[64] + 196] = block.timestamp + 60
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                call strategyInfo[stor9[idx].field_0].field_0.removeLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, address arg6, uint256 arg7) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_1536, strategyInfo[stor9[idx].field_0].field_1792, _10501, 0, 0, address(this.address), block.timestamp + 60
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _10635 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_10635 + 32 len 64] = call.data[calldata.size len 64]
                if 1 >= mem[_10635]:
                    revert with 0, 50
                mem[_10635 + 64] = stor21
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                                gas gas_remaining wei
                        mem[_10635 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_10635 + ceil32(return_data.size) + 96] = 2
                        mem[_10635 + ceil32(return_data.size) + 128] = address(ext_call.return_data[0])
                        mem[_10635 + ceil32(return_data.size) + 160] = stor21
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_10635 + ceil32(return_data.size) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_10635 + (2 * ceil32(return_data.size)) + 196] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_10635 + (2 * ceil32(return_data.size)) + 196 len ceil32(return_data.size) + 32]
                        mem[_10635 + (2 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_10635 + (4 * ceil32(return_data.size)) + 196] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_10635 + (4 * ceil32(return_data.size)) + 196 len (5 * ceil32(return_data.size)) + 32]
                        mem[_10635 + (4 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_10635 + (6 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_10635 + (6 * ceil32(return_data.size)) + 196] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_10635 + (6 * ceil32(return_data.size)) + 228] = 64
                        mem[_10635 + (6 * ceil32(return_data.size)) + 260] = 2
                        s = 0
                        t = _10635 + ceil32(return_data.size) + 128
                        u = _10635 + (6 * ceil32(return_data.size)) + 292
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, Array(len=2, data=mem[_10635 + (6 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_10635 + (6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _10635 + (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _13993 = mem[_10635 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_10635 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _10635 + (6 * ceil32(return_data.size)) + mem[_10635 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 223 < _10635 + (6 * ceil32(return_data.size)) + return_data.size + 192
                        _14015 = mem[_10635 + (6 * ceil32(return_data.size)) + mem[_10635 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]
                        if mem[_10635 + (6 * ceil32(return_data.size)) + mem[_10635 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10635 + (6 * ceil32(return_data.size)) + mem[_10635 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 1 < 0 or _10635 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_10635 + (6 * ceil32(return_data.size)) + mem[_10635 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193 > test266151307():
                            revert with 0, 65
                        mem[64] = _10635 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_10635 + (6 * ceil32(return_data.size)) + mem[_10635 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193
                        mem[_10635 + (7 * ceil32(return_data.size)) + 192] = _14015
                        require _13993 + (32 * _14015) + 32 <= return_data.size
                        t = _10635 + (7 * ceil32(return_data.size)) + 224
                        s = _10635 + (6 * ceil32(return_data.size)) + _13993 + 224
                        while s < _10635 + (6 * ceil32(return_data.size)) + _13993 + (32 * _14015) + 224:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14015:
                            revert with 0, 50
                        _17299 = mem[_10635 + (7 * ceil32(return_data.size)) + 256]
                        if mem[_10635 + (7 * ceil32(return_data.size)) + 256] and 1 > -1 / mem[_10635 + (7 * ceil32(return_data.size)) + 256]:
                            revert with 0, 17
                        if mem[_10635 + (7 * ceil32(return_data.size)) + 256] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_10635 + (7 * ceil32(return_data.size)) + 256] < 100 * mem[_10635 + (7 * ceil32(return_data.size)) + 256] / 10000:
                            revert with 0, 17
                        _17503 = mem[_10444]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17601 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17627 = mem[_17601]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _17627
                        mem[mem[64] + 36] = _17299 - (100 * _17299 / 10000)
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        s = 0
                        t = _10635 + ceil32(return_data.size) + 128
                        u = mem[64] + 196
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_17503))
                        call address(_17503).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _17627, _17299 - (100 * _17299 / 10000), Array(len=2, data=mem[mem[64] + 196 len 64]), address(this.address), block.timestamp + 60
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20181 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _20207 = mem[_20181]
                        require mem[_20181] <= test266151307()
                        require _20181 + mem[_20181] + 31 < _20181 + return_data.size
                        _20233 = mem[_20181 + mem[_20181]]
                        if mem[_20181 + mem[_20181]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_20181 + mem[_20181]]) + 1 < 0 or _20181 + ceil32(return_data.size) + ceil32(32 * mem[_20181 + mem[_20181]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _20181 + ceil32(return_data.size) + ceil32(32 * mem[_20181 + mem[_20181]]) + 1
                        mem[_20181 + ceil32(return_data.size)] = _20233
                        require _20207 + (32 * _20233) + 32 <= return_data.size
                        t = _20181 + ceil32(return_data.size) + 32
                        s = _20181 + _20207 + 32
                        while s < _20181 + _20207 + (32 * _20233) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_10635]:
                            revert with 0, 50
                        mem[_10635 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[_10635 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_10635 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_10635 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_10635 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[_10635 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _10635 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_10635 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_10635 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_10635 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_10635 + (4 * ceil32(return_data.size)) + 164] = mem[_10635]
                        s = 0
                        t = _10635 + 32
                        u = _10635 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_10635]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _10635 + (4 * ceil32(return_data.size)) + (32 * mem[_10635]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13980 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13994 = mem[_13980]
                        require mem[_13980] <= test266151307()
                        require _13980 + mem[_13980] + 31 < _13980 + return_data.size
                        _14016 = mem[_13980 + mem[_13980]]
                        if mem[_13980 + mem[_13980]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_13980 + mem[_13980]]) + 1 < 0 or _13980 + ceil32(return_data.size) + ceil32(32 * mem[_13980 + mem[_13980]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _13980 + ceil32(return_data.size) + ceil32(32 * mem[_13980 + mem[_13980]]) + 1
                        mem[_13980 + ceil32(return_data.size)] = _14016
                        require _13994 + (32 * _14016) + 32 <= return_data.size
                        t = _13980 + ceil32(return_data.size) + 32
                        s = _13980 + _13994 + 32
                        while s < _13980 + _13994 + (32 * _14016) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _14016:
                            revert with 0, 50
                        _17300 = mem[_13980 + ceil32(return_data.size) + 64]
                        if mem[_13980 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13980 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_13980 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_13980 + ceil32(return_data.size) + 64] < 100 * mem[_13980 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17602 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17628 = mem[_17602]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _17660 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _17628
                        mem[mem[64] + 36] = _17300 - (100 * _17300 / 10000)
                        mem[mem[64] + 68] = 160
                        _17702 = mem[_10635]
                        mem[mem[64] + 164] = mem[_10635]
                        s = 0
                        t = _10635 + 32
                        u = mem[64] + 196
                        while s < _17702:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17660 + 100] = this.address
                        mem[_17660 + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17660 + (32 * _17702) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20182 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _20208 = mem[_20182]
                        require mem[_20182] <= test266151307()
                        require _20182 + mem[_20182] + 31 < _20182 + return_data.size
                        _20234 = mem[_20182 + mem[_20182]]
                        if mem[_20182 + mem[_20182]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_20182 + mem[_20182]]) + 1 < 0 or _20182 + ceil32(return_data.size) + ceil32(32 * mem[_20182 + mem[_20182]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _20182 + ceil32(return_data.size) + ceil32(32 * mem[_20182 + mem[_20182]]) + 1
                        mem[_20182 + ceil32(return_data.size)] = _20234
                        require _20208 + (32 * _20234) + 32 <= return_data.size
                        t = _20182 + ceil32(return_data.size) + 32
                        s = _20182 + _20208 + 32
                        while s < _20182 + _20208 + (32 * _20234) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_10444 + 172 len 20])
                        staticcall mem[_10444 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22718 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22746 = mem[_22718]
                        require mem[_22718] == mem[_22718 + 12 len 20]
                        _22790 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_22790]:
                            revert with 0, 50
                        mem[_22790 + 32] = address(_22746)
                        if 1 >= mem[_22790]:
                            revert with 0, 50
                        mem[_22790 + 64] = stor21
                        _22825 = mem[_10444]
                        require ext_code.size(address(_22746))
                        staticcall address(_22746).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_22790 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_22790 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_22746))
                        staticcall address(_22746).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_22790 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_22790 + (2 * ceil32(return_data.size)) + 100] = address(_22825)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_22825)
                        mem[_22790 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _22790 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_22790 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_22790 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_22790 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_22790 + (4 * ceil32(return_data.size)) + 164] = mem[_22790]
                        s = 0
                        t = _22790 + 32
                        u = _22790 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_22790]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_22825))
                        staticcall address(_22825).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _22790 + (4 * ceil32(return_data.size)) + (32 * mem[_22790]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25030 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25070 = mem[_25030]
                        require mem[_25030] <= test266151307()
                        require _25030 + mem[_25030] + 31 < _25030 + return_data.size
                        _25102 = mem[_25030 + mem[_25030]]
                        if mem[_25030 + mem[_25030]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25030 + mem[_25030]]) + 1 < 0 or _25030 + ceil32(return_data.size) + ceil32(32 * mem[_25030 + mem[_25030]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25030 + ceil32(return_data.size) + ceil32(32 * mem[_25030 + mem[_25030]]) + 1
                        mem[_25030 + ceil32(return_data.size)] = _25102
                        require _25070 + (32 * _25102) + 32 <= return_data.size
                        t = _25030 + ceil32(return_data.size) + 32
                        s = _25030 + _25070 + 32
                        while s < _25030 + _25070 + (32 * _25102) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _25102:
                            revert with 0, 50
                        _27022 = mem[_25030 + ceil32(return_data.size) + 64]
                        if mem[_25030 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_25030 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_25030 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_25030 + ceil32(return_data.size) + 64] < 100 * mem[_25030 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        _27265 = mem[_10444]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_22746))
                        staticcall address(_22746).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27371 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27411 = mem[_27371]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27411
                        mem[mem[64] + 36] = _27022 - (100 * _27022 / 10000)
                        mem[mem[64] + 68] = 160
                        _27478 = mem[_22790]
                        mem[mem[64] + 164] = mem[_22790]
                        s = 0
                        t = _22790 + 32
                        u = mem[64] + 196
                        while s < _27478:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_27265))
                        call address(_27265).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _27411, _27022 - (100 * _27022 / 10000), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _27478) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28374 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28414 = mem[_28374]
                        require mem[_28374] <= test266151307()
                        require _28374 + mem[_28374] + 31 < _28374 + return_data.size
                        _28454 = mem[_28374 + mem[_28374]]
                        if mem[_28374 + mem[_28374]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28374 + mem[_28374]]) + 1 < 0 or _28374 + ceil32(return_data.size) + ceil32(32 * mem[_28374 + mem[_28374]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28374 + ceil32(return_data.size) + ceil32(32 * mem[_28374 + mem[_28374]]) + 1
                        mem[_28374 + ceil32(return_data.size)] = _28454
                        require _28414 + (32 * _28454) + 32 <= return_data.size
                        t = _28374 + ceil32(return_data.size) + 32
                        s = _28374 + _28414 + 32
                        while s < _28374 + _28414 + (32 * _28454) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                else:
                    if 0 >= mem[_10635]:
                        revert with 0, 50
                    mem[_10635 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                            gas gas_remaining wei
                    mem[_10635 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_10635 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_10635 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not ext_call.return_data[0]:
                        revert with 0, 18
                    mem[_10635 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[_10635 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _10635 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[_10635 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_10635 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                    mem[_10635 + (4 * ceil32(return_data.size)) + 132] = 64
                    mem[_10635 + (4 * ceil32(return_data.size)) + 164] = mem[_10635]
                    s = 0
                    t = _10635 + 32
                    u = _10635 + (4 * ceil32(return_data.size)) + 196
                    while s < mem[_10635]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _10635 + (4 * ceil32(return_data.size)) + (32 * mem[_10635]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13981 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13995 = mem[_13981]
                    require mem[_13981] <= test266151307()
                    require _13981 + mem[_13981] + 31 < _13981 + return_data.size
                    _14017 = mem[_13981 + mem[_13981]]
                    if mem[_13981 + mem[_13981]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_13981 + mem[_13981]]) + 1 < 0 or _13981 + ceil32(return_data.size) + ceil32(32 * mem[_13981 + mem[_13981]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _13981 + ceil32(return_data.size) + ceil32(32 * mem[_13981 + mem[_13981]]) + 1
                    mem[_13981 + ceil32(return_data.size)] = _14017
                    require _13995 + (32 * _14017) + 32 <= return_data.size
                    t = _13981 + ceil32(return_data.size) + 32
                    s = _13981 + _13995 + 32
                    while s < _13981 + _13995 + (32 * _14017) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _14017:
                        revert with 0, 50
                    _17301 = mem[_13981 + ceil32(return_data.size) + 64]
                    if mem[_13981 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13981 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if mem[_13981 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                        revert with 0, 17
                    if mem[_13981 + ceil32(return_data.size) + 64] < 100 * mem[_13981 + ceil32(return_data.size) + 64] / 10000:
                        revert with 0, 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17603 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17629 = mem[_17603]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _17629
                    mem[mem[64] + 36] = _17301 - (100 * _17301 / 10000)
                    mem[mem[64] + 68] = 160
                    _17703 = mem[_10635]
                    mem[mem[64] + 164] = mem[_10635]
                    s = 0
                    t = _10635 + 32
                    u = mem[64] + 196
                    while s < _17703:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 60
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    call strategyInfo[stor9[idx].field_0].field_0.swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _17629, _17301 - (100 * _17301 / 10000), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _17703) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _20183 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _20209 = mem[_20183]
                    require mem[_20183] <= test266151307()
                    require _20183 + mem[_20183] + 31 < _20183 + return_data.size
                    _20235 = mem[_20183 + mem[_20183]]
                    if mem[_20183 + mem[_20183]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_20183 + mem[_20183]]) + 1 < 0 or _20183 + ceil32(return_data.size) + ceil32(32 * mem[_20183 + mem[_20183]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _20183 + ceil32(return_data.size) + ceil32(32 * mem[_20183 + mem[_20183]]) + 1
                    mem[_20183 + ceil32(return_data.size)] = _20235
                    require _20209 + (32 * _20235) + 32 <= return_data.size
                    t = _20183 + ceil32(return_data.size) + 32
                    s = _20183 + _20209 + 32
                    while s < _20183 + _20209 + (32 * _20235) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(mem[_10444 + 172 len 20])
                        staticcall mem[_10444 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22723 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22751 = mem[_22723]
                        require mem[_22723] == mem[_22723 + 12 len 20]
                        _22800 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_22800]:
                            revert with 0, 50
                        mem[_22800 + 32] = address(_22751)
                        if 1 >= mem[_22800]:
                            revert with 0, 50
                        mem[_22800 + 64] = stor21
                        _22836 = mem[_10444]
                        require ext_code.size(address(_22751))
                        staticcall address(_22751).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_22800 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_22800 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_22751))
                        staticcall address(_22751).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_22800 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_22800 + (2 * ceil32(return_data.size)) + 100] = address(_22836)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_22836)
                        mem[_22800 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _22800 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_22800 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_22800 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_22800 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_22800 + (4 * ceil32(return_data.size)) + 164] = mem[_22800]
                        s = 0
                        t = _22800 + 32
                        u = _22800 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_22800]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_22836))
                        staticcall address(_22836).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_22800 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_22800]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_22800 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _22800 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _25071 = mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _22800 + (4 * ceil32(return_data.size)) + mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _22800 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _25103 = mem[_22800 + (4 * ceil32(return_data.size)) + mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_22800 + (4 * ceil32(return_data.size)) + mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22800 + (4 * ceil32(return_data.size)) + mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _22800 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_22800 + (4 * ceil32(return_data.size)) + mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _22800 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_22800 + (4 * ceil32(return_data.size)) + mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_22800 + (6 * ceil32(return_data.size)) + 96] = mem[_22800 + (4 * ceil32(return_data.size)) + mem[_22800 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _25071 + (32 * _25103) + 32 <= return_data.size
                        t = _22800 + (6 * ceil32(return_data.size)) + 128
                        s = _22800 + (4 * ceil32(return_data.size)) + _25071 + 128
                        while s < _22800 + (4 * ceil32(return_data.size)) + _25071 + (32 * _25103) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _25103:
                            revert with 0, 50
                        _27023 = mem[_22800 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_22800 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_22800 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_22800 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_22800 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_22800 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        _27266 = mem[_10444]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_22751))
                        staticcall address(_22751).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27372 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27412 = mem[_27372]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _27455 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27412
                        mem[mem[64] + 36] = _27023 - (100 * _27023 / 10000)
                        mem[mem[64] + 68] = 160
                        _27479 = mem[_22800]
                        mem[mem[64] + 164] = mem[_22800]
                        s = 0
                        t = _22800 + 32
                        u = mem[64] + 196
                        while s < _27479:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_27455 + 100] = this.address
                        mem[_27455 + 132] = block.timestamp + 60
                        require ext_code.size(address(_27266))
                        call address(_27266).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _27455 + (32 * _27479) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28375 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28415 = mem[_28375]
                        require mem[_28375] <= test266151307()
                        require _28375 + mem[_28375] + 31 < _28375 + return_data.size
                        _28455 = mem[_28375 + mem[_28375]]
                        if mem[_28375 + mem[_28375]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28375 + mem[_28375]]) + 1 < 0 or _28375 + ceil32(return_data.size) + ceil32(32 * mem[_28375 + mem[_28375]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28375 + ceil32(return_data.size) + ceil32(32 * mem[_28375 + mem[_28375]]) + 1
                        mem[_28375 + ceil32(return_data.size)] = _28455
                        require _28415 + (32 * _28455) + 32 <= return_data.size
                        t = _28375 + ceil32(return_data.size) + 32
                        s = _28375 + _28415 + 32
                        while s < _28375 + _28415 + (32 * _28455) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_10635]:
                            revert with 0, 50
                        mem[_10635 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22724 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22752 = mem[_22724]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22792 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22827 = mem[_22792]
                        if mem[_22792] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not _22752:
                            revert with 0, 18
                        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23021 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23068 = mem[_23021]
                        if 10^12 * _22827 / _22752 and mem[_23021] > -1 / 10^12 * _22827 / _22752:
                            revert with 0, 17
                        _23314 = mem[64]
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 10^12 * _22827 / _22752 * _23068 / 10^12
                        mem[mem[64] + 36] = 64
                        _23357 = mem[_10635]
                        mem[mem[64] + 68] = mem[_10635]
                        s = 0
                        t = _10635 + 32
                        u = mem[64] + 100
                        while s < _23357:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _23314 + (32 * _23357) + -mem[64] + 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25032 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25072 = mem[_25032]
                        require mem[_25032] <= test266151307()
                        require _25032 + mem[_25032] + 31 < _25032 + return_data.size
                        _25104 = mem[_25032 + mem[_25032]]
                        if mem[_25032 + mem[_25032]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25032 + mem[_25032]]) + 1 < 0 or _25032 + ceil32(return_data.size) + ceil32(32 * mem[_25032 + mem[_25032]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25032 + ceil32(return_data.size) + ceil32(32 * mem[_25032 + mem[_25032]]) + 1
                        mem[_25032 + ceil32(return_data.size)] = _25104
                        require _25072 + (32 * _25104) + 32 <= return_data.size
                        t = _25032 + ceil32(return_data.size) + 32
                        s = _25032 + _25072 + 32
                        while s < _25032 + _25072 + (32 * _25104) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _25104:
                            revert with 0, 50
                        _27024 = mem[_25032 + ceil32(return_data.size) + 64]
                        if mem[_25032 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_25032 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if mem[_25032 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_25032 + ceil32(return_data.size) + 64] < 100 * mem[_25032 + ceil32(return_data.size) + 64] / 10000:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27373 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27413 = mem[_27373]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27413
                        mem[mem[64] + 36] = _27024 - (100 * _27024 / 10000)
                        mem[mem[64] + 68] = 160
                        _27480 = mem[_10635]
                        mem[mem[64] + 164] = mem[_10635]
                        s = 0
                        t = _10635 + 32
                        u = mem[64] + 196
                        while s < _27480:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _27413, _27024 - (100 * _27024 / 10000), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _27480) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28376 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28416 = mem[_28376]
                        require mem[_28376] <= test266151307()
                        require _28376 + mem[_28376] + 31 < _28376 + return_data.size
                        _28456 = mem[_28376 + mem[_28376]]
                        if mem[_28376 + mem[_28376]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28376 + mem[_28376]]) + 1 < 0 or _28376 + ceil32(return_data.size) + ceil32(32 * mem[_28376 + mem[_28376]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28376 + ceil32(return_data.size) + ceil32(32 * mem[_28376 + mem[_28376]]) + 1
                        mem[_28376 + ceil32(return_data.size)] = _28456
                        require _28416 + (32 * _28456) + 32 <= return_data.size
                        t = _28376 + ceil32(return_data.size) + 32
                        s = _28376 + _28416 + 32
                        while s < _28376 + _28416 + (32 * _28456) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_10444 + 172 len 20])
                        staticcall mem[_10444 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29249 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29261 = mem[_29249]
                        require mem[_29249] == mem[_29249 + 12 len 20]
                        _29278 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_29278]:
                            revert with 0, 50
                        mem[_29278 + 32] = address(_29261)
                        if 1 >= mem[_29278]:
                            revert with 0, 50
                        mem[_29278 + 64] = stor21
                        _29295 = mem[_10444]
                        require ext_code.size(address(_29261))
                        staticcall address(_29261).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_29278 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_29278 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_29261))
                        staticcall address(_29261).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_29278 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_29278 + (2 * ceil32(return_data.size)) + 100] = address(_29295)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_29295)
                        mem[_29278 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _29278 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_29278 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_29278 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_29278 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_29278 + (4 * ceil32(return_data.size)) + 164] = mem[_29278]
                        s = 0
                        t = _29278 + 32
                        u = _29278 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_29278]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_29295))
                        staticcall address(_29295).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_29278 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_29278]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_29278 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _29278 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _29955 = mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _29278 + (4 * ceil32(return_data.size)) + mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _29278 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _29965 = mem[_29278 + (4 * ceil32(return_data.size)) + mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_29278 + (4 * ceil32(return_data.size)) + mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_29278 + (4 * ceil32(return_data.size)) + mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _29278 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_29278 + (4 * ceil32(return_data.size)) + mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _29278 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_29278 + (4 * ceil32(return_data.size)) + mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_29278 + (6 * ceil32(return_data.size)) + 96] = mem[_29278 + (4 * ceil32(return_data.size)) + mem[_29278 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _29955 + (32 * _29965) + 32 <= return_data.size
                        t = _29278 + (6 * ceil32(return_data.size)) + 128
                        s = _29278 + (4 * ceil32(return_data.size)) + _29955 + 128
                        while s < _29278 + (4 * ceil32(return_data.size)) + _29955 + (32 * _29965) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _29965:
                            revert with 0, 50
                        _30487 = mem[_29278 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_29278 + (6 * ceil32(return_data.size)) + 160] and 1 > -1 / mem[_29278 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if mem[_29278 + (6 * ceil32(return_data.size)) + 160] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                            revert with 0, 17
                        if mem[_29278 + (6 * ceil32(return_data.size)) + 160] < 100 * mem[_29278 + (6 * ceil32(return_data.size)) + 160] / 10000:
                            revert with 0, 17
                        _30585 = mem[_10444]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_29261))
                        staticcall address(_29261).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30623 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30641 = mem[_30623]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _30641
                        mem[mem[64] + 36] = _30487 - (100 * _30487 / 10000)
                        mem[mem[64] + 68] = 160
                        _30661 = mem[_29278]
                        mem[mem[64] + 164] = mem[_29278]
                        s = 0
                        t = _29278 + 32
                        u = mem[64] + 196
                        while s < _30661:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_30585))
                        call address(_30585).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _30641, _30487 - (100 * _30487 / 10000), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _30661) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30729 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30747 = mem[_30729]
                        require mem[_30729] <= test266151307()
                        require _30729 + mem[_30729] + 31 < _30729 + return_data.size
                        _30765 = mem[_30729 + mem[_30729]]
                        if mem[_30729 + mem[_30729]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_30729 + mem[_30729]]) + 1 < 0 or _30729 + ceil32(return_data.size) + ceil32(32 * mem[_30729 + mem[_30729]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _30729 + ceil32(return_data.size) + ceil32(32 * mem[_30729 + mem[_30729]]) + 1
                        mem[_30729 + ceil32(return_data.size)] = _30765
                        require _30747 + (32 * _30765) + 32 <= return_data.size
                        t = _30729 + ceil32(return_data.size) + 32
                        s = _30729 + _30747 + 32
                        while s < _30729 + _30747 + (32 * _30765) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        require ext_code.size(address(_3755))
        staticcall address(_3755).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _10467 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _10481 = mem[_10467]
        require mem[_10467] == mem[_10467 + 12 len 20]
        require ext_code.size(address(_3755))
        staticcall address(_3755).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _10549 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _10555 = mem[_10549]
        require mem[_10549] == mem[_10549 + 12 len 20]
        _10631 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        if not mem[_10631]:
            revert with 0, 50
        mem[_10631 + 32] = stor21
        if stor21 == address(_10555):
            if stor21 == address(_3777):
                require ext_code.size(address(_3755))
                staticcall address(_3755).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(_3755))
                call address(_3755).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if 1 >= mem[_10631]:
                    revert with 0, 50
                mem[_10631 + 64] = address(_3777)
                mem[_10631 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[_10631 + 100] = eth.balance(this.address) / 2
                mem[_10631 + 132] = 64
                mem[_10631 + 164] = mem[_10631]
                idx = 0
                s = _10631 + 32
                t = _10631 + 196
                while idx < mem[_10631]:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(address(_10481))
                staticcall address(_10481).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _10631 + (32 * mem[_10631]) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13977 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13991 = mem[_13977]
                require mem[_13977] <= test266151307()
                require _13977 + mem[_13977] + 31 < _13977 + return_data.size
                _14013 = mem[_13977 + mem[_13977]]
                if mem[_13977 + mem[_13977]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_13977 + mem[_13977]]) + 1 < 0 or _13977 + ceil32(return_data.size) + ceil32(32 * mem[_13977 + mem[_13977]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _13977 + ceil32(return_data.size) + ceil32(32 * mem[_13977 + mem[_13977]]) + 1
                mem[_13977 + ceil32(return_data.size)] = _14013
                require _13991 + (32 * _14013) + 32 <= return_data.size
                mem[_13977 + ceil32(return_data.size) + 32 len ceil32(32 * _14013)] = mem[_13977 + _13991 + 32 len ceil32(32 * _14013)]
                if 1 >= _14013:
                    revert with 0, 50
                _17297 = mem[_13977 + ceil32(return_data.size) + 64]
                if mem[_13977 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13977 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_13977 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _14013:
                    revert with 0, 50
                _17483 = mem[_13977 + ceil32(return_data.size) + 64]
                if mem[_13977 + ceil32(return_data.size) + 64] < 100 * mem[_13977 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _17597 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _17483 - (100 * _17297 / 10000)
                mem[mem[64] + 36] = 128
                _17623 = mem[_10631]
                mem[mem[64] + 132] = mem[_10631]
                idx = 0
                s = _10631 + 32
                t = mem[64] + 164
                while idx < _17623:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_17597 + 68] = this.address
                mem[_17597 + 100] = block.timestamp + 60
                require ext_code.size(address(_10481))
                call address(_10481).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _17597 + (32 * _17623) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20179 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _20205 = mem[_20179]
                require mem[_20179] <= test266151307()
                require _20179 + mem[_20179] + 31 < _20179 + return_data.size
                _20231 = mem[_20179 + mem[_20179]]
                if mem[_20179 + mem[_20179]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_20179 + mem[_20179]]) + 1 < 0 or _20179 + ceil32(return_data.size) + ceil32(32 * mem[_20179 + mem[_20179]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _20179 + ceil32(return_data.size) + ceil32(32 * mem[_20179 + mem[_20179]]) + 1
                mem[_20179 + ceil32(return_data.size)] = _20231
                require _20205 + (32 * _20231) + 32 <= return_data.size
                mem[_20179 + ceil32(return_data.size) + 32 len ceil32(32 * _20231)] = mem[_20179 + _20205 + 32 len ceil32(32 * _20231)]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3755))
                staticcall address(_3755).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22689 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22721 = mem[_22689]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _22721
                require ext_code.size(address(_3755))
                call address(_3755).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _22721
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22779 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_22779] == bool(mem[_22779])
        else:
            if 1 >= mem[_10631]:
                revert with 0, 50
            mem[_10631 + 64] = address(_10555)
            mem[_10631 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[_10631 + 100] = eth.balance(this.address) / 2
            mem[_10631 + 132] = 64
            mem[_10631 + 164] = mem[_10631]
            idx = 0
            s = _10631 + 32
            t = _10631 + 196
            while idx < mem[_10631]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(_10481))
            staticcall address(_10481).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _10631 + (32 * mem[_10631]) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13978 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _13992 = mem[_13978]
            require mem[_13978] <= test266151307()
            require _13978 + mem[_13978] + 31 < _13978 + return_data.size
            _14014 = mem[_13978 + mem[_13978]]
            if mem[_13978 + mem[_13978]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_13978 + mem[_13978]]) + 1 < 0 or _13978 + ceil32(return_data.size) + ceil32(32 * mem[_13978 + mem[_13978]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _13978 + ceil32(return_data.size) + ceil32(32 * mem[_13978 + mem[_13978]]) + 1
            mem[_13978 + ceil32(return_data.size)] = _14014
            require _13992 + (32 * _14014) + 32 <= return_data.size
            mem[_13978 + ceil32(return_data.size) + 32 len ceil32(32 * _14014)] = mem[_13978 + _13992 + 32 len ceil32(32 * _14014)]
            if 1 >= _14014:
                revert with 0, 50
            _17298 = mem[_13978 + ceil32(return_data.size) + 64]
            if mem[_13978 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_13978 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if mem[_13978 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                revert with 0, 17
            if 1 >= _14014:
                revert with 0, 50
            _17484 = mem[_13978 + ceil32(return_data.size) + 64]
            if mem[_13978 + ceil32(return_data.size) + 64] < 100 * mem[_13978 + ceil32(return_data.size) + 64] / 10000:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            _17598 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _17484 - (100 * _17298 / 10000)
            mem[mem[64] + 36] = 128
            _17624 = mem[_10631]
            mem[mem[64] + 132] = mem[_10631]
            idx = 0
            s = _10631 + 32
            t = mem[64] + 164
            while idx < _17624:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_17598 + 68] = this.address
            mem[_17598 + 100] = block.timestamp + 60
            require ext_code.size(address(_10481))
            call address(_10481).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _17598 + (32 * _17624) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _20180 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _20206 = mem[_20180]
            require mem[_20180] <= test266151307()
            require _20180 + mem[_20180] + 31 < _20180 + return_data.size
            _20232 = mem[_20180 + mem[_20180]]
            if mem[_20180 + mem[_20180]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_20180 + mem[_20180]]) + 1 < 0 or _20180 + ceil32(return_data.size) + ceil32(32 * mem[_20180 + mem[_20180]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _20180 + ceil32(return_data.size) + ceil32(32 * mem[_20180 + mem[_20180]]) + 1
            mem[_20180 + ceil32(return_data.size)] = _20232
            require _20206 + (32 * _20232) + 32 <= return_data.size
            mem[_20180 + ceil32(return_data.size) + 32 len ceil32(32 * _20232)] = mem[_20180 + _20206 + 32 len ceil32(32 * _20232)]
            if stor21 == address(_3777):
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3755))
                staticcall address(_3755).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22717 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22745 = mem[_22717]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _22745
                require ext_code.size(address(_3755))
                call address(_3755).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _22745
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22785 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_22785] == bool(mem[_22785])
            else:
                if 1 >= mem[_10631]:
                    revert with 0, 50
                mem[_10631 + 64] = address(_3777)
                _22657 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 64
                _22690 = mem[_10631]
                mem[mem[64] + 68] = mem[_10631]
                idx = 0
                s = _10631 + 32
                t = mem[64] + 100
                while idx < _22690:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(address(_10481))
                staticcall address(_10481).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _22657 + (32 * _22690) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25029 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25069 = mem[_25029]
                require mem[_25029] <= test266151307()
                require _25029 + mem[_25029] + 31 < _25029 + return_data.size
                _25101 = mem[_25029 + mem[_25029]]
                if mem[_25029 + mem[_25029]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_25029 + mem[_25029]]) + 1 < 0 or _25029 + ceil32(return_data.size) + ceil32(32 * mem[_25029 + mem[_25029]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _25029 + ceil32(return_data.size) + ceil32(32 * mem[_25029 + mem[_25029]]) + 1
                mem[_25029 + ceil32(return_data.size)] = _25101
                require _25069 + (32 * _25101) + 32 <= return_data.size
                mem[_25029 + ceil32(return_data.size) + 32 len ceil32(32 * _25101)] = mem[_25029 + _25069 + 32 len ceil32(32 * _25101)]
                if 1 >= _25101:
                    revert with 0, 50
                _27021 = mem[_25029 + ceil32(return_data.size) + 64]
                if mem[_25029 + ceil32(return_data.size) + 64] and 1 > -1 / mem[_25029 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if mem[_25029 + ceil32(return_data.size) + 64] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                    revert with 0, 17
                if 1 >= _25101:
                    revert with 0, 50
                _27231 = mem[_25029 + ceil32(return_data.size) + 64]
                if mem[_25029 + ceil32(return_data.size) + 64] < 100 * mem[_25029 + ceil32(return_data.size) + 64] / 10000:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                _27369 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _27231 - (100 * _27021 / 10000)
                mem[mem[64] + 36] = 128
                _27409 = mem[_10631]
                mem[mem[64] + 132] = mem[_10631]
                idx = 0
                s = _10631 + 32
                t = mem[64] + 164
                while idx < _27409:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_27369 + 68] = this.address
                mem[_27369 + 100] = block.timestamp + 60
                require ext_code.size(address(_10481))
                call address(_10481).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _27369 + (32 * _27409) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28373 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28413 = mem[_28373]
                require mem[_28373] <= test266151307()
                require _28373 + mem[_28373] + 31 < _28373 + return_data.size
                _28453 = mem[_28373 + mem[_28373]]
                if mem[_28373 + mem[_28373]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_28373 + mem[_28373]]) + 1 < 0 or _28373 + ceil32(return_data.size) + ceil32(32 * mem[_28373 + mem[_28373]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _28373 + ceil32(return_data.size) + ceil32(32 * mem[_28373 + mem[_28373]]) + 1
                mem[_28373 + ceil32(return_data.size)] = _28453
                require _28413 + (32 * _28453) + 32 <= return_data.size
                mem[_28373 + ceil32(return_data.size) + 32 len ceil32(32 * _28453)] = mem[_28373 + _28413 + 32 len ceil32(32 * _28453)]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3755))
                staticcall address(_3755).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29239 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29251 = mem[_29239]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _29251
                require ext_code.size(address(_3755))
                call address(_3755).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _29251
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29275 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_29275] == bool(mem[_29275])
    require ext_code.size(arg1)
    call arg1.0xd389800f with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}



}
