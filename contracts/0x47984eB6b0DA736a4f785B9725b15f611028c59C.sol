contract main {




// =====================  Runtime code  =====================


#
#  - sub_68dbc76f(?)
#
function _fallback() payable {
    revert
}

function sub_960d244e(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < arg4:
        return 0
    require ext_code.size(address(arg1))
    staticcall address(arg1).0xdd62ed3e with:
            gas gas_remaining wei
           args address(arg2), address(arg3)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < arg4:
        return 0
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_06b68323(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 4).length <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
    if ('cd', 4).length:
        mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    while uint16(idx) < ('cd', 4).length:
        require uint16(idx) < ('cd', 4).length
        require uint16(idx) < mem[(32 * ('cd', 4).length) + 128]
        mem[(32 * uint16(idx)) + (32 * ('cd', 4).length) + 160] = eth.balance(mem[(32 * uint16(idx)) + 128])
        idx = idx + 1
        continue 
    mem[(64 * ('cd', 4).length) + 160] = 32
    mem[(64 * ('cd', 4).length) + 192] = mem[(32 * ('cd', 4).length) + 128]
    mem[(64 * ('cd', 4).length) + 224 len 32 * mem[(32 * ('cd', 4).length) + 128]] = mem[(32 * ('cd', 4).length) + 160 len 32 * mem[(32 * ('cd', 4).length) + 128]]
    return Array(len=mem[(32 * ('cd', 4).length) + 128], data=mem[(64 * ('cd', 4).length) + 224 len 32 * mem[(32 * ('cd', 4).length) + 128]]), 
}

function balanceOf(address arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require (32 * arg2.length) + 128 >= 96 and (32 * arg2.length) + 128 <= test266151307()
    mem[96] = arg2.length
    require calldata.size >= arg2 + (32 * arg2.length) + 36
    idx = 0
    s = arg2 + 36
    t = 128
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        idx = 0
        while idx < arg2.length:
            require idx < mem[96]
            _59 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(arg1)
            staticcall arg1.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_59)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _69 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require idx < mem[(32 * arg2.length) + 128]
            mem[(32 * idx) + (32 * arg2.length) + 160] = mem[_69]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _64 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len 32 * _64] = mem[(32 * arg2.length) + 160 len 32 * _64]
        return 32, mem[mem[64] + 32 len (32 * _64) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    idx = 0
    while idx < arg2.length:
        require idx < mem[96]
        _62 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args address(_62)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _71 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require idx < mem[(32 * arg2.length) + 128]
        mem[(32 * idx) + (32 * arg2.length) + 160] = mem[_71]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _66 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len 32 * _66] = mem[(32 * arg2.length) + 160 len 32 * _66]
    return 32, mem[mem[64] + 32 len (32 * _66) + 32]
}

function sub_dd5e5fbe(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 160 >= 128 and (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160 <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = (32 * ('cd', 4).length) + 160
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 68).length
    require ext_code.size(address(cd[36]))
    call address(cd[36]).deposit() with:
       value msg.value wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 224
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] = 7
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 192] = 'SUCCESS' << 200
    idx = 0
    s = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160
    while idx < ('cd', 68).length:
        _408 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_408 + 32 len 64] = call.data[calldata.size len 64]
        require 0 < mem[_408]
        mem[_408 + 32] = address(cd[36])
        require idx < mem[(32 * ('cd', 4).length) + 128]
        require 1 < mem[_408]
        mem[_408 + 64] = mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20]
        require idx < mem[96]
        _415 = mem[(32 * idx) + 128]
        mem[_408 + 100] = mem[(32 * idx) + 140 len 20]
        mem[_408 + 132] = msg.value / ('cd', 68).length
        require ext_code.size(address(cd[36]))
        call address(cd[36]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(_415), msg.value / ('cd', 68).length
        mem[_408 + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[64] = _408 + ceil32(return_data.size) + 96
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require idx < mem[96]
        _424 = mem[(32 * idx) + 128]
        mem[_408 + ceil32(return_data.size) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
        mem[_408 + ceil32(return_data.size) + 100] = msg.value / ('cd', 68).length / 10
        mem[_408 + ceil32(return_data.size) + 132] = 0
        mem[_408 + ceil32(return_data.size) + 164] = 160
        mem[_408 + ceil32(return_data.size) + 260] = mem[_408]
        t = 0
        u = _408 + 32
        v = _408 + ceil32(return_data.size) + 292
        while t < mem[_408]:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        mem[_408 + ceil32(return_data.size) + 196] = this.address
        mem[_408 + ceil32(return_data.size) + 228] = block.timestamp + 1
        require ext_code.size(address(_424))
        call address(_424).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _408 + ceil32(return_data.size) + (32 * mem[_408]) + -mem[64] + 288]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _540 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _542 = mem[_540]
        require mem[_540] <= test266151307()
        require _540 + mem[_540] + 31 < _540 + return_data.size
        _543 = mem[_540 + mem[_540]]
        require mem[_540 + mem[_540]] <= test266151307()
        require (32 * mem[_540 + mem[_540]]) + 32 >= 0 and _540 + ceil32(return_data.size) + (32 * mem[_540 + mem[_540]]) + 32 <= test266151307()
        mem[64] = _540 + ceil32(return_data.size) + (32 * mem[_540 + mem[_540]]) + 32
        mem[_540 + ceil32(return_data.size)] = _543
        require return_data.size >= _542 + (32 * _543) + 32
        u = _540 + _542 + 32
        v = _540 + ceil32(return_data.size) + 32
        t = 0
        while t < _543:
            mem[v] = mem[u]
            u = u + 32
            v = v + 32
            t = t + 1
            continue 
        require _543 - 1 < _543
        _651 = mem[(32 * _543 - 1) + _540 + ceil32(return_data.size) + 32]
        require mem[_408] - 1 < mem[_408]
        _654 = mem[(32 * mem[_408] - 1) + _408 + 32]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_654))
        staticcall address(_654).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _657 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _658 = mem[_657]
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = _658
        require ext_code.size(address(_654))
        call address(_654).0xa9059cbb with:
             gas gas_remaining wei
            args msg.sender, _658
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _661 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_661] == bool(mem[_661])
        require _651
        require idx < mem[96]
        _664 = mem[(32 * idx) + 128]
        mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 9 * msg.value / ('cd', 68).length / 10
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _666 = mem[_408]
        mem[mem[64] + 164] = mem[_408]
        t = 0
        u = _408 + 32
        v = mem[64] + 196
        while t < _666:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        mem[mem[64] + 100] = this.address
        mem[mem[64] + 132] = block.timestamp + 1
        require ext_code.size(address(_664))
        call address(_664).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
             gas gas_remaining wei
            args 9 * msg.value / ('cd', 68).length / 10, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _666) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _753 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _754 = mem[_753]
        require mem[_753] <= test266151307()
        require _753 + mem[_753] + 31 < _753 + return_data.size
        _755 = mem[_753 + mem[_753]]
        require mem[_753 + mem[_753]] <= test266151307()
        require (32 * mem[_753 + mem[_753]]) + 32 >= 0 and _753 + ceil32(return_data.size) + (32 * mem[_753 + mem[_753]]) + 32 <= test266151307()
        mem[64] = _753 + ceil32(return_data.size) + (32 * mem[_753 + mem[_753]]) + 32
        mem[_753 + ceil32(return_data.size)] = _755
        require return_data.size >= _754 + (32 * _755) + 32
        u = _753 + _754 + 32
        v = _753 + ceil32(return_data.size) + 32
        t = 0
        while t < _755:
            mem[v] = mem[u]
            u = u + 32
            v = v + 32
            t = t + 1
            continue 
        require _755 - 1 < _755
        _838 = mem[(32 * _755 - 1) + _753 + ceil32(return_data.size) + 32]
        require mem[_408] - 1 < mem[_408]
        _841 = mem[(32 * mem[_408] - 1) + _408 + 32]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_841))
        staticcall address(_841).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _844 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _845 = mem[_844]
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = _845
        require ext_code.size(address(_841))
        call address(_841).0xa9059cbb with:
             gas gas_remaining wei
            args msg.sender, _845
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _848 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_848] == bool(mem[_848])
        require _838
        if uint16(10000 * _658 / _651) != uint16(10000 * _845 / _838):
            _851 = mem[64]
            mem[64] = mem[64] + 64
            mem[_851] = 1
            mem[_851 + 32] = 0x2c00000000000000000000000000000000000000000000000000000000000000
            _853 = mem[64]
            mem[mem[64] + 32 len 100] = call.data[calldata.size len 100]
            mem[mem[64] + 160] = 0
            mem[64] = mem[64] + 192
            _860 = mem[_853 + 160]
            _862 = mem[s]
            require mem[s] + mem[_853 + 160] + 1 <= test266151307()
            mem[_853 + 192] = mem[s] + mem[_853 + 160] + 1
            mem[64] = _853 + floor32(_862 + mem[_853 + 160] + 32) + 224
            if not _862 + _860 + 1:
                _913 = mem[s]
                t = 0
                u = 0
                while t < _913:
                    require t < mem[s]
                    require u < mem[_853 + 192]
                    mem[u + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _913 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                _1001 = mem[_851]
                s = 0
                t = _913
                while s < _1001:
                    require s < mem[_851]
                    require t < mem[_853 + 192]
                    mem[t + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1001 = mem[_851]
                    s = s + 1
                    t = t + 1
                    continue 
                s = 0
                t = _913 + _1001
                while s < mem[_853 + 160]:
                    require s < mem[_853 + 160]
                    require t < mem[_853 + 192]
                    mem[t + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    s = s + 1
                    t = t + 1
                    continue 
            else:
                mem[_853 + 224 len _862 + _860 + 1] = call.data[calldata.size len _862 + _860 + 1]
                _914 = mem[s]
                t = 0
                u = 0
                while t < _914:
                    require t < mem[s]
                    require u < mem[_853 + 192]
                    mem[u + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _914 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                _1002 = mem[_851]
                s = 0
                t = _914
                while s < _1002:
                    require s < mem[_851]
                    require t < mem[_853 + 192]
                    mem[t + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1002 = mem[_851]
                    s = s + 1
                    t = t + 1
                    continue 
                s = 0
                t = _914 + _1002
                while s < mem[_853 + 160]:
                    require s < mem[_853 + 160]
                    require t < mem[_853 + 192]
                    mem[t + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    s = s + 1
                    t = t + 1
                    continue 
            idx = idx + 1
            s = _853 + 192
            continue 
        _850 = mem[64]
        mem[64] = mem[64] + 64
        mem[_850] = 1
        mem[_850 + 32] = 0x2c00000000000000000000000000000000000000000000000000000000000000
        _852 = mem[64]
        mem[mem[64]] = 100
        mem[64] = mem[64] + 160
        mem[_852 + 32 len 100] = call.data[calldata.size len 100]
        u = 0
        t = uint16(10000 * _658 / _651)
        while t:
            require u < mem[_852]
            mem[u + _852 + 32 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 2), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 2), 10))), 0) - 256
            u = u + 1
            t = t / 10
            continue 
        require u <= test266151307()
        _918 = mem[64]
        mem[mem[64]] = u
        mem[64] = mem[64] + ceil32(u) + 32
        if not u:
            t = 0
            while t < u:
                require u + -t - 1 < mem[_852]
                require t < mem[_918]
                mem[t + _918 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                t = t + 1
                continue 
            _1017 = mem[_918]
            _1018 = mem[_850]
            _1019 = mem[s]
            require mem[_850] + mem[s] + mem[_918] <= test266151307()
            _1025 = mem[64]
            mem[mem[64]] = mem[_850] + mem[s] + mem[_918]
            mem[64] = mem[64] + floor32(_1018 + _1019 + _1017 + 31) + 32
            if not _1018 + _1019 + _1017:
                _1079 = mem[s]
                t = 0
                u = 0
                while t < _1079:
                    require t < mem[s]
                    require u < mem[_1025]
                    mem[u + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1079 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                _1135 = mem[_850]
                s = 0
                t = _1079
                while s < _1135:
                    require s < mem[_850]
                    require t < mem[_1025]
                    mem[t + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1135 = mem[_850]
                    s = s + 1
                    t = t + 1
                    continue 
                _1167 = mem[_918]
                s = 0
                t = _1079 + _1135
                while s < _1167:
                    require s < mem[_918]
                    require t < mem[_1025]
                    mem[t + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1167 = mem[_918]
                    s = s + 1
                    t = t + 1
                    continue 
            else:
                mem[_1025 + 32 len _1018 + _1019 + _1017] = call.data[calldata.size len _1018 + _1019 + _1017]
                _1080 = mem[s]
                t = 0
                u = 0
                while t < _1080:
                    require t < mem[s]
                    require u < mem[_1025]
                    mem[u + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1080 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                _1136 = mem[_850]
                s = 0
                t = _1080
                while s < _1136:
                    require s < mem[_850]
                    require t < mem[_1025]
                    mem[t + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1136 = mem[_850]
                    s = s + 1
                    t = t + 1
                    continue 
                _1168 = mem[_918]
                s = 0
                t = _1080 + _1136
                while s < _1168:
                    require s < mem[_918]
                    require t < mem[_1025]
                    mem[t + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1168 = mem[_918]
                    s = s + 1
                    t = t + 1
                    continue 
            idx = idx + 1
            s = _1025
            continue 
        mem[_918 + 32 len u] = call.data[calldata.size len u]
        t = 0
        while t < u:
            require u + -t - 1 < mem[_852]
            require t < mem[_918]
            mem[t + _918 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
            t = t + 1
            continue 
        _1020 = mem[_918]
        _1021 = mem[_850]
        _1022 = mem[s]
        require mem[_850] + mem[s] + mem[_918] <= test266151307()
        _1026 = mem[64]
        mem[mem[64]] = mem[_850] + mem[s] + mem[_918]
        mem[64] = mem[64] + floor32(_1021 + _1022 + _1020 + 31) + 32
        if not _1021 + _1022 + _1020:
            _1081 = mem[s]
            t = 0
            u = 0
            while t < _1081:
                require t < mem[s]
                require u < mem[_1026]
                mem[u + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1081 = mem[s]
                t = t + 1
                u = u + 1
                continue 
            _1137 = mem[_850]
            s = 0
            t = _1081
            while s < _1137:
                require s < mem[_850]
                require t < mem[_1026]
                mem[t + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1137 = mem[_850]
                s = s + 1
                t = t + 1
                continue 
            _1169 = mem[_918]
            s = 0
            t = _1081 + _1137
            while s < _1169:
                require s < mem[_918]
                require t < mem[_1026]
                mem[t + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1169 = mem[_918]
                s = s + 1
                t = t + 1
                continue 
        else:
            mem[_1026 + 32 len _1021 + _1022 + _1020] = call.data[calldata.size len _1021 + _1022 + _1020]
            _1082 = mem[s]
            t = 0
            u = 0
            while t < _1082:
                require t < mem[s]
                require u < mem[_1026]
                mem[u + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1082 = mem[s]
                t = t + 1
                u = u + 1
                continue 
            _1138 = mem[_850]
            s = 0
            t = _1082
            while s < _1138:
                require s < mem[_850]
                require t < mem[_1026]
                mem[t + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1138 = mem[_850]
                s = s + 1
                t = t + 1
                continue 
            _1170 = mem[_918]
            s = 0
            t = _1082 + _1138
            while s < _1170:
                require s < mem[_918]
                require t < mem[_1026]
                mem[t + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1170 = mem[_918]
                s = s + 1
                t = t + 1
                continue 
        idx = idx + 1
        s = _1026
        continue 
    _407 = mem[64]
    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
    mem[mem[64] + 4] = 32
    _411 = mem[s]
    mem[mem[64] + 36] = mem[s]
    mem[mem[64] + 68 len ceil32(_411)] = mem[s + 32 len ceil32(_411)]
    if ceil32(_411) <= _411:
        revert with 0, 32, mem[mem[64] + 36 len ceil32(_411) + 32]
    mem[mem[64] + _411 + 68] = 0
    revert with memory
      from mem[64]
       len ceil32(_411) + _407 + -mem[64] + 68
}

function getReserves(address[] arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    require arg1.length <= test266151307()
    mem[96] = arg1.length
    if not arg1.length:
        require arg1.length <= test266151307()
        mem[(32 * arg1.length) + 128] = arg1.length
        if not arg1.length:
            require arg1.length <= test266151307()
            mem[(64 * arg1.length) + 160] = arg1.length
            mem[64] = (98 * arg1.length) + 192
            if not arg1.length:
                idx = 0
                while arg1.length > uint32(idx):
                    require uint32(idx) < arg1.length
                    require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _193 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_193] == mem[_193 + 18 len 14]
                    _232 = mem[_193 + 32]
                    require mem[_193 + 32] == mem[_193 + 50 len 14]
                    _248 = mem[_193 + 64]
                    require mem[_193 + 64] == mem[_193 + 92 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = mem[_193 + 18 len 14]
                    require uint32(idx) < mem[(32 * arg1.length) + 128]
                    mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _232)
                    require uint32(idx) < mem[(64 * arg1.length) + 160]
                    mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_248)
                    idx = idx + 1
                    continue 
                _144 = mem[64]
                mem[mem[64]] = 96
                _152 = mem[96]
                mem[mem[64] + 96] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 128
                while idx < _152:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _152) + 128
                _288 = mem[(32 * arg1.length) + 128]
                mem[_144 + (32 * _152) + 128] = mem[(32 * arg1.length) + 128]
                idx = 0
                s = (32 * arg1.length) + 160
                t = _144 + (32 * _152) + 160
                while idx < _288:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_144 + 64] = (32 * _152) + (32 * _288) + 160
                _336 = mem[(64 * arg1.length) + 160]
                mem[_144 + (32 * _152) + (32 * _288) + 160] = mem[(64 * arg1.length) + 160]
                idx = 0
                s = (64 * arg1.length) + 192
                t = _144 + (32 * _152) + (32 * _288) + 192
                while idx < _336:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _144 + (32 * _152) + (32 * _288) + (32 * _336) + -mem[64] + 192
            mem[(64 * arg1.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
            idx = 0
            while arg1.length > uint32(idx):
                require uint32(idx) < arg1.length
                require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _195 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_195] == mem[_195 + 18 len 14]
                _233 = mem[_195 + 32]
                require mem[_195 + 32] == mem[_195 + 50 len 14]
                _249 = mem[_195 + 64]
                require mem[_195 + 64] == mem[_195 + 92 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = mem[_195 + 18 len 14]
                require uint32(idx) < mem[(32 * arg1.length) + 128]
                mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _233)
                require uint32(idx) < mem[(64 * arg1.length) + 160]
                mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_249)
                idx = idx + 1
                continue 
            _145 = mem[64]
            mem[mem[64]] = 96
            _153 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _153:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _153) + 128
            _289 = mem[(32 * arg1.length) + 128]
            mem[_145 + (32 * _153) + 128] = mem[(32 * arg1.length) + 128]
            idx = 0
            s = (32 * arg1.length) + 160
            t = _145 + (32 * _153) + 160
            while idx < _289:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_145 + 64] = (32 * _153) + (32 * _289) + 160
            _337 = mem[(64 * arg1.length) + 160]
            mem[_145 + (32 * _153) + (32 * _289) + 160] = mem[(64 * arg1.length) + 160]
            idx = 0
            s = (64 * arg1.length) + 192
            t = _145 + (32 * _153) + (32 * _289) + 192
            while idx < _337:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _145 + (32 * _153) + (32 * _289) + (32 * _337) + -mem[64] + 192
        mem[(32 * arg1.length) + 160 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        require arg1.length <= test266151307()
        mem[(64 * arg1.length) + 160] = arg1.length
        mem[64] = (98 * arg1.length) + 192
        if not arg1.length:
            idx = 0
            while arg1.length > uint32(idx):
                require uint32(idx) < arg1.length
                require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _197 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_197] == mem[_197 + 18 len 14]
                _234 = mem[_197 + 32]
                require mem[_197 + 32] == mem[_197 + 50 len 14]
                _250 = mem[_197 + 64]
                require mem[_197 + 64] == mem[_197 + 92 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = mem[_197 + 18 len 14]
                require uint32(idx) < mem[(32 * arg1.length) + 128]
                mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _234)
                require uint32(idx) < mem[(64 * arg1.length) + 160]
                mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_250)
                idx = idx + 1
                continue 
            _146 = mem[64]
            mem[mem[64]] = 96
            _154 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _154:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _154) + 128
            _290 = mem[(32 * arg1.length) + 128]
            mem[_146 + (32 * _154) + 128] = mem[(32 * arg1.length) + 128]
            idx = 0
            s = (32 * arg1.length) + 160
            t = _146 + (32 * _154) + 160
            while idx < _290:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_146 + 64] = (32 * _154) + (32 * _290) + 160
            _338 = mem[(64 * arg1.length) + 160]
            mem[_146 + (32 * _154) + (32 * _290) + 160] = mem[(64 * arg1.length) + 160]
            idx = 0
            s = (64 * arg1.length) + 192
            t = _146 + (32 * _154) + (32 * _290) + 192
            while idx < _338:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _146 + (32 * _154) + (32 * _290) + (32 * _338) + -mem[64] + 192
        mem[(64 * arg1.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        idx = 0
        while arg1.length > uint32(idx):
            require uint32(idx) < arg1.length
            require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _199 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_199] == mem[_199 + 18 len 14]
            _235 = mem[_199 + 32]
            require mem[_199 + 32] == mem[_199 + 50 len 14]
            _251 = mem[_199 + 64]
            require mem[_199 + 64] == mem[_199 + 92 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = mem[_199 + 18 len 14]
            require uint32(idx) < mem[(32 * arg1.length) + 128]
            mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _235)
            require uint32(idx) < mem[(64 * arg1.length) + 160]
            mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_251)
            idx = idx + 1
            continue 
        _147 = mem[64]
        mem[mem[64]] = 96
        _155 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _155:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_147 + 32] = (32 * _155) + 128
        _291 = mem[(32 * arg1.length) + 128]
        mem[_147 + (32 * _155) + 128] = mem[(32 * arg1.length) + 128]
        idx = 0
        s = (32 * arg1.length) + 160
        t = _147 + (32 * _155) + 160
        while idx < _291:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_147 + 64] = (32 * _155) + (32 * _291) + 160
        _339 = mem[(64 * arg1.length) + 160]
        mem[_147 + (32 * _155) + (32 * _291) + 160] = mem[(64 * arg1.length) + 160]
        idx = 0
        s = (64 * arg1.length) + 192
        t = _147 + (32 * _155) + (32 * _291) + 192
        while idx < _339:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _147 + (32 * _155) + (32 * _291) + (32 * _339) + -mem[64] + 192
    mem[128 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    require arg1.length <= test266151307()
    mem[(32 * arg1.length) + 128] = arg1.length
    if not arg1.length:
        require arg1.length <= test266151307()
        mem[(64 * arg1.length) + 160] = arg1.length
        mem[64] = (98 * arg1.length) + 192
        if not arg1.length:
            idx = 0
            while arg1.length > uint32(idx):
                require uint32(idx) < arg1.length
                require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _201 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_201] == mem[_201 + 18 len 14]
                _236 = mem[_201 + 32]
                require mem[_201 + 32] == mem[_201 + 50 len 14]
                _252 = mem[_201 + 64]
                require mem[_201 + 64] == mem[_201 + 92 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = mem[_201 + 18 len 14]
                require uint32(idx) < mem[(32 * arg1.length) + 128]
                mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _236)
                require uint32(idx) < mem[(64 * arg1.length) + 160]
                mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_252)
                idx = idx + 1
                continue 
            _148 = mem[64]
            mem[mem[64]] = 96
            _156 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _156:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_148 + 32] = (32 * _156) + 128
            _292 = mem[(32 * arg1.length) + 128]
            mem[_148 + (32 * _156) + 128] = mem[(32 * arg1.length) + 128]
            idx = 0
            s = (32 * arg1.length) + 160
            t = _148 + (32 * _156) + 160
            while idx < _292:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_148 + 64] = (32 * _156) + (32 * _292) + 160
            _340 = mem[(64 * arg1.length) + 160]
            mem[_148 + (32 * _156) + (32 * _292) + 160] = mem[(64 * arg1.length) + 160]
            idx = 0
            s = (64 * arg1.length) + 192
            t = _148 + (32 * _156) + (32 * _292) + 192
            while idx < _340:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _148 + (32 * _156) + (32 * _292) + (32 * _340) + -mem[64] + 192
        mem[(64 * arg1.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        idx = 0
        while arg1.length > uint32(idx):
            require uint32(idx) < arg1.length
            require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _203 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_203] == mem[_203 + 18 len 14]
            _237 = mem[_203 + 32]
            require mem[_203 + 32] == mem[_203 + 50 len 14]
            _253 = mem[_203 + 64]
            require mem[_203 + 64] == mem[_203 + 92 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = mem[_203 + 18 len 14]
            require uint32(idx) < mem[(32 * arg1.length) + 128]
            mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _237)
            require uint32(idx) < mem[(64 * arg1.length) + 160]
            mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_253)
            idx = idx + 1
            continue 
        _149 = mem[64]
        mem[mem[64]] = 96
        _157 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _157:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _157) + 128
        _293 = mem[(32 * arg1.length) + 128]
        mem[_149 + (32 * _157) + 128] = mem[(32 * arg1.length) + 128]
        idx = 0
        s = (32 * arg1.length) + 160
        t = _149 + (32 * _157) + 160
        while idx < _293:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_149 + 64] = (32 * _157) + (32 * _293) + 160
        _341 = mem[(64 * arg1.length) + 160]
        mem[_149 + (32 * _157) + (32 * _293) + 160] = mem[(64 * arg1.length) + 160]
        idx = 0
        s = (64 * arg1.length) + 192
        t = _149 + (32 * _157) + (32 * _293) + 192
        while idx < _341:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _149 + (32 * _157) + (32 * _293) + (32 * _341) + -mem[64] + 192
    mem[(32 * arg1.length) + 160 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    require arg1.length <= test266151307()
    mem[(64 * arg1.length) + 160] = arg1.length
    mem[64] = (98 * arg1.length) + 192
    if not arg1.length:
        idx = 0
        while arg1.length > uint32(idx):
            require uint32(idx) < arg1.length
            require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _205 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_205] == mem[_205 + 18 len 14]
            _238 = mem[_205 + 32]
            require mem[_205 + 32] == mem[_205 + 50 len 14]
            _254 = mem[_205 + 64]
            require mem[_205 + 64] == mem[_205 + 92 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = mem[_205 + 18 len 14]
            require uint32(idx) < mem[(32 * arg1.length) + 128]
            mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _238)
            require uint32(idx) < mem[(64 * arg1.length) + 160]
            mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_254)
            idx = idx + 1
            continue 
        _150 = mem[64]
        mem[mem[64]] = 96
        _158 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _158:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_150 + 32] = (32 * _158) + 128
        _294 = mem[(32 * arg1.length) + 128]
        mem[_150 + (32 * _158) + 128] = mem[(32 * arg1.length) + 128]
        idx = 0
        s = (32 * arg1.length) + 160
        t = _150 + (32 * _158) + 160
        while idx < _294:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_150 + 64] = (32 * _158) + (32 * _294) + 160
        _342 = mem[(64 * arg1.length) + 160]
        mem[_150 + (32 * _158) + (32 * _294) + 160] = mem[(64 * arg1.length) + 160]
        idx = 0
        s = (64 * arg1.length) + 192
        t = _150 + (32 * _158) + (32 * _294) + 192
        while idx < _342:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _150 + (32 * _158) + (32 * _294) + (32 * _342) + -mem[64] + 192
    mem[(64 * arg1.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    idx = 0
    while arg1.length > uint32(idx):
        require uint32(idx) < arg1.length
        require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
        require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
        staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _207 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        require mem[_207] == mem[_207 + 18 len 14]
        _239 = mem[_207 + 32]
        require mem[_207 + 32] == mem[_207 + 50 len 14]
        _255 = mem[_207 + 64]
        require mem[_207 + 64] == mem[_207 + 92 len 4]
        require uint32(idx) < mem[96]
        mem[(32 * uint32(idx)) + 128] = mem[_207 + 18 len 14]
        require uint32(idx) < mem[(32 * arg1.length) + 128]
        mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _239)
        require uint32(idx) < mem[(64 * arg1.length) + 160]
        mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_255)
        idx = idx + 1
        continue 
    _151 = mem[64]
    mem[mem[64]] = 96
    _159 = mem[96]
    mem[mem[64] + 96] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 128
    while idx < _159:
        mem[t] = mem[s + 18 len 14]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_151 + 32] = (32 * _159) + 128
    _295 = mem[(32 * arg1.length) + 128]
    mem[_151 + (32 * _159) + 128] = mem[(32 * arg1.length) + 128]
    idx = 0
    s = (32 * arg1.length) + 160
    t = _151 + (32 * _159) + 160
    while idx < _295:
        mem[t] = mem[s + 18 len 14]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_151 + 64] = (32 * _159) + (32 * _295) + 160
    _343 = mem[(64 * arg1.length) + 160]
    mem[_151 + (32 * _159) + (32 * _295) + 160] = mem[(64 * arg1.length) + 160]
    idx = 0
    s = (64 * arg1.length) + 192
    t = _151 + (32 * _159) + (32 * _295) + 192
    while idx < _343:
        mem[t] = mem[s + 28 len 4]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _151 + (32 * _159) + (32 * _295) + (32 * _343) + -mem[64] + 192
}

function sub_8f6c7a3c(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg3 - arg2 <= test266151307()
    mem[96] = arg3 - arg2
    if not arg3 - arg2:
        require arg3 - arg2 <= test266151307()
        mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
        if not arg3 - arg2:
            require arg3 - arg2 <= test266151307()
            mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + 192
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _224 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _240 = mem[_224]
                    require mem[_224] == mem[_224 + 12 len 20]
                    require s < mem[96]
                    mem[(32 * s) + 128] = mem[_224 + 12 len 20]
                    require ext_code.size(address(_240))
                    staticcall address(_240).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _297 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_297] == mem[_297 + 12 len 20]
                    require s < mem[(32 * arg3 - arg2) + 128]
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_297 + 12 len 20]
                    require ext_code.size(address(_240))
                    staticcall address(_240).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _352 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_352] == mem[_352 + 12 len 20]
                    require s < mem[(64 * arg3 - arg2) + 160]
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_352 + 12 len 20]
                    idx = idx + 1
                    s = s + 1
                    continue 
                _200 = mem[64]
                mem[mem[64]] = 96
                _216 = mem[96]
                mem[mem[64] + 96] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 128
                while idx < _216:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_200 + 32] = (32 * _216) + 128
                _384 = mem[(32 * arg3 - arg2) + 128]
                mem[_200 + (32 * _216) + 128] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = _200 + (32 * _216) + 160
                while idx < _384:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_200 + 64] = (32 * _216) + (32 * _384) + 160
                _432 = mem[(64 * arg3 - arg2) + 160]
                mem[_200 + (32 * _216) + (32 * _384) + 160] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _200 + (32 * _216) + (32 * _384) + 192
                while idx < _432:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _200 + (32 * _216) + (32 * _384) + (32 * _432) + -mem[64] + 192
            mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _225 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _241 = mem[_225]
                require mem[_225] == mem[_225 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_225 + 12 len 20]
                require ext_code.size(address(_241))
                staticcall address(_241).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _299 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_299] == mem[_299 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_299 + 12 len 20]
                require ext_code.size(address(_241))
                staticcall address(_241).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _353 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_353] == mem[_353 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_353 + 12 len 20]
                idx = idx + 1
                s = s + 1
                continue 
            _201 = mem[64]
            mem[mem[64]] = 96
            _217 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _217:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_201 + 32] = (32 * _217) + 128
            _385 = mem[(32 * arg3 - arg2) + 128]
            mem[_201 + (32 * _217) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _201 + (32 * _217) + 160
            while idx < _385:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_201 + 64] = (32 * _217) + (32 * _385) + 160
            _433 = mem[(64 * arg3 - arg2) + 160]
            mem[_201 + (32 * _217) + (32 * _385) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _201 + (32 * _217) + (32 * _385) + 192
            while idx < _433:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _201 + (32 * _217) + (32 * _385) + (32 * _433) + -mem[64] + 192
        mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        require arg3 - arg2 <= test266151307()
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + 192
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _226 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _242 = mem[_226]
                require mem[_226] == mem[_226 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_226 + 12 len 20]
                require ext_code.size(address(_242))
                staticcall address(_242).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _301 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_301] == mem[_301 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_301 + 12 len 20]
                require ext_code.size(address(_242))
                staticcall address(_242).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _354 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_354] == mem[_354 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_354 + 12 len 20]
                idx = idx + 1
                s = s + 1
                continue 
            _202 = mem[64]
            mem[mem[64]] = 96
            _218 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _218:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_202 + 32] = (32 * _218) + 128
            _386 = mem[(32 * arg3 - arg2) + 128]
            mem[_202 + (32 * _218) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _202 + (32 * _218) + 160
            while idx < _386:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_202 + 64] = (32 * _218) + (32 * _386) + 160
            _434 = mem[(64 * arg3 - arg2) + 160]
            mem[_202 + (32 * _218) + (32 * _386) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _202 + (32 * _218) + (32 * _386) + 192
            while idx < _434:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _202 + (32 * _218) + (32 * _386) + (32 * _434) + -mem[64] + 192
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _227 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _243 = mem[_227]
            require mem[_227] == mem[_227 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_227 + 12 len 20]
            require ext_code.size(address(_243))
            staticcall address(_243).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _303 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_303] == mem[_303 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_303 + 12 len 20]
            require ext_code.size(address(_243))
            staticcall address(_243).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _355 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_355] == mem[_355 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_355 + 12 len 20]
            idx = idx + 1
            s = s + 1
            continue 
        _203 = mem[64]
        mem[mem[64]] = 96
        _219 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _219:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _219) + 128
        _387 = mem[(32 * arg3 - arg2) + 128]
        mem[_203 + (32 * _219) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _203 + (32 * _219) + 160
        while idx < _387:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_203 + 64] = (32 * _219) + (32 * _387) + 160
        _435 = mem[(64 * arg3 - arg2) + 160]
        mem[_203 + (32 * _219) + (32 * _387) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _203 + (32 * _219) + (32 * _387) + 192
        while idx < _435:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _203 + (32 * _219) + (32 * _387) + (32 * _435) + -mem[64] + 192
    mem[128 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    require arg3 - arg2 <= test266151307()
    mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
    if not arg3 - arg2:
        require arg3 - arg2 <= test266151307()
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + 192
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _228 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _244 = mem[_228]
                require mem[_228] == mem[_228 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_228 + 12 len 20]
                require ext_code.size(address(_244))
                staticcall address(_244).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _305 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_305] == mem[_305 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_305 + 12 len 20]
                require ext_code.size(address(_244))
                staticcall address(_244).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _356 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_356] == mem[_356 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_356 + 12 len 20]
                idx = idx + 1
                s = s + 1
                continue 
            _204 = mem[64]
            mem[mem[64]] = 96
            _220 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _220:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_204 + 32] = (32 * _220) + 128
            _388 = mem[(32 * arg3 - arg2) + 128]
            mem[_204 + (32 * _220) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _204 + (32 * _220) + 160
            while idx < _388:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_204 + 64] = (32 * _220) + (32 * _388) + 160
            _436 = mem[(64 * arg3 - arg2) + 160]
            mem[_204 + (32 * _220) + (32 * _388) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _204 + (32 * _220) + (32 * _388) + 192
            while idx < _436:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _204 + (32 * _220) + (32 * _388) + (32 * _436) + -mem[64] + 192
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _229 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _245 = mem[_229]
            require mem[_229] == mem[_229 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_229 + 12 len 20]
            require ext_code.size(address(_245))
            staticcall address(_245).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _307 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_307] == mem[_307 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_307 + 12 len 20]
            require ext_code.size(address(_245))
            staticcall address(_245).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _357 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_357] == mem[_357 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_357 + 12 len 20]
            idx = idx + 1
            s = s + 1
            continue 
        _205 = mem[64]
        mem[mem[64]] = 96
        _221 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _221:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_205 + 32] = (32 * _221) + 128
        _389 = mem[(32 * arg3 - arg2) + 128]
        mem[_205 + (32 * _221) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _205 + (32 * _221) + 160
        while idx < _389:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_205 + 64] = (32 * _221) + (32 * _389) + 160
        _437 = mem[(64 * arg3 - arg2) + 160]
        mem[_205 + (32 * _221) + (32 * _389) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _205 + (32 * _221) + (32 * _389) + 192
        while idx < _437:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _205 + (32 * _221) + (32 * _389) + (32 * _437) + -mem[64] + 192
    mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    require arg3 - arg2 <= test266151307()
    mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
    mem[64] = (98 * arg3) + (-98 * arg2) + 192
    if not arg3 - arg2:
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _230 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _246 = mem[_230]
            require mem[_230] == mem[_230 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_230 + 12 len 20]
            require ext_code.size(address(_246))
            staticcall address(_246).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _309 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_309] == mem[_309 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_309 + 12 len 20]
            require ext_code.size(address(_246))
            staticcall address(_246).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _358 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_358] == mem[_358 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_358 + 12 len 20]
            idx = idx + 1
            s = s + 1
            continue 
        _206 = mem[64]
        mem[mem[64]] = 96
        _222 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _222:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _222) + 128
        _390 = mem[(32 * arg3 - arg2) + 128]
        mem[_206 + (32 * _222) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _206 + (32 * _222) + 160
        while idx < _390:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_206 + 64] = (32 * _222) + (32 * _390) + 160
        _438 = mem[(64 * arg3 - arg2) + 160]
        mem[_206 + (32 * _222) + (32 * _390) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _206 + (32 * _222) + (32 * _390) + 192
        while idx < _438:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _206 + (32 * _222) + (32 * _390) + (32 * _438) + -mem[64] + 192
    mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    idx = arg2
    s = 0
    while idx < arg3:
        mem[mem[64] + 4] = idx
        require ext_code.size(address(arg1))
        staticcall address(arg1).allPairs(uint256 arg1) with:
                gas gas_remaining wei
               args idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _231 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _247 = mem[_231]
        require mem[_231] == mem[_231 + 12 len 20]
        require s < mem[96]
        mem[(32 * s) + 128] = mem[_231 + 12 len 20]
        require ext_code.size(address(_247))
        staticcall address(_247).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _311 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_311] == mem[_311 + 12 len 20]
        require s < mem[(32 * arg3 - arg2) + 128]
        mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_311 + 12 len 20]
        require ext_code.size(address(_247))
        staticcall address(_247).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _359 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_359] == mem[_359 + 12 len 20]
        require s < mem[(64 * arg3 - arg2) + 160]
        mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_359 + 12 len 20]
        idx = idx + 1
        s = s + 1
        continue 
    _207 = mem[64]
    mem[mem[64]] = 96
    _223 = mem[96]
    mem[mem[64] + 96] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 128
    while idx < _223:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 32] = (32 * _223) + 128
    _391 = mem[(32 * arg3 - arg2) + 128]
    mem[_207 + (32 * _223) + 128] = mem[(32 * arg3 - arg2) + 128]
    idx = 0
    s = (32 * arg3 - arg2) + 160
    t = _207 + (32 * _223) + 160
    while idx < _391:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_207 + 64] = (32 * _223) + (32 * _391) + 160
    _439 = mem[(64 * arg3 - arg2) + 160]
    mem[_207 + (32 * _223) + (32 * _391) + 160] = mem[(64 * arg3 - arg2) + 160]
    idx = 0
    s = (64 * arg3 - arg2) + 192
    t = _207 + (32 * _223) + (32 * _391) + 192
    while idx < _439:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _207 + (32 * _223) + (32 * _391) + (32 * _439) + -mem[64] + 192
}

function sub_510feb4e(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 4).length <= test266151307()
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            mem[64] = (128 * ('cd', 4).length) + 224
            if not ('cd', 4).length:
                idx = 0
                while idx < ('cd', 4).length:
                    require idx < mem[96]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _559 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_559] == mem[_559 + 12 len 20]
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_559 + 12 len 20]
                    require idx < mem[96]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _655 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_655] == mem[_655 + 12 len 20]
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_655 + 12 len 20]
                    require idx < mem[96]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _726 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_726] == mem[_726 + 12 len 20]
                    require idx < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_726 + 12 len 20]
                    idx = idx + 1
                    continue 
                _526 = mem[64]
                mem[mem[64]] = 96
                _558 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + 128
                while idx < _558:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_526 + 32] = (32 * _558) + 128
                _758 = mem[(64 * ('cd', 4).length) + 160]
                mem[_526 + (32 * _558) + 128] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _526 + (32 * _558) + 160
                while idx < _758:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_526 + 64] = (32 * _558) + (32 * _758) + 160
                _806 = mem[(98 * ('cd', 4).length) + 192]
                mem[_526 + (32 * _558) + (32 * _758) + 160] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _526 + (32 * _558) + (32 * _758) + 192
                while idx < _806:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _526 + (32 * _558) + (32 * _758) + (32 * _806) + -mem[64] + 192
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while idx < ('cd', 4).length:
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _561 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_561] == mem[_561 + 12 len 20]
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_561 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _657 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_657] == mem[_657 + 12 len 20]
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_657 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _727 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_727] == mem[_727 + 12 len 20]
                require idx < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_727 + 12 len 20]
                idx = idx + 1
                continue 
            _530 = mem[64]
            mem[mem[64]] = 96
            _560 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + 128
            while idx < _560:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_530 + 32] = (32 * _560) + 128
            _759 = mem[(64 * ('cd', 4).length) + 160]
            mem[_530 + (32 * _560) + 128] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _530 + (32 * _560) + 160
            while idx < _759:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_530 + 64] = (32 * _560) + (32 * _759) + 160
            _807 = mem[(98 * ('cd', 4).length) + 192]
            mem[_530 + (32 * _560) + (32 * _759) + 160] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _530 + (32 * _560) + (32 * _759) + 192
            while idx < _807:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _530 + (32 * _560) + (32 * _759) + (32 * _807) + -mem[64] + 192
        mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        mem[64] = (128 * ('cd', 4).length) + 224
        if not ('cd', 4).length:
            idx = 0
            while idx < ('cd', 4).length:
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _563 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_563] == mem[_563 + 12 len 20]
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_563 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _659 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_659] == mem[_659 + 12 len 20]
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_659 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _728 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_728] == mem[_728 + 12 len 20]
                require idx < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_728 + 12 len 20]
                idx = idx + 1
                continue 
            _534 = mem[64]
            mem[mem[64]] = 96
            _562 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + 128
            while idx < _562:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _562) + 128
            _760 = mem[(64 * ('cd', 4).length) + 160]
            mem[_534 + (32 * _562) + 128] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _534 + (32 * _562) + 160
            while idx < _760:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_534 + 64] = (32 * _562) + (32 * _760) + 160
            _808 = mem[(98 * ('cd', 4).length) + 192]
            mem[_534 + (32 * _562) + (32 * _760) + 160] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _534 + (32 * _562) + (32 * _760) + 192
            while idx < _808:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _534 + (32 * _562) + (32 * _760) + (32 * _808) + -mem[64] + 192
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while idx < ('cd', 4).length:
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _565 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_565] == mem[_565 + 12 len 20]
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_565 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _661 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_661] == mem[_661 + 12 len 20]
            require idx < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_661 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _729 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_729] == mem[_729 + 12 len 20]
            require idx < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_729 + 12 len 20]
            idx = idx + 1
            continue 
        _538 = mem[64]
        mem[mem[64]] = 96
        _564 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + 128
        while idx < _564:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _564) + 128
        _761 = mem[(64 * ('cd', 4).length) + 160]
        mem[_538 + (32 * _564) + 128] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _538 + (32 * _564) + 160
        while idx < _761:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_538 + 64] = (32 * _564) + (32 * _761) + 160
        _809 = mem[(98 * ('cd', 4).length) + 192]
        mem[_538 + (32 * _564) + (32 * _761) + 160] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _538 + (32 * _564) + (32 * _761) + 192
        while idx < _809:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _538 + (32 * _564) + (32 * _761) + (32 * _809) + -mem[64] + 192
    mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        mem[64] = (131 * ('cd', 4).length) + 224
        if not ('cd', 4).length:
            idx = 0
            while idx < ('cd', 4).length:
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _567 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_567] == mem[_567 + 12 len 20]
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_567 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _663 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_663] == mem[_663 + 12 len 20]
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_663 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _730 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_730] == mem[_730 + 12 len 20]
                require idx < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_730 + 12 len 20]
                idx = idx + 1
                continue 
            _542 = mem[64]
            mem[mem[64]] = 96
            _566 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + 128
            while idx < _566:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_542 + 32] = (32 * _566) + 128
            _762 = mem[(64 * ('cd', 4).length) + 160]
            mem[_542 + (32 * _566) + 128] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _542 + (32 * _566) + 160
            while idx < _762:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_542 + 64] = (32 * _566) + (32 * _762) + 160
            _810 = mem[(98 * ('cd', 4).length) + 192]
            mem[_542 + (32 * _566) + (32 * _762) + 160] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _542 + (32 * _566) + (32 * _762) + 192
            while idx < _810:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _542 + (32 * _566) + (32 * _762) + (32 * _810) + -mem[64] + 192
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while idx < ('cd', 4).length:
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _569 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_569] == mem[_569 + 12 len 20]
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_569 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _665 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_665] == mem[_665 + 12 len 20]
            require idx < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_665 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _731 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_731] == mem[_731 + 12 len 20]
            require idx < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_731 + 12 len 20]
            idx = idx + 1
            continue 
        _546 = mem[64]
        mem[mem[64]] = 96
        _568 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + 128
        while idx < _568:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _568) + 128
        _763 = mem[(64 * ('cd', 4).length) + 160]
        mem[_546 + (32 * _568) + 128] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _546 + (32 * _568) + 160
        while idx < _763:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_546 + 64] = (32 * _568) + (32 * _763) + 160
        _811 = mem[(98 * ('cd', 4).length) + 192]
        mem[_546 + (32 * _568) + (32 * _763) + 160] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _546 + (32 * _568) + (32 * _763) + 192
        while idx < _811:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _546 + (32 * _568) + (32 * _763) + (32 * _811) + -mem[64] + 192
    mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
    mem[64] = (131 * ('cd', 4).length) + 224
    if not ('cd', 4).length:
        idx = 0
        while idx < ('cd', 4).length:
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _571 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_571] == mem[_571 + 12 len 20]
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_571 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _667 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_667] == mem[_667 + 12 len 20]
            require idx < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_667 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _732 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_732] == mem[_732 + 12 len 20]
            require idx < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_732 + 12 len 20]
            idx = idx + 1
            continue 
        _550 = mem[64]
        mem[mem[64]] = 96
        _570 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + 128
        while idx < _570:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_550 + 32] = (32 * _570) + 128
        _764 = mem[(64 * ('cd', 4).length) + 160]
        mem[_550 + (32 * _570) + 128] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _550 + (32 * _570) + 160
        while idx < _764:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_550 + 64] = (32 * _570) + (32 * _764) + 160
        _812 = mem[(98 * ('cd', 4).length) + 192]
        mem[_550 + (32 * _570) + (32 * _764) + 160] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _550 + (32 * _570) + (32 * _764) + 192
        while idx < _812:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _550 + (32 * _570) + (32 * _764) + (32 * _812) + -mem[64] + 192
    mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    while idx < ('cd', 4).length:
        require idx < mem[96]
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _573 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_573] == mem[_573 + 12 len 20]
        require idx < mem[(32 * ('cd', 4).length) + 128]
        mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_573 + 12 len 20]
        require idx < mem[96]
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _669 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_669] == mem[_669 + 12 len 20]
        require idx < mem[(64 * ('cd', 4).length) + 160]
        mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_669 + 12 len 20]
        require idx < mem[96]
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _733 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_733] == mem[_733 + 12 len 20]
        require idx < mem[(98 * ('cd', 4).length) + 192]
        mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_733 + 12 len 20]
        idx = idx + 1
        continue 
    _554 = mem[64]
    mem[mem[64]] = 96
    _572 = mem[(32 * ('cd', 4).length) + 128]
    mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
    idx = 0
    s = (32 * ('cd', 4).length) + 160
    t = mem[64] + 128
    while idx < _572:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_554 + 32] = (32 * _572) + 128
    _765 = mem[(64 * ('cd', 4).length) + 160]
    mem[_554 + (32 * _572) + 128] = mem[(64 * ('cd', 4).length) + 160]
    idx = 0
    s = (64 * ('cd', 4).length) + 192
    t = _554 + (32 * _572) + 160
    while idx < _765:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_554 + 64] = (32 * _572) + (32 * _765) + 160
    _813 = mem[(98 * ('cd', 4).length) + 192]
    mem[_554 + (32 * _572) + (32 * _765) + 160] = mem[(98 * ('cd', 4).length) + 192]
    idx = 0
    s = (98 * ('cd', 4).length) + 224
    t = _554 + (32 * _572) + (32 * _765) + 192
    while idx < _813:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _554 + (32 * _572) + (32 * _765) + (32 * _813) + -mem[64] + 192
}

function sub_b4111654(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 4).length <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
    mem[64] = (64 * ('cd', 4).length) + 160
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        mem[64] = (98 * ('cd', 4).length) + 192
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            mem[64] = (131 * ('cd', 4).length) + 224
            if not ('cd', 4).length:
                idx = 0
                while idx < ('cd', 4).length:
                    require idx < mem[96]
                    _867 = mem[(32 * idx) + 128]
                    mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_867))
                    staticcall address(_867).name() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _879 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _886 = mem[_879]
                    require mem[_879] <= test266151307()
                    require _879 + mem[_879] + 31 < _879 + return_data.size
                    _901 = mem[_879 + mem[_879]]
                    require mem[_879 + mem[_879]] <= test266151307()
                    require ceil32(mem[_879 + mem[_879]]) + 32 >= 0 and _879 + ceil32(return_data.size) + ceil32(mem[_879 + mem[_879]]) + 32 <= test266151307()
                    mem[64] = _879 + ceil32(return_data.size) + ceil32(mem[_879 + mem[_879]]) + 32
                    mem[_879 + ceil32(return_data.size)] = _901
                    require _886 + _901 + 32 <= return_data.size
                    s = 0
                    while s < _901:
                        mem[s + _879 + ceil32(return_data.size) + 32] = mem[s + _879 + _886 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_901) <= _901:
                        require idx < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _879 + ceil32(return_data.size)
                        require ext_code.size(address(_867))
                        staticcall address(_867).0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1358 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1358] == mem[_1358 + 31 len 1]
                        require idx < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_1358 + 31 len 1]
                        mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                        require ext_code.size(address(_867))
                        staticcall address(_867).0x95d89b41 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1438 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1455 = mem[_1438]
                        require mem[_1438] <= test266151307()
                        require _1438 + mem[_1438] + 31 < _1438 + return_data.size
                        _1473 = mem[_1438 + mem[_1438]]
                        require mem[_1438 + mem[_1438]] <= test266151307()
                        require ceil32(mem[_1438 + mem[_1438]]) + 32 >= 0 and _1438 + ceil32(return_data.size) + ceil32(mem[_1438 + mem[_1438]]) + 32 <= test266151307()
                        mem[64] = _1438 + ceil32(return_data.size) + ceil32(mem[_1438 + mem[_1438]]) + 32
                        mem[_1438 + ceil32(return_data.size)] = _1473
                        require _1455 + _1473 + 32 <= return_data.size
                        s = 0
                        while s < _1473:
                            mem[s + _1438 + ceil32(return_data.size) + 32] = mem[s + _1438 + _1455 + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1473) > _1473:
                            mem[_1438 + ceil32(return_data.size) + _1473 + 32] = 0
                        require idx < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1438 + ceil32(return_data.size)
                    else:
                        mem[_879 + ceil32(return_data.size) + _901 + 32] = 0
                        require idx < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _879 + ceil32(return_data.size)
                        require ext_code.size(address(_867))
                        staticcall address(_867).0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1370 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1370] == mem[_1370 + 31 len 1]
                        require idx < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_1370 + 31 len 1]
                        mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                        require ext_code.size(address(_867))
                        staticcall address(_867).0x95d89b41 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1450 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1469 = mem[_1450]
                        require mem[_1450] <= test266151307()
                        require _1450 + mem[_1450] + 31 < _1450 + return_data.size
                        _1476 = mem[_1450 + mem[_1450]]
                        require mem[_1450 + mem[_1450]] <= test266151307()
                        require ceil32(mem[_1450 + mem[_1450]]) + 32 >= 0 and _1450 + ceil32(return_data.size) + ceil32(mem[_1450 + mem[_1450]]) + 32 <= test266151307()
                        mem[64] = _1450 + ceil32(return_data.size) + ceil32(mem[_1450 + mem[_1450]]) + 32
                        mem[_1450 + ceil32(return_data.size)] = _1476
                        require _1469 + _1476 + 32 <= return_data.size
                        s = 0
                        while s < _1476:
                            mem[s + _1450 + ceil32(return_data.size) + 32] = mem[s + _1450 + _1469 + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1476) > _1476:
                            mem[_1450 + ceil32(return_data.size) + _1476 + 32] = 0
                        require idx < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1450 + ceil32(return_data.size)
                    idx = idx + 1
                    continue 
                _866 = mem[64]
                mem[mem[64]] = 96
                _878 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * _878) + 128
                u = mem[64] + 128
                while idx < _878:
                    mem[u] = t + -_866 - 128
                    _1290 = mem[s]
                    _1298 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    while v < _1298:
                        mem[v + t + 32] = mem[v + _1290 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_1298) > _1298:
                        mem[t + _1298 + 32] = 0
                    idx = idx + 1
                    s = s + 32
                    t = ceil32(_1298) + t + 32
                    u = u + 32
                    continue 
                mem[_866 + 32] = t - _866
                _1317 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _1317) + 32
                v = t + 32
                while idx < _1317:
                    mem[v] = u + -t - 32
                    _1684 = mem[s]
                    _1702 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    while t < _1702:
                        mem[t + u + 32] = mem[t + _1684 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_1702) > _1702:
                        mem[u + _1702 + 32] = 0
                    idx = idx + 1
                    s = s + 32
                    u = ceil32(_1702) + u + 32
                    v = v + 32
                    continue 
                mem[_866 + 64] = u - _866
                _1716 = mem[(98 * ('cd', 4).length) + 192]
                mem[u] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + 32 len 32 * _1716] = mem[(98 * ('cd', 4).length) + 224 len 32 * _1716]
                var45001 = _1716
                return memory
                  from mem[64]
                   len u + (32 * _1716) + -mem[64] + 32
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while idx < ('cd', 4).length:
                require idx < mem[96]
                _871 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_871))
                staticcall address(_871).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _881 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _888 = mem[_881]
                require mem[_881] <= test266151307()
                require _881 + mem[_881] + 31 < _881 + return_data.size
                _903 = mem[_881 + mem[_881]]
                require mem[_881 + mem[_881]] <= test266151307()
                require ceil32(mem[_881 + mem[_881]]) + 32 >= 0 and _881 + ceil32(return_data.size) + ceil32(mem[_881 + mem[_881]]) + 32 <= test266151307()
                mem[64] = _881 + ceil32(return_data.size) + ceil32(mem[_881 + mem[_881]]) + 32
                mem[_881 + ceil32(return_data.size)] = _903
                require _888 + _903 + 32 <= return_data.size
                s = 0
                while s < _903:
                    mem[s + _881 + ceil32(return_data.size) + 32] = mem[s + _881 + _888 + 32]
                    s = s + 32
                    continue 
                if ceil32(_903) <= _903:
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _881 + ceil32(return_data.size)
                    require ext_code.size(address(_871))
                    staticcall address(_871).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1360 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1360] == mem[_1360 + 31 len 1]
                    require idx < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_1360 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_871))
                    staticcall address(_871).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1439 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1456 = mem[_1439]
                    require mem[_1439] <= test266151307()
                    require _1439 + mem[_1439] + 31 < _1439 + return_data.size
                    _1474 = mem[_1439 + mem[_1439]]
                    require mem[_1439 + mem[_1439]] <= test266151307()
                    require ceil32(mem[_1439 + mem[_1439]]) + 32 >= 0 and _1439 + ceil32(return_data.size) + ceil32(mem[_1439 + mem[_1439]]) + 32 <= test266151307()
                    mem[64] = _1439 + ceil32(return_data.size) + ceil32(mem[_1439 + mem[_1439]]) + 32
                    mem[_1439 + ceil32(return_data.size)] = _1474
                    require _1456 + _1474 + 32 <= return_data.size
                    s = 0
                    while s < _1474:
                        mem[s + _1439 + ceil32(return_data.size) + 32] = mem[s + _1439 + _1456 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_1474) > _1474:
                        mem[_1439 + ceil32(return_data.size) + _1474 + 32] = 0
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1439 + ceil32(return_data.size)
                else:
                    mem[_881 + ceil32(return_data.size) + _903 + 32] = 0
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _881 + ceil32(return_data.size)
                    require ext_code.size(address(_871))
                    staticcall address(_871).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1371 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1371] == mem[_1371 + 31 len 1]
                    require idx < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_1371 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_871))
                    staticcall address(_871).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1451 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1470 = mem[_1451]
                    require mem[_1451] <= test266151307()
                    require _1451 + mem[_1451] + 31 < _1451 + return_data.size
                    _1477 = mem[_1451 + mem[_1451]]
                    require mem[_1451 + mem[_1451]] <= test266151307()
                    require ceil32(mem[_1451 + mem[_1451]]) + 32 >= 0 and _1451 + ceil32(return_data.size) + ceil32(mem[_1451 + mem[_1451]]) + 32 <= test266151307()
                    mem[64] = _1451 + ceil32(return_data.size) + ceil32(mem[_1451 + mem[_1451]]) + 32
                    mem[_1451 + ceil32(return_data.size)] = _1477
                    require _1470 + _1477 + 32 <= return_data.size
                    s = 0
                    while s < _1477:
                        mem[s + _1451 + ceil32(return_data.size) + 32] = mem[s + _1451 + _1470 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_1477) > _1477:
                        mem[_1451 + ceil32(return_data.size) + _1477 + 32] = 0
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1451 + ceil32(return_data.size)
                idx = idx + 1
                continue 
            _870 = mem[64]
            mem[mem[64]] = 96
            _880 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * _880) + 128
            u = mem[64] + 128
            while idx < _880:
                mem[u] = t + -_870 - 128
                _1292 = mem[s]
                _1299 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1299:
                    mem[v + t + 32] = mem[v + _1292 + 32]
                    v = v + 32
                    continue 
                if ceil32(_1299) > _1299:
                    mem[t + _1299 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = ceil32(_1299) + t + 32
                u = u + 32
                continue 
            mem[_870 + 32] = t - _870
            _1318 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _1318) + 32
            v = t + 32
            while idx < _1318:
                mem[v] = u + -t - 32
                _1688 = mem[s]
                _1703 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _1703:
                    mem[t + u + 32] = mem[t + _1688 + 32]
                    t = t + 32
                    continue 
                if ceil32(_1703) > _1703:
                    mem[u + _1703 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = ceil32(_1703) + u + 32
                v = v + 32
                continue 
            mem[_870 + 64] = u - _870
            _1717 = mem[(98 * ('cd', 4).length) + 192]
            mem[u] = mem[(98 * ('cd', 4).length) + 192]
            mem[u + 32 len 32 * _1717] = mem[(98 * ('cd', 4).length) + 224 len 32 * _1717]
            var46001 = _1717
            return memory
              from mem[64]
               len u + (32 * _1717) + -mem[64] + 32
        mem[(64 * ('cd', 4).length) + 192] = 96
        s = (64 * ('cd', 4).length) + 192
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        _874 = mem[96]
        require mem[96] <= test266151307()
        _876 = mem[64]
        mem[mem[64]] = mem[96]
        mem[64] = mem[64] + (32 * _874) + 32
        if not _874:
            _1286 = mem[96]
            idx = 0
            while idx < _1286:
                require idx < mem[96]
                _1301 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1301))
                staticcall address(_1301).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1323 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1348 = mem[_1323]
                require mem[_1323] <= test266151307()
                require _1323 + mem[_1323] + 31 < _1323 + return_data.size
                _1373 = mem[_1323 + mem[_1323]]
                require mem[_1323 + mem[_1323]] <= test266151307()
                require ceil32(mem[_1323 + mem[_1323]]) + 32 >= 0 and _1323 + ceil32(return_data.size) + ceil32(mem[_1323 + mem[_1323]]) + 32 <= test266151307()
                mem[64] = _1323 + ceil32(return_data.size) + ceil32(mem[_1323 + mem[_1323]]) + 32
                mem[_1323 + ceil32(return_data.size)] = _1373
                require _1348 + _1373 + 32 <= return_data.size
                s = 0
                while s < _1373:
                    mem[s + _1323 + ceil32(return_data.size) + 32] = mem[s + _1323 + _1348 + 32]
                    _1286 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1373) <= _1373:
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1323 + ceil32(return_data.size)
                    require ext_code.size(address(_1301))
                    staticcall address(_1301).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1781 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1781] == mem[_1781 + 31 len 1]
                    require idx < mem[_876]
                    mem[(32 * idx) + _876 + 32] = mem[_1781 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1301))
                    staticcall address(_1301).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1852 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1864 = mem[_1852]
                    require mem[_1852] <= test266151307()
                    require _1852 + mem[_1852] + 31 < _1852 + return_data.size
                    _1876 = mem[_1852 + mem[_1852]]
                    require mem[_1852 + mem[_1852]] <= test266151307()
                    require ceil32(mem[_1852 + mem[_1852]]) + 32 >= 0 and _1852 + ceil32(return_data.size) + ceil32(mem[_1852 + mem[_1852]]) + 32 <= test266151307()
                    mem[64] = _1852 + ceil32(return_data.size) + ceil32(mem[_1852 + mem[_1852]]) + 32
                    mem[_1852 + ceil32(return_data.size)] = _1876
                    require _1864 + _1876 + 32 <= return_data.size
                    s = 0
                    while s < _1876:
                        mem[s + _1852 + ceil32(return_data.size) + 32] = mem[s + _1852 + _1864 + 32]
                        _1286 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1876) > _1876:
                        mem[_1852 + ceil32(return_data.size) + _1876 + 32] = 0
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1852 + ceil32(return_data.size)
                else:
                    mem[_1323 + ceil32(return_data.size) + _1373 + 32] = 0
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1323 + ceil32(return_data.size)
                    require ext_code.size(address(_1301))
                    staticcall address(_1301).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1790 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1790] == mem[_1790 + 31 len 1]
                    require idx < mem[_876]
                    mem[(32 * idx) + _876 + 32] = mem[_1790 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1301))
                    staticcall address(_1301).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1860 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1872 = mem[_1860]
                    require mem[_1860] <= test266151307()
                    require _1860 + mem[_1860] + 31 < _1860 + return_data.size
                    _1880 = mem[_1860 + mem[_1860]]
                    require mem[_1860 + mem[_1860]] <= test266151307()
                    require ceil32(mem[_1860 + mem[_1860]]) + 32 >= 0 and _1860 + ceil32(return_data.size) + ceil32(mem[_1860 + mem[_1860]]) + 32 <= test266151307()
                    mem[64] = _1860 + ceil32(return_data.size) + ceil32(mem[_1860 + mem[_1860]]) + 32
                    mem[_1860 + ceil32(return_data.size)] = _1880
                    require _1872 + _1880 + 32 <= return_data.size
                    s = 0
                    while s < _1880:
                        mem[s + _1860 + ceil32(return_data.size) + 32] = mem[s + _1860 + _1872 + 32]
                        _1286 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1880) > _1880:
                        mem[_1860 + ceil32(return_data.size) + _1880 + 32] = 0
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1860 + ceil32(return_data.size)
                _1286 = mem[96]
                idx = idx + 1
                continue 
            _1300 = mem[64]
            mem[mem[64]] = 96
            _1322 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * _1322) + 128
            u = mem[64] + 128
            while idx < _1322:
                mem[u] = t + -_1300 - 128
                _1692 = mem[s]
                _1704 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1704:
                    mem[v + t + 32] = mem[v + _1692 + 32]
                    v = v + 32
                    continue 
                if ceil32(_1704) > _1704:
                    mem[t + _1704 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = ceil32(_1704) + t + 32
                u = u + 32
                continue 
            mem[_1300 + 32] = t - _1300
            _1718 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _1718) + 32
            v = t + 32
            while idx < _1718:
                mem[v] = u + -t - 32
                _1980 = mem[s]
                _2000 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _2000:
                    mem[t + u + 32] = mem[t + _1980 + 32]
                    t = t + 32
                    continue 
                if ceil32(_2000) > _2000:
                    mem[u + _2000 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = ceil32(_2000) + u + 32
                v = v + 32
                continue 
            mem[_1300 + 64] = u - _1300
            _2008 = mem[_876]
            mem[u] = mem[_876]
            mem[u + 32 len 32 * _2008] = mem[_876 + 32 len 32 * _2008]
            var49001 = _2008
            var49002 = _876 + (32 * _2008) + 32
            return memory
              from mem[64]
               len u + (32 * _2008) + -mem[64] + 32
        mem[_876 + 32 len 32 * _874] = call.data[calldata.size len 32 * _874]
        _1287 = mem[96]
        idx = 0
        while idx < _1287:
            require idx < mem[96]
            _1305 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1305))
            staticcall address(_1305).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1325 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1350 = mem[_1325]
            require mem[_1325] <= test266151307()
            require _1325 + mem[_1325] + 31 < _1325 + return_data.size
            _1375 = mem[_1325 + mem[_1325]]
            require mem[_1325 + mem[_1325]] <= test266151307()
            require ceil32(mem[_1325 + mem[_1325]]) + 32 >= 0 and _1325 + ceil32(return_data.size) + ceil32(mem[_1325 + mem[_1325]]) + 32 <= test266151307()
            mem[64] = _1325 + ceil32(return_data.size) + ceil32(mem[_1325 + mem[_1325]]) + 32
            mem[_1325 + ceil32(return_data.size)] = _1375
            require _1350 + _1375 + 32 <= return_data.size
            s = 0
            while s < _1375:
                mem[s + _1325 + ceil32(return_data.size) + 32] = mem[s + _1325 + _1350 + 32]
                _1287 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1375) <= _1375:
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1325 + ceil32(return_data.size)
                require ext_code.size(address(_1305))
                staticcall address(_1305).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1783 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1783] == mem[_1783 + 31 len 1]
                require idx < mem[_876]
                mem[(32 * idx) + _876 + 32] = mem[_1783 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1305))
                staticcall address(_1305).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1853 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1865 = mem[_1853]
                require mem[_1853] <= test266151307()
                require _1853 + mem[_1853] + 31 < _1853 + return_data.size
                _1877 = mem[_1853 + mem[_1853]]
                require mem[_1853 + mem[_1853]] <= test266151307()
                require ceil32(mem[_1853 + mem[_1853]]) + 32 >= 0 and _1853 + ceil32(return_data.size) + ceil32(mem[_1853 + mem[_1853]]) + 32 <= test266151307()
                mem[64] = _1853 + ceil32(return_data.size) + ceil32(mem[_1853 + mem[_1853]]) + 32
                mem[_1853 + ceil32(return_data.size)] = _1877
                require _1865 + _1877 + 32 <= return_data.size
                s = 0
                while s < _1877:
                    mem[s + _1853 + ceil32(return_data.size) + 32] = mem[s + _1853 + _1865 + 32]
                    _1287 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1877) > _1877:
                    mem[_1853 + ceil32(return_data.size) + _1877 + 32] = 0
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1853 + ceil32(return_data.size)
            else:
                mem[_1325 + ceil32(return_data.size) + _1375 + 32] = 0
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1325 + ceil32(return_data.size)
                require ext_code.size(address(_1305))
                staticcall address(_1305).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1791 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1791] == mem[_1791 + 31 len 1]
                require idx < mem[_876]
                mem[(32 * idx) + _876 + 32] = mem[_1791 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1305))
                staticcall address(_1305).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1861 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1873 = mem[_1861]
                require mem[_1861] <= test266151307()
                require _1861 + mem[_1861] + 31 < _1861 + return_data.size
                _1881 = mem[_1861 + mem[_1861]]
                require mem[_1861 + mem[_1861]] <= test266151307()
                require ceil32(mem[_1861 + mem[_1861]]) + 32 >= 0 and _1861 + ceil32(return_data.size) + ceil32(mem[_1861 + mem[_1861]]) + 32 <= test266151307()
                mem[64] = _1861 + ceil32(return_data.size) + ceil32(mem[_1861 + mem[_1861]]) + 32
                mem[_1861 + ceil32(return_data.size)] = _1881
                require _1873 + _1881 + 32 <= return_data.size
                s = 0
                while s < _1881:
                    mem[s + _1861 + ceil32(return_data.size) + 32] = mem[s + _1861 + _1873 + 32]
                    _1287 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1881) > _1881:
                    mem[_1861 + ceil32(return_data.size) + _1881 + 32] = 0
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1861 + ceil32(return_data.size)
            _1287 = mem[96]
            idx = idx + 1
            continue 
        _1304 = mem[64]
        mem[mem[64]] = 96
        _1324 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * _1324) + 128
        u = mem[64] + 128
        while idx < _1324:
            mem[u] = t + -_1304 - 128
            _1694 = mem[s]
            _1705 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _1705:
                mem[v + t + 32] = mem[v + _1694 + 32]
                v = v + 32
                continue 
            if ceil32(_1705) > _1705:
                mem[t + _1705 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = ceil32(_1705) + t + 32
            u = u + 32
            continue 
        mem[_1304 + 32] = t - _1304
        _1719 = mem[(64 * ('cd', 4).length) + 160]
        mem[t] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        u = t + (32 * _1719) + 32
        v = t + 32
        while idx < _1719:
            mem[v] = u + -t - 32
            _1984 = mem[s]
            _2001 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2001:
                mem[t + u + 32] = mem[t + _1984 + 32]
                t = t + 32
                continue 
            if ceil32(_2001) > _2001:
                mem[u + _2001 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = ceil32(_2001) + u + 32
            v = v + 32
            continue 
        mem[_1304 + 64] = u - _1304
        _2009 = mem[_876]
        mem[u] = mem[_876]
        mem[u + 32 len 32 * _2009] = mem[_876 + 32 len 32 * _2009]
        var50001 = _2009
        return memory
          from mem[64]
           len u + (32 * _2009) + -mem[64] + 32
    mem[(32 * ('cd', 4).length) + 160] = 96
    s = (32 * ('cd', 4).length) + 160
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    _875 = mem[96]
    require mem[96] <= test266151307()
    _877 = mem[64]
    mem[mem[64]] = mem[96]
    mem[64] = mem[64] + (32 * _875) + 32
    if not _875:
        _882 = mem[96]
        require mem[96] <= test266151307()
        mem[_877 + (32 * _875) + 32] = mem[96]
        mem[64] = _877 + (32 * _875) + (32 * _882) + 64
        if not _882:
            _1288 = mem[96]
            idx = 0
            while idx < _1288:
                require idx < mem[96]
                _1309 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1309))
                staticcall address(_1309).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1327 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1352 = mem[_1327]
                require mem[_1327] <= test266151307()
                require _1327 + mem[_1327] + 31 < _1327 + return_data.size
                _1377 = mem[_1327 + mem[_1327]]
                require mem[_1327 + mem[_1327]] <= test266151307()
                require ceil32(mem[_1327 + mem[_1327]]) + 32 >= 0 and _1327 + ceil32(return_data.size) + ceil32(mem[_1327 + mem[_1327]]) + 32 <= test266151307()
                mem[64] = _1327 + ceil32(return_data.size) + ceil32(mem[_1327 + mem[_1327]]) + 32
                mem[_1327 + ceil32(return_data.size)] = _1377
                require _1352 + _1377 + 32 <= return_data.size
                s = 0
                while s < _1377:
                    mem[s + _1327 + ceil32(return_data.size) + 32] = mem[s + _1327 + _1352 + 32]
                    _1288 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1377) <= _1377:
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1327 + ceil32(return_data.size)
                    require ext_code.size(address(_1309))
                    staticcall address(_1309).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1785] == mem[_1785 + 31 len 1]
                    require idx < mem[_877 + (32 * _875) + 32]
                    mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1785 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1309))
                    staticcall address(_1309).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1854 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1866 = mem[_1854]
                    require mem[_1854] <= test266151307()
                    require _1854 + mem[_1854] + 31 < _1854 + return_data.size
                    _1878 = mem[_1854 + mem[_1854]]
                    require mem[_1854 + mem[_1854]] <= test266151307()
                    require ceil32(mem[_1854 + mem[_1854]]) + 32 >= 0 and _1854 + ceil32(return_data.size) + ceil32(mem[_1854 + mem[_1854]]) + 32 <= test266151307()
                    mem[64] = _1854 + ceil32(return_data.size) + ceil32(mem[_1854 + mem[_1854]]) + 32
                    mem[_1854 + ceil32(return_data.size)] = _1878
                    require _1866 + _1878 + 32 <= return_data.size
                    s = 0
                    while s < _1878:
                        mem[s + _1854 + ceil32(return_data.size) + 32] = mem[s + _1854 + _1866 + 32]
                        _1288 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1878) > _1878:
                        mem[_1854 + ceil32(return_data.size) + _1878 + 32] = 0
                    require idx < mem[_877]
                    mem[(32 * idx) + _877 + 32] = _1854 + ceil32(return_data.size)
                else:
                    mem[_1327 + ceil32(return_data.size) + _1377 + 32] = 0
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1327 + ceil32(return_data.size)
                    require ext_code.size(address(_1309))
                    staticcall address(_1309).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1792 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1792] == mem[_1792 + 31 len 1]
                    require idx < mem[_877 + (32 * _875) + 32]
                    mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1792 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1309))
                    staticcall address(_1309).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1862 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1874 = mem[_1862]
                    require mem[_1862] <= test266151307()
                    require _1862 + mem[_1862] + 31 < _1862 + return_data.size
                    _1882 = mem[_1862 + mem[_1862]]
                    require mem[_1862 + mem[_1862]] <= test266151307()
                    require ceil32(mem[_1862 + mem[_1862]]) + 32 >= 0 and _1862 + ceil32(return_data.size) + ceil32(mem[_1862 + mem[_1862]]) + 32 <= test266151307()
                    mem[64] = _1862 + ceil32(return_data.size) + ceil32(mem[_1862 + mem[_1862]]) + 32
                    mem[_1862 + ceil32(return_data.size)] = _1882
                    require _1874 + _1882 + 32 <= return_data.size
                    s = 0
                    while s < _1882:
                        mem[s + _1862 + ceil32(return_data.size) + 32] = mem[s + _1862 + _1874 + 32]
                        _1288 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1882) > _1882:
                        mem[_1862 + ceil32(return_data.size) + _1882 + 32] = 0
                    require idx < mem[_877]
                    mem[(32 * idx) + _877 + 32] = _1862 + ceil32(return_data.size)
                _1288 = mem[96]
                idx = idx + 1
                continue 
            _1308 = mem[64]
            mem[mem[64]] = 96
            _1326 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * _1326) + 128
            u = mem[64] + 128
            while idx < _1326:
                mem[u] = t + -_1308 - 128
                _1696 = mem[s]
                _1706 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1706:
                    mem[v + t + 32] = mem[v + _1696 + 32]
                    v = v + 32
                    continue 
                if ceil32(_1706) > _1706:
                    mem[t + _1706 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = ceil32(_1706) + t + 32
                u = u + 32
                continue 
            mem[_1308 + 32] = t - _1308
            _1720 = mem[_877]
            mem[t] = mem[_877]
            idx = 0
            s = _877 + 32
            u = t + (32 * _1720) + 32
            v = t + 32
            while idx < _1720:
                mem[v] = u + -t - 32
                _1988 = mem[s]
                _2002 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _2002:
                    mem[t + u + 32] = mem[t + _1988 + 32]
                    t = t + 32
                    continue 
                if ceil32(_2002) > _2002:
                    mem[u + _2002 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = ceil32(_2002) + u + 32
                v = v + 32
                continue 
            mem[_1308 + 64] = u - _1308
            _2010 = mem[_877 + (32 * _875) + 32]
            mem[u] = mem[_877 + (32 * _875) + 32]
            mem[u + 32 len 32 * _2010] = mem[_877 + (32 * _875) + 64 len 32 * _2010]
            var49001 = _2010
            var49002 = _877 + (32 * _875) + (32 * _2010) + 64
            return memory
              from mem[64]
               len u + (32 * _2010) + -mem[64] + 32
        mem[_877 + (32 * _875) + 64 len 32 * _882] = call.data[calldata.size len 32 * _882]
        _1289 = mem[96]
        idx = 0
        while idx < _1289:
            require idx < mem[96]
            _1313 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1313))
            staticcall address(_1313).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1329 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1354 = mem[_1329]
            require mem[_1329] <= test266151307()
            require _1329 + mem[_1329] + 31 < _1329 + return_data.size
            _1379 = mem[_1329 + mem[_1329]]
            require mem[_1329 + mem[_1329]] <= test266151307()
            require ceil32(mem[_1329 + mem[_1329]]) + 32 >= 0 and _1329 + ceil32(return_data.size) + ceil32(mem[_1329 + mem[_1329]]) + 32 <= test266151307()
            mem[64] = _1329 + ceil32(return_data.size) + ceil32(mem[_1329 + mem[_1329]]) + 32
            mem[_1329 + ceil32(return_data.size)] = _1379
            require _1354 + _1379 + 32 <= return_data.size
            s = 0
            while s < _1379:
                mem[s + _1329 + ceil32(return_data.size) + 32] = mem[s + _1329 + _1354 + 32]
                _1289 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1379) <= _1379:
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1329 + ceil32(return_data.size)
                require ext_code.size(address(_1313))
                staticcall address(_1313).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1787 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1787] == mem[_1787 + 31 len 1]
                require idx < mem[_877 + (32 * _875) + 32]
                mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1787 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1313))
                staticcall address(_1313).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1855 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1867 = mem[_1855]
                require mem[_1855] <= test266151307()
                require _1855 + mem[_1855] + 31 < _1855 + return_data.size
                _1879 = mem[_1855 + mem[_1855]]
                require mem[_1855 + mem[_1855]] <= test266151307()
                require ceil32(mem[_1855 + mem[_1855]]) + 32 >= 0 and _1855 + ceil32(return_data.size) + ceil32(mem[_1855 + mem[_1855]]) + 32 <= test266151307()
                mem[64] = _1855 + ceil32(return_data.size) + ceil32(mem[_1855 + mem[_1855]]) + 32
                mem[_1855 + ceil32(return_data.size)] = _1879
                require _1867 + _1879 + 32 <= return_data.size
                s = 0
                while s < _1879:
                    mem[s + _1855 + ceil32(return_data.size) + 32] = mem[s + _1855 + _1867 + 32]
                    _1289 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1879) > _1879:
                    mem[_1855 + ceil32(return_data.size) + _1879 + 32] = 0
                require idx < mem[_877]
                mem[(32 * idx) + _877 + 32] = _1855 + ceil32(return_data.size)
            else:
                mem[_1329 + ceil32(return_data.size) + _1379 + 32] = 0
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1329 + ceil32(return_data.size)
                require ext_code.size(address(_1313))
                staticcall address(_1313).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1793 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1793] == mem[_1793 + 31 len 1]
                require idx < mem[_877 + (32 * _875) + 32]
                mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1793 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1313))
                staticcall address(_1313).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1863 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1875 = mem[_1863]
                require mem[_1863] <= test266151307()
                require _1863 + mem[_1863] + 31 < _1863 + return_data.size
                _1883 = mem[_1863 + mem[_1863]]
                require mem[_1863 + mem[_1863]] <= test266151307()
                require ceil32(mem[_1863 + mem[_1863]]) + 32 >= 0 and _1863 + ceil32(return_data.size) + ceil32(mem[_1863 + mem[_1863]]) + 32 <= test266151307()
                mem[64] = _1863 + ceil32(return_data.size) + ceil32(mem[_1863 + mem[_1863]]) + 32
                mem[_1863 + ceil32(return_data.size)] = _1883
                require _1875 + _1883 + 32 <= return_data.size
                s = 0
                while s < _1883:
                    mem[s + _1863 + ceil32(return_data.size) + 32] = mem[s + _1863 + _1875 + 32]
                    _1289 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1883) > _1883:
                    mem[_1863 + ceil32(return_data.size) + _1883 + 32] = 0
                require idx < mem[_877]
                mem[(32 * idx) + _877 + 32] = _1863 + ceil32(return_data.size)
            _1289 = mem[96]
            idx = idx + 1
            continue 
        _1312 = mem[64]
        mem[mem[64]] = 96
        _1328 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * _1328) + 128
        u = mem[64] + 128
        while idx < _1328:
            mem[u] = t + -_1312 - 128
            _1698 = mem[s]
            _1707 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _1707:
                mem[v + t + 32] = mem[v + _1698 + 32]
                v = v + 32
                continue 
            if ceil32(_1707) > _1707:
                mem[t + _1707 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = ceil32(_1707) + t + 32
            u = u + 32
            continue 
        mem[_1312 + 32] = t - _1312
        _1721 = mem[_877]
        mem[t] = mem[_877]
        idx = 0
        s = _877 + 32
        u = t + (32 * _1721) + 32
        v = t + 32
        while idx < _1721:
            mem[v] = u + -t - 32
            _1992 = mem[s]
            _2003 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2003:
                mem[t + u + 32] = mem[t + _1992 + 32]
                t = t + 32
                continue 
            if ceil32(_2003) > _2003:
                mem[u + _2003 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = ceil32(_2003) + u + 32
            v = v + 32
            continue 
        mem[_1312 + 64] = u - _1312
        _2011 = mem[_877 + (32 * _875) + 32]
        mem[u] = mem[_877 + (32 * _875) + 32]
        mem[u + 32 len 32 * _2011] = mem[_877 + (32 * _875) + 64 len 32 * _2011]
        var50001 = _2011
        return memory
          from mem[64]
           len u + (32 * _2011) + -mem[64] + 32
    mem[_877 + 32] = 96
    s = _877 + 32
    idx = _875
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    _1316 = mem[96]
    require mem[96] <= test266151307()
    _1319 = mem[64]
    mem[mem[64]] = mem[96]
    mem[64] = mem[64] + (32 * _1316) + 32
    if not _1316:
        _1682 = mem[96]
        idx = 0
        while idx < _1682:
            require idx < mem[96]
            _1709 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1709))
            staticcall address(_1709).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1731 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1775 = mem[_1731]
            require mem[_1731] <= test266151307()
            require _1731 + mem[_1731] + 31 < _1731 + return_data.size
            _1795 = mem[_1731 + mem[_1731]]
            require mem[_1731 + mem[_1731]] <= test266151307()
            require ceil32(mem[_1731 + mem[_1731]]) + 32 >= 0 and _1731 + ceil32(return_data.size) + ceil32(mem[_1731 + mem[_1731]]) + 32 <= test266151307()
            mem[64] = _1731 + ceil32(return_data.size) + ceil32(mem[_1731 + mem[_1731]]) + 32
            mem[_1731 + ceil32(return_data.size)] = _1795
            require _1775 + _1795 + 32 <= return_data.size
            s = 0
            while s < _1795:
                mem[s + _1731 + ceil32(return_data.size) + 32] = mem[s + _1731 + _1775 + 32]
                _1682 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1795) <= _1795:
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1731 + ceil32(return_data.size)
                require ext_code.size(address(_1709))
                staticcall address(_1709).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2061 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2061] == mem[_2061 + 31 len 1]
                require idx < mem[_1319]
                mem[(32 * idx) + _1319 + 32] = mem[_2061 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1709))
                staticcall address(_1709).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2088 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2092 = mem[_2088]
                require mem[_2088] <= test266151307()
                require _2088 + mem[_2088] + 31 < _2088 + return_data.size
                _2096 = mem[_2088 + mem[_2088]]
                require mem[_2088 + mem[_2088]] <= test266151307()
                require ceil32(mem[_2088 + mem[_2088]]) + 32 >= 0 and _2088 + ceil32(return_data.size) + ceil32(mem[_2088 + mem[_2088]]) + 32 <= test266151307()
                mem[64] = _2088 + ceil32(return_data.size) + ceil32(mem[_2088 + mem[_2088]]) + 32
                mem[_2088 + ceil32(return_data.size)] = _2096
                require _2092 + _2096 + 32 <= return_data.size
                s = 0
                while s < _2096:
                    mem[s + _2088 + ceil32(return_data.size) + 32] = mem[s + _2088 + _2092 + 32]
                    _1682 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_2096) > _2096:
                    mem[_2088 + ceil32(return_data.size) + _2096 + 32] = 0
                require idx < mem[_877]
                mem[(32 * idx) + _877 + 32] = _2088 + ceil32(return_data.size)
            else:
                mem[_1731 + ceil32(return_data.size) + _1795 + 32] = 0
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1731 + ceil32(return_data.size)
                require ext_code.size(address(_1709))
                staticcall address(_1709).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2064 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2064] == mem[_2064 + 31 len 1]
                require idx < mem[_1319]
                mem[(32 * idx) + _1319 + 32] = mem[_2064 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1709))
                staticcall address(_1709).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2090 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2094 = mem[_2090]
                require mem[_2090] <= test266151307()
                require _2090 + mem[_2090] + 31 < _2090 + return_data.size
                _2098 = mem[_2090 + mem[_2090]]
                require mem[_2090 + mem[_2090]] <= test266151307()
                require ceil32(mem[_2090 + mem[_2090]]) + 32 >= 0 and _2090 + ceil32(return_data.size) + ceil32(mem[_2090 + mem[_2090]]) + 32 <= test266151307()
                mem[64] = _2090 + ceil32(return_data.size) + ceil32(mem[_2090 + mem[_2090]]) + 32
                mem[_2090 + ceil32(return_data.size)] = _2098
                require _2094 + _2098 + 32 <= return_data.size
                s = 0
                while s < _2098:
                    mem[s + _2090 + ceil32(return_data.size) + 32] = mem[s + _2090 + _2094 + 32]
                    _1682 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_2098) > _2098:
                    mem[_2090 + ceil32(return_data.size) + _2098 + 32] = 0
                require idx < mem[_877]
                mem[(32 * idx) + _877 + 32] = _2090 + ceil32(return_data.size)
            _1682 = mem[96]
            idx = idx + 1
            continue 
        _1708 = mem[64]
        mem[mem[64]] = 96
        _1730 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * _1730) + 128
        u = mem[64] + 128
        while idx < _1730:
            mem[u] = t + -_1708 - 128
            _1996 = mem[s]
            _2004 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _2004:
                mem[v + t + 32] = mem[v + _1996 + 32]
                v = v + 32
                continue 
            if ceil32(_2004) > _2004:
                mem[t + _2004 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = ceil32(_2004) + t + 32
            u = u + 32
            continue 
        mem[_1708 + 32] = t - _1708
        _2012 = mem[_877]
        mem[t] = mem[_877]
        idx = 0
        s = _877 + 32
        u = t + (32 * _2012) + 32
        v = t + 32
        while idx < _2012:
            mem[v] = u + -t - 32
            _2124 = mem[s]
            _2132 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2132:
                mem[t + u + 32] = mem[t + _2124 + 32]
                t = t + 32
                continue 
            if ceil32(_2132) > _2132:
                mem[u + _2132 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = ceil32(_2132) + u + 32
            v = v + 32
            continue 
        mem[_1708 + 64] = u - _1708
        _2138 = mem[_1319]
        mem[u] = mem[_1319]
        mem[u + 32 len 32 * _2138] = mem[_1319 + 32 len 32 * _2138]
        var53001 = _2138
        var53002 = _1319 + (32 * _2138) + 32
        return memory
          from mem[64]
           len u + (32 * _2138) + -mem[64] + 32
    mem[_1319 + 32 len 32 * _1316] = call.data[calldata.size len 32 * _1316]
    _1683 = mem[96]
    idx = 0
    while idx < _1683:
        require idx < mem[96]
        _1713 = mem[(32 * idx) + 128]
        mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
        require ext_code.size(address(_1713))
        staticcall address(_1713).name() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1733 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1777 = mem[_1733]
        require mem[_1733] <= test266151307()
        require _1733 + mem[_1733] + 31 < _1733 + return_data.size
        _1797 = mem[_1733 + mem[_1733]]
        require mem[_1733 + mem[_1733]] <= test266151307()
        require ceil32(mem[_1733 + mem[_1733]]) + 32 >= 0 and _1733 + ceil32(return_data.size) + ceil32(mem[_1733 + mem[_1733]]) + 32 <= test266151307()
        mem[64] = _1733 + ceil32(return_data.size) + ceil32(mem[_1733 + mem[_1733]]) + 32
        mem[_1733 + ceil32(return_data.size)] = _1797
        require _1777 + _1797 + 32 <= return_data.size
        s = 0
        while s < _1797:
            mem[s + _1733 + ceil32(return_data.size) + 32] = mem[s + _1733 + _1777 + 32]
            _1683 = mem[96]
            s = s + 32
            continue 
        if ceil32(_1797) <= _1797:
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1733 + ceil32(return_data.size)
            require ext_code.size(address(_1713))
            staticcall address(_1713).0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2063 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_2063] == mem[_2063 + 31 len 1]
            require idx < mem[_1319]
            mem[(32 * idx) + _1319 + 32] = mem[_2063 + 31 len 1]
            mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1713))
            staticcall address(_1713).0x95d89b41 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2089 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2093 = mem[_2089]
            require mem[_2089] <= test266151307()
            require _2089 + mem[_2089] + 31 < _2089 + return_data.size
            _2097 = mem[_2089 + mem[_2089]]
            require mem[_2089 + mem[_2089]] <= test266151307()
            require ceil32(mem[_2089 + mem[_2089]]) + 32 >= 0 and _2089 + ceil32(return_data.size) + ceil32(mem[_2089 + mem[_2089]]) + 32 <= test266151307()
            mem[64] = _2089 + ceil32(return_data.size) + ceil32(mem[_2089 + mem[_2089]]) + 32
            mem[_2089 + ceil32(return_data.size)] = _2097
            require _2093 + _2097 + 32 <= return_data.size
            s = 0
            while s < _2097:
                mem[s + _2089 + ceil32(return_data.size) + 32] = mem[s + _2089 + _2093 + 32]
                _1683 = mem[96]
                s = s + 32
                continue 
            if ceil32(_2097) > _2097:
                mem[_2089 + ceil32(return_data.size) + _2097 + 32] = 0
            require idx < mem[_877]
            mem[(32 * idx) + _877 + 32] = _2089 + ceil32(return_data.size)
        else:
            mem[_1733 + ceil32(return_data.size) + _1797 + 32] = 0
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1733 + ceil32(return_data.size)
            require ext_code.size(address(_1713))
            staticcall address(_1713).0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2065 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_2065] == mem[_2065 + 31 len 1]
            require idx < mem[_1319]
            mem[(32 * idx) + _1319 + 32] = mem[_2065 + 31 len 1]
            mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1713))
            staticcall address(_1713).0x95d89b41 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2091 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2095 = mem[_2091]
            require mem[_2091] <= test266151307()
            require _2091 + mem[_2091] + 31 < _2091 + return_data.size
            _2099 = mem[_2091 + mem[_2091]]
            require mem[_2091 + mem[_2091]] <= test266151307()
            require ceil32(mem[_2091 + mem[_2091]]) + 32 >= 0 and _2091 + ceil32(return_data.size) + ceil32(mem[_2091 + mem[_2091]]) + 32 <= test266151307()
            mem[64] = _2091 + ceil32(return_data.size) + ceil32(mem[_2091 + mem[_2091]]) + 32
            mem[_2091 + ceil32(return_data.size)] = _2099
            require _2095 + _2099 + 32 <= return_data.size
            s = 0
            while s < _2099:
                mem[s + _2091 + ceil32(return_data.size) + 32] = mem[s + _2091 + _2095 + 32]
                _1683 = mem[96]
                s = s + 32
                continue 
            if ceil32(_2099) > _2099:
                mem[_2091 + ceil32(return_data.size) + _2099 + 32] = 0
            require idx < mem[_877]
            mem[(32 * idx) + _877 + 32] = _2091 + ceil32(return_data.size)
        _1683 = mem[96]
        idx = idx + 1
        continue 
    _1712 = mem[64]
    mem[mem[64]] = 96
    _1732 = mem[(32 * ('cd', 4).length) + 128]
    mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
    idx = 0
    s = (32 * ('cd', 4).length) + 160
    t = mem[64] + (32 * _1732) + 128
    u = mem[64] + 128
    while idx < _1732:
        mem[u] = t + -_1712 - 128
        _1998 = mem[s]
        _2005 = mem[mem[s]]
        mem[t] = mem[mem[s]]
        v = 0
        while v < _2005:
            mem[v + t + 32] = mem[v + _1998 + 32]
            v = v + 32
            continue 
        if ceil32(_2005) > _2005:
            mem[t + _2005 + 32] = 0
        idx = idx + 1
        s = s + 32
        t = ceil32(_2005) + t + 32
        u = u + 32
        continue 
    mem[_1712 + 32] = t - _1712
    _2013 = mem[_877]
    mem[t] = mem[_877]
    idx = 0
    s = _877 + 32
    u = t + (32 * _2013) + 32
    v = t + 32
    while idx < _2013:
        mem[v] = u + -t - 32
        _2128 = mem[s]
        _2133 = mem[mem[s]]
        mem[u] = mem[mem[s]]
        t = 0
        while t < _2133:
            mem[t + u + 32] = mem[t + _2128 + 32]
            t = t + 32
            continue 
        if ceil32(_2133) > _2133:
            mem[u + _2133 + 32] = 0
        idx = idx + 1
        s = s + 32
        u = ceil32(_2133) + u + 32
        v = v + 32
        continue 
    mem[_1712 + 64] = u - _1712
    _2139 = mem[_1319]
    mem[u] = mem[_1319]
    mem[u + 32 len 32 * _2139] = mem[_1319 + 32 len 32 * _2139]
    var54001 = _2139
    return memory
      from mem[64]
       len u + (32 * _2139) + -mem[64] + 32
}

function sub_62827861(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg3 - arg2 <= test266151307()
    mem[96] = arg3 - arg2
    if not arg3 - arg2:
        require arg3 - arg2 <= test266151307()
        mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
        if not arg3 - arg2:
            require arg3 - arg2 <= test266151307()
            mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
            if not arg3 - arg2:
                require arg3 - arg2 <= test266151307()
                mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
                mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
                if not arg3 - arg2:
                    idx = arg2
                    s = 0
                    while idx < arg3:
                        mem[mem[64] + 4] = idx
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).allPairs(uint256 arg1) with:
                                gas gas_remaining wei
                               args idx
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _576 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _608 = mem[_576]
                        require mem[_576] == mem[_576 + 12 len 20]
                        require s < mem[96]
                        mem[(32 * s) + 128] = mem[_576 + 12 len 20]
                        require ext_code.size(address(_608))
                        staticcall address(_608).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _721 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_721] == mem[_721 + 12 len 20]
                        require s < mem[(32 * arg3 - arg2) + 128]
                        mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_721 + 12 len 20]
                        require ext_code.size(address(_608))
                        staticcall address(_608).token1() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _864 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_864] == mem[_864 + 12 len 20]
                        require s < mem[(64 * arg3 - arg2) + 160]
                        mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_864 + 12 len 20]
                        require ext_code.size(address(_608))
                        staticcall address(_608).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _944 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        require mem[_944] == mem[_944 + 28 len 4]
                        require mem[_944 + 32] == mem[_944 + 60 len 4]
                        require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                        mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_944 + 28 len 4]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    _528 = mem[64]
                    mem[mem[64]] = 128
                    _560 = mem[96]
                    mem[mem[64] + 128] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 160
                    while idx < _560:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_528 + 32] = (32 * _560) + 160
                    _1024 = mem[(32 * arg3 - arg2) + 128]
                    mem[_528 + (32 * _560) + 160] = mem[(32 * arg3 - arg2) + 128]
                    idx = 0
                    s = (32 * arg3 - arg2) + 160
                    t = _528 + (32 * _560) + 192
                    while idx < _1024:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_528 + 64] = (32 * _560) + (32 * _1024) + 192
                    _1152 = mem[(64 * arg3 - arg2) + 160]
                    mem[_528 + (32 * _560) + (32 * _1024) + 192] = mem[(64 * arg3 - arg2) + 160]
                    idx = 0
                    s = (64 * arg3 - arg2) + 192
                    t = _528 + (32 * _560) + (32 * _1024) + 224
                    while idx < _1152:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_528 + 96] = (32 * _560) + (32 * _1024) + (32 * _1152) + 224
                    _1248 = mem[(98 * arg3) + (-98 * arg2) + 192]
                    mem[_528 + (32 * _560) + (32 * _1024) + (32 * _1152) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                    mem[_528 + (32 * _560) + (32 * _1024) + (32 * _1152) + 256 len 32 * _1248] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1248]
                    return memory
                      from mem[64]
                       len _528 + (32 * _560) + (32 * _1024) + (32 * _1152) + (32 * _1248) + -mem[64] + 256
                mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _577 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _609 = mem[_577]
                    require mem[_577] == mem[_577 + 12 len 20]
                    require s < mem[96]
                    mem[(32 * s) + 128] = mem[_577 + 12 len 20]
                    require ext_code.size(address(_609))
                    staticcall address(_609).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _723 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_723] == mem[_723 + 12 len 20]
                    require s < mem[(32 * arg3 - arg2) + 128]
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_723 + 12 len 20]
                    require ext_code.size(address(_609))
                    staticcall address(_609).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _865 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_865] == mem[_865 + 12 len 20]
                    require s < mem[(64 * arg3 - arg2) + 160]
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_865 + 12 len 20]
                    require ext_code.size(address(_609))
                    staticcall address(_609).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _945 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    require mem[_945] == mem[_945 + 28 len 4]
                    require mem[_945 + 32] == mem[_945 + 60 len 4]
                    require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                    mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_945 + 28 len 4]
                    idx = idx + 1
                    s = s + 1
                    continue 
                _529 = mem[64]
                mem[mem[64]] = 128
                _561 = mem[96]
                mem[mem[64] + 128] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 160
                while idx < _561:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_529 + 32] = (32 * _561) + 160
                _1025 = mem[(32 * arg3 - arg2) + 128]
                mem[_529 + (32 * _561) + 160] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = _529 + (32 * _561) + 192
                while idx < _1025:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_529 + 64] = (32 * _561) + (32 * _1025) + 192
                _1153 = mem[(64 * arg3 - arg2) + 160]
                mem[_529 + (32 * _561) + (32 * _1025) + 192] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _529 + (32 * _561) + (32 * _1025) + 224
                while idx < _1153:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_529 + 96] = (32 * _561) + (32 * _1025) + (32 * _1153) + 224
                _1249 = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_529 + (32 * _561) + (32 * _1025) + (32 * _1153) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_529 + (32 * _561) + (32 * _1025) + (32 * _1153) + 256 len 32 * _1249] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1249]
                return memory
                  from mem[64]
                   len _529 + (32 * _561) + (32 * _1025) + (32 * _1153) + (32 * _1249) + -mem[64] + 256
            mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            require arg3 - arg2 <= test266151307()
            mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _578 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _610 = mem[_578]
                    require mem[_578] == mem[_578 + 12 len 20]
                    require s < mem[96]
                    mem[(32 * s) + 128] = mem[_578 + 12 len 20]
                    require ext_code.size(address(_610))
                    staticcall address(_610).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _725 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_725] == mem[_725 + 12 len 20]
                    require s < mem[(32 * arg3 - arg2) + 128]
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_725 + 12 len 20]
                    require ext_code.size(address(_610))
                    staticcall address(_610).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _866 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_866] == mem[_866 + 12 len 20]
                    require s < mem[(64 * arg3 - arg2) + 160]
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_866 + 12 len 20]
                    require ext_code.size(address(_610))
                    staticcall address(_610).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _946 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    require mem[_946] == mem[_946 + 28 len 4]
                    require mem[_946 + 32] == mem[_946 + 60 len 4]
                    require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                    mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_946 + 28 len 4]
                    idx = idx + 1
                    s = s + 1
                    continue 
                _530 = mem[64]
                mem[mem[64]] = 128
                _562 = mem[96]
                mem[mem[64] + 128] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 160
                while idx < _562:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _562) + 160
                _1026 = mem[(32 * arg3 - arg2) + 128]
                mem[mem[64] + (32 * _562) + 160] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = mem[64] + (32 * _562) + 192
                while idx < _1026:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_530 + 64] = (32 * _562) + (32 * _1026) + 192
                _1154 = mem[(64 * arg3 - arg2) + 160]
                mem[_530 + (32 * _562) + (32 * _1026) + 192] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _530 + (32 * _562) + (32 * _1026) + 224
                while idx < _1154:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_530 + 96] = (32 * _562) + (32 * _1026) + (32 * _1154) + 224
                _1250 = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_530 + (32 * _562) + (32 * _1026) + (32 * _1154) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_530 + (32 * _562) + (32 * _1026) + (32 * _1154) + 256 len 32 * _1250] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1250]
                return memory
                  from mem[64]
                   len _530 + (32 * _562) + (32 * _1026) + (32 * _1154) + (32 * _1250) + -mem[64] + 256
            mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _579 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _611 = mem[_579]
                require mem[_579] == mem[_579 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_579 + 12 len 20]
                require ext_code.size(address(_611))
                staticcall address(_611).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _727 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_727] == mem[_727 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_727 + 12 len 20]
                require ext_code.size(address(_611))
                staticcall address(_611).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _867 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_867] == mem[_867 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_867 + 12 len 20]
                require ext_code.size(address(_611))
                staticcall address(_611).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _947 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_947] == mem[_947 + 28 len 4]
                require mem[_947 + 32] == mem[_947 + 60 len 4]
                require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_947 + 28 len 4]
                idx = idx + 1
                s = s + 1
                continue 
            mem[mem[64]] = 128
            _563 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _563:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _563) + 160
            _1027 = mem[(32 * arg3 - arg2) + 128]
            mem[mem[64] + (32 * _563) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = mem[64] + (32 * _563) + 192
            while idx < _1027:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * _563) + (32 * _1027) + 192
            _1155 = mem[(64 * arg3 - arg2) + 160]
            mem[mem[64] + (32 * _563) + (32 * _1027) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = mem[64] + (32 * _563) + (32 * _1027) + 224
            while idx < _1155:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 96] = (32 * _563) + (32 * _1027) + (32 * _1155) + 224
            _1251 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[mem[64] + (32 * _563) + (32 * _1027) + (32 * _1155) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[mem[64] + (32 * _563) + (32 * _1027) + (32 * _1155) + 256 len 32 * _1251] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1251]
            return 128, 
                   (32 * _563) + 160,
                   (32 * _563) + (32 * _1027) + 192,
                   (32 * _563) + (32 * _1027) + (32 * _1155) + 224,
                   mem[mem[64] + 128 len (32 * _563) + (32 * _1027) + (32 * _1155) + (32 * _1251) + 128]
        mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        require arg3 - arg2 <= test266151307()
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        if not arg3 - arg2:
            require arg3 - arg2 <= test266151307()
            mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _580 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _612 = mem[_580]
                    require mem[_580] == mem[_580 + 12 len 20]
                    require s < mem[96]
                    mem[(32 * s) + 128] = mem[_580 + 12 len 20]
                    require ext_code.size(address(_612))
                    staticcall address(_612).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _729 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_729] == mem[_729 + 12 len 20]
                    require s < mem[(32 * arg3 - arg2) + 128]
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_729 + 12 len 20]
                    require ext_code.size(address(_612))
                    staticcall address(_612).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _868 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_868] == mem[_868 + 12 len 20]
                    require s < mem[(64 * arg3 - arg2) + 160]
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_868 + 12 len 20]
                    require ext_code.size(address(_612))
                    staticcall address(_612).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _948 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    require mem[_948] == mem[_948 + 28 len 4]
                    require mem[_948 + 32] == mem[_948 + 60 len 4]
                    require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                    mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_948 + 28 len 4]
                    idx = idx + 1
                    s = s + 1
                    continue 
                _532 = mem[64]
                mem[mem[64]] = 128
                _564 = mem[96]
                mem[mem[64] + 128] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 160
                while idx < _564:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _564) + 160
                _1028 = mem[(32 * arg3 - arg2) + 128]
                mem[mem[64] + (32 * _564) + 160] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = mem[64] + (32 * _564) + 192
                while idx < _1028:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 64] = (32 * _564) + (32 * _1028) + 192
                _1156 = mem[(64 * arg3 - arg2) + 160]
                mem[mem[64] + (32 * _564) + (32 * _1028) + 192] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = mem[64] + (32 * _564) + (32 * _1028) + 224
                while idx < _1156:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_532 + 96] = (32 * _564) + (32 * _1028) + (32 * _1156) + 224
                _1252 = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_532 + (32 * _564) + (32 * _1028) + (32 * _1156) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_532 + (32 * _564) + (32 * _1028) + (32 * _1156) + 256 len 32 * _1252] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1252]
                return memory
                  from mem[64]
                   len _532 + (32 * _564) + (32 * _1028) + (32 * _1156) + (32 * _1252) + -mem[64] + 256
            mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _581 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _613 = mem[_581]
                require mem[_581] == mem[_581 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_581 + 12 len 20]
                require ext_code.size(address(_613))
                staticcall address(_613).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _731 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_731] == mem[_731 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_731 + 12 len 20]
                require ext_code.size(address(_613))
                staticcall address(_613).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _869 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_869] == mem[_869 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_869 + 12 len 20]
                require ext_code.size(address(_613))
                staticcall address(_613).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _949 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_949] == mem[_949 + 28 len 4]
                require mem[_949 + 32] == mem[_949 + 60 len 4]
                require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_949 + 28 len 4]
                idx = idx + 1
                s = s + 1
                continue 
            _533 = mem[64]
            mem[mem[64]] = 128
            _565 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _565:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_533 + 32] = (32 * _565) + 160
            _1029 = mem[(32 * arg3 - arg2) + 128]
            mem[_533 + (32 * _565) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _533 + (32 * _565) + 192
            while idx < _1029:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_533 + 64] = (32 * _565) + (32 * _1029) + 192
            _1157 = mem[(64 * arg3 - arg2) + 160]
            mem[_533 + (32 * _565) + (32 * _1029) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _533 + (32 * _565) + (32 * _1029) + 224
            while idx < _1157:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_533 + 96] = (32 * _565) + (32 * _1029) + (32 * _1157) + 224
            _1253 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_533 + (32 * _565) + (32 * _1029) + (32 * _1157) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_533 + (32 * _565) + (32 * _1029) + (32 * _1157) + 256 len 32 * _1253] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1253]
            return memory
              from mem[64]
               len _533 + (32 * _565) + (32 * _1029) + (32 * _1157) + (32 * _1253) + -mem[64] + 256
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        require arg3 - arg2 <= test266151307()
        mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _582 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _614 = mem[_582]
                require mem[_582] == mem[_582 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_582 + 12 len 20]
                require ext_code.size(address(_614))
                staticcall address(_614).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _733 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_733] == mem[_733 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_733 + 12 len 20]
                require ext_code.size(address(_614))
                staticcall address(_614).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _870 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_870] == mem[_870 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_870 + 12 len 20]
                require ext_code.size(address(_614))
                staticcall address(_614).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _950 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_950] == mem[_950 + 28 len 4]
                require mem[_950 + 32] == mem[_950 + 60 len 4]
                require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_950 + 28 len 4]
                idx = idx + 1
                s = s + 1
                continue 
            _534 = mem[64]
            mem[mem[64]] = 128
            _566 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _566:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_534 + 32] = (32 * _566) + 160
            _1030 = mem[(32 * arg3 - arg2) + 128]
            mem[_534 + (32 * _566) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _534 + (32 * _566) + 192
            while idx < _1030:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_534 + 64] = (32 * _566) + (32 * _1030) + 192
            _1158 = mem[(64 * arg3 - arg2) + 160]
            mem[_534 + (32 * _566) + (32 * _1030) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _534 + (32 * _566) + (32 * _1030) + 224
            while idx < _1158:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_534 + 96] = (32 * _566) + (32 * _1030) + (32 * _1158) + 224
            _1254 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_534 + (32 * _566) + (32 * _1030) + (32 * _1158) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_534 + (32 * _566) + (32 * _1030) + (32 * _1158) + 256 len 32 * _1254] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1254]
            return memory
              from mem[64]
               len _534 + (32 * _566) + (32 * _1030) + (32 * _1158) + (32 * _1254) + -mem[64] + 256
        mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _583 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _615 = mem[_583]
            require mem[_583] == mem[_583 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_583 + 12 len 20]
            require ext_code.size(address(_615))
            staticcall address(_615).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _735 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_735] == mem[_735 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_735 + 12 len 20]
            require ext_code.size(address(_615))
            staticcall address(_615).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _871 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_871] == mem[_871 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_871 + 12 len 20]
            require ext_code.size(address(_615))
            staticcall address(_615).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _951 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            require mem[_951] == mem[_951 + 28 len 4]
            require mem[_951 + 32] == mem[_951 + 60 len 4]
            require s < mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_951 + 28 len 4]
            idx = idx + 1
            s = s + 1
            continue 
        _535 = mem[64]
        mem[mem[64]] = 128
        _567 = mem[96]
        mem[mem[64] + 128] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 160
        while idx < _567:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _567) + 160
        _1031 = mem[(32 * arg3 - arg2) + 128]
        mem[mem[64] + (32 * _567) + 160] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = mem[64] + (32 * _567) + 192
        while idx < _1031:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_535 + 64] = (32 * _567) + (32 * _1031) + 192
        _1159 = mem[(64 * arg3 - arg2) + 160]
        mem[_535 + (32 * _567) + (32 * _1031) + 192] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _535 + (32 * _567) + (32 * _1031) + 224
        while idx < _1159:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_535 + 96] = (32 * _567) + (32 * _1031) + (32 * _1159) + 224
        _1255 = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_535 + (32 * _567) + (32 * _1031) + (32 * _1159) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_535 + (32 * _567) + (32 * _1031) + (32 * _1159) + 256 len 32 * _1255] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1255]
        return memory
          from mem[64]
           len _535 + (32 * _567) + (32 * _1031) + (32 * _1159) + (32 * _1255) + -mem[64] + 256
    mem[128 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    require arg3 - arg2 <= test266151307()
    mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
    if not arg3 - arg2:
        require arg3 - arg2 <= test266151307()
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        if not arg3 - arg2:
            require arg3 - arg2 <= test266151307()
            mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _584 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _616 = mem[_584]
                    require mem[_584] == mem[_584 + 12 len 20]
                    require s < mem[96]
                    mem[(32 * s) + 128] = mem[_584 + 12 len 20]
                    require ext_code.size(address(_616))
                    staticcall address(_616).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _737 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_737] == mem[_737 + 12 len 20]
                    require s < mem[(32 * arg3 - arg2) + 128]
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_737 + 12 len 20]
                    require ext_code.size(address(_616))
                    staticcall address(_616).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _872 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_872] == mem[_872 + 12 len 20]
                    require s < mem[(64 * arg3 - arg2) + 160]
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_872 + 12 len 20]
                    require ext_code.size(address(_616))
                    staticcall address(_616).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _952 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    require mem[_952] == mem[_952 + 28 len 4]
                    require mem[_952 + 32] == mem[_952 + 60 len 4]
                    require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                    mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_952 + 28 len 4]
                    idx = idx + 1
                    s = s + 1
                    continue 
                _536 = mem[64]
                mem[mem[64]] = 128
                _568 = mem[96]
                mem[mem[64] + 128] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 160
                while idx < _568:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _568) + 160
                _1032 = mem[(32 * arg3 - arg2) + 128]
                mem[mem[64] + (32 * _568) + 160] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = mem[64] + (32 * _568) + 192
                while idx < _1032:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_536 + 64] = (32 * _568) + (32 * _1032) + 192
                _1160 = mem[(64 * arg3 - arg2) + 160]
                mem[_536 + (32 * _568) + (32 * _1032) + 192] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _536 + (32 * _568) + (32 * _1032) + 224
                while idx < _1160:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_536 + 96] = (32 * _568) + (32 * _1032) + (32 * _1160) + 224
                _1256 = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_536 + (32 * _568) + (32 * _1032) + (32 * _1160) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_536 + (32 * _568) + (32 * _1032) + (32 * _1160) + 256 len 32 * _1256] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1256]
                return memory
                  from mem[64]
                   len _536 + (32 * _568) + (32 * _1032) + (32 * _1160) + (32 * _1256) + -mem[64] + 256
            mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _585 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _617 = mem[_585]
                require mem[_585] == mem[_585 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_585 + 12 len 20]
                require ext_code.size(address(_617))
                staticcall address(_617).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _739 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_739] == mem[_739 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_739 + 12 len 20]
                require ext_code.size(address(_617))
                staticcall address(_617).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _873 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_873] == mem[_873 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_873 + 12 len 20]
                require ext_code.size(address(_617))
                staticcall address(_617).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _953 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_953] == mem[_953 + 28 len 4]
                require mem[_953 + 32] == mem[_953 + 60 len 4]
                require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_953 + 28 len 4]
                idx = idx + 1
                s = s + 1
                continue 
            _537 = mem[64]
            mem[mem[64]] = 128
            _569 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _569:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _569) + 160
            _1033 = mem[(32 * arg3 - arg2) + 128]
            mem[mem[64] + (32 * _569) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = mem[64] + (32 * _569) + 192
            while idx < _1033:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * _569) + (32 * _1033) + 192
            _1161 = mem[(64 * arg3 - arg2) + 160]
            mem[mem[64] + (32 * _569) + (32 * _1033) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = mem[64] + (32 * _569) + (32 * _1033) + 224
            while idx < _1161:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_537 + 96] = (32 * _569) + (32 * _1033) + (32 * _1161) + 224
            _1257 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_537 + (32 * _569) + (32 * _1033) + (32 * _1161) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_537 + (32 * _569) + (32 * _1033) + (32 * _1161) + 256 len 32 * _1257] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1257]
            return memory
              from mem[64]
               len _537 + (32 * _569) + (32 * _1033) + (32 * _1161) + (32 * _1257) + -mem[64] + 256
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        require arg3 - arg2 <= test266151307()
        mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _586 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _618 = mem[_586]
                require mem[_586] == mem[_586 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_586 + 12 len 20]
                require ext_code.size(address(_618))
                staticcall address(_618).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _741 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_741] == mem[_741 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_741 + 12 len 20]
                require ext_code.size(address(_618))
                staticcall address(_618).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _874 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_874] == mem[_874 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_874 + 12 len 20]
                require ext_code.size(address(_618))
                staticcall address(_618).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _954 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_954] == mem[_954 + 28 len 4]
                require mem[_954 + 32] == mem[_954 + 60 len 4]
                require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_954 + 28 len 4]
                idx = idx + 1
                s = s + 1
                continue 
            _538 = mem[64]
            mem[mem[64]] = 128
            _570 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _570:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_538 + 32] = (32 * _570) + 160
            _1034 = mem[(32 * arg3 - arg2) + 128]
            mem[_538 + (32 * _570) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _538 + (32 * _570) + 192
            while idx < _1034:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_538 + 64] = (32 * _570) + (32 * _1034) + 192
            _1162 = mem[(64 * arg3 - arg2) + 160]
            mem[_538 + (32 * _570) + (32 * _1034) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _538 + (32 * _570) + (32 * _1034) + 224
            while idx < _1162:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_538 + 96] = (32 * _570) + (32 * _1034) + (32 * _1162) + 224
            _1258 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_538 + (32 * _570) + (32 * _1034) + (32 * _1162) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_538 + (32 * _570) + (32 * _1034) + (32 * _1162) + 256 len 32 * _1258] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1258]
            return memory
              from mem[64]
               len _538 + (32 * _570) + (32 * _1034) + (32 * _1162) + (32 * _1258) + -mem[64] + 256
        mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _587 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _619 = mem[_587]
            require mem[_587] == mem[_587 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_587 + 12 len 20]
            require ext_code.size(address(_619))
            staticcall address(_619).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _743 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_743] == mem[_743 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_743 + 12 len 20]
            require ext_code.size(address(_619))
            staticcall address(_619).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _875 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_875] == mem[_875 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_875 + 12 len 20]
            require ext_code.size(address(_619))
            staticcall address(_619).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _955 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            require mem[_955] == mem[_955 + 28 len 4]
            require mem[_955 + 32] == mem[_955 + 60 len 4]
            require s < mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_955 + 28 len 4]
            idx = idx + 1
            s = s + 1
            continue 
        _539 = mem[64]
        mem[mem[64]] = 128
        _571 = mem[96]
        mem[mem[64] + 128] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 160
        while idx < _571:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_539 + 32] = (32 * _571) + 160
        _1035 = mem[(32 * arg3 - arg2) + 128]
        mem[_539 + (32 * _571) + 160] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _539 + (32 * _571) + 192
        while idx < _1035:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_539 + 64] = (32 * _571) + (32 * _1035) + 192
        _1163 = mem[(64 * arg3 - arg2) + 160]
        mem[_539 + (32 * _571) + (32 * _1035) + 192] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _539 + (32 * _571) + (32 * _1035) + 224
        while idx < _1163:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_539 + 96] = (32 * _571) + (32 * _1035) + (32 * _1163) + 224
        _1259 = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_539 + (32 * _571) + (32 * _1035) + (32 * _1163) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_539 + (32 * _571) + (32 * _1035) + (32 * _1163) + 256 len 32 * _1259] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1259]
        return memory
          from mem[64]
           len _539 + (32 * _571) + (32 * _1035) + (32 * _1163) + (32 * _1259) + -mem[64] + 256
    mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    require arg3 - arg2 <= test266151307()
    mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
    if not arg3 - arg2:
        require arg3 - arg2 <= test266151307()
        mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _588 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _620 = mem[_588]
                require mem[_588] == mem[_588 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_588 + 12 len 20]
                require ext_code.size(address(_620))
                staticcall address(_620).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _745 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_745] == mem[_745 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_745 + 12 len 20]
                require ext_code.size(address(_620))
                staticcall address(_620).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _876 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_876] == mem[_876 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_876 + 12 len 20]
                require ext_code.size(address(_620))
                staticcall address(_620).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _956 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_956] == mem[_956 + 28 len 4]
                require mem[_956 + 32] == mem[_956 + 60 len 4]
                require s < mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_956 + 28 len 4]
                idx = idx + 1
                s = s + 1
                continue 
            _540 = mem[64]
            mem[mem[64]] = 128
            _572 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _572:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_540 + 32] = (32 * _572) + 160
            _1036 = mem[(32 * arg3 - arg2) + 128]
            mem[_540 + (32 * _572) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _540 + (32 * _572) + 192
            while idx < _1036:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_540 + 64] = (32 * _572) + (32 * _1036) + 192
            _1164 = mem[(64 * arg3 - arg2) + 160]
            mem[_540 + (32 * _572) + (32 * _1036) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _540 + (32 * _572) + (32 * _1036) + 224
            while idx < _1164:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_540 + 96] = (32 * _572) + (32 * _1036) + (32 * _1164) + 224
            _1260 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_540 + (32 * _572) + (32 * _1036) + (32 * _1164) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_540 + (32 * _572) + (32 * _1036) + (32 * _1164) + 256 len 32 * _1260] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1260]
            return memory
              from mem[64]
               len _540 + (32 * _572) + (32 * _1036) + (32 * _1164) + (32 * _1260) + -mem[64] + 256
        mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _589 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _621 = mem[_589]
            require mem[_589] == mem[_589 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_589 + 12 len 20]
            require ext_code.size(address(_621))
            staticcall address(_621).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _747 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_747] == mem[_747 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_747 + 12 len 20]
            require ext_code.size(address(_621))
            staticcall address(_621).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _877 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_877] == mem[_877 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_877 + 12 len 20]
            require ext_code.size(address(_621))
            staticcall address(_621).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _957 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            require mem[_957] == mem[_957 + 28 len 4]
            require mem[_957 + 32] == mem[_957 + 60 len 4]
            require s < mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_957 + 28 len 4]
            idx = idx + 1
            s = s + 1
            continue 
        _541 = mem[64]
        mem[mem[64]] = 128
        _573 = mem[96]
        mem[mem[64] + 128] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 160
        while idx < _573:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _573) + 160
        _1037 = mem[(32 * arg3 - arg2) + 128]
        mem[mem[64] + (32 * _573) + 160] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = mem[64] + (32 * _573) + 192
        while idx < _1037:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_541 + 64] = (32 * _573) + (32 * _1037) + 192
        _1165 = mem[(64 * arg3 - arg2) + 160]
        mem[_541 + (32 * _573) + (32 * _1037) + 192] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _541 + (32 * _573) + (32 * _1037) + 224
        while idx < _1165:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_541 + 96] = (32 * _573) + (32 * _1037) + (32 * _1165) + 224
        _1261 = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_541 + (32 * _573) + (32 * _1037) + (32 * _1165) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_541 + (32 * _573) + (32 * _1037) + (32 * _1165) + 256 len 32 * _1261] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1261]
        return memory
          from mem[64]
           len _541 + (32 * _573) + (32 * _1037) + (32 * _1165) + (32 * _1261) + -mem[64] + 256
    mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    require arg3 - arg2 <= test266151307()
    mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
    mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
    if not arg3 - arg2:
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _590 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _622 = mem[_590]
            require mem[_590] == mem[_590 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_590 + 12 len 20]
            require ext_code.size(address(_622))
            staticcall address(_622).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _749 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_749] == mem[_749 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_749 + 12 len 20]
            require ext_code.size(address(_622))
            staticcall address(_622).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _878 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_878] == mem[_878 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_878 + 12 len 20]
            require ext_code.size(address(_622))
            staticcall address(_622).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _958 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            require mem[_958] == mem[_958 + 28 len 4]
            require mem[_958 + 32] == mem[_958 + 60 len 4]
            require s < mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_958 + 28 len 4]
            idx = idx + 1
            s = s + 1
            continue 
        _542 = mem[64]
        mem[mem[64]] = 128
        _574 = mem[96]
        mem[mem[64] + 128] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 160
        while idx < _574:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_542 + 32] = (32 * _574) + 160
        _1038 = mem[(32 * arg3 - arg2) + 128]
        mem[_542 + (32 * _574) + 160] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _542 + (32 * _574) + 192
        while idx < _1038:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_542 + 64] = (32 * _574) + (32 * _1038) + 192
        _1166 = mem[(64 * arg3 - arg2) + 160]
        mem[_542 + (32 * _574) + (32 * _1038) + 192] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _542 + (32 * _574) + (32 * _1038) + 224
        while idx < _1166:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_542 + 96] = (32 * _574) + (32 * _1038) + (32 * _1166) + 224
        _1262 = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_542 + (32 * _574) + (32 * _1038) + (32 * _1166) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_542 + (32 * _574) + (32 * _1038) + (32 * _1166) + 256 len 32 * _1262] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1262]
        return memory
          from mem[64]
           len _542 + (32 * _574) + (32 * _1038) + (32 * _1166) + (32 * _1262) + -mem[64] + 256
    mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    idx = arg2
    s = 0
    while idx < arg3:
        mem[mem[64] + 4] = idx
        require ext_code.size(address(arg1))
        staticcall address(arg1).allPairs(uint256 arg1) with:
                gas gas_remaining wei
               args idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _591 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _623 = mem[_591]
        require mem[_591] == mem[_591 + 12 len 20]
        require s < mem[96]
        mem[(32 * s) + 128] = mem[_591 + 12 len 20]
        require ext_code.size(address(_623))
        staticcall address(_623).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _751 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_751] == mem[_751 + 12 len 20]
        require s < mem[(32 * arg3 - arg2) + 128]
        mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_751 + 12 len 20]
        require ext_code.size(address(_623))
        staticcall address(_623).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _879 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_879] == mem[_879 + 12 len 20]
        require s < mem[(64 * arg3 - arg2) + 160]
        mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_879 + 12 len 20]
        require ext_code.size(address(_623))
        staticcall address(_623).getTokenWeights() with:
                gas gas_remaining wei
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _959 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        require mem[_959] == mem[_959 + 28 len 4]
        require mem[_959 + 32] == mem[_959 + 60 len 4]
        require s < mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_959 + 28 len 4]
        idx = idx + 1
        s = s + 1
        continue 
    _543 = mem[64]
    mem[mem[64]] = 128
    _575 = mem[96]
    mem[mem[64] + 128] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 160
    while idx < _575:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 32] = (32 * _575) + 160
    _1039 = mem[(32 * arg3 - arg2) + 128]
    mem[mem[64] + (32 * _575) + 160] = mem[(32 * arg3 - arg2) + 128]
    idx = 0
    s = (32 * arg3 - arg2) + 160
    t = mem[64] + (32 * _575) + 192
    while idx < _1039:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_543 + 64] = (32 * _575) + (32 * _1039) + 192
    _1167 = mem[(64 * arg3 - arg2) + 160]
    mem[_543 + (32 * _575) + (32 * _1039) + 192] = mem[(64 * arg3 - arg2) + 160]
    idx = 0
    s = (64 * arg3 - arg2) + 192
    t = _543 + (32 * _575) + (32 * _1039) + 224
    while idx < _1167:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_543 + 96] = (32 * _575) + (32 * _1039) + (32 * _1167) + 224
    _1263 = mem[(98 * arg3) + (-98 * arg2) + 192]
    mem[_543 + (32 * _575) + (32 * _1039) + (32 * _1167) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
    mem[_543 + (32 * _575) + (32 * _1039) + (32 * _1167) + 256 len 32 * _1263] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1263]
    return memory
      from mem[64]
       len _543 + (32 * _575) + (32 * _1039) + (32 * _1167) + (32 * _1263) + -mem[64] + 256
}

function sub_76a7a689(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require ('cd', 4).length <= test266151307()
    mem[96] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                    mem[64] = (164 * ('cd', 4).length) + 256
                    if not ('cd', 4).length:
                        idx = 0
                        s = 0
                        s = 0
                        s = 0
                        s = 0
                        s = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1249 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _1313 = mem[_1249]
                            require mem[_1249] == mem[_1249 + 18 len 14]
                            _1408 = mem[_1249 + 32]
                            require mem[_1249 + 32] == mem[_1249 + 50 len 14]
                            _1473 = mem[_1249 + 64]
                            require mem[_1249 + 64] == mem[_1249 + 92 len 4]
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1696 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _1728 = mem[_1696]
                            require mem[_1696] == mem[_1696 + 28 len 4]
                            require mem[_1696 + 32] == mem[_1696 + 60 len 4]
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1856 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1888 = mem[_1856]
                            require mem[_1856] == mem[_1856 + 28 len 4]
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1313)
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1408)
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1473)
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1728)
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1888)
                            idx = idx + 1
                            s = _1888
                            s = _1473
                            s = _1408
                            s = _1313
                            s = _1728
                            continue 
                        _1056 = mem[64]
                        mem[mem[64]] = 160
                        _1088 = mem[96]
                        mem[mem[64] + 160] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + 192
                        while idx < mem[96]:
                            mem[t] = mem[s + 18 len 14]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 32] = (32 * _1088) + 192
                        _2112 = mem[(32 * ('cd', 4).length) + 128]
                        mem[_1056 + (32 * _1088) + 192] = mem[(32 * ('cd', 4).length) + 128]
                        idx = 0
                        s = (32 * ('cd', 4).length) + 160
                        t = _1056 + (32 * _1088) + 224
                        while idx < _2112:
                            mem[t] = mem[s + 18 len 14]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[_1056 + 64] = (32 * _1088) + (32 * _2112) + 224
                        _2432 = mem[(64 * ('cd', 4).length) + 160]
                        mem[_1056 + (32 * _1088) + (32 * _2112) + 224] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        t = _1056 + (32 * _1088) + (32 * _2112) + 256
                        while idx < _2432:
                            mem[t] = mem[s + 28 len 4]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[_1056 + 96] = (32 * _1088) + (32 * _2112) + (32 * _2432) + 256
                        _2688 = mem[(98 * ('cd', 4).length) + 192]
                        mem[_1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + 256] = mem[(98 * ('cd', 4).length) + 192]
                        idx = 0
                        s = (98 * ('cd', 4).length) + 224
                        t = _1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + 288
                        while idx < _2688:
                            mem[t] = mem[s + 28 len 4]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[_1056 + 128] = (32 * _1088) + (32 * _2112) + (32 * _2432) + (32 * _2688) + 288
                        _2880 = mem[(131 * ('cd', 4).length) + 224]
                        mem[_1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + (32 * _2688) + 288] = mem[(131 * ('cd', 4).length) + 224]
                        idx = 0
                        s = (131 * ('cd', 4).length) + 256
                        t = _1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + (32 * _2688) + 320
                        while idx < _2880:
                            mem[t] = mem[s + 28 len 4]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + (32 * _2688) + (32 * _2880) + -mem[64] + 320
                    mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1251 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1315 = mem[_1251]
                        require mem[_1251] == mem[_1251 + 18 len 14]
                        _1409 = mem[_1251 + 32]
                        require mem[_1251 + 32] == mem[_1251 + 50 len 14]
                        _1475 = mem[_1251 + 64]
                        require mem[_1251 + 64] == mem[_1251 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1697 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1729 = mem[_1697]
                        require mem[_1697] == mem[_1697 + 28 len 4]
                        require mem[_1697 + 32] == mem[_1697 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1857 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1889 = mem[_1857]
                        require mem[_1857] == mem[_1857 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1315)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1409)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1475)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1729)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1889)
                        idx = idx + 1
                        s = _1889
                        s = _1475
                        s = _1409
                        s = _1315
                        s = _1729
                        continue 
                    _1057 = mem[64]
                    mem[mem[64]] = 160
                    _1089 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < mem[96]:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 32] = (32 * _1089) + 192
                    _2113 = mem[(32 * ('cd', 4).length) + 128]
                    mem[_1057 + (32 * _1089) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = _1057 + (32 * _1089) + 224
                    while idx < _2113:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1057 + 64] = (32 * _1089) + (32 * _2113) + 224
                    _2433 = mem[(64 * ('cd', 4).length) + 160]
                    mem[_1057 + (32 * _1089) + (32 * _2113) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = _1057 + (32 * _1089) + (32 * _2113) + 256
                    while idx < _2433:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1057 + 96] = (32 * _1089) + (32 * _2113) + (32 * _2433) + 256
                    _2689 = mem[(98 * ('cd', 4).length) + 192]
                    mem[_1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = _1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + 288
                    while idx < _2689:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1057 + 128] = (32 * _1089) + (32 * _2113) + (32 * _2433) + (32 * _2689) + 288
                    _2881 = mem[(131 * ('cd', 4).length) + 224]
                    mem[_1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + (32 * _2689) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = _1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + (32 * _2689) + 320
                    while idx < _2881:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + (32 * _2689) + (32 * _2881) + -mem[64] + 320
                mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1253 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1317 = mem[_1253]
                        require mem[_1253] == mem[_1253 + 18 len 14]
                        _1410 = mem[_1253 + 32]
                        require mem[_1253 + 32] == mem[_1253 + 50 len 14]
                        _1477 = mem[_1253 + 64]
                        require mem[_1253 + 64] == mem[_1253 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1698 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1730 = mem[_1698]
                        require mem[_1698] == mem[_1698 + 28 len 4]
                        require mem[_1698 + 32] == mem[_1698 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1858 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1890 = mem[_1858]
                        require mem[_1858] == mem[_1858 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1317)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1410)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1477)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1730)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1890)
                        idx = idx + 1
                        s = _1890
                        s = _1477
                        s = _1410
                        s = _1317
                        s = _1730
                        continue 
                    _1058 = mem[64]
                    mem[mem[64]] = 160
                    _1090 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < mem[96]:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 32] = (32 * _1090) + 192
                    _2114 = mem[(32 * ('cd', 4).length) + 128]
                    mem[_1058 + (32 * _1090) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = _1058 + (32 * _1090) + 224
                    while idx < _2114:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1058 + 64] = (32 * _1090) + (32 * _2114) + 224
                    _2434 = mem[(64 * ('cd', 4).length) + 160]
                    mem[_1058 + (32 * _1090) + (32 * _2114) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = _1058 + (32 * _1090) + (32 * _2114) + 256
                    while idx < _2434:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1058 + 96] = (32 * _1090) + (32 * _2114) + (32 * _2434) + 256
                    _2690 = mem[(98 * ('cd', 4).length) + 192]
                    mem[_1058 + (32 * _1090) + (32 * _2114) + (32 * _2434) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = _1058 + (32 * _1090) + (32 * _2114) + (32 * _2434) + 288
                    while idx < _2690:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1058 + 128] = (32 * _1090) + (32 * _2114) + (32 * _2434) + (32 * _2690) + 288
                    _2882 = mem[(131 * ('cd', 4).length) + 224]
                    mem[_1058 + (32 * _1090) + (32 * _2114) + (32 * _2434) + (32 * _2690) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = _1058 + (32 * _1090) + (32 * _2114) + (32 * _2434) + (32 * _2690) + 320
                    while idx < _2882:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _1058 + (32 * _1090) + (32 * _2114) + (32 * _2434) + (32 * _2690) + (32 * _2882) + -mem[64] + 320
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1255 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1319 = mem[_1255]
                    require mem[_1255] == mem[_1255 + 18 len 14]
                    _1411 = mem[_1255 + 32]
                    require mem[_1255 + 32] == mem[_1255 + 50 len 14]
                    _1479 = mem[_1255 + 64]
                    require mem[_1255 + 64] == mem[_1255 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1699 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1731 = mem[_1699]
                    require mem[_1699] == mem[_1699 + 28 len 4]
                    require mem[_1699 + 32] == mem[_1699 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1859 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1891 = mem[_1859]
                    require mem[_1859] == mem[_1859 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1319)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1411)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1479)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1731)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1891)
                    idx = idx + 1
                    s = _1891
                    s = _1479
                    s = _1411
                    s = _1319
                    s = _1731
                    continue 
                _1059 = mem[64]
                mem[mem[64]] = 160
                _1091 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < _1091:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1059 + 32] = (32 * _1091) + 192
                _2115 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1059 + (32 * _1091) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1059 + (32 * _1091) + 224
                while idx < _2115:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1059 + 64] = (32 * _1091) + (32 * _2115) + 224
                _2435 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1059 + (32 * _1091) + (32 * _2115) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1059 + (32 * _1091) + (32 * _2115) + 256
                while idx < _2435:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1059 + 96] = (32 * _1091) + (32 * _2115) + (32 * _2435) + 256
                _2691 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + 288
                while idx < _2691:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1059 + 128] = (32 * _1091) + (32 * _2115) + (32 * _2435) + (32 * _2691) + 288
                _2883 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + (32 * _2691) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + (32 * _2691) + 320
                while idx < _2883:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + (32 * _2691) + (32 * _2883) + -mem[64] + 320
            mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1257 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1321 = mem[_1257]
                        require mem[_1257] == mem[_1257 + 18 len 14]
                        _1412 = mem[_1257 + 32]
                        require mem[_1257 + 32] == mem[_1257 + 50 len 14]
                        _1481 = mem[_1257 + 64]
                        require mem[_1257 + 64] == mem[_1257 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1700 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1732 = mem[_1700]
                        require mem[_1700] == mem[_1700 + 28 len 4]
                        require mem[_1700 + 32] == mem[_1700 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1860 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1892 = mem[_1860]
                        require mem[_1860] == mem[_1860 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1321)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1412)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1481)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1732)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1892)
                        idx = idx + 1
                        s = _1892
                        s = _1481
                        s = _1412
                        s = _1321
                        s = _1732
                        continue 
                    _1060 = mem[64]
                    mem[mem[64]] = 160
                    _1092 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < _1092:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1060 + 32] = (32 * _1092) + 192
                    _2116 = mem[(32 * ('cd', 4).length) + 128]
                    mem[_1060 + (32 * _1092) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = _1060 + (32 * _1092) + 224
                    while idx < _2116:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1060 + 64] = (32 * _1092) + (32 * _2116) + 224
                    _2436 = mem[(64 * ('cd', 4).length) + 160]
                    mem[_1060 + (32 * _1092) + (32 * _2116) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = _1060 + (32 * _1092) + (32 * _2116) + 256
                    while idx < _2436:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1060 + 96] = (32 * _1092) + (32 * _2116) + (32 * _2436) + 256
                    _2692 = mem[(98 * ('cd', 4).length) + 192]
                    mem[_1060 + (32 * _1092) + (32 * _2116) + (32 * _2436) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = _1060 + (32 * _1092) + (32 * _2116) + (32 * _2436) + 288
                    while idx < _2692:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1060 + 128] = (32 * _1092) + (32 * _2116) + (32 * _2436) + (32 * _2692) + 288
                    _2884 = mem[(131 * ('cd', 4).length) + 224]
                    mem[_1060 + (32 * _1092) + (32 * _2116) + (32 * _2436) + (32 * _2692) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = _1060 + (32 * _1092) + (32 * _2116) + (32 * _2436) + (32 * _2692) + 320
                    while idx < _2884:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _1060 + (32 * _1092) + (32 * _2116) + (32 * _2436) + (32 * _2692) + (32 * _2884) + -mem[64] + 320
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1259 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1323 = mem[_1259]
                    require mem[_1259] == mem[_1259 + 18 len 14]
                    _1413 = mem[_1259 + 32]
                    require mem[_1259 + 32] == mem[_1259 + 50 len 14]
                    _1483 = mem[_1259 + 64]
                    require mem[_1259 + 64] == mem[_1259 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1701 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1733 = mem[_1701]
                    require mem[_1701] == mem[_1701 + 28 len 4]
                    require mem[_1701 + 32] == mem[_1701 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1893 = mem[_1861]
                    require mem[_1861] == mem[_1861 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1323)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1413)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1483)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1733)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1893)
                    idx = idx + 1
                    s = _1893
                    s = _1483
                    s = _1413
                    s = _1323
                    s = _1733
                    continue 
                _1061 = mem[64]
                mem[mem[64]] = 160
                _1093 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < _1093:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1061 + 32] = (32 * _1093) + 192
                _2117 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1061 + (32 * _1093) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1061 + (32 * _1093) + 224
                while idx < _2117:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1061 + 64] = (32 * _1093) + (32 * _2117) + 224
                _2437 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1061 + (32 * _1093) + (32 * _2117) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1061 + (32 * _1093) + (32 * _2117) + 256
                while idx < _2437:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1061 + 96] = (32 * _1093) + (32 * _2117) + (32 * _2437) + 256
                _2693 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + 288
                while idx < _2693:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1061 + 128] = (32 * _1093) + (32 * _2117) + (32 * _2437) + (32 * _2693) + 288
                _2885 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + (32 * _2693) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + (32 * _2693) + 320
                while idx < _2885:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + (32 * _2693) + (32 * _2885) + -mem[64] + 320
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1261 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1325 = mem[_1261]
                    require mem[_1261] == mem[_1261 + 18 len 14]
                    _1414 = mem[_1261 + 32]
                    require mem[_1261 + 32] == mem[_1261 + 50 len 14]
                    _1485 = mem[_1261 + 64]
                    require mem[_1261 + 64] == mem[_1261 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1702 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1734 = mem[_1702]
                    require mem[_1702] == mem[_1702 + 28 len 4]
                    require mem[_1702 + 32] == mem[_1702 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1862 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1894 = mem[_1862]
                    require mem[_1862] == mem[_1862 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1325)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1414)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1485)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1734)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1894)
                    idx = idx + 1
                    s = _1894
                    s = _1485
                    s = _1414
                    s = _1325
                    s = _1734
                    continue 
                _1062 = mem[64]
                mem[mem[64]] = 160
                _1094 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < _1094:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1062 + 32] = (32 * _1094) + 192
                _2118 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1062 + (32 * _1094) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1062 + (32 * _1094) + 224
                while idx < _2118:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1062 + 64] = (32 * _1094) + (32 * _2118) + 224
                _2438 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1062 + (32 * _1094) + (32 * _2118) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1062 + (32 * _1094) + (32 * _2118) + 256
                while idx < _2438:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1062 + 96] = (32 * _1094) + (32 * _2118) + (32 * _2438) + 256
                _2694 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + 288
                while idx < _2694:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1062 + 128] = (32 * _1094) + (32 * _2118) + (32 * _2438) + (32 * _2694) + 288
                _2886 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + (32 * _2694) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + (32 * _2694) + 320
                while idx < _2886:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + (32 * _2694) + (32 * _2886) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1263 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1327 = mem[_1263]
                require mem[_1263] == mem[_1263 + 18 len 14]
                _1415 = mem[_1263 + 32]
                require mem[_1263 + 32] == mem[_1263 + 50 len 14]
                _1487 = mem[_1263 + 64]
                require mem[_1263 + 64] == mem[_1263 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1703 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1735 = mem[_1703]
                require mem[_1703] == mem[_1703 + 28 len 4]
                require mem[_1703 + 32] == mem[_1703 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1863 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1895 = mem[_1863]
                require mem[_1863] == mem[_1863 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1327)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1415)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1487)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1735)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1895)
                idx = idx + 1
                s = _1895
                s = _1487
                s = _1415
                s = _1327
                s = _1735
                continue 
            _1063 = mem[64]
            mem[mem[64]] = 160
            _1095 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _1095) + 192
            _2119 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1063 + (32 * _1095) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1063 + (32 * _1095) + 224
            while idx < _2119:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1063 + 64] = (32 * _1095) + (32 * _2119) + 224
            _2439 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1063 + (32 * _1095) + (32 * _2119) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1063 + (32 * _1095) + (32 * _2119) + 256
            while idx < _2439:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1063 + 96] = (32 * _1095) + (32 * _2119) + (32 * _2439) + 256
            _2695 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1063 + (32 * _1095) + (32 * _2119) + (32 * _2439) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1063 + (32 * _1095) + (32 * _2119) + (32 * _2439) + 288
            while idx < _2695:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1063 + 128] = (32 * _1095) + (32 * _2119) + (32 * _2439) + (32 * _2695) + 288
            _2887 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1063 + (32 * _1095) + (32 * _2119) + (32 * _2439) + (32 * _2695) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1063 + (32 * _1095) + (32 * _2119) + (32 * _2439) + (32 * _2695) + 320
            while idx < _2887:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1063 + (32 * _1095) + (32 * _2119) + (32 * _2439) + (32 * _2695) + (32 * _2887) + -mem[64] + 320
        mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1329 = mem[_1265]
                        require mem[_1265] == mem[_1265 + 18 len 14]
                        _1416 = mem[_1265 + 32]
                        require mem[_1265 + 32] == mem[_1265 + 50 len 14]
                        _1489 = mem[_1265 + 64]
                        require mem[_1265 + 64] == mem[_1265 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1704 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1736 = mem[_1704]
                        require mem[_1704] == mem[_1704 + 28 len 4]
                        require mem[_1704 + 32] == mem[_1704 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1864 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1896 = mem[_1864]
                        require mem[_1864] == mem[_1864 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1329)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1416)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1489)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1736)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1896)
                        idx = idx + 1
                        s = _1896
                        s = _1489
                        s = _1416
                        s = _1329
                        s = _1736
                        continue 
                    _1064 = mem[64]
                    mem[mem[64]] = 160
                    _1096 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < _1096:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1064 + 32] = (32 * _1096) + 192
                    _2120 = mem[(32 * ('cd', 4).length) + 128]
                    mem[_1064 + (32 * _1096) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = _1064 + (32 * _1096) + 224
                    while idx < _2120:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1064 + 64] = (32 * _1096) + (32 * _2120) + 224
                    _2440 = mem[(64 * ('cd', 4).length) + 160]
                    mem[_1064 + (32 * _1096) + (32 * _2120) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = _1064 + (32 * _1096) + (32 * _2120) + 256
                    while idx < _2440:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1064 + 96] = (32 * _1096) + (32 * _2120) + (32 * _2440) + 256
                    _2696 = mem[(98 * ('cd', 4).length) + 192]
                    mem[_1064 + (32 * _1096) + (32 * _2120) + (32 * _2440) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = _1064 + (32 * _1096) + (32 * _2120) + (32 * _2440) + 288
                    while idx < _2696:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1064 + 128] = (32 * _1096) + (32 * _2120) + (32 * _2440) + (32 * _2696) + 288
                    _2888 = mem[(131 * ('cd', 4).length) + 224]
                    mem[_1064 + (32 * _1096) + (32 * _2120) + (32 * _2440) + (32 * _2696) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = _1064 + (32 * _1096) + (32 * _2120) + (32 * _2440) + (32 * _2696) + 320
                    while idx < _2888:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _1064 + (32 * _1096) + (32 * _2120) + (32 * _2440) + (32 * _2696) + (32 * _2888) + -mem[64] + 320
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1267 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1331 = mem[_1267]
                    require mem[_1267] == mem[_1267 + 18 len 14]
                    _1417 = mem[_1267 + 32]
                    require mem[_1267 + 32] == mem[_1267 + 50 len 14]
                    _1491 = mem[_1267 + 64]
                    require mem[_1267 + 64] == mem[_1267 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1705 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1737 = mem[_1705]
                    require mem[_1705] == mem[_1705 + 28 len 4]
                    require mem[_1705 + 32] == mem[_1705 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1865 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1897 = mem[_1865]
                    require mem[_1865] == mem[_1865 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1331)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1417)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1491)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1737)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1897)
                    idx = idx + 1
                    s = _1897
                    s = _1491
                    s = _1417
                    s = _1331
                    s = _1737
                    continue 
                _1065 = mem[64]
                mem[mem[64]] = 160
                _1097 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < _1097:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1065 + 32] = (32 * _1097) + 192
                _2121 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1065 + (32 * _1097) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1065 + (32 * _1097) + 224
                while idx < _2121:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1065 + 64] = (32 * _1097) + (32 * _2121) + 224
                _2441 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1065 + (32 * _1097) + (32 * _2121) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1065 + (32 * _1097) + (32 * _2121) + 256
                while idx < _2441:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1065 + 96] = (32 * _1097) + (32 * _2121) + (32 * _2441) + 256
                _2697 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1065 + (32 * _1097) + (32 * _2121) + (32 * _2441) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1065 + (32 * _1097) + (32 * _2121) + (32 * _2441) + 288
                while idx < _2697:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1065 + 128] = (32 * _1097) + (32 * _2121) + (32 * _2441) + (32 * _2697) + 288
                _2889 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1065 + (32 * _1097) + (32 * _2121) + (32 * _2441) + (32 * _2697) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1065 + (32 * _1097) + (32 * _2121) + (32 * _2441) + (32 * _2697) + 320
                while idx < _2889:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1065 + (32 * _1097) + (32 * _2121) + (32 * _2441) + (32 * _2697) + (32 * _2889) + -mem[64] + 320
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1269 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1333 = mem[_1269]
                    require mem[_1269] == mem[_1269 + 18 len 14]
                    _1418 = mem[_1269 + 32]
                    require mem[_1269 + 32] == mem[_1269 + 50 len 14]
                    _1493 = mem[_1269 + 64]
                    require mem[_1269 + 64] == mem[_1269 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1706 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1738 = mem[_1706]
                    require mem[_1706] == mem[_1706 + 28 len 4]
                    require mem[_1706 + 32] == mem[_1706 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1866 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1898 = mem[_1866]
                    require mem[_1866] == mem[_1866 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1333)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1418)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1493)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1738)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1898)
                    idx = idx + 1
                    s = _1898
                    s = _1493
                    s = _1418
                    s = _1333
                    s = _1738
                    continue 
                _1066 = mem[64]
                mem[mem[64]] = 160
                _1098 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _1098) + 192
                _2122 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1066 + (32 * _1098) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1066 + (32 * _1098) + 224
                while idx < _2122:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1066 + 64] = (32 * _1098) + (32 * _2122) + 224
                _2442 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1066 + (32 * _1098) + (32 * _2122) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1066 + (32 * _1098) + (32 * _2122) + 256
                while idx < _2442:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1066 + 96] = (32 * _1098) + (32 * _2122) + (32 * _2442) + 256
                _2698 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1066 + (32 * _1098) + (32 * _2122) + (32 * _2442) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1066 + (32 * _1098) + (32 * _2122) + (32 * _2442) + 288
                while idx < _2698:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1066 + 128] = (32 * _1098) + (32 * _2122) + (32 * _2442) + (32 * _2698) + 288
                _2890 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1066 + (32 * _1098) + (32 * _2122) + (32 * _2442) + (32 * _2698) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1066 + (32 * _1098) + (32 * _2122) + (32 * _2442) + (32 * _2698) + 320
                while idx < _2890:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1066 + (32 * _1098) + (32 * _2122) + (32 * _2442) + (32 * _2698) + (32 * _2890) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1271 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1335 = mem[_1271]
                require mem[_1271] == mem[_1271 + 18 len 14]
                _1419 = mem[_1271 + 32]
                require mem[_1271 + 32] == mem[_1271 + 50 len 14]
                _1495 = mem[_1271 + 64]
                require mem[_1271 + 64] == mem[_1271 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1707 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1739 = mem[_1707]
                require mem[_1707] == mem[_1707 + 28 len 4]
                require mem[_1707 + 32] == mem[_1707 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1867 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1899 = mem[_1867]
                require mem[_1867] == mem[_1867 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1335)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1419)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1495)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1739)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1899)
                idx = idx + 1
                s = _1899
                s = _1495
                s = _1419
                s = _1335
                s = _1739
                continue 
            _1067 = mem[64]
            mem[mem[64]] = 160
            _1099 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1099:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1067 + 32] = (32 * _1099) + 192
            _2123 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1067 + (32 * _1099) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1067 + (32 * _1099) + 224
            while idx < _2123:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1067 + 64] = (32 * _1099) + (32 * _2123) + 224
            _2443 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1067 + (32 * _1099) + (32 * _2123) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1067 + (32 * _1099) + (32 * _2123) + 256
            while idx < _2443:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1067 + 96] = (32 * _1099) + (32 * _2123) + (32 * _2443) + 256
            _2699 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + 288
            while idx < _2699:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1067 + 128] = (32 * _1099) + (32 * _2123) + (32 * _2443) + (32 * _2699) + 288
            _2891 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + (32 * _2699) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + (32 * _2699) + 320
            while idx < _2891:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + (32 * _2699) + (32 * _2891) + -mem[64] + 320
        mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1273 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1337 = mem[_1273]
                    require mem[_1273] == mem[_1273 + 18 len 14]
                    _1420 = mem[_1273 + 32]
                    require mem[_1273 + 32] == mem[_1273 + 50 len 14]
                    _1497 = mem[_1273 + 64]
                    require mem[_1273 + 64] == mem[_1273 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1708 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1740 = mem[_1708]
                    require mem[_1708] == mem[_1708 + 28 len 4]
                    require mem[_1708 + 32] == mem[_1708 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1868 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1900 = mem[_1868]
                    require mem[_1868] == mem[_1868 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1337)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1420)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1497)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1740)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1900)
                    idx = idx + 1
                    s = _1900
                    s = _1497
                    s = _1420
                    s = _1337
                    s = _1740
                    continue 
                _1068 = mem[64]
                mem[mem[64]] = 160
                _1100 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _1100) + 192
                _2124 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1068 + (32 * _1100) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1068 + (32 * _1100) + 224
                while idx < _2124:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1068 + 64] = (32 * _1100) + (32 * _2124) + 224
                _2444 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1068 + (32 * _1100) + (32 * _2124) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1068 + (32 * _1100) + (32 * _2124) + 256
                while idx < _2444:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1068 + 96] = (32 * _1100) + (32 * _2124) + (32 * _2444) + 256
                _2700 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + 288
                while idx < _2700:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1068 + 128] = (32 * _1100) + (32 * _2124) + (32 * _2444) + (32 * _2700) + 288
                _2892 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + (32 * _2700) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + (32 * _2700) + 320
                while idx < _2892:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + (32 * _2700) + (32 * _2892) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1275 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1339 = mem[_1275]
                require mem[_1275] == mem[_1275 + 18 len 14]
                _1421 = mem[_1275 + 32]
                require mem[_1275 + 32] == mem[_1275 + 50 len 14]
                _1499 = mem[_1275 + 64]
                require mem[_1275 + 64] == mem[_1275 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1709 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1741 = mem[_1709]
                require mem[_1709] == mem[_1709 + 28 len 4]
                require mem[_1709 + 32] == mem[_1709 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1869 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1901 = mem[_1869]
                require mem[_1869] == mem[_1869 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1339)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1421)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1499)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1741)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1901)
                idx = idx + 1
                s = _1901
                s = _1499
                s = _1421
                s = _1339
                s = _1741
                continue 
            _1069 = mem[64]
            mem[mem[64]] = 160
            _1101 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1101:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1069 + 32] = (32 * _1101) + 192
            _2125 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1069 + (32 * _1101) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1069 + (32 * _1101) + 224
            while idx < _2125:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1069 + 64] = (32 * _1101) + (32 * _2125) + 224
            _2445 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1069 + (32 * _1101) + (32 * _2125) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1069 + (32 * _1101) + (32 * _2125) + 256
            while idx < _2445:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1069 + 96] = (32 * _1101) + (32 * _2125) + (32 * _2445) + 256
            _2701 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + 288
            while idx < _2701:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1069 + 128] = (32 * _1101) + (32 * _2125) + (32 * _2445) + (32 * _2701) + 288
            _2893 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + (32 * _2701) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + (32 * _2701) + 320
            while idx < _2893:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + (32 * _2701) + (32 * _2893) + -mem[64] + 320
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
        mem[64] = (164 * ('cd', 4).length) + 256
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1277 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1341 = mem[_1277]
                require mem[_1277] == mem[_1277 + 18 len 14]
                _1422 = mem[_1277 + 32]
                require mem[_1277 + 32] == mem[_1277 + 50 len 14]
                _1501 = mem[_1277 + 64]
                require mem[_1277 + 64] == mem[_1277 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1710 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1742 = mem[_1710]
                require mem[_1710] == mem[_1710 + 28 len 4]
                require mem[_1710 + 32] == mem[_1710 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1870 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1902 = mem[_1870]
                require mem[_1870] == mem[_1870 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1341)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1422)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1501)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1742)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1902)
                idx = idx + 1
                s = _1902
                s = _1501
                s = _1422
                s = _1341
                s = _1742
                continue 
            _1070 = mem[64]
            mem[mem[64]] = 160
            _1102 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _1102) + 192
            _2126 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1070 + (32 * _1102) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1070 + (32 * _1102) + 224
            while idx < _2126:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1070 + 64] = (32 * _1102) + (32 * _2126) + 224
            _2446 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1070 + (32 * _1102) + (32 * _2126) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1070 + (32 * _1102) + (32 * _2126) + 256
            while idx < _2446:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1070 + 96] = (32 * _1102) + (32 * _2126) + (32 * _2446) + 256
            _2702 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + 288
            while idx < _2702:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1070 + 128] = (32 * _1102) + (32 * _2126) + (32 * _2446) + (32 * _2702) + 288
            _2894 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + (32 * _2702) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + (32 * _2702) + 320
            while idx < _2894:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + (32 * _2702) + (32 * _2894) + -mem[64] + 320
        mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1279 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1343 = mem[_1279]
            require mem[_1279] == mem[_1279 + 18 len 14]
            _1423 = mem[_1279 + 32]
            require mem[_1279 + 32] == mem[_1279 + 50 len 14]
            _1503 = mem[_1279 + 64]
            require mem[_1279 + 64] == mem[_1279 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1711 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1743 = mem[_1711]
            require mem[_1711] == mem[_1711 + 28 len 4]
            require mem[_1711 + 32] == mem[_1711 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1871 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1903 = mem[_1871]
            require mem[_1871] == mem[_1871 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1343)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1423)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1503)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1743)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1903)
            idx = idx + 1
            s = _1903
            s = _1503
            s = _1423
            s = _1343
            s = _1743
            continue 
        _1071 = mem[64]
        mem[mem[64]] = 160
        _1103 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < _1103:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1071 + 32] = (32 * _1103) + 192
        _2127 = mem[(32 * ('cd', 4).length) + 128]
        mem[_1071 + (32 * _1103) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = _1071 + (32 * _1103) + 224
        while idx < _2127:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1071 + 64] = (32 * _1103) + (32 * _2127) + 224
        _2447 = mem[(64 * ('cd', 4).length) + 160]
        mem[_1071 + (32 * _1103) + (32 * _2127) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _1071 + (32 * _1103) + (32 * _2127) + 256
        while idx < _2447:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1071 + 96] = (32 * _1103) + (32 * _2127) + (32 * _2447) + 256
        _2703 = mem[(98 * ('cd', 4).length) + 192]
        mem[_1071 + (32 * _1103) + (32 * _2127) + (32 * _2447) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _1071 + (32 * _1103) + (32 * _2127) + (32 * _2447) + 288
        while idx < _2703:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1071 + 128] = (32 * _1103) + (32 * _2127) + (32 * _2447) + (32 * _2703) + 288
        _2895 = mem[(131 * ('cd', 4).length) + 224]
        mem[_1071 + (32 * _1103) + (32 * _2127) + (32 * _2447) + (32 * _2703) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = _1071 + (32 * _1103) + (32 * _2127) + (32 * _2447) + (32 * _2703) + 320
        while idx < _2895:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1071 + (32 * _1103) + (32 * _2127) + (32 * _2447) + (32 * _2703) + (32 * _2895) + -mem[64] + 320
    mem[128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1281 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1345 = mem[_1281]
                        require mem[_1281] == mem[_1281 + 18 len 14]
                        _1424 = mem[_1281 + 32]
                        require mem[_1281 + 32] == mem[_1281 + 50 len 14]
                        _1505 = mem[_1281 + 64]
                        require mem[_1281 + 64] == mem[_1281 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1712 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1744 = mem[_1712]
                        require mem[_1712] == mem[_1712 + 28 len 4]
                        require mem[_1712 + 32] == mem[_1712 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1872 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1904 = mem[_1872]
                        require mem[_1872] == mem[_1872 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1345)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1424)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1505)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1744)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1904)
                        idx = idx + 1
                        s = _1904
                        s = _1505
                        s = _1424
                        s = _1345
                        s = _1744
                        continue 
                    _1072 = mem[64]
                    mem[mem[64]] = 160
                    _1104 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < _1104:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1072 + 32] = (32 * _1104) + 192
                    _2128 = mem[(32 * ('cd', 4).length) + 128]
                    mem[_1072 + (32 * _1104) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = _1072 + (32 * _1104) + 224
                    while idx < _2128:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1072 + 64] = (32 * _1104) + (32 * _2128) + 224
                    _2448 = mem[(64 * ('cd', 4).length) + 160]
                    mem[_1072 + (32 * _1104) + (32 * _2128) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = _1072 + (32 * _1104) + (32 * _2128) + 256
                    while idx < _2448:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1072 + 96] = (32 * _1104) + (32 * _2128) + (32 * _2448) + 256
                    _2704 = mem[(98 * ('cd', 4).length) + 192]
                    mem[_1072 + (32 * _1104) + (32 * _2128) + (32 * _2448) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = _1072 + (32 * _1104) + (32 * _2128) + (32 * _2448) + 288
                    while idx < _2704:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1072 + 128] = (32 * _1104) + (32 * _2128) + (32 * _2448) + (32 * _2704) + 288
                    _2896 = mem[(131 * ('cd', 4).length) + 224]
                    mem[_1072 + (32 * _1104) + (32 * _2128) + (32 * _2448) + (32 * _2704) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = _1072 + (32 * _1104) + (32 * _2128) + (32 * _2448) + (32 * _2704) + 320
                    while idx < _2896:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _1072 + (32 * _1104) + (32 * _2128) + (32 * _2448) + (32 * _2704) + (32 * _2896) + -mem[64] + 320
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1283 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1347 = mem[_1283]
                    require mem[_1283] == mem[_1283 + 18 len 14]
                    _1425 = mem[_1283 + 32]
                    require mem[_1283 + 32] == mem[_1283 + 50 len 14]
                    _1507 = mem[_1283 + 64]
                    require mem[_1283 + 64] == mem[_1283 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1713 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1745 = mem[_1713]
                    require mem[_1713] == mem[_1713 + 28 len 4]
                    require mem[_1713 + 32] == mem[_1713 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1873 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1905 = mem[_1873]
                    require mem[_1873] == mem[_1873 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1347)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1425)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1507)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1745)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1905)
                    idx = idx + 1
                    s = _1905
                    s = _1507
                    s = _1425
                    s = _1347
                    s = _1745
                    continue 
                _1073 = mem[64]
                mem[mem[64]] = 160
                _1105 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < _1105:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1073 + 32] = (32 * _1105) + 192
                _2129 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1073 + (32 * _1105) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1073 + (32 * _1105) + 224
                while idx < _2129:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1073 + 64] = (32 * _1105) + (32 * _2129) + 224
                _2449 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1073 + (32 * _1105) + (32 * _2129) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1073 + (32 * _1105) + (32 * _2129) + 256
                while idx < _2449:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1073 + 96] = (32 * _1105) + (32 * _2129) + (32 * _2449) + 256
                _2705 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + 288
                while idx < _2705:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1073 + 128] = (32 * _1105) + (32 * _2129) + (32 * _2449) + (32 * _2705) + 288
                _2897 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + (32 * _2705) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + (32 * _2705) + 320
                while idx < _2897:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + (32 * _2705) + (32 * _2897) + -mem[64] + 320
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1285 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1349 = mem[_1285]
                    require mem[_1285] == mem[_1285 + 18 len 14]
                    _1426 = mem[_1285 + 32]
                    require mem[_1285 + 32] == mem[_1285 + 50 len 14]
                    _1509 = mem[_1285 + 64]
                    require mem[_1285 + 64] == mem[_1285 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1714 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1746 = mem[_1714]
                    require mem[_1714] == mem[_1714 + 28 len 4]
                    require mem[_1714 + 32] == mem[_1714 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1874 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1906 = mem[_1874]
                    require mem[_1874] == mem[_1874 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1349)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1426)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1509)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1746)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1906)
                    idx = idx + 1
                    s = _1906
                    s = _1509
                    s = _1426
                    s = _1349
                    s = _1746
                    continue 
                _1074 = mem[64]
                mem[mem[64]] = 160
                _1106 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < _1106:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1074 + 32] = (32 * _1106) + 192
                _2130 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1074 + (32 * _1106) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1074 + (32 * _1106) + 224
                while idx < _2130:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1074 + 64] = (32 * _1106) + (32 * _2130) + 224
                _2450 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1074 + (32 * _1106) + (32 * _2130) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1074 + (32 * _1106) + (32 * _2130) + 256
                while idx < _2450:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1074 + 96] = (32 * _1106) + (32 * _2130) + (32 * _2450) + 256
                _2706 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1074 + (32 * _1106) + (32 * _2130) + (32 * _2450) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1074 + (32 * _1106) + (32 * _2130) + (32 * _2450) + 288
                while idx < _2706:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1074 + 128] = (32 * _1106) + (32 * _2130) + (32 * _2450) + (32 * _2706) + 288
                _2898 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1074 + (32 * _1106) + (32 * _2130) + (32 * _2450) + (32 * _2706) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1074 + (32 * _1106) + (32 * _2130) + (32 * _2450) + (32 * _2706) + 320
                while idx < _2898:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1074 + (32 * _1106) + (32 * _2130) + (32 * _2450) + (32 * _2706) + (32 * _2898) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1287 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1351 = mem[_1287]
                require mem[_1287] == mem[_1287 + 18 len 14]
                _1427 = mem[_1287 + 32]
                require mem[_1287 + 32] == mem[_1287 + 50 len 14]
                _1511 = mem[_1287 + 64]
                require mem[_1287 + 64] == mem[_1287 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1715 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1747 = mem[_1715]
                require mem[_1715] == mem[_1715 + 28 len 4]
                require mem[_1715 + 32] == mem[_1715 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1875 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1907 = mem[_1875]
                require mem[_1875] == mem[_1875 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1351)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1427)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1511)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1747)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1907)
                idx = idx + 1
                s = _1907
                s = _1511
                s = _1427
                s = _1351
                s = _1747
                continue 
            _1075 = mem[64]
            mem[mem[64]] = 160
            _1107 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1107:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1075 + 32] = (32 * _1107) + 192
            _2131 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1075 + (32 * _1107) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1075 + (32 * _1107) + 224
            while idx < _2131:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1075 + 64] = (32 * _1107) + (32 * _2131) + 224
            _2451 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1075 + (32 * _1107) + (32 * _2131) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1075 + (32 * _1107) + (32 * _2131) + 256
            while idx < _2451:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1075 + 96] = (32 * _1107) + (32 * _2131) + (32 * _2451) + 256
            _2707 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + 288
            while idx < _2707:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1075 + 128] = (32 * _1107) + (32 * _2131) + (32 * _2451) + (32 * _2707) + 288
            _2899 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + (32 * _2707) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + (32 * _2707) + 320
            while idx < _2899:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + (32 * _2707) + (32 * _2899) + -mem[64] + 320
        mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1353 = mem[_1289]
                    require mem[_1289] == mem[_1289 + 18 len 14]
                    _1428 = mem[_1289 + 32]
                    require mem[_1289 + 32] == mem[_1289 + 50 len 14]
                    _1513 = mem[_1289 + 64]
                    require mem[_1289 + 64] == mem[_1289 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1716 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1748 = mem[_1716]
                    require mem[_1716] == mem[_1716 + 28 len 4]
                    require mem[_1716 + 32] == mem[_1716 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1876 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1908 = mem[_1876]
                    require mem[_1876] == mem[_1876 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1353)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1428)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1513)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1748)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1908)
                    idx = idx + 1
                    s = _1908
                    s = _1513
                    s = _1428
                    s = _1353
                    s = _1748
                    continue 
                _1076 = mem[64]
                mem[mem[64]] = 160
                _1108 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < _1108:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1076 + 32] = (32 * _1108) + 192
                _2132 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1076 + (32 * _1108) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1076 + (32 * _1108) + 224
                while idx < _2132:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1076 + 64] = (32 * _1108) + (32 * _2132) + 224
                _2452 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1076 + (32 * _1108) + (32 * _2132) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1076 + (32 * _1108) + (32 * _2132) + 256
                while idx < _2452:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1076 + 96] = (32 * _1108) + (32 * _2132) + (32 * _2452) + 256
                _2708 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + 288
                while idx < _2708:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1076 + 128] = (32 * _1108) + (32 * _2132) + (32 * _2452) + (32 * _2708) + 288
                _2900 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + (32 * _2708) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + (32 * _2708) + 320
                while idx < _2900:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + (32 * _2708) + (32 * _2900) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1291 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1355 = mem[_1291]
                require mem[_1291] == mem[_1291 + 18 len 14]
                _1429 = mem[_1291 + 32]
                require mem[_1291 + 32] == mem[_1291 + 50 len 14]
                _1515 = mem[_1291 + 64]
                require mem[_1291 + 64] == mem[_1291 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1717 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1749 = mem[_1717]
                require mem[_1717] == mem[_1717 + 28 len 4]
                require mem[_1717 + 32] == mem[_1717 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1877 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1909 = mem[_1877]
                require mem[_1877] == mem[_1877 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1355)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1429)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1515)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1749)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1909)
                idx = idx + 1
                s = _1909
                s = _1515
                s = _1429
                s = _1355
                s = _1749
                continue 
            _1077 = mem[64]
            mem[mem[64]] = 160
            _1109 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1109:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1077 + 32] = (32 * _1109) + 192
            _2133 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1077 + (32 * _1109) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1077 + (32 * _1109) + 224
            while idx < _2133:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1077 + 64] = (32 * _1109) + (32 * _2133) + 224
            _2453 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1077 + (32 * _1109) + (32 * _2133) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1077 + (32 * _1109) + (32 * _2133) + 256
            while idx < _2453:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1077 + 96] = (32 * _1109) + (32 * _2133) + (32 * _2453) + 256
            _2709 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + 288
            while idx < _2709:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1077 + 128] = (32 * _1109) + (32 * _2133) + (32 * _2453) + (32 * _2709) + 288
            _2901 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + (32 * _2709) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + (32 * _2709) + 320
            while idx < _2901:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + (32 * _2709) + (32 * _2901) + -mem[64] + 320
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
        mem[64] = (164 * ('cd', 4).length) + 256
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1293 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1357 = mem[_1293]
                require mem[_1293] == mem[_1293 + 18 len 14]
                _1430 = mem[_1293 + 32]
                require mem[_1293 + 32] == mem[_1293 + 50 len 14]
                _1517 = mem[_1293 + 64]
                require mem[_1293 + 64] == mem[_1293 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1718 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1750 = mem[_1718]
                require mem[_1718] == mem[_1718 + 28 len 4]
                require mem[_1718 + 32] == mem[_1718 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1878 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1910 = mem[_1878]
                require mem[_1878] == mem[_1878 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1357)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1430)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1517)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1750)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1910)
                idx = idx + 1
                s = _1910
                s = _1517
                s = _1430
                s = _1357
                s = _1750
                continue 
            _1078 = mem[64]
            mem[mem[64]] = 160
            _1110 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1110:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1078 + 32] = (32 * _1110) + 192
            _2134 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1078 + (32 * _1110) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1078 + (32 * _1110) + 224
            while idx < _2134:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1078 + 64] = (32 * _1110) + (32 * _2134) + 224
            _2454 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1078 + (32 * _1110) + (32 * _2134) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1078 + (32 * _1110) + (32 * _2134) + 256
            while idx < _2454:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1078 + 96] = (32 * _1110) + (32 * _2134) + (32 * _2454) + 256
            _2710 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1078 + (32 * _1110) + (32 * _2134) + (32 * _2454) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1078 + (32 * _1110) + (32 * _2134) + (32 * _2454) + 288
            while idx < _2710:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1078 + 128] = (32 * _1110) + (32 * _2134) + (32 * _2454) + (32 * _2710) + 288
            _2902 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1078 + (32 * _1110) + (32 * _2134) + (32 * _2454) + (32 * _2710) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1078 + (32 * _1110) + (32 * _2134) + (32 * _2454) + (32 * _2710) + 320
            while idx < _2902:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1078 + (32 * _1110) + (32 * _2134) + (32 * _2454) + (32 * _2710) + (32 * _2902) + -mem[64] + 320
        mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1295 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1359 = mem[_1295]
            require mem[_1295] == mem[_1295 + 18 len 14]
            _1431 = mem[_1295 + 32]
            require mem[_1295 + 32] == mem[_1295 + 50 len 14]
            _1519 = mem[_1295 + 64]
            require mem[_1295 + 64] == mem[_1295 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1719 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1751 = mem[_1719]
            require mem[_1719] == mem[_1719 + 28 len 4]
            require mem[_1719 + 32] == mem[_1719 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1879 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1911 = mem[_1879]
            require mem[_1879] == mem[_1879 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1359)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1431)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1519)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1751)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1911)
            idx = idx + 1
            s = _1911
            s = _1519
            s = _1431
            s = _1359
            s = _1751
            continue 
        _1079 = mem[64]
        mem[mem[64]] = 160
        _1111 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < _1111:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1079 + 32] = (32 * _1111) + 192
        _2135 = mem[(32 * ('cd', 4).length) + 128]
        mem[_1079 + (32 * _1111) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = _1079 + (32 * _1111) + 224
        while idx < _2135:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1079 + 64] = (32 * _1111) + (32 * _2135) + 224
        _2455 = mem[(64 * ('cd', 4).length) + 160]
        mem[_1079 + (32 * _1111) + (32 * _2135) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _1079 + (32 * _1111) + (32 * _2135) + 256
        while idx < _2455:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1079 + 96] = (32 * _1111) + (32 * _2135) + (32 * _2455) + 256
        _2711 = mem[(98 * ('cd', 4).length) + 192]
        mem[_1079 + (32 * _1111) + (32 * _2135) + (32 * _2455) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _1079 + (32 * _1111) + (32 * _2135) + (32 * _2455) + 288
        while idx < _2711:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1079 + 128] = (32 * _1111) + (32 * _2135) + (32 * _2455) + (32 * _2711) + 288
        _2903 = mem[(131 * ('cd', 4).length) + 224]
        mem[_1079 + (32 * _1111) + (32 * _2135) + (32 * _2455) + (32 * _2711) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = _1079 + (32 * _1111) + (32 * _2135) + (32 * _2455) + (32 * _2711) + 320
        while idx < _2903:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1079 + (32 * _1111) + (32 * _2135) + (32 * _2455) + (32 * _2711) + (32 * _2903) + -mem[64] + 320
    mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1297 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1361 = mem[_1297]
                    require mem[_1297] == mem[_1297 + 18 len 14]
                    _1432 = mem[_1297 + 32]
                    require mem[_1297 + 32] == mem[_1297 + 50 len 14]
                    _1521 = mem[_1297 + 64]
                    require mem[_1297 + 64] == mem[_1297 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1720 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1752 = mem[_1720]
                    require mem[_1720] == mem[_1720 + 28 len 4]
                    require mem[_1720 + 32] == mem[_1720 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1880 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1912 = mem[_1880]
                    require mem[_1880] == mem[_1880 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1361)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1432)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1521)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1752)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1912)
                    idx = idx + 1
                    s = _1912
                    s = _1521
                    s = _1432
                    s = _1361
                    s = _1752
                    continue 
                _1080 = mem[64]
                mem[mem[64]] = 160
                _1112 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _1112) + 192
                _2136 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1080 + (32 * _1112) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1080 + (32 * _1112) + 224
                while idx < _2136:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1080 + 64] = (32 * _1112) + (32 * _2136) + 224
                _2456 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1080 + (32 * _1112) + (32 * _2136) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1080 + (32 * _1112) + (32 * _2136) + 256
                while idx < _2456:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1080 + 96] = (32 * _1112) + (32 * _2136) + (32 * _2456) + 256
                _2712 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + 288
                while idx < _2712:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1080 + 128] = (32 * _1112) + (32 * _2136) + (32 * _2456) + (32 * _2712) + 288
                _2904 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + (32 * _2712) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + (32 * _2712) + 320
                while idx < _2904:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + (32 * _2712) + (32 * _2904) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1299 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1363 = mem[_1299]
                require mem[_1299] == mem[_1299 + 18 len 14]
                _1433 = mem[_1299 + 32]
                require mem[_1299 + 32] == mem[_1299 + 50 len 14]
                _1523 = mem[_1299 + 64]
                require mem[_1299 + 64] == mem[_1299 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1721 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1753 = mem[_1721]
                require mem[_1721] == mem[_1721 + 28 len 4]
                require mem[_1721 + 32] == mem[_1721 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1881 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1913 = mem[_1881]
                require mem[_1881] == mem[_1881 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1363)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1433)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1523)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1753)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1913)
                idx = idx + 1
                s = _1913
                s = _1523
                s = _1433
                s = _1363
                s = _1753
                continue 
            _1081 = mem[64]
            mem[mem[64]] = 160
            _1113 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1113:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1081 + 32] = (32 * _1113) + 192
            _2137 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1081 + (32 * _1113) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1081 + (32 * _1113) + 224
            while idx < _2137:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1081 + 64] = (32 * _1113) + (32 * _2137) + 224
            _2457 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1081 + (32 * _1113) + (32 * _2137) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1081 + (32 * _1113) + (32 * _2137) + 256
            while idx < _2457:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1081 + 96] = (32 * _1113) + (32 * _2137) + (32 * _2457) + 256
            _2713 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1081 + (32 * _1113) + (32 * _2137) + (32 * _2457) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1081 + (32 * _1113) + (32 * _2137) + (32 * _2457) + 288
            while idx < _2713:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1081 + 128] = (32 * _1113) + (32 * _2137) + (32 * _2457) + (32 * _2713) + 288
            _2905 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1081 + (32 * _1113) + (32 * _2137) + (32 * _2457) + (32 * _2713) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1081 + (32 * _1113) + (32 * _2137) + (32 * _2457) + (32 * _2713) + 320
            while idx < _2905:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1081 + (32 * _1113) + (32 * _2137) + (32 * _2457) + (32 * _2713) + (32 * _2905) + -mem[64] + 320
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
        mem[64] = (164 * ('cd', 4).length) + 256
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1301 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1365 = mem[_1301]
                require mem[_1301] == mem[_1301 + 18 len 14]
                _1434 = mem[_1301 + 32]
                require mem[_1301 + 32] == mem[_1301 + 50 len 14]
                _1525 = mem[_1301 + 64]
                require mem[_1301 + 64] == mem[_1301 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1722 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1754 = mem[_1722]
                require mem[_1722] == mem[_1722 + 28 len 4]
                require mem[_1722 + 32] == mem[_1722 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1882 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1914 = mem[_1882]
                require mem[_1882] == mem[_1882 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1365)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1434)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1525)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1754)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1914)
                idx = idx + 1
                s = _1914
                s = _1525
                s = _1434
                s = _1365
                s = _1754
                continue 
            _1082 = mem[64]
            mem[mem[64]] = 160
            _1114 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1114:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1082 + 32] = (32 * _1114) + 192
            _2138 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1082 + (32 * _1114) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1082 + (32 * _1114) + 224
            while idx < _2138:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1082 + 64] = (32 * _1114) + (32 * _2138) + 224
            _2458 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1082 + (32 * _1114) + (32 * _2138) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1082 + (32 * _1114) + (32 * _2138) + 256
            while idx < _2458:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1082 + 96] = (32 * _1114) + (32 * _2138) + (32 * _2458) + 256
            _2714 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1082 + (32 * _1114) + (32 * _2138) + (32 * _2458) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1082 + (32 * _1114) + (32 * _2138) + (32 * _2458) + 288
            while idx < _2714:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1082 + 128] = (32 * _1114) + (32 * _2138) + (32 * _2458) + (32 * _2714) + 288
            _2906 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1082 + (32 * _1114) + (32 * _2138) + (32 * _2458) + (32 * _2714) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1082 + (32 * _1114) + (32 * _2138) + (32 * _2458) + (32 * _2714) + 320
            while idx < _2906:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1082 + (32 * _1114) + (32 * _2138) + (32 * _2458) + (32 * _2714) + (32 * _2906) + -mem[64] + 320
        mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1303 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1367 = mem[_1303]
            require mem[_1303] == mem[_1303 + 18 len 14]
            _1435 = mem[_1303 + 32]
            require mem[_1303 + 32] == mem[_1303 + 50 len 14]
            _1527 = mem[_1303 + 64]
            require mem[_1303 + 64] == mem[_1303 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1723 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1755 = mem[_1723]
            require mem[_1723] == mem[_1723 + 28 len 4]
            require mem[_1723 + 32] == mem[_1723 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1883 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1915 = mem[_1883]
            require mem[_1883] == mem[_1883 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1367)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1435)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1527)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1755)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1915)
            idx = idx + 1
            s = _1915
            s = _1527
            s = _1435
            s = _1367
            s = _1755
            continue 
        _1083 = mem[64]
        mem[mem[64]] = 160
        _1115 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < _1115:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1083 + 32] = (32 * _1115) + 192
        _2139 = mem[(32 * ('cd', 4).length) + 128]
        mem[_1083 + (32 * _1115) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = _1083 + (32 * _1115) + 224
        while idx < _2139:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1083 + 64] = (32 * _1115) + (32 * _2139) + 224
        _2459 = mem[(64 * ('cd', 4).length) + 160]
        mem[_1083 + (32 * _1115) + (32 * _2139) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _1083 + (32 * _1115) + (32 * _2139) + 256
        while idx < _2459:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1083 + 96] = (32 * _1115) + (32 * _2139) + (32 * _2459) + 256
        _2715 = mem[(98 * ('cd', 4).length) + 192]
        mem[_1083 + (32 * _1115) + (32 * _2139) + (32 * _2459) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _1083 + (32 * _1115) + (32 * _2139) + (32 * _2459) + 288
        while idx < _2715:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1083 + 128] = (32 * _1115) + (32 * _2139) + (32 * _2459) + (32 * _2715) + 288
        _2907 = mem[(131 * ('cd', 4).length) + 224]
        mem[_1083 + (32 * _1115) + (32 * _2139) + (32 * _2459) + (32 * _2715) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = _1083 + (32 * _1115) + (32 * _2139) + (32 * _2459) + (32 * _2715) + 320
        while idx < _2907:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1083 + (32 * _1115) + (32 * _2139) + (32 * _2459) + (32 * _2715) + (32 * _2907) + -mem[64] + 320
    mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
        mem[64] = (164 * ('cd', 4).length) + 256
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1305 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1369 = mem[_1305]
                require mem[_1305] == mem[_1305 + 18 len 14]
                _1436 = mem[_1305 + 32]
                require mem[_1305 + 32] == mem[_1305 + 50 len 14]
                _1529 = mem[_1305 + 64]
                require mem[_1305 + 64] == mem[_1305 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1724 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1756 = mem[_1724]
                require mem[_1724] == mem[_1724 + 28 len 4]
                require mem[_1724 + 32] == mem[_1724 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1884 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1916 = mem[_1884]
                require mem[_1884] == mem[_1884 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1369)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1436)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1529)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1756)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1916)
                idx = idx + 1
                s = _1916
                s = _1529
                s = _1436
                s = _1369
                s = _1756
                continue 
            _1084 = mem[64]
            mem[mem[64]] = 160
            _1116 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1116:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1084 + 32] = (32 * _1116) + 192
            _2140 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1084 + (32 * _1116) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1084 + (32 * _1116) + 224
            while idx < _2140:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1084 + 64] = (32 * _1116) + (32 * _2140) + 224
            _2460 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1084 + (32 * _1116) + (32 * _2140) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1084 + (32 * _1116) + (32 * _2140) + 256
            while idx < _2460:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1084 + 96] = (32 * _1116) + (32 * _2140) + (32 * _2460) + 256
            _2716 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + 288
            while idx < _2716:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1084 + 128] = (32 * _1116) + (32 * _2140) + (32 * _2460) + (32 * _2716) + 288
            _2908 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + (32 * _2716) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + (32 * _2716) + 320
            while idx < _2908:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + (32 * _2716) + (32 * _2908) + -mem[64] + 320
        mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1307 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1371 = mem[_1307]
            require mem[_1307] == mem[_1307 + 18 len 14]
            _1437 = mem[_1307 + 32]
            require mem[_1307 + 32] == mem[_1307 + 50 len 14]
            _1531 = mem[_1307 + 64]
            require mem[_1307 + 64] == mem[_1307 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1725 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1757 = mem[_1725]
            require mem[_1725] == mem[_1725 + 28 len 4]
            require mem[_1725 + 32] == mem[_1725 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1885 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1917 = mem[_1885]
            require mem[_1885] == mem[_1885 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1371)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1437)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1531)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1757)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1917)
            idx = idx + 1
            s = _1917
            s = _1531
            s = _1437
            s = _1371
            s = _1757
            continue 
        _1085 = mem[64]
        mem[mem[64]] = 160
        _1117 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < mem[96]:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _1117) + 192
        _2141 = mem[(32 * ('cd', 4).length) + 128]
        mem[_1085 + (32 * _1117) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = _1085 + (32 * _1117) + 224
        while idx < _2141:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1085 + 64] = (32 * _1117) + (32 * _2141) + 224
        _2461 = mem[(64 * ('cd', 4).length) + 160]
        mem[_1085 + (32 * _1117) + (32 * _2141) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _1085 + (32 * _1117) + (32 * _2141) + 256
        while idx < _2461:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1085 + 96] = (32 * _1117) + (32 * _2141) + (32 * _2461) + 256
        _2717 = mem[(98 * ('cd', 4).length) + 192]
        mem[_1085 + (32 * _1117) + (32 * _2141) + (32 * _2461) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _1085 + (32 * _1117) + (32 * _2141) + (32 * _2461) + 288
        while idx < _2717:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1085 + 128] = (32 * _1117) + (32 * _2141) + (32 * _2461) + (32 * _2717) + 288
        _2909 = mem[(131 * ('cd', 4).length) + 224]
        mem[_1085 + (32 * _1117) + (32 * _2141) + (32 * _2461) + (32 * _2717) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = _1085 + (32 * _1117) + (32 * _2141) + (32 * _2461) + (32 * _2717) + 320
        while idx < _2909:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1085 + (32 * _1117) + (32 * _2141) + (32 * _2461) + (32 * _2717) + (32 * _2909) + -mem[64] + 320
    mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
    mem[64] = (164 * ('cd', 4).length) + 256
    if not ('cd', 4).length:
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1309 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1373 = mem[_1309]
            require mem[_1309] == mem[_1309 + 18 len 14]
            _1438 = mem[_1309 + 32]
            require mem[_1309 + 32] == mem[_1309 + 50 len 14]
            _1533 = mem[_1309 + 64]
            require mem[_1309 + 64] == mem[_1309 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1726 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1758 = mem[_1726]
            require mem[_1726] == mem[_1726 + 28 len 4]
            require mem[_1726 + 32] == mem[_1726 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1886 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1918 = mem[_1886]
            require mem[_1886] == mem[_1886 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1373)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1438)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1533)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1758)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1918)
            idx = idx + 1
            s = _1918
            s = _1533
            s = _1438
            s = _1373
            s = _1758
            continue 
        _1086 = mem[64]
        mem[mem[64]] = 160
        _1118 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < _1118:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1086 + 32] = (32 * _1118) + 192
        _2142 = mem[(32 * ('cd', 4).length) + 128]
        mem[_1086 + (32 * _1118) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = _1086 + (32 * _1118) + 224
        while idx < _2142:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1086 + 64] = (32 * _1118) + (32 * _2142) + 224
        _2462 = mem[(64 * ('cd', 4).length) + 160]
        mem[_1086 + (32 * _1118) + (32 * _2142) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _1086 + (32 * _1118) + (32 * _2142) + 256
        while idx < _2462:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1086 + 96] = (32 * _1118) + (32 * _2142) + (32 * _2462) + 256
        _2718 = mem[(98 * ('cd', 4).length) + 192]
        mem[_1086 + (32 * _1118) + (32 * _2142) + (32 * _2462) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _1086 + (32 * _1118) + (32 * _2142) + (32 * _2462) + 288
        while idx < _2718:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1086 + 128] = (32 * _1118) + (32 * _2142) + (32 * _2462) + (32 * _2718) + 288
        _2910 = mem[(131 * ('cd', 4).length) + 224]
        mem[_1086 + (32 * _1118) + (32 * _2142) + (32 * _2462) + (32 * _2718) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = _1086 + (32 * _1118) + (32 * _2142) + (32 * _2462) + (32 * _2718) + 320
        while idx < _2910:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1086 + (32 * _1118) + (32 * _2142) + (32 * _2462) + (32 * _2718) + (32 * _2910) + -mem[64] + 320
    mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    s = 0
    s = 0
    s = 0
    s = 0
    s = 0
    while ('cd', 4).length > uint32(idx):
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1311 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1375 = mem[_1311]
        require mem[_1311] == mem[_1311 + 18 len 14]
        _1439 = mem[_1311 + 32]
        require mem[_1311 + 32] == mem[_1311 + 50 len 14]
        _1535 = mem[_1311 + 64]
        require mem[_1311 + 64] == mem[_1311 + 92 len 4]
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                gas gas_remaining wei
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1727 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        _1759 = mem[_1727]
        require mem[_1727] == mem[_1727 + 28 len 4]
        require mem[_1727 + 32] == mem[_1727 + 60 len 4]
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1887 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1919 = mem[_1887]
        require mem[_1887] == mem[_1887 + 28 len 4]
        require uint32(idx) < mem[96]
        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1375)
        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1439)
        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1535)
        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1759)
        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1919)
        idx = idx + 1
        s = _1919
        s = _1535
        s = _1439
        s = _1375
        s = _1759
        continue 
    _1087 = mem[64]
    mem[mem[64]] = 160
    _1119 = mem[96]
    mem[mem[64] + 160] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 192
    while idx < _1119:
        mem[t] = mem[s + 18 len 14]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_1087 + 32] = (32 * _1119) + 192
    _2143 = mem[(32 * ('cd', 4).length) + 128]
    mem[_1087 + (32 * _1119) + 192] = mem[(32 * ('cd', 4).length) + 128]
    idx = 0
    s = (32 * ('cd', 4).length) + 160
    t = _1087 + (32 * _1119) + 224
    while idx < _2143:
        mem[t] = mem[s + 18 len 14]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_1087 + 64] = (32 * _1119) + (32 * _2143) + 224
    _2463 = mem[(64 * ('cd', 4).length) + 160]
    mem[_1087 + (32 * _1119) + (32 * _2143) + 224] = mem[(64 * ('cd', 4).length) + 160]
    idx = 0
    s = (64 * ('cd', 4).length) + 192
    t = _1087 + (32 * _1119) + (32 * _2143) + 256
    while idx < _2463:
        mem[t] = mem[s + 28 len 4]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_1087 + 96] = (32 * _1119) + (32 * _2143) + (32 * _2463) + 256
    _2719 = mem[(98 * ('cd', 4).length) + 192]
    mem[_1087 + (32 * _1119) + (32 * _2143) + (32 * _2463) + 256] = mem[(98 * ('cd', 4).length) + 192]
    idx = 0
    s = (98 * ('cd', 4).length) + 224
    t = _1087 + (32 * _1119) + (32 * _2143) + (32 * _2463) + 288
    while idx < _2719:
        mem[t] = mem[s + 28 len 4]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_1087 + 128] = (32 * _1119) + (32 * _2143) + (32 * _2463) + (32 * _2719) + 288
    _2911 = mem[(131 * ('cd', 4).length) + 224]
    mem[_1087 + (32 * _1119) + (32 * _2143) + (32 * _2463) + (32 * _2719) + 288] = mem[(131 * ('cd', 4).length) + 224]
    idx = 0
    s = (131 * ('cd', 4).length) + 256
    t = _1087 + (32 * _1119) + (32 * _2143) + (32 * _2463) + (32 * _2719) + 320
    while idx < _2911:
        mem[t] = mem[s + 28 len 4]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _1087 + (32 * _1119) + (32 * _2143) + (32 * _2463) + (32 * _2719) + (32 * _2911) + -mem[64] + 320
}

function sub_fa935cfe(?) {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require ('cd', 4).length <= test266151307()
    mem[96] = ('cd', 4).length
    mem[64] = (32 * ('cd', 4).length) + 128
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
            mem[64] = (98 * ('cd', 4).length) + 192
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                    mem[64] = (164 * ('cd', 4).length) + 256
                    if not ('cd', 4).length:
                        idx = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 36).length
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _4159 = mem[64]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _4196 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = _4196 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8441 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_8441] == mem[_8441 + 12 len 20]
                                        require s < mem[_4159]
                                        mem[(32 * s) + _4159 + 32] = mem[_8441 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9243 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_4196]
                                        mem[(32 * s) + _4196 + 32] = mem[_9243]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _4159
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4196
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8440 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8440]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8810 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8810]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9380 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9380]
                                else:
                                    mem[_4196 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8443 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_8443] == mem[_8443 + 12 len 20]
                                        require s < mem[_4159]
                                        mem[(32 * s) + _4159 + 32] = mem[_8443 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9244 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_4196]
                                        mem[(32 * s) + _4196 + 32] = mem[_9244]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _4159
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4196
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8442 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8442]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8812 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8812]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9381 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9381]
                                idx = idx + 1
                                continue 
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _4159 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8445 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8445] == mem[_8445 + 12 len 20]
                                    require s < mem[_4159]
                                    mem[(32 * s) + _4159 + 32] = mem[_8445 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9245 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4159 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _4159 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9245]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4159
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4159 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8444 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8444]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8814 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8814]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9382 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9382]
                                idx = idx + 1
                                continue 
                            mem[_4159 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8447 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8447] == mem[_8447 + 12 len 20]
                                require s < mem[_4159]
                                mem[(32 * s) + _4159 + 32] = mem[_8447 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9246 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4159 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _4159 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9246]
                                s = s + 1
                                continue 
                            require uint32(s) < mem[96]
                            mem[(32 * uint32(s)) + 128] = _4159
                            require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4159 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8446 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8446]
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8816 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8816]
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9383 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9383]
                            s = s + 1
                            continue 
                        _4096 = mem[64]
                        mem[mem[64]] = 160
                        _4107 = mem[96]
                        mem[mem[64] + 160] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 192
                        u = mem[64] + 192
                        while idx < _4107:
                            mem[u] = t + -_4096 - 192
                            _8181 = mem[s]
                            _8253 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _8181 + 32
                            x = t + 32
                            while v < _8253:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            v = _8253 + 1
                            w = _8181 + (32 * _8253) + 64
                            t = t + (32 * _8253) + 32
                            u = u + 32
                            continue 
                        mem[_4096 + 32] = t - _4096
                        _8309 = mem[(64 * ('cd', 4).length) + 160]
                        mem[t] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        u = t + (32 * _8309) + 32
                        v = t + 32
                        while idx < _8309:
                            mem[v] = u + -t - 32
                            _12211 = mem[s]
                            _12371 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _12211 + 32
                            x = u + 32
                            while t < _12371:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            t = _12371 + 1
                            w = _12211 + (32 * _12371) + 64
                            u = u + (32 * _12371) + 32
                            v = v + 32
                            continue 
                        mem[_4096 + 64] = u - _4096
                        _12467 = mem[(32 * ('cd', 4).length) + 128]
                        mem[u] = mem[(32 * ('cd', 4).length) + 128]
                        mem[u + 32 len 32 * _12467] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12467]
                        mem[_4096 + 96] = u + (32 * _12467) + -_4096 + 32
                        _15443 = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _12467) + 32] = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _12467) + 64 len 32 * _15443] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15443]
                        mem[_4096 + 128] = u + (32 * _12467) + (32 * _15443) + -_4096 + 64
                        _16539 = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _12467) + (32 * _15443) + 64] = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _12467) + (32 * _15443) + 96 len 32 * _16539] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16539]
                        return memory
                          from mem[64]
                           len u + (32 * _12467) + (32 * _15443) + (32 * _16539) + -mem[64] + 96
                    mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4161 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _4198 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8450 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8450] == mem[_8450 + 12 len 20]
                                    require s < mem[_4161]
                                    mem[(32 * s) + _4161 + 32] = mem[_8450 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9247 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4198]
                                    mem[(32 * s) + _4198 + 32] = mem[_9247]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4161
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4198
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8449 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8449]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8819 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8819]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9385 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9385]
                            else:
                                mem[_4198 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8452 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8452] == mem[_8452 + 12 len 20]
                                    require s < mem[_4161]
                                    mem[(32 * s) + _4161 + 32] = mem[_8452 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9248 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4198]
                                    mem[(32 * s) + _4198 + 32] = mem[_9248]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4161
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4198
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8451 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8451]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8821 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8821]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9386 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9386]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8454 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8454] == mem[_8454 + 12 len 20]
                                require s < mem[_4161]
                                mem[(32 * s) + _4161 + 32] = mem[_8454 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9249 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4161 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _4161 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9249]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4161
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4161 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8453 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8453]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8823 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8823]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9387 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9387]
                            idx = idx + 1
                            continue 
                        mem[_4161 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8456 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8456] == mem[_8456 + 12 len 20]
                            require s < mem[_4161]
                            mem[(32 * s) + _4161 + 32] = mem[_8456 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9250 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4161 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4161 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9250]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _4161
                        require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4161 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8455 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8455]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8825 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8825]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9388 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9388]
                        s = s + 1
                        continue 
                    _4097 = mem[64]
                    mem[mem[64]] = 160
                    _4108 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4108:
                        mem[u] = t + -_4097 - 192
                        _8190 = mem[s]
                        _8258 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8190 + 32
                        x = t + 32
                        while v < _8258:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _8258 + 1
                        w = _8190 + (32 * _8258) + 64
                        t = t + (32 * _8258) + 32
                        u = u + 32
                        continue 
                    mem[_4097 + 32] = t - _4097
                    _8322 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8322) + 32
                    v = t + 32
                    while idx < _8322:
                        mem[v] = u + -t - 32
                        _12213 = mem[s]
                        _12372 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12213 + 32
                        x = u + 32
                        while t < _12372:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _12372 + 1
                        w = _12213 + (32 * _12372) + 64
                        u = u + (32 * _12372) + 32
                        v = v + 32
                        continue 
                    mem[_4097 + 64] = u - _4097
                    _12468 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12468] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12468]
                    mem[_4097 + 96] = u + (32 * _12468) + -_4097 + 32
                    _15444 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12468) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12468) + 64 len 32 * _15444] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15444]
                    mem[_4097 + 128] = u + (32 * _12468) + (32 * _15444) + -_4097 + 64
                    _16540 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12468) + (32 * _15444) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12468) + (32 * _15444) + 96 len 32 * _16540] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16540]
                    return memory
                      from mem[64]
                       len u + (32 * _12468) + (32 * _15444) + (32 * _16540) + -mem[64] + 96
                mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4163 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _4200 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8459 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8459] == mem[_8459 + 12 len 20]
                                    require s < mem[_4163]
                                    mem[(32 * s) + _4163 + 32] = mem[_8459 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9251 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4200]
                                    mem[(32 * s) + _4200 + 32] = mem[_9251]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4163
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4200
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8458 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8458]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8828 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8828]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9390 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9390]
                            else:
                                mem[_4200 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8461 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8461] == mem[_8461 + 12 len 20]
                                    require s < mem[_4163]
                                    mem[(32 * s) + _4163 + 32] = mem[_8461 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9252 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4200]
                                    mem[(32 * s) + _4200 + 32] = mem[_9252]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4163
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4200
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8460 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8460]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8830 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8830]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9391 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9391]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8463 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8463] == mem[_8463 + 12 len 20]
                                require s < mem[_4163]
                                mem[(32 * s) + _4163 + 32] = mem[_8463 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9253 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4163 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _4163 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9253]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4163
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4163 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8462 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8462]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8832]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9392 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9392]
                            idx = idx + 1
                            continue 
                        mem[_4163 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8465 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8465] == mem[_8465 + 12 len 20]
                            require s < mem[_4163]
                            mem[(32 * s) + _4163 + 32] = mem[_8465 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9254 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4163 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4163 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9254]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _4163
                        require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4163 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8464 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8464]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8834 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8834]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9393 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9393]
                        s = s + 1
                        continue 
                    _4098 = mem[64]
                    mem[mem[64]] = 160
                    _4109 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4109:
                        mem[u] = t + -_4098 - 192
                        _8199 = mem[s]
                        _8263 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8199 + 32
                        x = t + 32
                        while v < _8263:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _8263 + 1
                        w = _8199 + (32 * _8263) + 64
                        t = t + (32 * _8263) + 32
                        u = u + 32
                        continue 
                    mem[_4098 + 32] = t - _4098
                    _8335 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8335) + 32
                    v = t + 32
                    while idx < _8335:
                        mem[v] = u + -t - 32
                        _12215 = mem[s]
                        _12373 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12215 + 32
                        x = u + 32
                        while t < _12373:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _12373 + 1
                        w = _12215 + (32 * _12373) + 64
                        u = u + (32 * _12373) + 32
                        v = v + 32
                        continue 
                    mem[_4098 + 64] = u - _4098
                    _12469 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12469] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12469]
                    mem[_4098 + 96] = u + (32 * _12469) + -_4098 + 32
                    _15445 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12469) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12469) + 64 len 32 * _15445] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15445]
                    mem[_4098 + 128] = u + (32 * _12469) + (32 * _15445) + -_4098 + 64
                    _16541 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12469) + (32 * _15445) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12469) + (32 * _15445) + 96 len 32 * _16541] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16541]
                    return memory
                      from mem[64]
                       len u + (32 * _12469) + (32 * _15445) + (32 * _16541) + -mem[64] + 96
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _4165 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4202 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4202 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8468 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8468] == mem[_8468 + 12 len 20]
                                require s < mem[_4165]
                                mem[(32 * s) + _4165 + 32] = mem[_8468 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9255 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4202]
                                mem[(32 * s) + _4202 + 32] = mem[_9255]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4165
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4202
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8467 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8467]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8837]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9395 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9395]
                        else:
                            mem[_4202 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8470 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8470] == mem[_8470 + 12 len 20]
                                require s < mem[_4165]
                                mem[(32 * s) + _4165 + 32] = mem[_8470 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9256 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4202]
                                mem[(32 * s) + _4202 + 32] = mem[_9256]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4165
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4202
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8469 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8469]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8839]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9396 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9396]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4165 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8472 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8472] == mem[_8472 + 12 len 20]
                            require s < mem[_4165]
                            mem[(32 * s) + _4165 + 32] = mem[_8472 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4165 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4165 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9257]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4165
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4165 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8471 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8471]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8841]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9397 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9397]
                        idx = idx + 1
                        continue 
                    mem[_4165 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8474 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8474] == mem[_8474 + 12 len 20]
                        require s < mem[_4165]
                        mem[(32 * s) + _4165 + 32] = mem[_8474 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9258 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_4165 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _4165 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9258]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _4165
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4165 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8473 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8473]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8843 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8843]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9398 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9398]
                    s = s + 1
                    continue 
                _4099 = mem[64]
                mem[mem[64]] = 160
                _4110 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4110:
                    mem[u] = t + -_4099 - 192
                    _8208 = mem[s]
                    _8268 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8208 + 32
                    x = t + 32
                    while v < _8268:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _8268 + 1
                    w = _8208 + (32 * _8268) + 64
                    t = t + (32 * _8268) + 32
                    u = u + 32
                    continue 
                mem[_4099 + 32] = t - _4099
                _8348 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8348) + 32
                v = t + 32
                while idx < _8348:
                    mem[v] = u + -t - 32
                    _12217 = mem[s]
                    _12374 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12217 + 32
                    x = u + 32
                    while t < _12374:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _12374 + 1
                    w = _12217 + (32 * _12374) + 64
                    u = u + (32 * _12374) + 32
                    v = v + 32
                    continue 
                mem[_4099 + 64] = u - _4099
                _12470 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12470] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12470]
                mem[_4099 + 96] = u + (32 * _12470) + -_4099 + 32
                _15446 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12470) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12470) + 64 len 32 * _15446] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15446]
                mem[_4099 + 128] = u + (32 * _12470) + (32 * _15446) + -_4099 + 64
                _16542 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12470) + (32 * _15446) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12470) + (32 * _15446) + 96 len 32 * _16542] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16542]
                return memory
                  from mem[64]
                   len u + (32 * _12470) + (32 * _15446) + (32 * _16542) + -mem[64] + 96
            mem[(64 * ('cd', 4).length) + 192] = 96
            s = (64 * ('cd', 4).length) + 192
            idx = ('cd', 4).length
            while idx - 1:
                mem[s + 32] = 96
                s = s + 32
                idx = idx - 1
                continue 
            require ('cd', 4).length <= test266151307()
            _4104 = mem[64]
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                _4115 = mem[64] + (32 * ('cd', 4).length) + 32
                mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
                mem[64] = _4115 + (32 * ('cd', 4).length) + 32
                if not ('cd', 4).length:
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8774 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _8918 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12721 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12721] == mem[_12721 + 12 len 20]
                                    require s < mem[_8774]
                                    mem[(32 * s) + _8774 + 32] = mem[_12721 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13963 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_8918]
                                    mem[(32 * s) + _8918 + 32] = mem[_13963]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _8774
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8918
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12720 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12720]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13320 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4104]
                                mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13320]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14076 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4115]
                                mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14076]
                            else:
                                mem[_8918 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12723 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12723] == mem[_12723 + 12 len 20]
                                    require s < mem[_8774]
                                    mem[(32 * s) + _8774 + 32] = mem[_12723 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13964 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_8918]
                                    mem[(32 * s) + _8918 + 32] = mem[_13964]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _8774
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8918
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12722 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12722]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13322 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4104]
                                mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13322]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14077 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4115]
                                mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14077]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12725 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12725] == mem[_12725 + 12 len 20]
                                require s < mem[_8774]
                                mem[(32 * s) + _8774 + 32] = mem[_12725 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13965 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8774 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _8774 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13965]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8774
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8774 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12724 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12724]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13324 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13324]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14078 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4115]
                            mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14078]
                            idx = idx + 1
                            continue 
                        mem[_8774 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12727 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12727] == mem[_12727 + 12 len 20]
                            require s < mem[_8774]
                            mem[(32 * s) + _8774 + 32] = mem[_12727 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13966 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8774 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8774 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13966]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _8774
                        require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8774 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12726 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12726]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13326 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4104]
                        mem[(32 * uint32(s)) + _4104 + 32] = mem[_13326]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14079 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4115]
                        mem[(32 * uint32(s)) + _4115 + 32] = mem[_14079]
                        s = s + 1
                        continue 
                    _8273 = mem[64]
                    mem[mem[64]] = 160
                    _8419 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _8419:
                        mem[u] = t + -_8273 - 192
                        _12219 = mem[s]
                        _12375 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _12219 + 32
                        x = t + 32
                        while v < _12375:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _12375 + 1
                        w = _12219 + (32 * _12375) + 64
                        t = t + (32 * _12375) + 32
                        u = u + 32
                        continue 
                    mem[_8273 + 32] = t - _8273
                    _12471 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _12471) + 32
                    v = t + 32
                    while idx < _12471:
                        mem[v] = u + -t - 32
                        _15275 = mem[s]
                        _15387 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _15275 + 32
                        x = u + 32
                        while t < _15387:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _15387 + 1
                        w = _15275 + (32 * _15387) + 64
                        u = u + (32 * _15387) + 32
                        v = v + 32
                        continue 
                    mem[_8273 + 64] = u - _8273
                    _15447 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _15447] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15447]
                    mem[_8273 + 96] = u + (32 * _15447) + -_8273 + 32
                    _16543 = mem[_4104]
                    mem[u + (32 * _15447) + 32] = mem[_4104]
                    mem[u + (32 * _15447) + 64 len 32 * _16543] = mem[_4104 + 32 len 32 * _16543]
                    mem[_8273 + 128] = u + (32 * _15447) + (32 * _16543) + -_8273 + 64
                    _16751 = mem[_4115]
                    mem[u + (32 * _15447) + (32 * _16543) + 64] = mem[_4115]
                    mem[u + (32 * _15447) + (32 * _16543) + 96 len 32 * _16751] = mem[_4115 + 32 len 32 * _16751]
                    return memory
                      from mem[64]
                       len u + (32 * _15447) + (32 * _16543) + (32 * _16751) + -mem[64] + 96
                mem[_4115 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8776 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8920 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12730 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12730] == mem[_12730 + 12 len 20]
                                require s < mem[_8776]
                                mem[(32 * s) + _8776 + 32] = mem[_12730 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13967 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8920]
                                mem[(32 * s) + _8920 + 32] = mem[_13967]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8776
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8920
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12729 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12729]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13329 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13329]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14081 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4115]
                            mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14081]
                        else:
                            mem[_8920 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12732 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12732] == mem[_12732 + 12 len 20]
                                require s < mem[_8776]
                                mem[(32 * s) + _8776 + 32] = mem[_12732 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13968 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8920]
                                mem[(32 * s) + _8920 + 32] = mem[_13968]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8776
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8920
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12731 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12731]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13331 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13331]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14082 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4115]
                            mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14082]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12734 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12734] == mem[_12734 + 12 len 20]
                            require s < mem[_8776]
                            mem[(32 * s) + _8776 + 32] = mem[_12734 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13969 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8776 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8776 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13969]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8776
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8776 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12733 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12733]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13333 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104]
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13333]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14083 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4115]
                        mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14083]
                        idx = idx + 1
                        continue 
                    mem[_8776 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12736 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12736] == mem[_12736 + 12 len 20]
                        require s < mem[_8776]
                        mem[(32 * s) + _8776 + 32] = mem[_12736 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13970 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8776 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8776 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13970]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8776
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8776 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12735 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12735]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13335 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4104]
                    mem[(32 * uint32(s)) + _4104 + 32] = mem[_13335]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14084 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4115]
                    mem[(32 * uint32(s)) + _4115 + 32] = mem[_14084]
                    s = s + 1
                    continue 
                _8274 = mem[64]
                mem[mem[64]] = 160
                _8420 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8420:
                    mem[u] = t + -_8274 - 192
                    _12228 = mem[s]
                    _12380 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12228 + 32
                    x = t + 32
                    while v < _12380:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12380 + 1
                    w = _12228 + (32 * _12380) + 64
                    t = t + (32 * _12380) + 32
                    u = u + 32
                    continue 
                mem[_8274 + 32] = t - _8274
                _12484 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12484) + 32
                v = t + 32
                while idx < _12484:
                    mem[v] = u + -t - 32
                    _15277 = mem[s]
                    _15388 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15277 + 32
                    x = u + 32
                    while t < _15388:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15388 + 1
                    w = _15277 + (32 * _15388) + 64
                    u = u + (32 * _15388) + 32
                    v = v + 32
                    continue 
                mem[_8274 + 64] = u - _8274
                _15448 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15448] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15448]
                mem[_8274 + 96] = u + (32 * _15448) + -_8274 + 32
                _16544 = mem[_4104]
                mem[u + (32 * _15448) + 32] = mem[_4104]
                mem[u + (32 * _15448) + 64 len 32 * _16544] = mem[_4104 + 32 len 32 * _16544]
                mem[_8274 + 128] = u + (32 * _15448) + (32 * _16544) + -_8274 + 64
                _16752 = mem[_4115]
                mem[u + (32 * _15448) + (32 * _16544) + 64] = mem[_4115]
                mem[u + (32 * _15448) + (32 * _16544) + 96 len 32 * _16752] = mem[_4115 + 32 len 32 * _16752]
                return memory
                  from mem[64]
                   len u + (32 * _15448) + (32 * _16544) + (32 * _16752) + -mem[64] + 96
            mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = _4104 + (64 * ('cd', 4).length) + 64
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8778 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8922 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12739] == mem[_12739 + 12 len 20]
                                require s < mem[_8778]
                                mem[(32 * s) + _8778 + 32] = mem[_12739 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13971 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8922]
                                mem[(32 * s) + _8922 + 32] = mem[_13971]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8778
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8922
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12738 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12738]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13338 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13338]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14086 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14086]
                        else:
                            mem[_8922 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12741 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12741] == mem[_12741 + 12 len 20]
                                require s < mem[_8778]
                                mem[(32 * s) + _8778 + 32] = mem[_12741 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13972 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8922]
                                mem[(32 * s) + _8922 + 32] = mem[_13972]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8778
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8922
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12740 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12740]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13340 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13340]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14087 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14087]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12743 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12743] == mem[_12743 + 12 len 20]
                            require s < mem[_8778]
                            mem[(32 * s) + _8778 + 32] = mem[_12743 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13973 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8778 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8778 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13973]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8778
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8778 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12742 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12742]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13342 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104]
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13342]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14088 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14088]
                        idx = idx + 1
                        continue 
                    mem[_8778 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12745 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12745] == mem[_12745 + 12 len 20]
                        require s < mem[_8778]
                        mem[(32 * s) + _8778 + 32] = mem[_12745 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13974 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8778 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8778 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13974]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8778
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8778 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12744 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12744]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13344 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4104]
                    mem[(32 * uint32(s)) + _4104 + 32] = mem[_13344]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14089 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(s)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14089]
                    s = s + 1
                    continue 
                _8275 = mem[64]
                mem[mem[64]] = 160
                _8421 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8421:
                    mem[u] = t + -_8275 - 192
                    _12237 = mem[s]
                    _12385 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12237 + 32
                    x = t + 32
                    while v < _12385:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12385 + 1
                    w = _12237 + (32 * _12385) + 64
                    t = t + (32 * _12385) + 32
                    u = u + 32
                    continue 
                mem[_8275 + 32] = t - _8275
                _12497 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12497) + 32
                v = t + 32
                while idx < _12497:
                    mem[v] = u + -t - 32
                    _15279 = mem[s]
                    _15389 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15279 + 32
                    x = u + 32
                    while t < _15389:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15389 + 1
                    w = _15279 + (32 * _15389) + 64
                    u = u + (32 * _15389) + 32
                    v = v + 32
                    continue 
                mem[_8275 + 64] = u - _8275
                _15449 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15449] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15449]
                mem[_8275 + 96] = u + (32 * _15449) + -_8275 + 32
                _16545 = mem[_4104]
                mem[u + (32 * _15449) + 32] = mem[_4104]
                mem[u + (32 * _15449) + 64 len 32 * _16545] = mem[_4104 + 32 len 32 * _16545]
                mem[_8275 + 128] = u + (32 * _15449) + (32 * _16545) + -_8275 + 64
                _16753 = mem[_4104 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15449) + (32 * _16545) + 64] = mem[_4104 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15449) + (32 * _16545) + 96 len 32 * _16753] = mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * _16753]
                return memory
                  from mem[64]
                   len u + (32 * _15449) + (32 * _16545) + (32 * _16753) + -mem[64] + 96
            mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8780 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8924 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8924 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12748 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12748] == mem[_12748 + 12 len 20]
                            require s < mem[_8780]
                            mem[(32 * s) + _8780 + 32] = mem[_12748 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13975 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8924]
                            mem[(32 * s) + _8924 + 32] = mem[_13975]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8780
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8924
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12747 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12747]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13347 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104]
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13347]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14091 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14091]
                    else:
                        mem[_8924 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12750 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12750] == mem[_12750 + 12 len 20]
                            require s < mem[_8780]
                            mem[(32 * s) + _8780 + 32] = mem[_12750 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13976 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8924]
                            mem[(32 * s) + _8924 + 32] = mem[_13976]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8780
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8924
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12749 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12749]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13349 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104]
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13349]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14092 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14092]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8780 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12752] == mem[_12752 + 12 len 20]
                        require s < mem[_8780]
                        mem[(32 * s) + _8780 + 32] = mem[_12752 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13977 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8780 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8780 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13977]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8780
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8780 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12751 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12751]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13351 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4104]
                    mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13351]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14093 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14093]
                    idx = idx + 1
                    continue 
                mem[_8780 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12754 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12754] == mem[_12754 + 12 len 20]
                    require s < mem[_8780]
                    mem[(32 * s) + _8780 + 32] = mem[_12754 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13978 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8780 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8780 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13978]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8780
                require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8780 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12753 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12753]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13353 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4104]
                mem[(32 * uint32(s)) + _4104 + 32] = mem[_13353]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14094 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14094]
                s = s + 1
                continue 
            _8276 = mem[64]
            mem[mem[64]] = 160
            _8422 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8422:
                mem[u] = t + -_8276 - 192
                _12246 = mem[s]
                _12390 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12246 + 32
                x = t + 32
                while v < _12390:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12390 + 1
                w = _12246 + (32 * _12390) + 64
                t = t + (32 * _12390) + 32
                u = u + 32
                continue 
            mem[_8276 + 32] = t - _8276
            _12510 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12510) + 32
            v = t + 32
            while idx < _12510:
                mem[v] = u + -t - 32
                _15281 = mem[s]
                _15390 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15281 + 32
                x = u + 32
                while t < _15390:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15390 + 1
                w = _15281 + (32 * _15390) + 64
                u = u + (32 * _15390) + 32
                v = v + 32
                continue 
            mem[_8276 + 64] = u - _8276
            _15450 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15450] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15450]
            mem[_8276 + 96] = u + (32 * _15450) + -_8276 + 32
            _16546 = mem[_4104]
            mem[u + (32 * _15450) + 32] = mem[_4104]
            mem[u + (32 * _15450) + 64 len 32 * _16546] = mem[_4104 + 32 len 32 * _16546]
            mem[_8276 + 128] = u + (32 * _15450) + (32 * _16546) + -_8276 + 64
            _16754 = mem[_4104 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15450) + (32 * _16546) + 64] = mem[_4104 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15450) + (32 * _16546) + 96 len 32 * _16754] = mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * _16754]
            return memory
              from mem[64]
               len u + (32 * _15450) + (32 * _16546) + (32 * _16754) + -mem[64] + 96
        mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        mem[64] = (98 * ('cd', 4).length) + 192
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4169 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _4206 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8477 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8477] == mem[_8477 + 12 len 20]
                                    require s < mem[_4169]
                                    mem[(32 * s) + _4169 + 32] = mem[_8477 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9283 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4206]
                                    mem[(32 * s) + _4206 + 32] = mem[_9283]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4169
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4206
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8476 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8476]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8850 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8850]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9428 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9428]
                            else:
                                mem[_4206 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8479 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8479] == mem[_8479 + 12 len 20]
                                    require s < mem[_4169]
                                    mem[(32 * s) + _4169 + 32] = mem[_8479 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9284 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4206]
                                    mem[(32 * s) + _4206 + 32] = mem[_9284]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4169
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4206
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8478 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8478]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8852 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8852]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9429 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9429]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8481 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8481] == mem[_8481 + 12 len 20]
                                require s < mem[_4169]
                                mem[(32 * s) + _4169 + 32] = mem[_8481 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9285 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4169 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _4169 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9285]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4169
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4169 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8480 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8480]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8854]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9430 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9430]
                            idx = idx + 1
                            continue 
                        mem[_4169 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8483 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8483] == mem[_8483 + 12 len 20]
                            require s < mem[_4169]
                            mem[(32 * s) + _4169 + 32] = mem[_8483 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9286 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4169 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4169 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9286]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _4169
                        require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4169 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8482 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8482]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8856 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8856]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9431 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9431]
                        s = s + 1
                        continue 
                    _4100 = mem[64]
                    mem[mem[64]] = 160
                    _4111 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4111:
                        mem[u] = t + -_4100 - 192
                        _8217 = mem[s]
                        _8277 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8217 + 32
                        x = t + 32
                        while v < _8277:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _8277 + 1
                        w = _8217 + (32 * _8277) + 64
                        t = t + (32 * _8277) + 32
                        u = u + 32
                        continue 
                    mem[_4100 + 32] = t - _4100
                    _8361 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8361) + 32
                    v = t + 32
                    while idx < _8361:
                        mem[v] = u + -t - 32
                        _12255 = mem[s]
                        _12395 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12255 + 32
                        x = u + 32
                        while t < _12395:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _12395 + 1
                        w = _12255 + (32 * _12395) + 64
                        u = u + (32 * _12395) + 32
                        v = v + 32
                        continue 
                    mem[_4100 + 64] = u - _4100
                    _12523 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12523] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12523]
                    mem[_4100 + 96] = u + (32 * _12523) + -_4100 + 32
                    _15451 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12523) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12523) + 64 len 32 * _15451] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15451]
                    mem[_4100 + 128] = u + (32 * _12523) + (32 * _15451) + -_4100 + 64
                    _16547 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12523) + (32 * _15451) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12523) + (32 * _15451) + 96 len 32 * _16547] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16547]
                    return memory
                      from mem[64]
                       len u + (32 * _12523) + (32 * _15451) + (32 * _16547) + -mem[64] + 96
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _4171 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4208 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4208 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8486 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8486] == mem[_8486 + 12 len 20]
                                require s < mem[_4171]
                                mem[(32 * s) + _4171 + 32] = mem[_8486 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9287 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4208]
                                mem[(32 * s) + _4208 + 32] = mem[_9287]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4171
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4208
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8485 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8485]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8859 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8859]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9433 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9433]
                        else:
                            mem[_4208 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8488 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8488] == mem[_8488 + 12 len 20]
                                require s < mem[_4171]
                                mem[(32 * s) + _4171 + 32] = mem[_8488 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9288 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4208]
                                mem[(32 * s) + _4208 + 32] = mem[_9288]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4171
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4208
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8487 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8487]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8861 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8861]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9434 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9434]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4171 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8490 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8490] == mem[_8490 + 12 len 20]
                            require s < mem[_4171]
                            mem[(32 * s) + _4171 + 32] = mem[_8490 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9289 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4171 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4171 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9289]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4171
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4171 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8489 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8489]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8863 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8863]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9435 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9435]
                        idx = idx + 1
                        continue 
                    mem[_4171 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8492 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8492] == mem[_8492 + 12 len 20]
                        require s < mem[_4171]
                        mem[(32 * s) + _4171 + 32] = mem[_8492 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9290 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_4171 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _4171 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9290]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _4171
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4171 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8491 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8491]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8865 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8865]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9436 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9436]
                    s = s + 1
                    continue 
                _4101 = mem[64]
                mem[mem[64]] = 160
                _4112 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4112:
                    mem[u] = t + -_4101 - 192
                    _8226 = mem[s]
                    _8282 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8226 + 32
                    x = t + 32
                    while v < _8282:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _8282 + 1
                    w = _8226 + (32 * _8282) + 64
                    t = t + (32 * _8282) + 32
                    u = u + 32
                    continue 
                mem[_4101 + 32] = t - _4101
                _8374 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8374) + 32
                v = t + 32
                while idx < _8374:
                    mem[v] = u + -t - 32
                    _12257 = mem[s]
                    _12396 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12257 + 32
                    x = u + 32
                    while t < _12396:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _12396 + 1
                    w = _12257 + (32 * _12396) + 64
                    u = u + (32 * _12396) + 32
                    v = v + 32
                    continue 
                mem[_4101 + 64] = u - _4101
                _12524 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12524] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12524]
                mem[_4101 + 96] = u + (32 * _12524) + -_4101 + 32
                _15452 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12524) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12524) + 64 len 32 * _15452] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15452]
                mem[_4101 + 128] = u + (32 * _12524) + (32 * _15452) + -_4101 + 64
                _16548 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12524) + (32 * _15452) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12524) + (32 * _15452) + 96 len 32 * _16548] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16548]
                return memory
                  from mem[64]
                   len u + (32 * _12524) + (32 * _15452) + (32 * _16548) + -mem[64] + 96
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _4173 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4210 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4210 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8495 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8495] == mem[_8495 + 12 len 20]
                                require s < mem[_4173]
                                mem[(32 * s) + _4173 + 32] = mem[_8495 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9291 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4210]
                                mem[(32 * s) + _4210 + 32] = mem[_9291]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4173
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4210
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8494 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8494]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8868 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8868]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9438 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9438]
                        else:
                            mem[_4210 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8497 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8497] == mem[_8497 + 12 len 20]
                                require s < mem[_4173]
                                mem[(32 * s) + _4173 + 32] = mem[_8497 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9292 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4210]
                                mem[(32 * s) + _4210 + 32] = mem[_9292]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4173
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4210
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8496 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8496]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8870 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8870]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9439 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9439]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4173 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8499 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8499] == mem[_8499 + 12 len 20]
                            require s < mem[_4173]
                            mem[(32 * s) + _4173 + 32] = mem[_8499 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9293 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4173 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4173 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9293]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4173
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4173 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8498]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8872 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8872]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9440 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9440]
                        idx = idx + 1
                        continue 
                    mem[_4173 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8501 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8501] == mem[_8501 + 12 len 20]
                        require s < mem[_4173]
                        mem[(32 * s) + _4173 + 32] = mem[_8501 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9294 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_4173 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _4173 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9294]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _4173
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4173 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8500 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8500]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8874 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8874]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9441 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9441]
                    s = s + 1
                    continue 
                _4102 = mem[64]
                mem[mem[64]] = 160
                _4113 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4113:
                    mem[u] = t + -_4102 - 192
                    _8235 = mem[s]
                    _8287 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8235 + 32
                    x = t + 32
                    while v < _8287:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _8287 + 1
                    w = _8235 + (32 * _8287) + 64
                    t = t + (32 * _8287) + 32
                    u = u + 32
                    continue 
                mem[_4102 + 32] = t - _4102
                _8387 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8387) + 32
                v = t + 32
                while idx < _8387:
                    mem[v] = u + -t - 32
                    _12259 = mem[s]
                    _12397 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12259 + 32
                    x = u + 32
                    while t < _12397:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _12397 + 1
                    w = _12259 + (32 * _12397) + 64
                    u = u + (32 * _12397) + 32
                    v = v + 32
                    continue 
                mem[_4102 + 64] = u - _4102
                _12525 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12525] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12525]
                mem[_4102 + 96] = u + (32 * _12525) + -_4102 + 32
                _15453 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12525) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12525) + 64 len 32 * _15453] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15453]
                mem[_4102 + 128] = u + (32 * _12525) + (32 * _15453) + -_4102 + 64
                _16549 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12525) + (32 * _15453) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12525) + (32 * _15453) + 96 len 32 * _16549] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16549]
                return memory
                  from mem[64]
                   len u + (32 * _12525) + (32 * _15453) + (32 * _16549) + -mem[64] + 96
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _4175 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _4212 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4212 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8504 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8504] == mem[_8504 + 12 len 20]
                            require s < mem[_4175]
                            mem[(32 * s) + _4175 + 32] = mem[_8504 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9295 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4212]
                            mem[(32 * s) + _4212 + 32] = mem[_9295]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4175
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4212
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8503 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8503]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8877 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8877]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9443 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9443]
                    else:
                        mem[_4212 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8506 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8506] == mem[_8506 + 12 len 20]
                            require s < mem[_4175]
                            mem[(32 * s) + _4175 + 32] = mem[_8506 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9296 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4212]
                            mem[(32 * s) + _4212 + 32] = mem[_9296]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4175
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4212
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8505 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8505]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8879 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8879]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9444 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9444]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _4175 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8508 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8508] == mem[_8508 + 12 len 20]
                        require s < mem[_4175]
                        mem[(32 * s) + _4175 + 32] = mem[_8508 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9297 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_4175 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _4175 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9297]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _4175
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4175 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8507 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8507]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8881 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8881]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9445 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9445]
                    idx = idx + 1
                    continue 
                mem[_4175 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8510 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8510] == mem[_8510 + 12 len 20]
                    require s < mem[_4175]
                    mem[(32 * s) + _4175 + 32] = mem[_8510 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9298 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_4175 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _4175 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9298]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _4175
                require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4175 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8509 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8509]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8883 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8883]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9446 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9446]
                s = s + 1
                continue 
            _4103 = mem[64]
            mem[mem[64]] = 160
            _4114 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _4114:
                mem[u] = t + -_4103 - 192
                _8244 = mem[s]
                _8292 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _8244 + 32
                x = t + 32
                while v < _8292:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _8292 + 1
                w = _8244 + (32 * _8292) + 64
                t = t + (32 * _8292) + 32
                u = u + 32
                continue 
            mem[_4103 + 32] = t - _4103
            _8400 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _8400) + 32
            v = t + 32
            while idx < _8400:
                mem[v] = u + -t - 32
                _12261 = mem[s]
                _12398 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _12261 + 32
                x = u + 32
                while t < _12398:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _12398 + 1
                w = _12261 + (32 * _12398) + 64
                u = u + (32 * _12398) + 32
                v = v + 32
                continue 
            mem[_4103 + 64] = u - _4103
            _12526 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _12526] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12526]
            mem[_4103 + 96] = u + (32 * _12526) + -_4103 + 32
            _15454 = mem[(98 * ('cd', 4).length) + 192]
            mem[u + (32 * _12526) + 32] = mem[(98 * ('cd', 4).length) + 192]
            mem[u + (32 * _12526) + 64 len 32 * _15454] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15454]
            mem[_4103 + 128] = u + (32 * _12526) + (32 * _15454) + -_4103 + 64
            _16550 = mem[(131 * ('cd', 4).length) + 224]
            mem[u + (32 * _12526) + (32 * _15454) + 64] = mem[(131 * ('cd', 4).length) + 224]
            mem[u + (32 * _12526) + (32 * _15454) + 96 len 32 * _16550] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16550]
            return memory
              from mem[64]
               len u + (32 * _12526) + (32 * _15454) + (32 * _16550) + -mem[64] + 96
        mem[(64 * ('cd', 4).length) + 192] = 96
        s = (64 * ('cd', 4).length) + 192
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        require ('cd', 4).length <= test266151307()
        _4105 = mem[64]
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            _4116 = mem[64] + (32 * ('cd', 4).length) + 32
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = _4116 + (32 * ('cd', 4).length) + 32
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8782 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8942 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12761 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12761] == mem[_12761 + 12 len 20]
                                require s < mem[_8782]
                                mem[(32 * s) + _8782 + 32] = mem[_12761 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13979 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8942]
                                mem[(32 * s) + _8942 + 32] = mem[_13979]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8782
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8942
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12760 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12760]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13360 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4105]
                            mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13360]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14096 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4116]
                            mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14096]
                        else:
                            mem[_8942 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12763 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12763] == mem[_12763 + 12 len 20]
                                require s < mem[_8782]
                                mem[(32 * s) + _8782 + 32] = mem[_12763 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13980 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8942]
                                mem[(32 * s) + _8942 + 32] = mem[_13980]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8782
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8942
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12762 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12762]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13362 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4105]
                            mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13362]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14097 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4116]
                            mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14097]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12765 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12765] == mem[_12765 + 12 len 20]
                            require s < mem[_8782]
                            mem[(32 * s) + _8782 + 32] = mem[_12765 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13981 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8782 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8782 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13981]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8782
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8782 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12764 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12764]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13364 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13364]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14098 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4116]
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14098]
                        idx = idx + 1
                        continue 
                    mem[_8782 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12767 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12767] == mem[_12767 + 12 len 20]
                        require s < mem[_8782]
                        mem[(32 * s) + _8782 + 32] = mem[_12767 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13982 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8782 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8782 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13982]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8782
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8782 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12766 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12766]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13366 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4105]
                    mem[(32 * uint32(s)) + _4105 + 32] = mem[_13366]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14099 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4116]
                    mem[(32 * uint32(s)) + _4116 + 32] = mem[_14099]
                    s = s + 1
                    continue 
                _8297 = mem[64]
                mem[mem[64]] = 160
                _8427 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8427:
                    mem[u] = t + -_8297 - 192
                    _12263 = mem[s]
                    _12399 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12263 + 32
                    x = t + 32
                    while v < _12399:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12399 + 1
                    w = _12263 + (32 * _12399) + 64
                    t = t + (32 * _12399) + 32
                    u = u + 32
                    continue 
                mem[_8297 + 32] = t - _8297
                _12527 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12527) + 32
                v = t + 32
                while idx < _12527:
                    mem[v] = u + -t - 32
                    _15291 = mem[s]
                    _15391 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15291 + 32
                    x = u + 32
                    while t < _15391:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15391 + 1
                    w = _15291 + (32 * _15391) + 64
                    u = u + (32 * _15391) + 32
                    v = v + 32
                    continue 
                mem[_8297 + 64] = u - _8297
                _15455 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15455] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15455]
                mem[_8297 + 96] = u + (32 * _15455) + -_8297 + 32
                _16551 = mem[_4105]
                mem[u + (32 * _15455) + 32] = mem[_4105]
                mem[u + (32 * _15455) + 64 len 32 * _16551] = mem[_4105 + 32 len 32 * _16551]
                mem[_8297 + 128] = u + (32 * _15455) + (32 * _16551) + -_8297 + 64
                _16759 = mem[_4116]
                mem[u + (32 * _15455) + (32 * _16551) + 64] = mem[_4116]
                mem[u + (32 * _15455) + (32 * _16551) + 96 len 32 * _16759] = mem[_4116 + 32 len 32 * _16759]
                return memory
                  from mem[64]
                   len u + (32 * _15455) + (32 * _16551) + (32 * _16759) + -mem[64] + 96
            mem[_4116 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8784 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8944 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8944 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12770 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12770] == mem[_12770 + 12 len 20]
                            require s < mem[_8784]
                            mem[(32 * s) + _8784 + 32] = mem[_12770 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13983 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8944]
                            mem[(32 * s) + _8944 + 32] = mem[_13983]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8784
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8944
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12769 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12769]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13369 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13369]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14101 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4116]
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14101]
                    else:
                        mem[_8944 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12772 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12772] == mem[_12772 + 12 len 20]
                            require s < mem[_8784]
                            mem[(32 * s) + _8784 + 32] = mem[_12772 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13984 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8944]
                            mem[(32 * s) + _8944 + 32] = mem[_13984]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8784
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8944
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12771 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12771]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13371 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13371]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14102 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4116]
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14102]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8784 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12774 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12774] == mem[_12774 + 12 len 20]
                        require s < mem[_8784]
                        mem[(32 * s) + _8784 + 32] = mem[_12774 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13985 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8784 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8784 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13985]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8784
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8784 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12773 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12773]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13373 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105]
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13373]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14103 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4116]
                    mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14103]
                    idx = idx + 1
                    continue 
                mem[_8784 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12776 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12776] == mem[_12776 + 12 len 20]
                    require s < mem[_8784]
                    mem[(32 * s) + _8784 + 32] = mem[_12776 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13986 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8784 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8784 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13986]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8784
                require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8784 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12775 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12775]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13375 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4105]
                mem[(32 * uint32(s)) + _4105 + 32] = mem[_13375]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14104 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4116]
                mem[(32 * uint32(s)) + _4116 + 32] = mem[_14104]
                s = s + 1
                continue 
            _8298 = mem[64]
            mem[mem[64]] = 160
            _8428 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8428:
                mem[u] = t + -_8298 - 192
                _12272 = mem[s]
                _12404 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12272 + 32
                x = t + 32
                while v < _12404:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12404 + 1
                w = _12272 + (32 * _12404) + 64
                t = t + (32 * _12404) + 32
                u = u + 32
                continue 
            mem[_8298 + 32] = t - _8298
            _12540 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12540) + 32
            v = t + 32
            while idx < _12540:
                mem[v] = u + -t - 32
                _15293 = mem[s]
                _15392 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15293 + 32
                x = u + 32
                while t < _15392:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15392 + 1
                w = _15293 + (32 * _15392) + 64
                u = u + (32 * _15392) + 32
                v = v + 32
                continue 
            mem[_8298 + 64] = u - _8298
            _15456 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15456] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15456]
            mem[_8298 + 96] = u + (32 * _15456) + -_8298 + 32
            _16552 = mem[_4105]
            mem[u + (32 * _15456) + 32] = mem[_4105]
            mem[u + (32 * _15456) + 64 len 32 * _16552] = mem[_4105 + 32 len 32 * _16552]
            mem[_8298 + 128] = u + (32 * _15456) + (32 * _16552) + -_8298 + 64
            _16760 = mem[_4116]
            mem[u + (32 * _15456) + (32 * _16552) + 64] = mem[_4116]
            mem[u + (32 * _15456) + (32 * _16552) + 96 len 32 * _16760] = mem[_4116 + 32 len 32 * _16760]
            return memory
              from mem[64]
               len u + (32 * _15456) + (32 * _16552) + (32 * _16760) + -mem[64] + 96
        mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = _4105 + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8786 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8946 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8946 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12779 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12779] == mem[_12779 + 12 len 20]
                            require s < mem[_8786]
                            mem[(32 * s) + _8786 + 32] = mem[_12779 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13987 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8946]
                            mem[(32 * s) + _8946 + 32] = mem[_13987]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8786
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8946
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12778 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12778]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13378 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13378]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14106 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14106]
                    else:
                        mem[_8946 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12781 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12781] == mem[_12781 + 12 len 20]
                            require s < mem[_8786]
                            mem[(32 * s) + _8786 + 32] = mem[_12781 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13988 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8946]
                            mem[(32 * s) + _8946 + 32] = mem[_13988]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8786
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8946
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12780 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12780]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13380 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13380]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14107 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14107]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8786 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12783 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12783] == mem[_12783 + 12 len 20]
                        require s < mem[_8786]
                        mem[(32 * s) + _8786 + 32] = mem[_12783 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13989 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8786 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8786 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13989]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8786
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8786 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12782 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12782]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13382 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105]
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13382]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14108 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14108]
                    idx = idx + 1
                    continue 
                mem[_8786 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12785] == mem[_12785 + 12 len 20]
                    require s < mem[_8786]
                    mem[(32 * s) + _8786 + 32] = mem[_12785 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13990 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8786 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8786 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13990]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8786
                require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8786 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12784 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12784]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13384 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4105]
                mem[(32 * uint32(s)) + _4105 + 32] = mem[_13384]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14109 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14109]
                s = s + 1
                continue 
            _8299 = mem[64]
            mem[mem[64]] = 160
            _8429 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8429:
                mem[u] = t + -_8299 - 192
                _12281 = mem[s]
                _12409 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12281 + 32
                x = t + 32
                while v < _12409:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12409 + 1
                w = _12281 + (32 * _12409) + 64
                t = t + (32 * _12409) + 32
                u = u + 32
                continue 
            mem[_8299 + 32] = t - _8299
            _12553 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12553) + 32
            v = t + 32
            while idx < _12553:
                mem[v] = u + -t - 32
                _15295 = mem[s]
                _15393 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15295 + 32
                x = u + 32
                while t < _15393:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15393 + 1
                w = _15295 + (32 * _15393) + 64
                u = u + (32 * _15393) + 32
                v = v + 32
                continue 
            mem[_8299 + 64] = u - _8299
            _15457 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15457] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15457]
            mem[_8299 + 96] = u + (32 * _15457) + -_8299 + 32
            _16553 = mem[_4105]
            mem[u + (32 * _15457) + 32] = mem[_4105]
            mem[u + (32 * _15457) + 64 len 32 * _16553] = mem[_4105 + 32 len 32 * _16553]
            mem[_8299 + 128] = u + (32 * _15457) + (32 * _16553) + -_8299 + 64
            _16761 = mem[_4105 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15457) + (32 * _16553) + 64] = mem[_4105 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15457) + (32 * _16553) + 96 len 32 * _16761] = mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * _16761]
            return memory
              from mem[64]
               len u + (32 * _15457) + (32 * _16553) + (32 * _16761) + -mem[64] + 96
        mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _8788 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8948 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8948 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12788 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12788] == mem[_12788 + 12 len 20]
                        require s < mem[_8788]
                        mem[(32 * s) + _8788 + 32] = mem[_12788 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8948]
                        mem[(32 * s) + _8948 + 32] = mem[_13991]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8788
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8948
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12787 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12787]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13387 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105]
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13387]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14111 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14111]
                else:
                    mem[_8948 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12790 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12790] == mem[_12790 + 12 len 20]
                        require s < mem[_8788]
                        mem[(32 * s) + _8788 + 32] = mem[_12790 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8948]
                        mem[(32 * s) + _8948 + 32] = mem[_13992]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8788
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8948
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12789 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12789]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13389 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105]
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13389]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14112 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14112]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _8788 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12792 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12792] == mem[_12792 + 12 len 20]
                    require s < mem[_8788]
                    mem[(32 * s) + _8788 + 32] = mem[_12792 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13993 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13993]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _8788
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12791 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12791]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13391 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4105]
                mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13391]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14113 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14113]
                idx = idx + 1
                continue 
            mem[_8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12794 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12794] == mem[_12794 + 12 len 20]
                require s < mem[_8788]
                mem[(32 * s) + _8788 + 32] = mem[_12794 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13994 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_8788 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _8788 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13994]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _8788
            require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8788 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12793 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12793]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13393 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4105]
            mem[(32 * uint32(s)) + _4105 + 32] = mem[_13393]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14114 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4105 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14114]
            s = s + 1
            continue 
        _8300 = mem[64]
        mem[mem[64]] = 160
        _8430 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _8430:
            mem[u] = t + -_8300 - 192
            _12290 = mem[s]
            _12414 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _12290 + 32
            x = t + 32
            while v < _12414:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _12414 + 1
            w = _12290 + (32 * _12414) + 64
            t = t + (32 * _12414) + 32
            u = u + 32
            continue 
        mem[_8300 + 32] = t - _8300
        _12566 = mem[(64 * ('cd', 4).length) + 160]
        mem[t] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        u = t + (32 * _12566) + 32
        v = t + 32
        while idx < _12566:
            mem[v] = u + -t - 32
            _15297 = mem[s]
            _15394 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _15297 + 32
            x = u + 32
            while t < _15394:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _15394 + 1
            w = _15297 + (32 * _15394) + 64
            u = u + (32 * _15394) + 32
            v = v + 32
            continue 
        mem[_8300 + 64] = u - _8300
        _15458 = mem[(32 * ('cd', 4).length) + 128]
        mem[u] = mem[(32 * ('cd', 4).length) + 128]
        mem[u + 32 len 32 * _15458] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15458]
        mem[_8300 + 96] = u + (32 * _15458) + -_8300 + 32
        _16554 = mem[_4105]
        mem[u + (32 * _15458) + 32] = mem[_4105]
        mem[u + (32 * _15458) + 64 len 32 * _16554] = mem[_4105 + 32 len 32 * _16554]
        mem[_8300 + 128] = u + (32 * _15458) + (32 * _16554) + -_8300 + 64
        _16762 = mem[_4105 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _15458) + (32 * _16554) + 64] = mem[_4105 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _15458) + (32 * _16554) + 96 len 32 * _16762] = mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * _16762]
        return memory
          from mem[64]
           len u + (32 * _15458) + (32 * _16554) + (32 * _16762) + -mem[64] + 96
    mem[128] = 96
    s = 128
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    require ('cd', 4).length <= test266151307()
    _4106 = mem[64]
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        _4117 = mem[64] + (32 * ('cd', 4).length) + 32
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = _4117 + (32 * ('cd', 4).length) + 32
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[_4117 + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[_4117 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                mem[64] = _4117 + (98 * ('cd', 4).length) + 96
                if not ('cd', 4).length:
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8790 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _8950 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12797 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12797] == mem[_12797 + 12 len 20]
                                    require s < mem[_8790]
                                    mem[(32 * s) + _8790 + 32] = mem[_12797 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13995 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_8950]
                                    mem[(32 * s) + _8950 + 32] = mem[_13995]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _8790
                                require uint32(idx) < mem[_4117]
                                mem[(32 * uint32(idx)) + _4117 + 32] = _8950
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12796 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4106]
                                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12796]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13396 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13396]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14116 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14116]
                            else:
                                mem[_8950 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12799 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12799] == mem[_12799 + 12 len 20]
                                    require s < mem[_8790]
                                    mem[(32 * s) + _8790 + 32] = mem[_12799 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13996 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_8950]
                                    mem[(32 * s) + _8950 + 32] = mem[_13996]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _8790
                                require uint32(idx) < mem[_4117]
                                mem[(32 * uint32(idx)) + _4117 + 32] = _8950
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12798 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4106]
                                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12798]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13398 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13398]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14117 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14117]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12801 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12801] == mem[_12801 + 12 len 20]
                                require s < mem[_8790]
                                mem[(32 * s) + _8790 + 32] = mem[_12801 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13997 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13997]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8790
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12800 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12800]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13400 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13400]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14118 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14118]
                            idx = idx + 1
                            continue 
                        mem[_8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12803 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12803] == mem[_12803 + 12 len 20]
                            require s < mem[_8790]
                            mem[(32 * s) + _8790 + 32] = mem[_12803 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13998 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8790 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8790 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13998]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _8790
                        require uint32(s) < mem[_4117]
                        mem[(32 * uint32(s)) + _4117 + 32] = _8790 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12802 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4106]
                        mem[(32 * uint32(s)) + _4106 + 32] = mem[_12802]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13402 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13402]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14119 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14119]
                        s = s + 1
                        continue 
                    _8301 = mem[64]
                    mem[mem[64]] = 160
                    _8431 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _8431:
                        mem[u] = t + -_8301 - 192
                        _12299 = mem[s]
                        _12419 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _12299 + 32
                        x = t + 32
                        while v < _12419:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _12419 + 1
                        w = _12299 + (32 * _12419) + 64
                        t = t + (32 * _12419) + 32
                        u = u + 32
                        continue 
                    mem[_8301 + 32] = t - _8301
                    _12579 = mem[_4117]
                    mem[t] = mem[_4117]
                    idx = 0
                    s = _4117 + 32
                    u = t + (32 * _12579) + 32
                    v = t + 32
                    while idx < _12579:
                        mem[v] = u + -t - 32
                        _15299 = mem[s]
                        _15395 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _15299 + 32
                        x = u + 32
                        while t < _15395:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _15395 + 1
                        w = _15299 + (32 * _15395) + 64
                        u = u + (32 * _15395) + 32
                        v = v + 32
                        continue 
                    mem[_8301 + 64] = u - _8301
                    _15459 = mem[_4106]
                    mem[u] = mem[_4106]
                    mem[u + 32 len 32 * _15459] = mem[_4106 + 32 len 32 * _15459]
                    mem[_8301 + 96] = u + (32 * _15459) + -_8301 + 32
                    _16555 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _15459) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _15459) + 64 len 32 * _16555] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16555]
                    mem[_8301 + 128] = u + (32 * _15459) + (32 * _16555) + -_8301 + 64
                    _16763 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _15459) + (32 * _16555) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _15459) + (32 * _16555) + 96 len 32 * _16763] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16763]
                    return memory
                      from mem[64]
                       len u + (32 * _15459) + (32 * _16555) + (32 * _16763) + -mem[64] + 96
                mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8792 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8952 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12806 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12806] == mem[_12806 + 12 len 20]
                                require s < mem[_8792]
                                mem[(32 * s) + _8792 + 32] = mem[_12806 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13999 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8952]
                                mem[(32 * s) + _8952 + 32] = mem[_13999]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8792
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8952
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12805]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13405 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13405]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14121 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14121]
                        else:
                            mem[_8952 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12808 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12808] == mem[_12808 + 12 len 20]
                                require s < mem[_8792]
                                mem[(32 * s) + _8792 + 32] = mem[_12808 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14000 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8952]
                                mem[(32 * s) + _8952 + 32] = mem[_14000]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8792
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8952
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12807 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12807]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13407 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13407]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14122 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14122]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12810 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12810] == mem[_12810 + 12 len 20]
                            require s < mem[_8792]
                            mem[(32 * s) + _8792 + 32] = mem[_12810 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14001 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8792 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8792 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14001]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8792
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8792 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12809 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12809]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13409]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14123 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14123]
                        idx = idx + 1
                        continue 
                    mem[_8792 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12812 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12812] == mem[_12812 + 12 len 20]
                        require s < mem[_8792]
                        mem[(32 * s) + _8792 + 32] = mem[_12812 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8792 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8792 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14002]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8792
                    require uint32(s) < mem[_4117]
                    mem[(32 * uint32(s)) + _4117 + 32] = _8792 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12811 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106]
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12811]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13411 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13411]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14124 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14124]
                    s = s + 1
                    continue 
                _8302 = mem[64]
                mem[mem[64]] = 160
                _8432 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8432:
                    mem[u] = t + -_8302 - 192
                    _12308 = mem[s]
                    _12424 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12308 + 32
                    x = t + 32
                    while v < _12424:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12424 + 1
                    w = _12308 + (32 * _12424) + 64
                    t = t + (32 * _12424) + 32
                    u = u + 32
                    continue 
                mem[_8302 + 32] = t - _8302
                _12592 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _12592) + 32
                v = t + 32
                while idx < _12592:
                    mem[v] = u + -t - 32
                    _15301 = mem[s]
                    _15396 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15301 + 32
                    x = u + 32
                    while t < _15396:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15396 + 1
                    w = _15301 + (32 * _15396) + 64
                    u = u + (32 * _15396) + 32
                    v = v + 32
                    continue 
                mem[_8302 + 64] = u - _8302
                _15460 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15460] = mem[_4106 + 32 len 32 * _15460]
                mem[_8302 + 96] = u + (32 * _15460) + -_8302 + 32
                _16556 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15460) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15460) + 64 len 32 * _16556] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16556]
                mem[_8302 + 128] = u + (32 * _15460) + (32 * _16556) + -_8302 + 64
                _16764 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15460) + (32 * _16556) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15460) + (32 * _16556) + 96 len 32 * _16764] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16764]
                return memory
                  from mem[64]
                   len u + (32 * _15460) + (32 * _16556) + (32 * _16764) + -mem[64] + 96
            mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[_4117 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = _4117 + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8794 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8954 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12815 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12815] == mem[_12815 + 12 len 20]
                                require s < mem[_8794]
                                mem[(32 * s) + _8794 + 32] = mem[_12815 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14003 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8954]
                                mem[(32 * s) + _8954 + 32] = mem[_14003]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8794
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8954
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12814 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12814]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13414 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13414]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14126 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14126]
                        else:
                            mem[_8954 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12817 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12817] == mem[_12817 + 12 len 20]
                                require s < mem[_8794]
                                mem[(32 * s) + _8794 + 32] = mem[_12817 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14004 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8954]
                                mem[(32 * s) + _8954 + 32] = mem[_14004]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8794
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8954
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12816 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12816]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13416 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13416]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14127 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14127]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12819 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12819] == mem[_12819 + 12 len 20]
                            require s < mem[_8794]
                            mem[(32 * s) + _8794 + 32] = mem[_12819 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14005 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8794 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8794 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14005]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8794
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8794 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12818 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12818]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13418 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13418]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14128 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14128]
                        idx = idx + 1
                        continue 
                    mem[_8794 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12821 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12821] == mem[_12821 + 12 len 20]
                        require s < mem[_8794]
                        mem[(32 * s) + _8794 + 32] = mem[_12821 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14006 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8794 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8794 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14006]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8794
                    require uint32(s) < mem[_4117]
                    mem[(32 * uint32(s)) + _4117 + 32] = _8794 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12820 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106]
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12820]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13420 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13420]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14129 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14129]
                    s = s + 1
                    continue 
                _8303 = mem[64]
                mem[mem[64]] = 160
                _8433 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8433:
                    mem[u] = t + -_8303 - 192
                    _12317 = mem[s]
                    _12429 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12317 + 32
                    x = t + 32
                    while v < _12429:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12429 + 1
                    w = _12317 + (32 * _12429) + 64
                    t = t + (32 * _12429) + 32
                    u = u + 32
                    continue 
                mem[_8303 + 32] = t - _8303
                _12605 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _12605) + 32
                v = t + 32
                while idx < _12605:
                    mem[v] = u + -t - 32
                    _15303 = mem[s]
                    _15397 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15303 + 32
                    x = u + 32
                    while t < _15397:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15397 + 1
                    w = _15303 + (32 * _15397) + 64
                    u = u + (32 * _15397) + 32
                    v = v + 32
                    continue 
                mem[_8303 + 64] = u - _8303
                _15461 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15461] = mem[_4106 + 32 len 32 * _15461]
                mem[_8303 + 96] = u + (32 * _15461) + -_8303 + 32
                _16557 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15461) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15461) + 64 len 32 * _16557] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16557]
                mem[_8303 + 128] = u + (32 * _15461) + (32 * _16557) + -_8303 + 64
                _16765 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15461) + (32 * _16557) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15461) + (32 * _16557) + 96 len 32 * _16765] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16765]
                return memory
                  from mem[64]
                   len u + (32 * _15461) + (32 * _16557) + (32 * _16765) + -mem[64] + 96
            mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8796 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8956 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8956 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12824 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12824] == mem[_12824 + 12 len 20]
                            require s < mem[_8796]
                            mem[(32 * s) + _8796 + 32] = mem[_12824 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14007 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8956]
                            mem[(32 * s) + _8956 + 32] = mem[_14007]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8796
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8956
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12823 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12823]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13423 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13423]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14131 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14131]
                    else:
                        mem[_8956 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12826] == mem[_12826 + 12 len 20]
                            require s < mem[_8796]
                            mem[(32 * s) + _8796 + 32] = mem[_12826 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14008 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8956]
                            mem[(32 * s) + _8956 + 32] = mem[_14008]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8796
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8956
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12825 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12825]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13425]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14132 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14132]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8796 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12828 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12828] == mem[_12828 + 12 len 20]
                        require s < mem[_8796]
                        mem[(32 * s) + _8796 + 32] = mem[_12828 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14009 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8796 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8796 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14009]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8796
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _8796 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12827 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12827]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13427 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13427]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14133 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14133]
                    idx = idx + 1
                    continue 
                mem[_8796 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12830 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12830] == mem[_12830 + 12 len 20]
                    require s < mem[_8796]
                    mem[(32 * s) + _8796 + 32] = mem[_12830 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14010 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8796 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8796 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14010]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8796
                require uint32(s) < mem[_4117]
                mem[(32 * uint32(s)) + _4117 + 32] = _8796 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12829 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12829]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13429 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13429]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14134 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14134]
                s = s + 1
                continue 
            _8304 = mem[64]
            mem[mem[64]] = 160
            _8434 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8434:
                mem[u] = t + -_8304 - 192
                _12326 = mem[s]
                _12434 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12326 + 32
                x = t + 32
                while v < _12434:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12434 + 1
                w = _12326 + (32 * _12434) + 64
                t = t + (32 * _12434) + 32
                u = u + 32
                continue 
            mem[_8304 + 32] = t - _8304
            _12618 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _12618) + 32
            v = t + 32
            while idx < _12618:
                mem[v] = u + -t - 32
                _15305 = mem[s]
                _15398 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15305 + 32
                x = u + 32
                while t < _15398:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15398 + 1
                w = _15305 + (32 * _15398) + 64
                u = u + (32 * _15398) + 32
                v = v + 32
                continue 
            mem[_8304 + 64] = u - _8304
            _15462 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15462] = mem[_4106 + 32 len 32 * _15462]
            mem[_8304 + 96] = u + (32 * _15462) + -_8304 + 32
            _16558 = mem[_4117 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15462) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15462) + 64 len 32 * _16558] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16558]
            mem[_8304 + 128] = u + (32 * _15462) + (32 * _16558) + -_8304 + 64
            _16766 = mem[_4117 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15462) + (32 * _16558) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15462) + (32 * _16558) + 96 len 32 * _16766] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16766]
            return memory
              from mem[64]
               len u + (32 * _15462) + (32 * _16558) + (32 * _16766) + -mem[64] + 96
        mem[_4117 + 32] = 96
        s = _4117 + 32
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        require ('cd', 4).length <= test266151307()
        _8413 = mem[64]
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            _8511 = mem[64] + (32 * ('cd', 4).length) + 32
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = _8511 + (32 * ('cd', 4).length) + 32
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _13300 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _13524 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _15617 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_15617] == mem[_15617 + 12 len 20]
                                require s < mem[_13300]
                                mem[(32 * s) + _13300 + 32] = mem[_15617 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16267 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_13524]
                                mem[(32 * s) + _13524 + 32] = mem[_16267]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _13300
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _13524
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15616 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15616]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_8413]
                            mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15952]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16300 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_8511]
                            mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16300]
                        else:
                            mem[_13524 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _15619 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_15619] == mem[_15619 + 12 len 20]
                                require s < mem[_13300]
                                mem[(32 * s) + _13300 + 32] = mem[_15619 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16268 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_13524]
                                mem[(32 * s) + _13524 + 32] = mem[_16268]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _13300
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _13524
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15618 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15618]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_8413]
                            mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15954]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16301 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_8511]
                            mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16301]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15621 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15621] == mem[_15621 + 12 len 20]
                            require s < mem[_13300]
                            mem[(32 * s) + _13300 + 32] = mem[_15621 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16269 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13300 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _13300 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16269]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13300
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13300 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15620 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15620]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15956 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15956]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8511]
                        mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16302]
                        idx = idx + 1
                        continue 
                    mem[_13300 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15623 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15623] == mem[_15623 + 12 len 20]
                        require s < mem[_13300]
                        mem[(32 * s) + _13300 + 32] = mem[_15623 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16270 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13300 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _13300 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16270]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _13300
                    require uint32(s) < mem[_4117]
                    mem[(32 * uint32(s)) + _4117 + 32] = _13300 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15622 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106]
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_15622]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15958 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_8413]
                    mem[(32 * uint32(s)) + _8413 + 32] = mem[_15958]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_8511]
                    mem[(32 * uint32(s)) + _8511 + 32] = mem[_16303]
                    s = s + 1
                    continue 
                _12439 = mem[64]
                mem[mem[64]] = 160
                _12703 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _12703:
                    mem[u] = t + -_12439 - 192
                    _15307 = mem[s]
                    _15399 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _15307 + 32
                    x = t + 32
                    while v < _15399:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _15399 + 1
                    w = _15307 + (32 * _15399) + 64
                    t = t + (32 * _15399) + 32
                    u = u + 32
                    continue 
                mem[_12439 + 32] = t - _12439
                _15463 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _15463) + 32
                v = t + 32
                while idx < _15463:
                    mem[v] = u + -t - 32
                    _16507 = mem[s]
                    _16531 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _16507 + 32
                    x = u + 32
                    while t < _16531:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _16531 + 1
                    w = _16507 + (32 * _16531) + 64
                    u = u + (32 * _16531) + 32
                    v = v + 32
                    continue 
                mem[_12439 + 64] = u - _12439
                _16559 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _16559] = mem[_4106 + 32 len 32 * _16559]
                mem[_12439 + 96] = u + (32 * _16559) + -_12439 + 32
                _16767 = mem[_8413]
                mem[u + (32 * _16559) + 32] = mem[_8413]
                mem[u + (32 * _16559) + 64 len 32 * _16767] = mem[_8413 + 32 len 32 * _16767]
                mem[_12439 + 128] = u + (32 * _16559) + (32 * _16767) + -_12439 + 64
                _16879 = mem[_8511]
                mem[u + (32 * _16559) + (32 * _16767) + 64] = mem[_8511]
                mem[u + (32 * _16559) + (32 * _16767) + 96 len 32 * _16879] = mem[_8511 + 32 len 32 * _16879]
                return memory
                  from mem[64]
                   len u + (32 * _16559) + (32 * _16767) + (32 * _16879) + -mem[64] + 96
            mem[_8511 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13302 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _13526 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15626 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15626] == mem[_15626 + 12 len 20]
                            require s < mem[_13302]
                            mem[(32 * s) + _13302 + 32] = mem[_15626 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16271 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13526]
                            mem[(32 * s) + _13526 + 32] = mem[_16271]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13302
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13526
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15625 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15625]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15961 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15961]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16305 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8511]
                        mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16305]
                    else:
                        mem[_13526 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15628] == mem[_15628 + 12 len 20]
                            require s < mem[_13302]
                            mem[(32 * s) + _13302 + 32] = mem[_15628 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16272 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13526]
                            mem[(32 * s) + _13526 + 32] = mem[_16272]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13302
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13526
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15627 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15627]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15963 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15963]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8511]
                        mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16306]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15630 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15630] == mem[_15630 + 12 len 20]
                        require s < mem[_13302]
                        mem[(32 * s) + _13302 + 32] = mem[_15630 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16273 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13302 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _13302 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16273]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13302
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13302 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15629 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15629]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15965 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413]
                    mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15965]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16307 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8511]
                    mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16307]
                    idx = idx + 1
                    continue 
                mem[_13302 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15632 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15632] == mem[_15632 + 12 len 20]
                    require s < mem[_13302]
                    mem[(32 * s) + _13302 + 32] = mem[_15632 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16274 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13302 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13302 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16274]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _13302
                require uint32(s) < mem[_4117]
                mem[(32 * uint32(s)) + _4117 + 32] = _13302 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15631 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15631]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15967 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8413]
                mem[(32 * uint32(s)) + _8413 + 32] = mem[_15967]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16308 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8511]
                mem[(32 * uint32(s)) + _8511 + 32] = mem[_16308]
                s = s + 1
                continue 
            _12440 = mem[64]
            mem[mem[64]] = 160
            _12704 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12704:
                mem[u] = t + -_12440 - 192
                _15316 = mem[s]
                _15404 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15316 + 32
                x = t + 32
                while v < _15404:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _15404 + 1
                w = _15316 + (32 * _15404) + 64
                t = t + (32 * _15404) + 32
                u = u + 32
                continue 
            mem[_12440 + 32] = t - _12440
            _15476 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _15476) + 32
            v = t + 32
            while idx < _15476:
                mem[v] = u + -t - 32
                _16509 = mem[s]
                _16532 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16509 + 32
                x = u + 32
                while t < _16532:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _16532 + 1
                w = _16509 + (32 * _16532) + 64
                u = u + (32 * _16532) + 32
                v = v + 32
                continue 
            mem[_12440 + 64] = u - _12440
            _16560 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16560] = mem[_4106 + 32 len 32 * _16560]
            mem[_12440 + 96] = u + (32 * _16560) + -_12440 + 32
            _16768 = mem[_8413]
            mem[u + (32 * _16560) + 32] = mem[_8413]
            mem[u + (32 * _16560) + 64 len 32 * _16768] = mem[_8413 + 32 len 32 * _16768]
            mem[_12440 + 128] = u + (32 * _16560) + (32 * _16768) + -_12440 + 64
            _16880 = mem[_8511]
            mem[u + (32 * _16560) + (32 * _16768) + 64] = mem[_8511]
            mem[u + (32 * _16560) + (32 * _16768) + 96 len 32 * _16880] = mem[_8511 + 32 len 32 * _16880]
            return memory
              from mem[64]
               len u + (32 * _16560) + (32 * _16768) + (32 * _16880) + -mem[64] + 96
        mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = _8413 + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13304 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _13528 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15635 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15635] == mem[_15635 + 12 len 20]
                            require s < mem[_13304]
                            mem[(32 * s) + _13304 + 32] = mem[_15635 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16275 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13528]
                            mem[(32 * s) + _13528 + 32] = mem[_16275]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13304
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13528
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15634 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15634]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15970 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15970]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16310 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16310]
                    else:
                        mem[_13528 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15637 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15637] == mem[_15637 + 12 len 20]
                            require s < mem[_13304]
                            mem[(32 * s) + _13304 + 32] = mem[_15637 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16276 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13528]
                            mem[(32 * s) + _13528 + 32] = mem[_16276]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13304
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13528
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15636 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15636]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15972 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15972]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16311]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15639 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15639] == mem[_15639 + 12 len 20]
                        require s < mem[_13304]
                        mem[(32 * s) + _13304 + 32] = mem[_15639 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16277 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13304 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _13304 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16277]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13304
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13304 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15638 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15638]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15974 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413]
                    mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15974]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16312 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16312]
                    idx = idx + 1
                    continue 
                mem[_13304 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15641 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15641] == mem[_15641 + 12 len 20]
                    require s < mem[_13304]
                    mem[(32 * s) + _13304 + 32] = mem[_15641 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16278 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13304 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13304 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16278]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _13304
                require uint32(s) < mem[_4117]
                mem[(32 * uint32(s)) + _4117 + 32] = _13304 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15640 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15640]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15976 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8413]
                mem[(32 * uint32(s)) + _8413 + 32] = mem[_15976]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16313 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16313]
                s = s + 1
                continue 
            _12441 = mem[64]
            mem[mem[64]] = 160
            _12705 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12705:
                mem[u] = t + -_12441 - 192
                _15325 = mem[s]
                _15409 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15325 + 32
                x = t + 32
                while v < _15409:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _15409 + 1
                w = _15325 + (32 * _15409) + 64
                t = t + (32 * _15409) + 32
                u = u + 32
                continue 
            mem[_12441 + 32] = t - _12441
            _15489 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _15489) + 32
            v = t + 32
            while idx < _15489:
                mem[v] = u + -t - 32
                _16511 = mem[s]
                _16533 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16511 + 32
                x = u + 32
                while t < _16533:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _16533 + 1
                w = _16511 + (32 * _16533) + 64
                u = u + (32 * _16533) + 32
                v = v + 32
                continue 
            mem[_12441 + 64] = u - _12441
            _16561 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16561] = mem[_4106 + 32 len 32 * _16561]
            mem[_12441 + 96] = u + (32 * _16561) + -_12441 + 32
            _16769 = mem[_8413]
            mem[u + (32 * _16561) + 32] = mem[_8413]
            mem[u + (32 * _16561) + 64 len 32 * _16769] = mem[_8413 + 32 len 32 * _16769]
            mem[_12441 + 128] = u + (32 * _16561) + (32 * _16769) + -_12441 + 64
            _16881 = mem[_8413 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _16561) + (32 * _16769) + 64] = mem[_8413 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _16561) + (32 * _16769) + 96 len 32 * _16881] = mem[_8413 + (32 * ('cd', 4).length) + 64 len 32 * _16881]
            return memory
              from mem[64]
               len u + (32 * _16561) + (32 * _16769) + (32 * _16881) + -mem[64] + 96
        mem[_8413 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _13306 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13530 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15644] == mem[_15644 + 12 len 20]
                        require s < mem[_13306]
                        mem[(32 * s) + _13306 + 32] = mem[_15644 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16279 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13530]
                        mem[(32 * s) + _13530 + 32] = mem[_16279]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13306
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13530
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15643 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15643]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15979 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413]
                    mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15979]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16315 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16315]
                else:
                    mem[_13530 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15646 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15646] == mem[_15646 + 12 len 20]
                        require s < mem[_13306]
                        mem[(32 * s) + _13306 + 32] = mem[_15646 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16280 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13530]
                        mem[(32 * s) + _13530 + 32] = mem[_16280]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13306
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13530
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15645 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15645]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15981 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413]
                    mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15981]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16316 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16316]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15648 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15648] == mem[_15648 + 12 len 20]
                    require s < mem[_13306]
                    mem[(32 * s) + _13306 + 32] = mem[_15648 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16281 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13306 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13306 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16281]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13306
                require uint32(idx) < mem[_4117]
                mem[(32 * uint32(idx)) + _4117 + 32] = _13306 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15647 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15647]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15983 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8413]
                mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15983]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16317 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16317]
                idx = idx + 1
                continue 
            mem[_13306 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15650 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15650] == mem[_15650 + 12 len 20]
                require s < mem[_13306]
                mem[(32 * s) + _13306 + 32] = mem[_15650 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16282 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_13306 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _13306 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16282]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _13306
            require uint32(s) < mem[_4117]
            mem[(32 * uint32(s)) + _4117 + 32] = _13306 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15649 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106]
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15649]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15985 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8413]
            mem[(32 * uint32(s)) + _8413 + 32] = mem[_15985]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16318 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8413 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16318]
            s = s + 1
            continue 
        _12442 = mem[64]
        mem[mem[64]] = 160
        _12706 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12706:
            mem[u] = t + -_12442 - 192
            _15334 = mem[s]
            _15414 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15334 + 32
            x = t + 32
            while v < _15414:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _15414 + 1
            w = _15334 + (32 * _15414) + 64
            t = t + (32 * _15414) + 32
            u = u + 32
            continue 
        mem[_12442 + 32] = t - _12442
        _15502 = mem[_4117]
        mem[t] = mem[_4117]
        idx = 0
        s = _4117 + 32
        u = t + (32 * _15502) + 32
        v = t + 32
        while idx < _15502:
            mem[v] = u + -t - 32
            _16513 = mem[s]
            _16534 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16513 + 32
            x = u + 32
            while t < _16534:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _16534 + 1
            w = _16513 + (32 * _16534) + 64
            u = u + (32 * _16534) + 32
            v = v + 32
            continue 
        mem[_12442 + 64] = u - _12442
        _16562 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16562] = mem[_4106 + 32 len 32 * _16562]
        mem[_12442 + 96] = u + (32 * _16562) + -_12442 + 32
        _16770 = mem[_8413]
        mem[u + (32 * _16562) + 32] = mem[_8413]
        mem[u + (32 * _16562) + 64 len 32 * _16770] = mem[_8413 + 32 len 32 * _16770]
        mem[_12442 + 128] = u + (32 * _16562) + (32 * _16770) + -_12442 + 64
        _16882 = mem[_8413 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16562) + (32 * _16770) + 64] = mem[_8413 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16562) + (32 * _16770) + 96 len 32 * _16882] = mem[_8413 + (32 * ('cd', 4).length) + 64 len 32 * _16882]
        return memory
          from mem[64]
           len u + (32 * _16562) + (32 * _16770) + (32 * _16882) + -mem[64] + 96
    mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
    mem[64] = _4106 + (64 * ('cd', 4).length) + 64
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[_4106 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[_4106 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
            mem[64] = _4106 + (131 * ('cd', 4).length) + 128
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8800 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8960 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12833 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12833] == mem[_12833 + 12 len 20]
                                require s < mem[_8800]
                                mem[(32 * s) + _8800 + 32] = mem[_12833 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14035 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8960]
                                mem[(32 * s) + _8960 + 32] = mem[_14035]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8800
                            require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8960
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12832]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13436 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13436]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14164 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14164]
                        else:
                            mem[_8960 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12835 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12835] == mem[_12835 + 12 len 20]
                                require s < mem[_8800]
                                mem[(32 * s) + _8800 + 32] = mem[_12835 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14036 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8960]
                                mem[(32 * s) + _8960 + 32] = mem[_14036]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8800
                            require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8960
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12834 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12834]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13438 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13438]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14165 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14165]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12837] == mem[_12837 + 12 len 20]
                            require s < mem[_8800]
                            mem[(32 * s) + _8800 + 32] = mem[_12837 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14037 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8800 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8800 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14037]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8800
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8800 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12836 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12836]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13440 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13440]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14166 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14166]
                        idx = idx + 1
                        continue 
                    mem[_8800 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12839 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12839] == mem[_12839 + 12 len 20]
                        require s < mem[_8800]
                        mem[(32 * s) + _8800 + 32] = mem[_12839 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14038 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8800 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8800 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14038]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8800
                    require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8800 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12838 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106]
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12838]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13442 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13442]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14167 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14167]
                    s = s + 1
                    continue 
                _8305 = mem[64]
                mem[mem[64]] = 160
                _8435 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8435:
                    mem[u] = t + -_8305 - 192
                    _12335 = mem[s]
                    _12443 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12335 + 32
                    x = t + 32
                    while v < _12443:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12443 + 1
                    w = _12335 + (32 * _12443) + 64
                    t = t + (32 * _12443) + 32
                    u = u + 32
                    continue 
                mem[_8305 + 32] = t - _8305
                _12631 = mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
                idx = 0
                s = _4106 + (32 * ('cd', 4).length) + 64
                u = t + (32 * _12631) + 32
                v = t + 32
                while idx < _12631:
                    mem[v] = u + -t - 32
                    _15343 = mem[s]
                    _15419 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15343 + 32
                    x = u + 32
                    while t < _15419:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15419 + 1
                    w = _15343 + (32 * _15419) + 64
                    u = u + (32 * _15419) + 32
                    v = v + 32
                    continue 
                mem[_8305 + 64] = u - _8305
                _15515 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15515] = mem[_4106 + 32 len 32 * _15515]
                mem[_8305 + 96] = u + (32 * _15515) + -_8305 + 32
                _16563 = mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15515) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15515) + 64 len 32 * _16563] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16563]
                mem[_8305 + 128] = u + (32 * _15515) + (32 * _16563) + -_8305 + 64
                _16771 = mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _15515) + (32 * _16563) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _15515) + (32 * _16563) + 96 len 32 * _16771] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16771]
                return memory
                  from mem[64]
                   len u + (32 * _15515) + (32 * _16563) + (32 * _16771) + -mem[64] + 96
            mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8802 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8962 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8962 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12842 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12842] == mem[_12842 + 12 len 20]
                            require s < mem[_8802]
                            mem[(32 * s) + _8802 + 32] = mem[_12842 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14039 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8962]
                            mem[(32 * s) + _8962 + 32] = mem[_14039]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8802
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8962
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12841]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13445 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13445]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14169 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14169]
                    else:
                        mem[_8962 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12844 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12844] == mem[_12844 + 12 len 20]
                            require s < mem[_8802]
                            mem[(32 * s) + _8802 + 32] = mem[_12844 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14040 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8962]
                            mem[(32 * s) + _8962 + 32] = mem[_14040]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8802
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8962
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12843 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12843]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13447 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13447]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14170 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14170]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8802 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12846 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12846] == mem[_12846 + 12 len 20]
                        require s < mem[_8802]
                        mem[(32 * s) + _8802 + 32] = mem[_12846 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14041 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8802 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8802 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14041]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8802
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8802 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12845 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12845]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13449 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13449]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14171 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14171]
                    idx = idx + 1
                    continue 
                mem[_8802 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12848 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12848] == mem[_12848 + 12 len 20]
                    require s < mem[_8802]
                    mem[(32 * s) + _8802 + 32] = mem[_12848 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14042 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8802 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8802 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14042]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8802
                require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8802 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12847 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12847]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13451 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13451]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14172 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14172]
                s = s + 1
                continue 
            _8306 = mem[64]
            mem[mem[64]] = 160
            _8436 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8436:
                mem[u] = t + -_8306 - 192
                _12344 = mem[s]
                _12448 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12344 + 32
                x = t + 32
                while v < _12448:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12448 + 1
                w = _12344 + (32 * _12448) + 64
                t = t + (32 * _12448) + 32
                u = u + 32
                continue 
            mem[_8306 + 32] = t - _8306
            _12644 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _12644) + 32
            v = t + 32
            while idx < _12644:
                mem[v] = u + -t - 32
                _15345 = mem[s]
                _15420 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15345 + 32
                x = u + 32
                while t < _15420:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15420 + 1
                w = _15345 + (32 * _15420) + 64
                u = u + (32 * _15420) + 32
                v = v + 32
                continue 
            mem[_8306 + 64] = u - _8306
            _15516 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15516] = mem[_4106 + 32 len 32 * _15516]
            mem[_8306 + 96] = u + (32 * _15516) + -_8306 + 32
            _16564 = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15516) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15516) + 64 len 32 * _16564] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16564]
            mem[_8306 + 128] = u + (32 * _15516) + (32 * _16564) + -_8306 + 64
            _16772 = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15516) + (32 * _16564) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15516) + (32 * _16564) + 96 len 32 * _16772] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16772]
            return memory
              from mem[64]
               len u + (32 * _15516) + (32 * _16564) + (32 * _16772) + -mem[64] + 96
        mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[_4106 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
        mem[64] = _4106 + (131 * ('cd', 4).length) + 128
        if not ('cd', 4).length:
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8804 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8964 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8964 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12851 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12851] == mem[_12851 + 12 len 20]
                            require s < mem[_8804]
                            mem[(32 * s) + _8804 + 32] = mem[_12851 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8964]
                            mem[(32 * s) + _8964 + 32] = mem[_14043]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8804
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8964
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12850 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12850]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13454 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13454]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14174 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14174]
                    else:
                        mem[_8964 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12853 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12853] == mem[_12853 + 12 len 20]
                            require s < mem[_8804]
                            mem[(32 * s) + _8804 + 32] = mem[_12853 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14044 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8964]
                            mem[(32 * s) + _8964 + 32] = mem[_14044]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8804
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8964
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12852 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12852]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13456 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13456]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14175 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14175]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8804 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12855 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12855] == mem[_12855 + 12 len 20]
                        require s < mem[_8804]
                        mem[(32 * s) + _8804 + 32] = mem[_12855 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14045 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8804 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8804 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14045]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8804
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8804 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12854 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12854]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13458 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13458]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14176 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14176]
                    idx = idx + 1
                    continue 
                mem[_8804 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12857 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12857] == mem[_12857 + 12 len 20]
                    require s < mem[_8804]
                    mem[(32 * s) + _8804 + 32] = mem[_12857 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14046 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8804 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8804 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14046]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8804
                require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8804 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12856 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12856]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13460 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13460]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14177 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14177]
                s = s + 1
                continue 
            _8307 = mem[64]
            mem[mem[64]] = 160
            _8437 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8437:
                mem[u] = t + -_8307 - 192
                _12353 = mem[s]
                _12453 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12353 + 32
                x = t + 32
                while v < _12453:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12453 + 1
                w = _12353 + (32 * _12453) + 64
                t = t + (32 * _12453) + 32
                u = u + 32
                continue 
            mem[_8307 + 32] = t - _8307
            _12657 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _12657) + 32
            v = t + 32
            while idx < _12657:
                mem[v] = u + -t - 32
                _15347 = mem[s]
                _15421 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15347 + 32
                x = u + 32
                while t < _15421:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15421 + 1
                w = _15347 + (32 * _15421) + 64
                u = u + (32 * _15421) + 32
                v = v + 32
                continue 
            mem[_8307 + 64] = u - _8307
            _15517 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15517] = mem[_4106 + 32 len 32 * _15517]
            mem[_8307 + 96] = u + (32 * _15517) + -_8307 + 32
            _16565 = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15517) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15517) + 64 len 32 * _16565] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16565]
            mem[_8307 + 128] = u + (32 * _15517) + (32 * _16565) + -_8307 + 64
            _16773 = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15517) + (32 * _16565) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15517) + (32 * _16565) + 96 len 32 * _16773] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16773]
            return memory
              from mem[64]
               len u + (32 * _15517) + (32 * _16565) + (32 * _16773) + -mem[64] + 96
        mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _8806 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8966 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8966 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12860 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12860] == mem[_12860 + 12 len 20]
                        require s < mem[_8806]
                        mem[(32 * s) + _8806 + 32] = mem[_12860 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14047 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8966]
                        mem[(32 * s) + _8966 + 32] = mem[_14047]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8806
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8966
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12859 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12859]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13463 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13463]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14179 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14179]
                else:
                    mem[_8966 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12862 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12862] == mem[_12862 + 12 len 20]
                        require s < mem[_8806]
                        mem[(32 * s) + _8806 + 32] = mem[_12862 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14048 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8966]
                        mem[(32 * s) + _8966 + 32] = mem[_14048]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8806
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8966
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12861]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13465 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13465]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14180 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14180]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _8806 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12864 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12864] == mem[_12864 + 12 len 20]
                    require s < mem[_8806]
                    mem[(32 * s) + _8806 + 32] = mem[_12864 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14049 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8806 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8806 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14049]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _8806
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8806 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12863 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12863]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13467 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13467]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14181 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14181]
                idx = idx + 1
                continue 
            mem[_8806 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12866 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12866] == mem[_12866 + 12 len 20]
                require s < mem[_8806]
                mem[(32 * s) + _8806 + 32] = mem[_12866 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14050 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_8806 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _8806 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14050]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _8806
            require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8806 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12865 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106]
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_12865]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13469 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13469]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14182 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14182]
            s = s + 1
            continue 
        _8308 = mem[64]
        mem[mem[64]] = 160
        _8438 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _8438:
            mem[u] = t + -_8308 - 192
            _12362 = mem[s]
            _12458 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _12362 + 32
            x = t + 32
            while v < _12458:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _12458 + 1
            w = _12362 + (32 * _12458) + 64
            t = t + (32 * _12458) + 32
            u = u + 32
            continue 
        mem[_8308 + 32] = t - _8308
        _12670 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _12670) + 32
        v = t + 32
        while idx < _12670:
            mem[v] = u + -t - 32
            _15349 = mem[s]
            _15422 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _15349 + 32
            x = u + 32
            while t < _15422:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _15422 + 1
            w = _15349 + (32 * _15422) + 64
            u = u + (32 * _15422) + 32
            v = v + 32
            continue 
        mem[_8308 + 64] = u - _8308
        _15518 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _15518] = mem[_4106 + 32 len 32 * _15518]
        mem[_8308 + 96] = u + (32 * _15518) + -_8308 + 32
        _16566 = mem[_4106 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _15518) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _15518) + 64 len 32 * _16566] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16566]
        mem[_8308 + 128] = u + (32 * _15518) + (32 * _16566) + -_8308 + 64
        _16774 = mem[_4106 + (98 * ('cd', 4).length) + 96]
        mem[u + (32 * _15518) + (32 * _16566) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
        mem[u + (32 * _15518) + (32 * _16566) + 96 len 32 * _16774] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16774]
        return memory
          from mem[64]
           len u + (32 * _15518) + (32 * _16566) + (32 * _16774) + -mem[64] + 96
    mem[_4106 + (32 * ('cd', 4).length) + 64] = 96
    s = _4106 + (32 * ('cd', 4).length) + 64
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    require ('cd', 4).length <= test266151307()
    _8414 = mem[64]
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        _8512 = mem[64] + (32 * ('cd', 4).length) + 32
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = _8512 + (32 * ('cd', 4).length) + 32
        if not ('cd', 4).length:
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13308 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _13548 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15657] == mem[_15657 + 12 len 20]
                            require s < mem[_13308]
                            mem[(32 * s) + _13308 + 32] = mem[_15657 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16283 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13548]
                            mem[(32 * s) + _13548 + 32] = mem[_16283]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13308
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13548
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15656 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15656]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8414]
                        mem[(32 * uint32(idx)) + _8414 + 32] = mem[_15992]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16320 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8512]
                        mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16320]
                    else:
                        mem[_13548 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15659] == mem[_15659 + 12 len 20]
                            require s < mem[_13308]
                            mem[(32 * s) + _13308 + 32] = mem[_15659 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16284 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13548]
                            mem[(32 * s) + _13548 + 32] = mem[_16284]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13308
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13548
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15658 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15658]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15994 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8414]
                        mem[(32 * uint32(idx)) + _8414 + 32] = mem[_15994]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16321 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8512]
                        mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16321]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15661 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15661] == mem[_15661 + 12 len 20]
                        require s < mem[_13308]
                        mem[(32 * s) + _13308 + 32] = mem[_15661 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16285 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16285]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13308
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15660 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15660]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15996 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_15996]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16322 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8512]
                    mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16322]
                    idx = idx + 1
                    continue 
                mem[_13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15663 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15663] == mem[_15663 + 12 len 20]
                    require s < mem[_13308]
                    mem[(32 * s) + _13308 + 32] = mem[_15663 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16286 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13308 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13308 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16286]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _13308
                require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13308 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15662 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15662]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15998 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8414]
                mem[(32 * uint32(s)) + _8414 + 32] = mem[_15998]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16323 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8512]
                mem[(32 * uint32(s)) + _8512 + 32] = mem[_16323]
                s = s + 1
                continue 
            _12463 = mem[64]
            mem[mem[64]] = 160
            _12711 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12711:
                mem[u] = t + -_12463 - 192
                _15351 = mem[s]
                _15423 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15351 + 32
                x = t + 32
                while v < _15423:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _15423 + 1
                w = _15351 + (32 * _15423) + 64
                t = t + (32 * _15423) + 32
                u = u + 32
                continue 
            mem[_12463 + 32] = t - _12463
            _15519 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _15519) + 32
            v = t + 32
            while idx < _15519:
                mem[v] = u + -t - 32
                _16523 = mem[s]
                _16535 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16523 + 32
                x = u + 32
                while t < _16535:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _16535 + 1
                w = _16523 + (32 * _16535) + 64
                u = u + (32 * _16535) + 32
                v = v + 32
                continue 
            mem[_12463 + 64] = u - _12463
            _16567 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16567] = mem[_4106 + 32 len 32 * _16567]
            mem[_12463 + 96] = u + (32 * _16567) + -_12463 + 32
            _16775 = mem[_8414]
            mem[u + (32 * _16567) + 32] = mem[_8414]
            mem[u + (32 * _16567) + 64 len 32 * _16775] = mem[_8414 + 32 len 32 * _16775]
            mem[_12463 + 128] = u + (32 * _16567) + (32 * _16775) + -_12463 + 64
            _16887 = mem[_8512]
            mem[u + (32 * _16567) + (32 * _16775) + 64] = mem[_8512]
            mem[u + (32 * _16567) + (32 * _16775) + 96 len 32 * _16887] = mem[_8512 + 32 len 32 * _16887]
            return memory
              from mem[64]
               len u + (32 * _16567) + (32 * _16775) + (32 * _16887) + -mem[64] + 96
        mem[_8512 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _13310 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13550 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15666 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15666] == mem[_15666 + 12 len 20]
                        require s < mem[_13310]
                        mem[(32 * s) + _13310 + 32] = mem[_15666 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16287 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13550]
                        mem[(32 * s) + _13550 + 32] = mem[_16287]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13310
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13550
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15665 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15665]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16001 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16001]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16325 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8512]
                    mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16325]
                else:
                    mem[_13550 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15668 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15668] == mem[_15668 + 12 len 20]
                        require s < mem[_13310]
                        mem[(32 * s) + _13310 + 32] = mem[_15668 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16288 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13550]
                        mem[(32 * s) + _13550 + 32] = mem[_16288]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13310
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13550
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15667 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15667]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16003 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16003]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16326 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8512]
                    mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16326]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15670 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15670] == mem[_15670 + 12 len 20]
                    require s < mem[_13310]
                    mem[(32 * s) + _13310 + 32] = mem[_15670 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16289]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13310
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15669 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15669]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16005 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414]
                mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16005]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16327 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8512]
                mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16327]
                idx = idx + 1
                continue 
            mem[_13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15672 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15672] == mem[_15672 + 12 len 20]
                require s < mem[_13310]
                mem[(32 * s) + _13310 + 32] = mem[_15672 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16290 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_13310 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _13310 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16290]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _13310
            require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13310 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15671 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106]
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15671]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16007 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8414]
            mem[(32 * uint32(s)) + _8414 + 32] = mem[_16007]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16328 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8512]
            mem[(32 * uint32(s)) + _8512 + 32] = mem[_16328]
            s = s + 1
            continue 
        _12464 = mem[64]
        mem[mem[64]] = 160
        _12712 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12712:
            mem[u] = t + -_12464 - 192
            _15360 = mem[s]
            _15428 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15360 + 32
            x = t + 32
            while v < _15428:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _15428 + 1
            w = _15360 + (32 * _15428) + 64
            t = t + (32 * _15428) + 32
            u = u + 32
            continue 
        mem[_12464 + 32] = t - _12464
        _15532 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _15532) + 32
        v = t + 32
        while idx < _15532:
            mem[v] = u + -t - 32
            _16525 = mem[s]
            _16536 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16525 + 32
            x = u + 32
            while t < _16536:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _16536 + 1
            w = _16525 + (32 * _16536) + 64
            u = u + (32 * _16536) + 32
            v = v + 32
            continue 
        mem[_12464 + 64] = u - _12464
        _16568 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16568] = mem[_4106 + 32 len 32 * _16568]
        mem[_12464 + 96] = u + (32 * _16568) + -_12464 + 32
        _16776 = mem[_8414]
        mem[u + (32 * _16568) + 32] = mem[_8414]
        mem[u + (32 * _16568) + 64 len 32 * _16776] = mem[_8414 + 32 len 32 * _16776]
        mem[_12464 + 128] = u + (32 * _16568) + (32 * _16776) + -_12464 + 64
        _16888 = mem[_8512]
        mem[u + (32 * _16568) + (32 * _16776) + 64] = mem[_8512]
        mem[u + (32 * _16568) + (32 * _16776) + 96 len 32 * _16888] = mem[_8512 + 32 len 32 * _16888]
        return memory
          from mem[64]
           len u + (32 * _16568) + (32 * _16776) + (32 * _16888) + -mem[64] + 96
    mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
    mem[64] = _8414 + (64 * ('cd', 4).length) + 64
    if not ('cd', 4).length:
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _13312 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13552 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15675 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15675] == mem[_15675 + 12 len 20]
                        require s < mem[_13312]
                        mem[(32 * s) + _13312 + 32] = mem[_15675 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16291 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13552]
                        mem[(32 * s) + _13552 + 32] = mem[_16291]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13312
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13552
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15674 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15674]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16010 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16010]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16330 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16330]
                else:
                    mem[_13552 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15677 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15677] == mem[_15677 + 12 len 20]
                        require s < mem[_13312]
                        mem[(32 * s) + _13312 + 32] = mem[_15677 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16292 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13552]
                        mem[(32 * s) + _13552 + 32] = mem[_16292]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13312
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13552
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15676 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15676]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16012 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16012]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16331 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16331]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15679 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15679] == mem[_15679 + 12 len 20]
                    require s < mem[_13312]
                    mem[(32 * s) + _13312 + 32] = mem[_15679 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16293 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16293]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13312
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15678 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15678]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16014 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414]
                mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16014]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16332 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16332]
                idx = idx + 1
                continue 
            mem[_13312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15681 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15681] == mem[_15681 + 12 len 20]
                require s < mem[_13312]
                mem[(32 * s) + _13312 + 32] = mem[_15681 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16294 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_13312 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _13312 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16294]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _13312
            require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13312 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15680 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106]
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15680]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16016 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8414]
            mem[(32 * uint32(s)) + _8414 + 32] = mem[_16016]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16333 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8414 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16333]
            s = s + 1
            continue 
        _12465 = mem[64]
        mem[mem[64]] = 160
        _12713 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12713:
            mem[u] = t + -_12465 - 192
            _15369 = mem[s]
            _15433 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15369 + 32
            x = t + 32
            while v < _15433:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _15433 + 1
            w = _15369 + (32 * _15433) + 64
            t = t + (32 * _15433) + 32
            u = u + 32
            continue 
        mem[_12465 + 32] = t - _12465
        _15545 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _15545) + 32
        v = t + 32
        while idx < _15545:
            mem[v] = u + -t - 32
            _16527 = mem[s]
            _16537 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16527 + 32
            x = u + 32
            while t < _16537:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _16537 + 1
            w = _16527 + (32 * _16537) + 64
            u = u + (32 * _16537) + 32
            v = v + 32
            continue 
        mem[_12465 + 64] = u - _12465
        _16569 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16569] = mem[_4106 + 32 len 32 * _16569]
        mem[_12465 + 96] = u + (32 * _16569) + -_12465 + 32
        _16777 = mem[_8414]
        mem[u + (32 * _16569) + 32] = mem[_8414]
        mem[u + (32 * _16569) + 64 len 32 * _16777] = mem[_8414 + 32 len 32 * _16777]
        mem[_12465 + 128] = u + (32 * _16569) + (32 * _16777) + -_12465 + 64
        _16889 = mem[_8414 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16569) + (32 * _16777) + 64] = mem[_8414 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16569) + (32 * _16777) + 96 len 32 * _16889] = mem[_8414 + (32 * ('cd', 4).length) + 64 len 32 * _16889]
        return memory
          from mem[64]
           len u + (32 * _16569) + (32 * _16777) + (32 * _16889) + -mem[64] + 96
    mem[_8414 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    while ('cd', 4).length > uint32(idx):
        require uint32(idx) < ('cd', 36).length
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
        _13314 = mem[64]
        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _13554 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15684 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15684] == mem[_15684 + 12 len 20]
                    require s < mem[_13314]
                    mem[(32 * s) + _13314 + 32] = mem[_15684 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16295 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13554]
                    mem[(32 * s) + _13554 + 32] = mem[_16295]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13314
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13554
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15683 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15683]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16019 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414]
                mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16019]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16335 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16335]
            else:
                mem[_13554 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15686 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15686] == mem[_15686 + 12 len 20]
                    require s < mem[_13314]
                    mem[(32 * s) + _13314 + 32] = mem[_15686 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16296 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13554]
                    mem[(32 * s) + _13554 + 32] = mem[_16296]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13314
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13554
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15685 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15685]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16021 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414]
                mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16021]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16336 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16336]
            idx = idx + 1
            continue 
        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
            s = 0
            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15688 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15688] == mem[_15688 + 12 len 20]
                require s < mem[_13314]
                mem[(32 * s) + _13314 + 32] = mem[_15688 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16297 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_13314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _13314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16297]
                s = s + 1
                continue 
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = _13314
            require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15687 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(idx) < mem[_4106]
            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15687]
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16023 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(idx) < mem[_8414]
            mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16023]
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16337 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16337]
            idx = idx + 1
            continue 
        mem[_13314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
        s = 0
        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
            mem[mem[64] + 4] = s
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                    gas gas_remaining wei
                   args s
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15690 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15690] == mem[_15690 + 12 len 20]
            require s < mem[_13314]
            mem[(32 * s) + _13314 + 32] = mem[_15690 + 12 len 20]
            mem[mem[64] + 4] = s
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                    gas gas_remaining wei
                   args s
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16298 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require s < mem[_13314 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
            mem[(32 * s) + _13314 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16298]
            s = s + 1
            continue 
        require uint32(s) < mem[96]
        mem[(32 * uint32(s)) + 128] = _13314
        require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13314 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _15689 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require uint32(s) < mem[_4106]
        mem[(32 * uint32(s)) + _4106 + 32] = mem[_15689]
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _16025 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require uint32(s) < mem[_8414]
        mem[(32 * uint32(s)) + _8414 + 32] = mem[_16025]
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _16338 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require uint32(s) < mem[_8414 + (32 * ('cd', 4).length) + 32]
        mem[(32 * uint32(s)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16338]
        s = s + 1
        continue 
    _12466 = mem[64]
    mem[mem[64]] = 160
    _12714 = mem[96]
    mem[mem[64] + 160] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + (32 * mem[96]) + 192
    u = mem[64] + 192
    while idx < _12714:
        mem[u] = t + -_12466 - 192
        _15378 = mem[s]
        _15438 = mem[mem[s]]
        mem[t] = mem[mem[s]]
        v = 0
        w = _15378 + 32
        x = t + 32
        while v < _15438:
            mem[x] = mem[w + 12 len 20]
            v = v + 1
            w = w + 32
            x = x + 32
            continue 
        v = _15438 + 1
        w = _15378 + (32 * _15438) + 64
        t = t + (32 * _15438) + 32
        u = u + 32
        continue 
    mem[_12466 + 32] = t - _12466
    _15558 = mem[_4106 + (32 * ('cd', 4).length) + 32]
    mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
    idx = 0
    s = _4106 + (32 * ('cd', 4).length) + 64
    u = t + (32 * _15558) + 32
    v = t + 32
    while idx < _15558:
        mem[v] = u + -t - 32
        _16529 = mem[s]
        _16538 = mem[mem[s]]
        mem[u] = mem[mem[s]]
        t = 0
        w = _16529 + 32
        x = u + 32
        while t < _16538:
            mem[x] = mem[w]
            t = t + 1
            w = w + 32
            x = x + 32
            continue 
        t = _16538 + 1
        w = _16529 + (32 * _16538) + 64
        u = u + (32 * _16538) + 32
        v = v + 32
        continue 
    mem[_12466 + 64] = u - _12466
    _16570 = mem[_4106]
    mem[u] = mem[_4106]
    mem[u + 32 len 32 * _16570] = mem[_4106 + 32 len 32 * _16570]
    mem[_12466 + 96] = u + (32 * _16570) + -_12466 + 32
    _16778 = mem[_8414]
    mem[u + (32 * _16570) + 32] = mem[_8414]
    mem[u + (32 * _16570) + 64 len 32 * _16778] = mem[_8414 + 32 len 32 * _16778]
    mem[_12466 + 128] = u + (32 * _16570) + (32 * _16778) + -_12466 + 64
    _16890 = mem[_8414 + (32 * ('cd', 4).length) + 32]
    mem[u + (32 * _16570) + (32 * _16778) + 64] = mem[_8414 + (32 * ('cd', 4).length) + 32]
    mem[u + (32 * _16570) + (32 * _16778) + 96 len 32 * _16890] = mem[_8414 + (32 * ('cd', 4).length) + 64 len 32 * _16890]
    return memory
      from mem[64]
       len u + (32 * _16570) + (32 * _16778) + (32 * _16890) + -mem[64] + 96
}



}
