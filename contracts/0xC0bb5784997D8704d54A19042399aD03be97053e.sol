contract main {




// =====================  Runtime code  =====================


#
#  - sub_06b68323(?)
#  - getReserves(address[] arg1)
#  - sub_68dbc76f(?)
#  - sub_76a7a689(?)
#
function _fallback() payable {
    revert
}

function sub_960d244e(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == arg4
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    if ext_call.return_data[0] < arg4:
        return 0
    require ext_code.size(address(arg1))
    staticcall address(arg1).0xdd62ed3e with:
            gas gas_remaining wei
           args address(arg2), address(arg3)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    if ext_call.return_data[0] < arg4:
        return 0
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    return ext_call.return_data[0]
}

function balanceOf(address arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 'NH{q', 65
    if floor32(arg2.length) + 97 > test266151307() or floor32(arg2.length) + 97 < 96:
        revert with 'NH{q', 65
    mem[96] = arg2.length
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    idx = 0
    s = arg2 + 36
    t = 128
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if arg2.length > test266151307():
        revert with 'NH{q', 65
    mem[floor32(arg2.length) + 97] = arg2.length
    mem[64] = floor32(arg2.length) + (32 * arg2.length) + 129
    if not arg2.length:
        idx = 0
        while idx < arg2.length:
            if idx >= mem[96]:
                revert with 'NH{q', 50
            _59 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(arg1)
            staticcall arg1.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_59)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _69 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_69] == mem[_69]
            if idx >= mem[floor32(arg2.length) + 97]:
                revert with 'NH{q', 50
            mem[(32 * idx) + floor32(arg2.length) + 129] = mem[_69]
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _64 = mem[floor32(arg2.length) + 97]
        mem[mem[64] + 32] = mem[floor32(arg2.length) + 97]
        mem[mem[64] + 64 len 32 * _64] = mem[floor32(arg2.length) + 129 len 32 * _64]
        return 32, mem[mem[64] + 32 len (32 * _64) + 32]
    mem[floor32(arg2.length) + 129 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    idx = 0
    while idx < arg2.length:
        if idx >= mem[96]:
            revert with 'NH{q', 50
        _62 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args address(_62)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _71 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_71] == mem[_71]
        if idx >= mem[floor32(arg2.length) + 97]:
            revert with 'NH{q', 50
        mem[(32 * idx) + floor32(arg2.length) + 129] = mem[_71]
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _65 = mem[floor32(arg2.length) + 97]
    mem[mem[64] + 32] = mem[floor32(arg2.length) + 97]
    mem[mem[64] + 64 len 32 * _65] = mem[floor32(arg2.length) + 129 len 32 * _65]
    return 32, mem[mem[64] + 32 len (32 * _65) + 32]
}

function sub_dd5e5fbe(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    if floor32(('cd', 4).length) + 97 > test266151307() or floor32(('cd', 4).length) + 97 < 96:
        revert with 'NH{q', 65
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    if ('cd', 68).length > test266151307():
        revert with 'NH{q', 65
    if floor32(('cd', 4).length) + floor32(('cd', 68).length) + 98 > test266151307() or floor32(('cd', 68).length) + 98 < 97:
        revert with 'NH{q', 65
    mem[floor32(('cd', 4).length) + 97] = ('cd', 68).length
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    idx = 0
    s = cd[68] + 36
    t = floor32(('cd', 4).length) + 129
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if not ('cd', 68).length:
        revert with 'NH{q', 18
    mem[64] = floor32(('cd', 4).length) + floor32(('cd', 68).length) + 130
    mem[floor32(('cd', 4).length) + floor32(('cd', 68).length) + 98] = 0
    idx = 0
    s = floor32(('cd', 4).length) + floor32(('cd', 68).length) + 98
    while idx < ('cd', 68).length:
        _282 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_282 + 32 len 64] = call.data[calldata.size len 64]
        if 0 >= mem[_282]:
            revert with 'NH{q', 50
        mem[_282 + 32] = address(cd[36])
        if idx >= mem[floor32(('cd', 4).length) + 97]:
            revert with 'NH{q', 50
        if 1 >= mem[_282]:
            revert with 'NH{q', 50
        mem[_282 + 64] = mem[(32 * idx) + floor32(('cd', 4).length) + 141 len 20]
        if idx >= mem[96]:
            revert with 'NH{q', 50
        _289 = mem[(32 * idx) + 128]
        if msg.value / ('cd', 68).length and 1 > -1 / msg.value / ('cd', 68).length:
            revert with 'NH{q', 17
        if block.timestamp > -2:
            revert with 'NH{q', 17
        mem[_282 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
        mem[_282 + 100] = 0
        mem[_282 + 132] = 128
        mem[_282 + 228] = mem[_282]
        t = 0
        u = _282 + 32
        v = _282 + 260
        while t < mem[_282]:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        mem[_282 + 164] = this.address
        mem[_282 + 196] = block.timestamp + 1
        require ext_code.size(address(_289))
        call address(_289).mem[mem[64] len 4] with:
           value msg.value / ('cd', 68).length / 10 wei
             gas gas_remaining wei
            args mem[mem[64] + 4 len _282 + (32 * mem[_282]) + -mem[64] + 256]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _326 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _327 = mem[_326]
        require mem[_326] <= test266151307()
        require _326 + mem[_326] + 31 < _326 + return_data.size
        _328 = mem[_326 + mem[_326]]
        if mem[_326 + mem[_326]] > test266151307():
            revert with 'NH{q', 65
        if _326 + ceil32(return_data.size) + floor32(mem[_326 + mem[_326]]) + 1 > test266151307() or floor32(mem[_326 + mem[_326]]) + 1 < 0:
            revert with 'NH{q', 65
        mem[64] = _326 + ceil32(return_data.size) + floor32(mem[_326 + mem[_326]]) + 1
        mem[_326 + ceil32(return_data.size)] = _328
        require _327 + (32 * _328) + 32 <= return_data.size
        t = 0
        u = _326 + _327 + 32
        v = _326 + ceil32(return_data.size) + 32
        while t < _328:
            require mem[u] == mem[u]
            mem[v] = mem[u]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        if _328 < 1:
            revert with 'NH{q', 17
        if _328 - 1 >= _328:
            revert with 'NH{q', 50
        _363 = mem[(32 * _328 - 1) + _326 + ceil32(return_data.size) + 32]
        if mem[_282] < 1:
            revert with 'NH{q', 17
        if mem[_282] - 1 >= mem[_282]:
            revert with 'NH{q', 50
        _366 = mem[(32 * mem[_282] - 1) + _282 + 32]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_366))
        staticcall address(_366).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _369 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _370 = mem[_369]
        require mem[_369] == mem[_369]
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = _370
        require ext_code.size(address(_366))
        call address(_366).0xa9059cbb with:
             gas gas_remaining wei
            args msg.sender, _370
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _373 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_373] == bool(mem[_373])
        if _370 and 10000 > -1 / _370:
            revert with 'NH{q', 17
        if not _363:
            revert with 'NH{q', 18
        if idx >= mem[96]:
            revert with 'NH{q', 50
        _376 = mem[(32 * idx) + 128]
        if msg.value / ('cd', 68).length and 9 > -1 / msg.value / ('cd', 68).length:
            revert with 'NH{q', 17
        if block.timestamp > -2:
            revert with 'NH{q', 17
        _377 = mem[64]
        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 0
        mem[mem[64] + 36] = 128
        _378 = mem[_282]
        mem[mem[64] + 132] = mem[_282]
        t = 0
        u = _282 + 32
        v = mem[64] + 164
        while t < _378:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        mem[_377 + 68] = this.address
        mem[_377 + 100] = block.timestamp + 1
        require ext_code.size(address(_376))
        call address(_376).mem[mem[64] len 4] with:
           value 9 * msg.value / ('cd', 68).length / 10 wei
             gas gas_remaining wei
            args mem[mem[64] + 4 len _377 + (32 * _378) + -mem[64] + 160]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _399 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _400 = mem[_399]
        require mem[_399] <= test266151307()
        require _399 + mem[_399] + 31 < _399 + return_data.size
        _401 = mem[_399 + mem[_399]]
        if mem[_399 + mem[_399]] > test266151307():
            revert with 'NH{q', 65
        if _399 + ceil32(return_data.size) + floor32(mem[_399 + mem[_399]]) + 1 > test266151307() or floor32(mem[_399 + mem[_399]]) + 1 < 0:
            revert with 'NH{q', 65
        mem[64] = _399 + ceil32(return_data.size) + floor32(mem[_399 + mem[_399]]) + 1
        mem[_399 + ceil32(return_data.size)] = _401
        require _400 + (32 * _401) + 32 <= return_data.size
        t = 0
        u = _399 + _400 + 32
        v = _399 + ceil32(return_data.size) + 32
        while t < _401:
            require mem[u] == mem[u]
            mem[v] = mem[u]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        if _401 < 1:
            revert with 'NH{q', 17
        if _401 - 1 >= _401:
            revert with 'NH{q', 50
        _484 = mem[(32 * _401 - 1) + _399 + ceil32(return_data.size) + 32]
        if mem[_282] < 1:
            revert with 'NH{q', 17
        if mem[_282] - 1 >= mem[_282]:
            revert with 'NH{q', 50
        _487 = mem[(32 * mem[_282] - 1) + _282 + 32]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_487))
        staticcall address(_487).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _490 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _491 = mem[_490]
        require mem[_490] == mem[_490]
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = _491
        require ext_code.size(address(_487))
        call address(_487).0xa9059cbb with:
             gas gas_remaining wei
            args msg.sender, _491
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _494 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_494] == bool(mem[_494])
        if _491 and 10000 > -1 / _491:
            revert with 'NH{q', 17
        if not _484:
            revert with 'NH{q', 18
        if uint16(10000 * _370 / _363) != uint16(10000 * _491 / _484):
            _497 = mem[64]
            mem[mem[64] + 32 len 100] = call.data[calldata.size len 100]
            mem[mem[64] + 160] = 0
            mem[64] = mem[64] + 256
            mem[_497 + 192] = 1
            mem[_497 + 224] = ','
            _506 = mem[_497 + 160]
            _507 = mem[s]
            if mem[s] > -mem[_497 + 160] - 1:
                revert with 'NH{q', 17
            if mem[s] + mem[_497 + 160] > -2:
                revert with 'NH{q', 17
            if mem[s] + mem[_497 + 160] + 1 > test266151307():
                revert with 'NH{q', 65
            mem[_497 + 256] = mem[s] + mem[_497 + 160] + 1
            mem[64] = _497 + floor32(_507 + mem[_497 + 160] + 32) + 288
            if not _507 + _506 + 1:
                _559 = mem[s]
                t = 0
                u = 0
                while t < _559:
                    if t >= mem[s]:
                        revert with 'NH{q', 50
                    if u == -1:
                        revert with 'NH{q', 17
                    if u >= mem[_497 + 256]:
                        revert with 'NH{q', 50
                    mem[u + _497 + 288 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if t == -1:
                        revert with 'NH{q', 17
                    _559 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                s = 0
                t = _559
                while s < mem[_497 + 160]:
                    if s >= mem[_497 + 160]:
                        revert with 'NH{q', 50
                    if t == -1:
                        revert with 'NH{q', 17
                    if t >= mem[_497 + 256]:
                        revert with 'NH{q', 50
                    mem[t + _497 + 288 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    t = t + 1
                    continue 
                s = 0
                t = _559 + mem[_497 + 160]
                while s < 1:
                    if s >= 1:
                        revert with 'NH{q', 50
                    if t == -1:
                        revert with 'NH{q', 17
                    if t >= mem[_497 + 256]:
                        revert with 'NH{q', 50
                    mem[t + _497 + 288 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    t = t + 1
                    continue 
            else:
                mem[_497 + 288 len _507 + _506 + 1] = call.data[calldata.size len _507 + _506 + 1]
                _560 = mem[s]
                t = 0
                u = 0
                while t < _560:
                    if t >= mem[s]:
                        revert with 'NH{q', 50
                    if u == -1:
                        revert with 'NH{q', 17
                    if u >= mem[_497 + 256]:
                        revert with 'NH{q', 50
                    mem[u + _497 + 288 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if t == -1:
                        revert with 'NH{q', 17
                    _560 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                s = 0
                t = _560
                while s < mem[_497 + 160]:
                    if s >= mem[_497 + 160]:
                        revert with 'NH{q', 50
                    if t == -1:
                        revert with 'NH{q', 17
                    if t >= mem[_497 + 256]:
                        revert with 'NH{q', 50
                    mem[t + _497 + 288 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    t = t + 1
                    continue 
                s = 0
                t = _560 + mem[_497 + 160]
                while s < 1:
                    if s >= 1:
                        revert with 'NH{q', 50
                    if t == -1:
                        revert with 'NH{q', 17
                    if t >= mem[_497 + 256]:
                        revert with 'NH{q', 50
                    mem[t + _497 + 288 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    t = t + 1
                    continue 
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = _497 + 256
            continue 
        _496 = mem[64]
        mem[mem[64]] = 100
        mem[64] = mem[64] + 160
        mem[_496 + 32 len 100] = call.data[calldata.size len 100]
        u = 0
        t = uint16(10000 * _370 / _363)
        while t:
            if 48 > -(t % 10) - 1:
                revert with 'NH{q', 17
            if u == -1:
                revert with 'NH{q', 17
            if u >= mem[_496]:
                revert with 'NH{q', 50
            mem[u + _496 + 32 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 2), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 2), 10))), 0) - 256
            u = u + 1
            t = t / 10
            continue 
        if u > test266151307():
            revert with 'NH{q', 65
        _563 = mem[64]
        mem[mem[64]] = u
        mem[64] = mem[64] + ceil32(u) + 32
        if u:
            mem[_563 + 32 len u] = call.data[calldata.size len u]
            if u < u:
                revert with 'NH{q', 17
            mem[64] = _563 + ceil32(u) + 96
            mem[_563 + ceil32(u) + 32] = 1
            mem[_563 + ceil32(u) + 64] = ','
            _663 = mem[_563]
            _664 = mem[s]
            if mem[s] > -mem[_563] - 1:
                revert with 'NH{q', 17
            if mem[s] + mem[_563] > -2:
                revert with 'NH{q', 17
            if mem[s] + mem[_563] + 1 > test266151307():
                revert with 'NH{q', 65
            mem[_563 + ceil32(u) + 96] = mem[s] + mem[_563] + 1
            mem[64] = _563 + ceil32(u) + floor32(_664 + mem[_563] + 32) + 128
            if not _664 + _663 + 1:
                _728 = mem[s]
                t = 0
                v = 0
                while t < _728:
                    if t >= mem[s]:
                        revert with 'NH{q', 50
                    if v == -1:
                        revert with 'NH{q', 17
                    if v >= mem[_563 + ceil32(u) + 96]:
                        revert with 'NH{q', 50
                    mem[v + _563 + ceil32(u) + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if t == -1:
                        revert with 'NH{q', 17
                    _728 = mem[s]
                    t = t + 1
                    v = v + 1
                    continue 
                s = 0
                t = _728
                while s < mem[_563]:
                    if s >= mem[_563]:
                        revert with 'NH{q', 50
                    if t == -1:
                        revert with 'NH{q', 17
                    if t >= mem[_563 + ceil32(u) + 96]:
                        revert with 'NH{q', 50
                    mem[t + _563 + ceil32(u) + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    t = t + 1
                    continue 
                s = 0
                t = _728 + mem[_563]
                while s < 1:
                    if s >= 1:
                        revert with 'NH{q', 50
                    if t == -1:
                        revert with 'NH{q', 17
                    if t >= mem[_563 + ceil32(u) + 96]:
                        revert with 'NH{q', 50
                    mem[t + _563 + ceil32(u) + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    t = t + 1
                    continue 
            else:
                mem[_563 + ceil32(u) + 128 len _664 + _663 + 1] = call.data[calldata.size len _664 + _663 + 1]
                _729 = mem[s]
                t = 0
                v = 0
                while t < _729:
                    if t >= mem[s]:
                        revert with 'NH{q', 50
                    if v == -1:
                        revert with 'NH{q', 17
                    if v >= mem[_563 + ceil32(u) + 96]:
                        revert with 'NH{q', 50
                    mem[v + _563 + ceil32(u) + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if t == -1:
                        revert with 'NH{q', 17
                    _729 = mem[s]
                    t = t + 1
                    v = v + 1
                    continue 
                s = 0
                t = _729
                while s < mem[_563]:
                    if s >= mem[_563]:
                        revert with 'NH{q', 50
                    if t == -1:
                        revert with 'NH{q', 17
                    if t >= mem[_563 + ceil32(u) + 96]:
                        revert with 'NH{q', 50
                    mem[t + _563 + ceil32(u) + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    t = t + 1
                    continue 
                s = 0
                t = _729 + mem[_563]
                while s < 1:
                    if s >= 1:
                        revert with 'NH{q', 50
                    if t == -1:
                        revert with 'NH{q', 17
                    if t >= mem[_563 + ceil32(u) + 96]:
                        revert with 'NH{q', 50
                    mem[t + _563 + ceil32(u) + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    t = t + 1
                    continue 
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = _563 + ceil32(u) + 96
            continue 
        t = 0
        while t < u:
            if u < t:
                revert with 'NH{q', 17
            if u - t < 1:
                revert with 'NH{q', 17
            if u + -t - 1 >= mem[_496]:
                revert with 'NH{q', 50
            if t >= mem[_563]:
                revert with 'NH{q', 50
            mem[t + _563 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
            if t == -1:
                revert with 'NH{q', 17
            t = t + 1
            continue 
        _653 = mem[64]
        mem[64] = mem[64] + 64
        mem[_653] = 1
        mem[_653 + 32] = ','
        _660 = mem[_563]
        _661 = mem[s]
        if mem[s] > -mem[_563] - 1:
            revert with 'NH{q', 17
        if mem[s] + mem[_563] > -2:
            revert with 'NH{q', 17
        if mem[s] + mem[_563] + 1 > test266151307():
            revert with 'NH{q', 65
        _676 = mem[64]
        mem[mem[64]] = mem[s] + mem[_563] + 1
        mem[64] = mem[64] + floor32(_661 + _660 + 32) + 32
        if not _661 + _660 + 1:
            _726 = mem[s]
            t = 0
            u = 0
            while t < _726:
                if t >= mem[s]:
                    revert with 'NH{q', 50
                if u == -1:
                    revert with 'NH{q', 17
                if u >= mem[_676]:
                    revert with 'NH{q', 50
                mem[u + _676 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                if t == -1:
                    revert with 'NH{q', 17
                _726 = mem[s]
                t = t + 1
                u = u + 1
                continue 
            _782 = mem[_563]
            s = 0
            t = _726
            while s < _782:
                if s >= mem[_563]:
                    revert with 'NH{q', 50
                if t == -1:
                    revert with 'NH{q', 17
                if t >= mem[_676]:
                    revert with 'NH{q', 50
                mem[t + _676 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                if s == -1:
                    revert with 'NH{q', 17
                _782 = mem[_563]
                s = s + 1
                t = t + 1
                continue 
            _814 = mem[_653]
            s = 0
            t = _726 + _782
            while s < _814:
                if s >= mem[_653]:
                    revert with 'NH{q', 50
                if t == -1:
                    revert with 'NH{q', 17
                if t >= mem[_676]:
                    revert with 'NH{q', 50
                mem[t + _676 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                if s == -1:
                    revert with 'NH{q', 17
                _814 = mem[_653]
                s = s + 1
                t = t + 1
                continue 
        else:
            mem[_676 + 32 len _661 + _660 + 1] = call.data[calldata.size len _661 + _660 + 1]
            _727 = mem[s]
            t = 0
            u = 0
            while t < _727:
                if t >= mem[s]:
                    revert with 'NH{q', 50
                if u == -1:
                    revert with 'NH{q', 17
                if u >= mem[_676]:
                    revert with 'NH{q', 50
                mem[u + _676 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                if t == -1:
                    revert with 'NH{q', 17
                _727 = mem[s]
                t = t + 1
                u = u + 1
                continue 
            _783 = mem[_563]
            s = 0
            t = _727
            while s < _783:
                if s >= mem[_563]:
                    revert with 'NH{q', 50
                if t == -1:
                    revert with 'NH{q', 17
                if t >= mem[_676]:
                    revert with 'NH{q', 50
                mem[t + _676 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                if s == -1:
                    revert with 'NH{q', 17
                _783 = mem[_563]
                s = s + 1
                t = t + 1
                continue 
            _815 = mem[_653]
            s = 0
            t = _727 + _783
            while s < _815:
                if s >= mem[_653]:
                    revert with 'NH{q', 50
                if t == -1:
                    revert with 'NH{q', 17
                if t >= mem[_676]:
                    revert with 'NH{q', 50
                mem[t + _676 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                if s == -1:
                    revert with 'NH{q', 17
                _815 = mem[_653]
                s = s + 1
                t = t + 1
                continue 
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        s = _676
        continue 
    _281 = mem[64]
    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
    mem[mem[64] + 4] = 32
    _284 = mem[s]
    mem[mem[64] + 36] = mem[s]
    mem[mem[64] + 68 len ceil32(_284)] = mem[s + 32 len ceil32(_284)]
    if ceil32(_284) <= _284:
        revert with 0, 32, mem[mem[64] + 36 len ceil32(_284) + 32]
    mem[mem[64] + _284 + 68] = 0
    revert with memory
      from mem[64]
       len _281 + ceil32(_284) + -mem[64] + 68
}

function sub_8f6c7a3c(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == arg2
    require arg3 == arg3
    if arg3 < arg2:
        revert with 'NH{q', 17
    if arg3 - arg2 > test266151307():
        revert with 'NH{q', 65
    mem[96] = arg3 - arg2
    if not arg3 - arg2:
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
        if not arg3 - arg2:
            if arg3 - arg2 > test266151307():
                revert with 'NH{q', 65
            mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + 192
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _224 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _233 = mem[_224]
                    require mem[_224] == mem[_224 + 12 len 20]
                    if s >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + 128] = mem[_224 + 12 len 20]
                    require ext_code.size(address(_233))
                    staticcall address(_233).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _288 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_288] == mem[_288 + 12 len 20]
                    if s >= mem[(32 * arg3 - arg2) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_288 + 12 len 20]
                    require ext_code.size(address(_233))
                    staticcall address(_233).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _352 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_352] == mem[_352 + 12 len 20]
                    if s >= mem[(64 * arg3 - arg2) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_352 + 12 len 20]
                    if s == -1:
                        revert with 'NH{q', 17
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                _200 = mem[64]
                mem[mem[64]] = 96
                _208 = mem[96]
                mem[mem[64] + 96] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 128
                while idx < _208:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_200 + 32] = (32 * _208) + 128
                _384 = mem[(32 * arg3 - arg2) + 128]
                mem[_200 + (32 * _208) + 128] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = _200 + (32 * _208) + 160
                while idx < _384:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_200 + 64] = (32 * _208) + (32 * _384) + 160
                _432 = mem[(64 * arg3 - arg2) + 160]
                mem[_200 + (32 * _208) + (32 * _384) + 160] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _200 + (32 * _208) + (32 * _384) + 192
                while idx < _432:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _200 + (32 * _208) + (32 * _384) + (32 * _432) + -mem[64] + 192
            mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _225 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _235 = mem[_225]
                require mem[_225] == mem[_225 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_225 + 12 len 20]
                require ext_code.size(address(_235))
                staticcall address(_235).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _289 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_289] == mem[_289 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_289 + 12 len 20]
                require ext_code.size(address(_235))
                staticcall address(_235).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _353 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_353] == mem[_353 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_353 + 12 len 20]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _201 = mem[64]
            mem[mem[64]] = 96
            _209 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _209:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_201 + 32] = (32 * _209) + 128
            _385 = mem[(32 * arg3 - arg2) + 128]
            mem[_201 + (32 * _209) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _201 + (32 * _209) + 160
            while idx < _385:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_201 + 64] = (32 * _209) + (32 * _385) + 160
            _433 = mem[(64 * arg3 - arg2) + 160]
            mem[_201 + (32 * _209) + (32 * _385) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _201 + (32 * _209) + (32 * _385) + 192
            while idx < _433:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _201 + (32 * _209) + (32 * _385) + (32 * _433) + -mem[64] + 192
        mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + 192
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _226 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _237 = mem[_226]
                require mem[_226] == mem[_226 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_226 + 12 len 20]
                require ext_code.size(address(_237))
                staticcall address(_237).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _290 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_290] == mem[_290 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_290 + 12 len 20]
                require ext_code.size(address(_237))
                staticcall address(_237).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _354 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_354] == mem[_354 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_354 + 12 len 20]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _202 = mem[64]
            mem[mem[64]] = 96
            _210 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _210:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_202 + 32] = (32 * _210) + 128
            _386 = mem[(32 * arg3 - arg2) + 128]
            mem[_202 + (32 * _210) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _202 + (32 * _210) + 160
            while idx < _386:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_202 + 64] = (32 * _210) + (32 * _386) + 160
            _434 = mem[(64 * arg3 - arg2) + 160]
            mem[_202 + (32 * _210) + (32 * _386) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _202 + (32 * _210) + (32 * _386) + 192
            while idx < _434:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _202 + (32 * _210) + (32 * _386) + (32 * _434) + -mem[64] + 192
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _227 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _239 = mem[_227]
            require mem[_227] == mem[_227 + 12 len 20]
            if s >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * s) + 128] = mem[_227 + 12 len 20]
            require ext_code.size(address(_239))
            staticcall address(_239).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _291 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_291] == mem[_291 + 12 len 20]
            if s >= mem[(32 * arg3 - arg2) + 128]:
                revert with 'NH{q', 50
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_291 + 12 len 20]
            require ext_code.size(address(_239))
            staticcall address(_239).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _355 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_355] == mem[_355 + 12 len 20]
            if s >= mem[(64 * arg3 - arg2) + 160]:
                revert with 'NH{q', 50
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_355 + 12 len 20]
            if s == -1:
                revert with 'NH{q', 17
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + 1
            continue 
        _203 = mem[64]
        mem[mem[64]] = 96
        _211 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _211:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_203 + 32] = (32 * _211) + 128
        _387 = mem[(32 * arg3 - arg2) + 128]
        mem[_203 + (32 * _211) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _203 + (32 * _211) + 160
        while idx < _387:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_203 + 64] = (32 * _211) + (32 * _387) + 160
        _435 = mem[(64 * arg3 - arg2) + 160]
        mem[_203 + (32 * _211) + (32 * _387) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _203 + (32 * _211) + (32 * _387) + 192
        while idx < _435:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _203 + (32 * _211) + (32 * _387) + (32 * _435) + -mem[64] + 192
    mem[128 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    if arg3 - arg2 > test266151307():
        revert with 'NH{q', 65
    mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
    if not arg3 - arg2:
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + 192
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _228 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _241 = mem[_228]
                require mem[_228] == mem[_228 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_228 + 12 len 20]
                require ext_code.size(address(_241))
                staticcall address(_241).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _292 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_292] == mem[_292 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_292 + 12 len 20]
                require ext_code.size(address(_241))
                staticcall address(_241).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _356 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_356] == mem[_356 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_356 + 12 len 20]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _204 = mem[64]
            mem[mem[64]] = 96
            _212 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _212:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_204 + 32] = (32 * _212) + 128
            _388 = mem[(32 * arg3 - arg2) + 128]
            mem[_204 + (32 * _212) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _204 + (32 * _212) + 160
            while idx < _388:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_204 + 64] = (32 * _212) + (32 * _388) + 160
            _436 = mem[(64 * arg3 - arg2) + 160]
            mem[_204 + (32 * _212) + (32 * _388) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _204 + (32 * _212) + (32 * _388) + 192
            while idx < _436:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _204 + (32 * _212) + (32 * _388) + (32 * _436) + -mem[64] + 192
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _229 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _243 = mem[_229]
            require mem[_229] == mem[_229 + 12 len 20]
            if s >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * s) + 128] = mem[_229 + 12 len 20]
            require ext_code.size(address(_243))
            staticcall address(_243).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _293 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_293] == mem[_293 + 12 len 20]
            if s >= mem[(32 * arg3 - arg2) + 128]:
                revert with 'NH{q', 50
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_293 + 12 len 20]
            require ext_code.size(address(_243))
            staticcall address(_243).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _357 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_357] == mem[_357 + 12 len 20]
            if s >= mem[(64 * arg3 - arg2) + 160]:
                revert with 'NH{q', 50
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_357 + 12 len 20]
            if s == -1:
                revert with 'NH{q', 17
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + 1
            continue 
        _205 = mem[64]
        mem[mem[64]] = 96
        _213 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _213:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_205 + 32] = (32 * _213) + 128
        _389 = mem[(32 * arg3 - arg2) + 128]
        mem[_205 + (32 * _213) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _205 + (32 * _213) + 160
        while idx < _389:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_205 + 64] = (32 * _213) + (32 * _389) + 160
        _437 = mem[(64 * arg3 - arg2) + 160]
        mem[_205 + (32 * _213) + (32 * _389) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _205 + (32 * _213) + (32 * _389) + 192
        while idx < _437:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _205 + (32 * _213) + (32 * _389) + (32 * _437) + -mem[64] + 192
    mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    if arg3 - arg2 > test266151307():
        revert with 'NH{q', 65
    mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
    mem[64] = (98 * arg3) + (-98 * arg2) + 192
    if not arg3 - arg2:
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _230 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _245 = mem[_230]
            require mem[_230] == mem[_230 + 12 len 20]
            if s >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * s) + 128] = mem[_230 + 12 len 20]
            require ext_code.size(address(_245))
            staticcall address(_245).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _294 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_294] == mem[_294 + 12 len 20]
            if s >= mem[(32 * arg3 - arg2) + 128]:
                revert with 'NH{q', 50
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_294 + 12 len 20]
            require ext_code.size(address(_245))
            staticcall address(_245).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _358 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_358] == mem[_358 + 12 len 20]
            if s >= mem[(64 * arg3 - arg2) + 160]:
                revert with 'NH{q', 50
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_358 + 12 len 20]
            if s == -1:
                revert with 'NH{q', 17
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + 1
            continue 
        _206 = mem[64]
        mem[mem[64]] = 96
        _214 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _214:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_206 + 32] = (32 * _214) + 128
        _390 = mem[(32 * arg3 - arg2) + 128]
        mem[_206 + (32 * _214) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _206 + (32 * _214) + 160
        while idx < _390:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_206 + 64] = (32 * _214) + (32 * _390) + 160
        _438 = mem[(64 * arg3 - arg2) + 160]
        mem[_206 + (32 * _214) + (32 * _390) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _206 + (32 * _214) + (32 * _390) + 192
        while idx < _438:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _206 + (32 * _214) + (32 * _390) + (32 * _438) + -mem[64] + 192
    mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    idx = arg2
    s = 0
    while idx < arg3:
        mem[mem[64] + 4] = idx
        require ext_code.size(address(arg1))
        staticcall address(arg1).allPairs(uint256 arg1) with:
                gas gas_remaining wei
               args idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _231 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _247 = mem[_231]
        require mem[_231] == mem[_231 + 12 len 20]
        if s >= mem[96]:
            revert with 'NH{q', 50
        mem[(32 * s) + 128] = mem[_231 + 12 len 20]
        require ext_code.size(address(_247))
        staticcall address(_247).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _295 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_295] == mem[_295 + 12 len 20]
        if s >= mem[(32 * arg3 - arg2) + 128]:
            revert with 'NH{q', 50
        mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_295 + 12 len 20]
        require ext_code.size(address(_247))
        staticcall address(_247).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _359 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_359] == mem[_359 + 12 len 20]
        if s >= mem[(64 * arg3 - arg2) + 160]:
            revert with 'NH{q', 50
        mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_359 + 12 len 20]
        if s == -1:
            revert with 'NH{q', 17
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        s = s + 1
        continue 
    _207 = mem[64]
    mem[mem[64]] = 96
    _215 = mem[96]
    mem[mem[64] + 96] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 128
    while idx < _215:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_207 + 32] = (32 * _215) + 128
    _391 = mem[(32 * arg3 - arg2) + 128]
    mem[_207 + (32 * _215) + 128] = mem[(32 * arg3 - arg2) + 128]
    idx = 0
    s = (32 * arg3 - arg2) + 160
    t = _207 + (32 * _215) + 160
    while idx < _391:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_207 + 64] = (32 * _215) + (32 * _391) + 160
    _439 = mem[(64 * arg3 - arg2) + 160]
    mem[_207 + (32 * _215) + (32 * _391) + 160] = mem[(64 * arg3 - arg2) + 160]
    idx = 0
    s = (64 * arg3 - arg2) + 192
    t = _207 + (32 * _215) + (32 * _391) + 192
    while idx < _439:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _207 + (32 * _215) + (32 * _391) + (32 * _439) + -mem[64] + 192
}

function sub_b4111654(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    if floor32(('cd', 4).length) + 97 > test266151307() or floor32(('cd', 4).length) + 97 < 96:
        revert with 'NH{q', 65
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    mem[floor32(('cd', 4).length) + 97] = ('cd', 4).length
    mem[64] = floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129
    if not ('cd', 4).length:
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129] = ('cd', 4).length
        mem[64] = floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161
        if not ('cd', 4).length:
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161] = ('cd', 4).length
            mem[64] = floor32(('cd', 4).length) + (98 * ('cd', 4).length) + 193
            if ('cd', 4).length:
                mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 193 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while idx < ('cd', 4).length:
                    if idx >= mem[96]:
                        revert with 'NH{q', 50
                    _871 = mem[(32 * idx) + 128]
                    mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_871))
                    staticcall address(_871).name() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _879 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _886 = mem[_879]
                    require mem[_879] <= test266151307()
                    require _879 + mem[_879] + 31 < _879 + return_data.size
                    _904 = mem[_879 + mem[_879]]
                    if mem[_879 + mem[_879]] > test266151307():
                        revert with 'NH{q', 65
                    if _879 + ceil32(return_data.size) + ceil32(ceil32(mem[_879 + mem[_879]])) + 1 > test266151307() or ceil32(ceil32(mem[_879 + mem[_879]])) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _879 + ceil32(return_data.size) + ceil32(ceil32(mem[_879 + mem[_879]])) + 1
                    mem[_879 + ceil32(return_data.size)] = _904
                    require _886 + _904 + 32 <= return_data.size
                    s = 0
                    while s < _904:
                        mem[_879 + ceil32(return_data.size) + s + 32] = mem[_879 + _886 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_904) <= _904:
                        if idx >= mem[floor32(('cd', 4).length) + 97]:
                            revert with 'NH{q', 50
                        mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _879 + ceil32(return_data.size)
                        require ext_code.size(address(_871))
                        staticcall address(_871).0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1357 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1357] == mem[_1357 + 31 len 1]
                        if idx >= mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161]:
                            revert with 'NH{q', 50
                        mem[(32 * idx) + floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 193] = mem[_1357 + 31 len 1]
                        mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                        require ext_code.size(address(_871))
                        staticcall address(_871).0x95d89b41 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1427 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1439 = mem[_1427]
                        require mem[_1427] <= test266151307()
                        require _1427 + mem[_1427] + 31 < _1427 + return_data.size
                        _1452 = mem[_1427 + mem[_1427]]
                        if mem[_1427 + mem[_1427]] > test266151307():
                            revert with 'NH{q', 65
                        if _1427 + ceil32(return_data.size) + ceil32(ceil32(mem[_1427 + mem[_1427]])) + 1 > test266151307() or ceil32(ceil32(mem[_1427 + mem[_1427]])) + 1 < 0:
                            revert with 'NH{q', 65
                        mem[64] = _1427 + ceil32(return_data.size) + ceil32(ceil32(mem[_1427 + mem[_1427]])) + 1
                        mem[_1427 + ceil32(return_data.size)] = _1452
                        require _1439 + _1452 + 32 <= return_data.size
                        s = 0
                        while s < _1452:
                            mem[_1427 + ceil32(return_data.size) + s + 32] = mem[_1427 + _1439 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1452) > _1452:
                            mem[_1427 + ceil32(return_data.size) + _1452 + 32] = 0
                        if idx >= mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]:
                            revert with 'NH{q', 50
                        mem[(32 * idx) + floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = _1427 + ceil32(return_data.size)
                    else:
                        mem[_879 + ceil32(return_data.size) + _904 + 32] = 0
                        if idx >= mem[floor32(('cd', 4).length) + 97]:
                            revert with 'NH{q', 50
                        mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _879 + ceil32(return_data.size)
                        require ext_code.size(address(_871))
                        staticcall address(_871).0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1366 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1366] == mem[_1366 + 31 len 1]
                        if idx >= mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161]:
                            revert with 'NH{q', 50
                        mem[(32 * idx) + floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 193] = mem[_1366 + 31 len 1]
                        mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                        require ext_code.size(address(_871))
                        staticcall address(_871).0x95d89b41 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1436 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1441 = mem[_1436]
                        require mem[_1436] <= test266151307()
                        require _1436 + mem[_1436] + 31 < _1436 + return_data.size
                        _1456 = mem[_1436 + mem[_1436]]
                        if mem[_1436 + mem[_1436]] > test266151307():
                            revert with 'NH{q', 65
                        if _1436 + ceil32(return_data.size) + ceil32(ceil32(mem[_1436 + mem[_1436]])) + 1 > test266151307() or ceil32(ceil32(mem[_1436 + mem[_1436]])) + 1 < 0:
                            revert with 'NH{q', 65
                        mem[64] = _1436 + ceil32(return_data.size) + ceil32(ceil32(mem[_1436 + mem[_1436]])) + 1
                        mem[_1436 + ceil32(return_data.size)] = _1456
                        require _1441 + _1456 + 32 <= return_data.size
                        s = 0
                        while s < _1456:
                            mem[_1436 + ceil32(return_data.size) + s + 32] = mem[_1436 + _1441 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1456) > _1456:
                            mem[_1436 + ceil32(return_data.size) + _1456 + 32] = 0
                        if idx >= mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]:
                            revert with 'NH{q', 50
                        mem[(32 * idx) + floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = _1436 + ceil32(return_data.size)
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    continue 
                _870 = mem[64]
                mem[mem[64]] = 96
                _882 = mem[floor32(('cd', 4).length) + 97]
                mem[mem[64] + 96] = mem[floor32(('cd', 4).length) + 97]
                idx = 0
                s = floor32(('cd', 4).length) + 129
                t = mem[64] + (32 * _882) + 128
                u = mem[64] + 128
                while idx < _882:
                    mem[u] = t + -_870 - 128
                    _1292 = mem[s]
                    _1319 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    while v < _1319:
                        mem[t + v + 32] = mem[_1292 + v + 32]
                        v = v + 32
                        continue 
                    if ceil32(_1319) > _1319:
                        mem[t + _1319 + 32] = 0
                    idx = idx + 1
                    s = s + 32
                    t = t + ceil32(_1319) + 32
                    u = u + 32
                    continue 
                mem[_870 + 32] = t - _870
                _1318 = mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]
                mem[t] = mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]
                idx = 0
                s = floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161
                u = t + (32 * _1318) + 32
                v = t + 32
                while idx < _1318:
                    mem[v] = u + -t - 32
                    _1688 = mem[s]
                    _1713 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    while t < _1713:
                        mem[u + t + 32] = mem[_1688 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_1713) > _1713:
                        mem[u + _1713 + 32] = 0
                    idx = idx + 1
                    s = s + 32
                    u = u + ceil32(_1713) + 32
                    v = v + 32
                    continue 
                mem[_870 + 64] = u - _870
                _1712 = mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161]
                mem[u] = mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161]
                mem[u + 32 len 32 * _1712] = mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 193 len 32 * _1712]
                return memory
                  from mem[64]
                   len u + (32 * _1712) + -mem[64] + 32
            idx = 0
            while idx < ('cd', 4).length:
                if idx >= mem[96]:
                    revert with 'NH{q', 50
                _867 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_867))
                staticcall address(_867).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _878 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _885 = mem[_878]
                require mem[_878] <= test266151307()
                require _878 + mem[_878] + 31 < _878 + return_data.size
                _903 = mem[_878 + mem[_878]]
                if mem[_878 + mem[_878]] > test266151307():
                    revert with 'NH{q', 65
                if _878 + ceil32(return_data.size) + ceil32(ceil32(mem[_878 + mem[_878]])) + 1 > test266151307() or ceil32(ceil32(mem[_878 + mem[_878]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _878 + ceil32(return_data.size) + ceil32(ceil32(mem[_878 + mem[_878]])) + 1
                mem[_878 + ceil32(return_data.size)] = _903
                require _885 + _903 + 32 <= return_data.size
                s = 0
                while s < _903:
                    mem[_878 + ceil32(return_data.size) + s + 32] = mem[_878 + _885 + s + 32]
                    s = s + 32
                    continue 
                if ceil32(_903) <= _903:
                    if idx >= mem[floor32(('cd', 4).length) + 97]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _878 + ceil32(return_data.size)
                    require ext_code.size(address(_867))
                    staticcall address(_867).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1356 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1356] == mem[_1356 + 31 len 1]
                    if idx >= mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 193] = mem[_1356 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_867))
                    staticcall address(_867).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1426 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1438 = mem[_1426]
                    require mem[_1426] <= test266151307()
                    require _1426 + mem[_1426] + 31 < _1426 + return_data.size
                    _1451 = mem[_1426 + mem[_1426]]
                    if mem[_1426 + mem[_1426]] > test266151307():
                        revert with 'NH{q', 65
                    if _1426 + ceil32(return_data.size) + ceil32(ceil32(mem[_1426 + mem[_1426]])) + 1 > test266151307() or ceil32(ceil32(mem[_1426 + mem[_1426]])) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _1426 + ceil32(return_data.size) + ceil32(ceil32(mem[_1426 + mem[_1426]])) + 1
                    mem[_1426 + ceil32(return_data.size)] = _1451
                    require _1438 + _1451 + 32 <= return_data.size
                    s = 0
                    while s < _1451:
                        mem[_1426 + ceil32(return_data.size) + s + 32] = mem[_1426 + _1438 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_1451) > _1451:
                        mem[_1426 + ceil32(return_data.size) + _1451 + 32] = 0
                    if idx >= mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = _1426 + ceil32(return_data.size)
                else:
                    mem[_878 + ceil32(return_data.size) + _903 + 32] = 0
                    if idx >= mem[floor32(('cd', 4).length) + 97]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _878 + ceil32(return_data.size)
                    require ext_code.size(address(_867))
                    staticcall address(_867).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1364 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1364] == mem[_1364 + 31 len 1]
                    if idx >= mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 193] = mem[_1364 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_867))
                    staticcall address(_867).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1434 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1440 = mem[_1434]
                    require mem[_1434] <= test266151307()
                    require _1434 + mem[_1434] + 31 < _1434 + return_data.size
                    _1455 = mem[_1434 + mem[_1434]]
                    if mem[_1434 + mem[_1434]] > test266151307():
                        revert with 'NH{q', 65
                    if _1434 + ceil32(return_data.size) + ceil32(ceil32(mem[_1434 + mem[_1434]])) + 1 > test266151307() or ceil32(ceil32(mem[_1434 + mem[_1434]])) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _1434 + ceil32(return_data.size) + ceil32(ceil32(mem[_1434 + mem[_1434]])) + 1
                    mem[_1434 + ceil32(return_data.size)] = _1455
                    require _1440 + _1455 + 32 <= return_data.size
                    s = 0
                    while s < _1455:
                        mem[_1434 + ceil32(return_data.size) + s + 32] = mem[_1434 + _1440 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_1455) > _1455:
                        mem[_1434 + ceil32(return_data.size) + _1455 + 32] = 0
                    if idx >= mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = _1434 + ceil32(return_data.size)
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                continue 
            _866 = mem[64]
            mem[mem[64]] = 96
            _881 = mem[floor32(('cd', 4).length) + 97]
            mem[mem[64] + 96] = mem[floor32(('cd', 4).length) + 97]
            idx = 0
            s = floor32(('cd', 4).length) + 129
            t = mem[64] + (32 * _881) + 128
            u = mem[64] + 128
            while idx < _881:
                mem[u] = t + -_866 - 128
                _1290 = mem[s]
                _1317 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1317:
                    mem[t + v + 32] = mem[_1290 + v + 32]
                    v = v + 32
                    continue 
                if ceil32(_1317) > _1317:
                    mem[t + _1317 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = t + ceil32(_1317) + 32
                u = u + 32
                continue 
            mem[_866 + 32] = t - _866
            _1316 = mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]
            mem[t] = mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]
            idx = 0
            s = floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161
            u = t + (32 * _1316) + 32
            v = t + 32
            while idx < _1316:
                mem[v] = u + -t - 32
                _1684 = mem[s]
                _1711 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _1711:
                    mem[u + t + 32] = mem[_1684 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_1711) > _1711:
                    mem[u + _1711 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = u + ceil32(_1711) + 32
                v = v + 32
                continue 
            mem[_866 + 64] = u - _866
            _1710 = mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161]
            mem[u] = mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 161]
            mem[u + 32 len 32 * _1710] = mem[floor32(('cd', 4).length) + (64 * ('cd', 4).length) + 193 len 32 * _1710]
            var79001 = _1710
            var79002 = floor32(('cd', 4).length) + (64 * ('cd', 4).length) + (32 * _1710) + 193
            return memory
              from mem[64]
               len u + (32 * _1710) + -mem[64] + 32
        mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = 96
        s = floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        _874 = mem[96]
        if mem[96] > test266151307():
            revert with 'NH{q', 65
        _876 = mem[64]
        mem[mem[64]] = mem[96]
        mem[64] = mem[64] + (32 * _874) + 32
        if _874:
            mem[_876 + 32 len 32 * _874] = call.data[calldata.size len 32 * _874]
            _1287 = mem[96]
            idx = 0
            while idx < _1287:
                if idx >= mem[96]:
                    revert with 'NH{q', 50
                _1303 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1303))
                staticcall address(_1303).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1321 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1332 = mem[_1321]
                require mem[_1321] <= test266151307()
                require _1321 + mem[_1321] + 31 < _1321 + return_data.size
                _1359 = mem[_1321 + mem[_1321]]
                if mem[_1321 + mem[_1321]] > test266151307():
                    revert with 'NH{q', 65
                if _1321 + ceil32(return_data.size) + ceil32(ceil32(mem[_1321 + mem[_1321]])) + 1 > test266151307() or ceil32(ceil32(mem[_1321 + mem[_1321]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _1321 + ceil32(return_data.size) + ceil32(ceil32(mem[_1321 + mem[_1321]])) + 1
                mem[_1321 + ceil32(return_data.size)] = _1359
                require _1332 + _1359 + 32 <= return_data.size
                s = 0
                while s < _1359:
                    mem[_1321 + ceil32(return_data.size) + s + 32] = mem[_1321 + _1332 + s + 32]
                    _1287 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1359) <= _1359:
                    if idx >= mem[floor32(('cd', 4).length) + 97]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1321 + ceil32(return_data.size)
                    require ext_code.size(address(_1303))
                    staticcall address(_1303).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1761 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1761] == mem[_1761 + 31 len 1]
                    if idx >= mem[_876]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + _876 + 32] = mem[_1761 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1303))
                    staticcall address(_1303).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1843 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1857 = mem[_1843]
                    require mem[_1843] <= test266151307()
                    require _1843 + mem[_1843] + 31 < _1843 + return_data.size
                    _1869 = mem[_1843 + mem[_1843]]
                    if mem[_1843 + mem[_1843]] > test266151307():
                        revert with 'NH{q', 65
                    if _1843 + ceil32(return_data.size) + ceil32(ceil32(mem[_1843 + mem[_1843]])) + 1 > test266151307() or ceil32(ceil32(mem[_1843 + mem[_1843]])) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _1843 + ceil32(return_data.size) + ceil32(ceil32(mem[_1843 + mem[_1843]])) + 1
                    mem[_1843 + ceil32(return_data.size)] = _1869
                    require _1857 + _1869 + 32 <= return_data.size
                    s = 0
                    while s < _1869:
                        mem[_1843 + ceil32(return_data.size) + s + 32] = mem[_1843 + _1857 + s + 32]
                        _1287 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1869) > _1869:
                        mem[_1843 + ceil32(return_data.size) + _1869 + 32] = 0
                    if idx >= mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = _1843 + ceil32(return_data.size)
                else:
                    mem[_1321 + ceil32(return_data.size) + _1359 + 32] = 0
                    if idx >= mem[floor32(('cd', 4).length) + 97]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1321 + ceil32(return_data.size)
                    require ext_code.size(address(_1303))
                    staticcall address(_1303).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1771 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1771] == mem[_1771 + 31 len 1]
                    if idx >= mem[_876]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + _876 + 32] = mem[_1771 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1303))
                    staticcall address(_1303).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1851 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1861 = mem[_1851]
                    require mem[_1851] <= test266151307()
                    require _1851 + mem[_1851] + 31 < _1851 + return_data.size
                    _1873 = mem[_1851 + mem[_1851]]
                    if mem[_1851 + mem[_1851]] > test266151307():
                        revert with 'NH{q', 65
                    if _1851 + ceil32(return_data.size) + ceil32(ceil32(mem[_1851 + mem[_1851]])) + 1 > test266151307() or ceil32(ceil32(mem[_1851 + mem[_1851]])) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _1851 + ceil32(return_data.size) + ceil32(ceil32(mem[_1851 + mem[_1851]])) + 1
                    mem[_1851 + ceil32(return_data.size)] = _1873
                    require _1861 + _1873 + 32 <= return_data.size
                    s = 0
                    while s < _1873:
                        mem[_1851 + ceil32(return_data.size) + s + 32] = mem[_1851 + _1861 + s + 32]
                        _1287 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1873) > _1873:
                        mem[_1851 + ceil32(return_data.size) + _1873 + 32] = 0
                    if idx >= mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = _1851 + ceil32(return_data.size)
                if idx == -1:
                    revert with 'NH{q', 17
                _1287 = mem[96]
                idx = idx + 1
                continue 
            _1302 = mem[64]
            mem[mem[64]] = 96
            _1325 = mem[floor32(('cd', 4).length) + 97]
            mem[mem[64] + 96] = mem[floor32(('cd', 4).length) + 97]
            idx = 0
            s = floor32(('cd', 4).length) + 129
            t = mem[64] + (32 * _1325) + 128
            u = mem[64] + 128
            while idx < _1325:
                mem[u] = t + -_1302 - 128
                _1694 = mem[s]
                _1717 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1717:
                    mem[t + v + 32] = mem[_1694 + v + 32]
                    v = v + 32
                    continue 
                if ceil32(_1717) > _1717:
                    mem[t + _1717 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = t + ceil32(_1717) + 32
                u = u + 32
                continue 
            mem[_1302 + 32] = t - _1302
            _1716 = mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]
            mem[t] = mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]
            idx = 0
            s = floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161
            u = t + (32 * _1716) + 32
            v = t + 32
            while idx < _1716:
                mem[v] = u + -t - 32
                _1984 = mem[s]
                _2005 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _2005:
                    mem[u + t + 32] = mem[_1984 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_2005) > _2005:
                    mem[u + _2005 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = u + ceil32(_2005) + 32
                v = v + 32
                continue 
            mem[_1302 + 64] = u - _1302
            _2004 = mem[_876]
            mem[u] = mem[_876]
            mem[u + 32 len 32 * _2004] = mem[_876 + 32 len 32 * _2004]
            return memory
              from mem[64]
               len u + (32 * _2004) + -mem[64] + 32
        _1286 = mem[96]
        idx = 0
        while idx < _1286:
            if idx >= mem[96]:
                revert with 'NH{q', 50
            _1299 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1299))
            staticcall address(_1299).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1320 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1331 = mem[_1320]
            require mem[_1320] <= test266151307()
            require _1320 + mem[_1320] + 31 < _1320 + return_data.size
            _1358 = mem[_1320 + mem[_1320]]
            if mem[_1320 + mem[_1320]] > test266151307():
                revert with 'NH{q', 65
            if _1320 + ceil32(return_data.size) + ceil32(ceil32(mem[_1320 + mem[_1320]])) + 1 > test266151307() or ceil32(ceil32(mem[_1320 + mem[_1320]])) + 1 < 0:
                revert with 'NH{q', 65
            mem[64] = _1320 + ceil32(return_data.size) + ceil32(ceil32(mem[_1320 + mem[_1320]])) + 1
            mem[_1320 + ceil32(return_data.size)] = _1358
            require _1331 + _1358 + 32 <= return_data.size
            s = 0
            while s < _1358:
                mem[_1320 + ceil32(return_data.size) + s + 32] = mem[_1320 + _1331 + s + 32]
                _1286 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1358) <= _1358:
                if idx >= mem[floor32(('cd', 4).length) + 97]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1320 + ceil32(return_data.size)
                require ext_code.size(address(_1299))
                staticcall address(_1299).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1760 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1760] == mem[_1760 + 31 len 1]
                if idx >= mem[_876]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _876 + 32] = mem[_1760 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1299))
                staticcall address(_1299).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1842 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1856 = mem[_1842]
                require mem[_1842] <= test266151307()
                require _1842 + mem[_1842] + 31 < _1842 + return_data.size
                _1868 = mem[_1842 + mem[_1842]]
                if mem[_1842 + mem[_1842]] > test266151307():
                    revert with 'NH{q', 65
                if _1842 + ceil32(return_data.size) + ceil32(ceil32(mem[_1842 + mem[_1842]])) + 1 > test266151307() or ceil32(ceil32(mem[_1842 + mem[_1842]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _1842 + ceil32(return_data.size) + ceil32(ceil32(mem[_1842 + mem[_1842]])) + 1
                mem[_1842 + ceil32(return_data.size)] = _1868
                require _1856 + _1868 + 32 <= return_data.size
                s = 0
                while s < _1868:
                    mem[_1842 + ceil32(return_data.size) + s + 32] = mem[_1842 + _1856 + s + 32]
                    _1286 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1868) > _1868:
                    mem[_1842 + ceil32(return_data.size) + _1868 + 32] = 0
                if idx >= mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = _1842 + ceil32(return_data.size)
            else:
                mem[_1320 + ceil32(return_data.size) + _1358 + 32] = 0
                if idx >= mem[floor32(('cd', 4).length) + 97]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1320 + ceil32(return_data.size)
                require ext_code.size(address(_1299))
                staticcall address(_1299).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1769 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1769] == mem[_1769 + 31 len 1]
                if idx >= mem[_876]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _876 + 32] = mem[_1769 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1299))
                staticcall address(_1299).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1849 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1860 = mem[_1849]
                require mem[_1849] <= test266151307()
                require _1849 + mem[_1849] + 31 < _1849 + return_data.size
                _1872 = mem[_1849 + mem[_1849]]
                if mem[_1849 + mem[_1849]] > test266151307():
                    revert with 'NH{q', 65
                if _1849 + ceil32(return_data.size) + ceil32(ceil32(mem[_1849 + mem[_1849]])) + 1 > test266151307() or ceil32(ceil32(mem[_1849 + mem[_1849]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _1849 + ceil32(return_data.size) + ceil32(ceil32(mem[_1849 + mem[_1849]])) + 1
                mem[_1849 + ceil32(return_data.size)] = _1872
                require _1860 + _1872 + 32 <= return_data.size
                s = 0
                while s < _1872:
                    mem[_1849 + ceil32(return_data.size) + s + 32] = mem[_1849 + _1860 + s + 32]
                    _1286 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1872) > _1872:
                    mem[_1849 + ceil32(return_data.size) + _1872 + 32] = 0
                if idx >= mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161] = _1849 + ceil32(return_data.size)
            if idx == -1:
                revert with 'NH{q', 17
            _1286 = mem[96]
            idx = idx + 1
            continue 
        _1298 = mem[64]
        mem[mem[64]] = 96
        _1324 = mem[floor32(('cd', 4).length) + 97]
        mem[mem[64] + 96] = mem[floor32(('cd', 4).length) + 97]
        idx = 0
        s = floor32(('cd', 4).length) + 129
        t = mem[64] + (32 * _1324) + 128
        u = mem[64] + 128
        while idx < _1324:
            mem[u] = t + -_1298 - 128
            _1692 = mem[s]
            _1715 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _1715:
                mem[t + v + 32] = mem[_1692 + v + 32]
                v = v + 32
                continue 
            if ceil32(_1715) > _1715:
                mem[t + _1715 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = t + ceil32(_1715) + 32
            u = u + 32
            continue 
        mem[_1298 + 32] = t - _1298
        _1714 = mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]
        mem[t] = mem[floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 129]
        idx = 0
        s = floor32(('cd', 4).length) + (32 * ('cd', 4).length) + 161
        u = t + (32 * _1714) + 32
        v = t + 32
        while idx < _1714:
            mem[v] = u + -t - 32
            _1980 = mem[s]
            _2003 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2003:
                mem[u + t + 32] = mem[_1980 + t + 32]
                t = t + 32
                continue 
            if ceil32(_2003) > _2003:
                mem[u + _2003 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = u + ceil32(_2003) + 32
            v = v + 32
            continue 
        mem[_1298 + 64] = u - _1298
        _2002 = mem[_876]
        mem[u] = mem[_876]
        mem[u + 32 len 32 * _2002] = mem[_876 + 32 len 32 * _2002]
        var83001 = _2002
        var83002 = _876 + (32 * _2002) + 32
        return memory
          from mem[64]
           len u + (32 * _2002) + -mem[64] + 32
    mem[floor32(('cd', 4).length) + 129] = 96
    s = floor32(('cd', 4).length) + 129
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    _875 = mem[96]
    if mem[96] > test266151307():
        revert with 'NH{q', 65
    _877 = mem[64]
    mem[mem[64]] = mem[96]
    mem[64] = mem[64] + (32 * _875) + 32
    if not _875:
        _880 = mem[96]
        if mem[96] > test266151307():
            revert with 'NH{q', 65
        mem[_877 + (32 * _875) + 32] = mem[96]
        mem[64] = _877 + (32 * _875) + (32 * _880) + 64
        if _880:
            mem[_877 + (32 * _875) + 64 len 32 * _880] = call.data[calldata.size len 32 * _880]
            _1289 = mem[96]
            idx = 0
            while idx < _1289:
                if idx >= mem[96]:
                    revert with 'NH{q', 50
                _1311 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1311))
                staticcall address(_1311).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1323 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1334 = mem[_1323]
                require mem[_1323] <= test266151307()
                require _1323 + mem[_1323] + 31 < _1323 + return_data.size
                _1361 = mem[_1323 + mem[_1323]]
                if mem[_1323 + mem[_1323]] > test266151307():
                    revert with 'NH{q', 65
                if _1323 + ceil32(return_data.size) + ceil32(ceil32(mem[_1323 + mem[_1323]])) + 1 > test266151307() or ceil32(ceil32(mem[_1323 + mem[_1323]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _1323 + ceil32(return_data.size) + ceil32(ceil32(mem[_1323 + mem[_1323]])) + 1
                mem[_1323 + ceil32(return_data.size)] = _1361
                require _1334 + _1361 + 32 <= return_data.size
                s = 0
                while s < _1361:
                    mem[_1323 + ceil32(return_data.size) + s + 32] = mem[_1323 + _1334 + s + 32]
                    _1289 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1361) <= _1361:
                    if idx >= mem[floor32(('cd', 4).length) + 97]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1323 + ceil32(return_data.size)
                    require ext_code.size(address(_1311))
                    staticcall address(_1311).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1763 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1763] == mem[_1763 + 31 len 1]
                    if idx >= mem[_877 + (32 * _875) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1763 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1311))
                    staticcall address(_1311).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1845 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1859 = mem[_1845]
                    require mem[_1845] <= test266151307()
                    require _1845 + mem[_1845] + 31 < _1845 + return_data.size
                    _1871 = mem[_1845 + mem[_1845]]
                    if mem[_1845 + mem[_1845]] > test266151307():
                        revert with 'NH{q', 65
                    if _1845 + ceil32(return_data.size) + ceil32(ceil32(mem[_1845 + mem[_1845]])) + 1 > test266151307() or ceil32(ceil32(mem[_1845 + mem[_1845]])) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _1845 + ceil32(return_data.size) + ceil32(ceil32(mem[_1845 + mem[_1845]])) + 1
                    mem[_1845 + ceil32(return_data.size)] = _1871
                    require _1859 + _1871 + 32 <= return_data.size
                    s = 0
                    while s < _1871:
                        mem[_1845 + ceil32(return_data.size) + s + 32] = mem[_1845 + _1859 + s + 32]
                        _1289 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1871) > _1871:
                        mem[_1845 + ceil32(return_data.size) + _1871 + 32] = 0
                    if idx >= mem[_877]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + _877 + 32] = _1845 + ceil32(return_data.size)
                else:
                    mem[_1323 + ceil32(return_data.size) + _1361 + 32] = 0
                    if idx >= mem[floor32(('cd', 4).length) + 97]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1323 + ceil32(return_data.size)
                    require ext_code.size(address(_1311))
                    staticcall address(_1311).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1775 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1775] == mem[_1775 + 31 len 1]
                    if idx >= mem[_877 + (32 * _875) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1775 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1311))
                    staticcall address(_1311).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1855 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1863 = mem[_1855]
                    require mem[_1855] <= test266151307()
                    require _1855 + mem[_1855] + 31 < _1855 + return_data.size
                    _1875 = mem[_1855 + mem[_1855]]
                    if mem[_1855 + mem[_1855]] > test266151307():
                        revert with 'NH{q', 65
                    if _1855 + ceil32(return_data.size) + ceil32(ceil32(mem[_1855 + mem[_1855]])) + 1 > test266151307() or ceil32(ceil32(mem[_1855 + mem[_1855]])) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _1855 + ceil32(return_data.size) + ceil32(ceil32(mem[_1855 + mem[_1855]])) + 1
                    mem[_1855 + ceil32(return_data.size)] = _1875
                    require _1863 + _1875 + 32 <= return_data.size
                    s = 0
                    while s < _1875:
                        mem[_1855 + ceil32(return_data.size) + s + 32] = mem[_1855 + _1863 + s + 32]
                        _1289 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1875) > _1875:
                        mem[_1855 + ceil32(return_data.size) + _1875 + 32] = 0
                    if idx >= mem[_877]:
                        revert with 'NH{q', 50
                    mem[(32 * idx) + _877 + 32] = _1855 + ceil32(return_data.size)
                if idx == -1:
                    revert with 'NH{q', 17
                _1289 = mem[96]
                idx = idx + 1
                continue 
            _1310 = mem[64]
            mem[mem[64]] = 96
            _1327 = mem[floor32(('cd', 4).length) + 97]
            mem[mem[64] + 96] = mem[floor32(('cd', 4).length) + 97]
            idx = 0
            s = floor32(('cd', 4).length) + 129
            t = mem[64] + (32 * _1327) + 128
            u = mem[64] + 128
            while idx < _1327:
                mem[u] = t + -_1310 - 128
                _1698 = mem[s]
                _1721 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1721:
                    mem[t + v + 32] = mem[_1698 + v + 32]
                    v = v + 32
                    continue 
                if ceil32(_1721) > _1721:
                    mem[t + _1721 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = t + ceil32(_1721) + 32
                u = u + 32
                continue 
            mem[_1310 + 32] = t - _1310
            _1720 = mem[_877]
            mem[t] = mem[_877]
            idx = 0
            s = _877 + 32
            u = t + (32 * _1720) + 32
            v = t + 32
            while idx < _1720:
                mem[v] = u + -t - 32
                _1992 = mem[s]
                _2009 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _2009:
                    mem[u + t + 32] = mem[_1992 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_2009) > _2009:
                    mem[u + _2009 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = u + ceil32(_2009) + 32
                v = v + 32
                continue 
            mem[_1310 + 64] = u - _1310
            _2008 = mem[_877 + (32 * _875) + 32]
            mem[u] = mem[_877 + (32 * _875) + 32]
            mem[u + 32 len 32 * _2008] = mem[_877 + (32 * _875) + 64 len 32 * _2008]
            return memory
              from mem[64]
               len u + (32 * _2008) + -mem[64] + 32
        _1288 = mem[96]
        idx = 0
        while idx < _1288:
            if idx >= mem[96]:
                revert with 'NH{q', 50
            _1307 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1307))
            staticcall address(_1307).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1322 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1333 = mem[_1322]
            require mem[_1322] <= test266151307()
            require _1322 + mem[_1322] + 31 < _1322 + return_data.size
            _1360 = mem[_1322 + mem[_1322]]
            if mem[_1322 + mem[_1322]] > test266151307():
                revert with 'NH{q', 65
            if _1322 + ceil32(return_data.size) + ceil32(ceil32(mem[_1322 + mem[_1322]])) + 1 > test266151307() or ceil32(ceil32(mem[_1322 + mem[_1322]])) + 1 < 0:
                revert with 'NH{q', 65
            mem[64] = _1322 + ceil32(return_data.size) + ceil32(ceil32(mem[_1322 + mem[_1322]])) + 1
            mem[_1322 + ceil32(return_data.size)] = _1360
            require _1333 + _1360 + 32 <= return_data.size
            s = 0
            while s < _1360:
                mem[_1322 + ceil32(return_data.size) + s + 32] = mem[_1322 + _1333 + s + 32]
                _1288 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1360) <= _1360:
                if idx >= mem[floor32(('cd', 4).length) + 97]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1322 + ceil32(return_data.size)
                require ext_code.size(address(_1307))
                staticcall address(_1307).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1762 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1762] == mem[_1762 + 31 len 1]
                if idx >= mem[_877 + (32 * _875) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1762 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1307))
                staticcall address(_1307).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1844 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1858 = mem[_1844]
                require mem[_1844] <= test266151307()
                require _1844 + mem[_1844] + 31 < _1844 + return_data.size
                _1870 = mem[_1844 + mem[_1844]]
                if mem[_1844 + mem[_1844]] > test266151307():
                    revert with 'NH{q', 65
                if _1844 + ceil32(return_data.size) + ceil32(ceil32(mem[_1844 + mem[_1844]])) + 1 > test266151307() or ceil32(ceil32(mem[_1844 + mem[_1844]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _1844 + ceil32(return_data.size) + ceil32(ceil32(mem[_1844 + mem[_1844]])) + 1
                mem[_1844 + ceil32(return_data.size)] = _1870
                require _1858 + _1870 + 32 <= return_data.size
                s = 0
                while s < _1870:
                    mem[_1844 + ceil32(return_data.size) + s + 32] = mem[_1844 + _1858 + s + 32]
                    _1288 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1870) > _1870:
                    mem[_1844 + ceil32(return_data.size) + _1870 + 32] = 0
                if idx >= mem[_877]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _877 + 32] = _1844 + ceil32(return_data.size)
            else:
                mem[_1322 + ceil32(return_data.size) + _1360 + 32] = 0
                if idx >= mem[floor32(('cd', 4).length) + 97]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1322 + ceil32(return_data.size)
                require ext_code.size(address(_1307))
                staticcall address(_1307).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1773 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1773] == mem[_1773 + 31 len 1]
                if idx >= mem[_877 + (32 * _875) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1773 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1307))
                staticcall address(_1307).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1853 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1862 = mem[_1853]
                require mem[_1853] <= test266151307()
                require _1853 + mem[_1853] + 31 < _1853 + return_data.size
                _1874 = mem[_1853 + mem[_1853]]
                if mem[_1853 + mem[_1853]] > test266151307():
                    revert with 'NH{q', 65
                if _1853 + ceil32(return_data.size) + ceil32(ceil32(mem[_1853 + mem[_1853]])) + 1 > test266151307() or ceil32(ceil32(mem[_1853 + mem[_1853]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _1853 + ceil32(return_data.size) + ceil32(ceil32(mem[_1853 + mem[_1853]])) + 1
                mem[_1853 + ceil32(return_data.size)] = _1874
                require _1862 + _1874 + 32 <= return_data.size
                s = 0
                while s < _1874:
                    mem[_1853 + ceil32(return_data.size) + s + 32] = mem[_1853 + _1862 + s + 32]
                    _1288 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1874) > _1874:
                    mem[_1853 + ceil32(return_data.size) + _1874 + 32] = 0
                if idx >= mem[_877]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _877 + 32] = _1853 + ceil32(return_data.size)
            if idx == -1:
                revert with 'NH{q', 17
            _1288 = mem[96]
            idx = idx + 1
            continue 
        _1306 = mem[64]
        mem[mem[64]] = 96
        _1326 = mem[floor32(('cd', 4).length) + 97]
        mem[mem[64] + 96] = mem[floor32(('cd', 4).length) + 97]
        idx = 0
        s = floor32(('cd', 4).length) + 129
        t = mem[64] + (32 * _1326) + 128
        u = mem[64] + 128
        while idx < _1326:
            mem[u] = t + -_1306 - 128
            _1696 = mem[s]
            _1719 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _1719:
                mem[t + v + 32] = mem[_1696 + v + 32]
                v = v + 32
                continue 
            if ceil32(_1719) > _1719:
                mem[t + _1719 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = t + ceil32(_1719) + 32
            u = u + 32
            continue 
        mem[_1306 + 32] = t - _1306
        _1718 = mem[_877]
        mem[t] = mem[_877]
        idx = 0
        s = _877 + 32
        u = t + (32 * _1718) + 32
        v = t + 32
        while idx < _1718:
            mem[v] = u + -t - 32
            _1988 = mem[s]
            _2007 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2007:
                mem[u + t + 32] = mem[_1988 + t + 32]
                t = t + 32
                continue 
            if ceil32(_2007) > _2007:
                mem[u + _2007 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = u + ceil32(_2007) + 32
            v = v + 32
            continue 
        mem[_1306 + 64] = u - _1306
        _2006 = mem[_877 + (32 * _875) + 32]
        mem[u] = mem[_877 + (32 * _875) + 32]
        mem[u + 32 len 32 * _2006] = mem[_877 + (32 * _875) + 64 len 32 * _2006]
        var83001 = _2006
        var83002 = _877 + (32 * _875) + (32 * _2006) + 64
        return memory
          from mem[64]
           len u + (32 * _2006) + -mem[64] + 32
    mem[_877 + 32] = 96
    s = _877 + 32
    idx = _875
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    _1314 = mem[96]
    if mem[96] > test266151307():
        revert with 'NH{q', 65
    _1315 = mem[64]
    mem[mem[64]] = mem[96]
    mem[64] = mem[64] + (32 * _1314) + 32
    if _1314:
        mem[_1315 + 32 len 32 * _1314] = call.data[calldata.size len 32 * _1314]
        _1683 = mem[96]
        idx = 0
        while idx < _1683:
            if idx >= mem[96]:
                revert with 'NH{q', 50
            _1707 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1707))
            staticcall address(_1707).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1723 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1735 = mem[_1723]
            require mem[_1723] <= test266151307()
            require _1723 + mem[_1723] + 31 < _1723 + return_data.size
            _1765 = mem[_1723 + mem[_1723]]
            if mem[_1723 + mem[_1723]] > test266151307():
                revert with 'NH{q', 65
            if _1723 + ceil32(return_data.size) + ceil32(ceil32(mem[_1723 + mem[_1723]])) + 1 > test266151307() or ceil32(ceil32(mem[_1723 + mem[_1723]])) + 1 < 0:
                revert with 'NH{q', 65
            mem[64] = _1723 + ceil32(return_data.size) + ceil32(ceil32(mem[_1723 + mem[_1723]])) + 1
            mem[_1723 + ceil32(return_data.size)] = _1765
            require _1735 + _1765 + 32 <= return_data.size
            s = 0
            while s < _1765:
                mem[_1723 + ceil32(return_data.size) + s + 32] = mem[_1723 + _1735 + s + 32]
                _1683 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1765) <= _1765:
                if idx >= mem[floor32(('cd', 4).length) + 97]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1723 + ceil32(return_data.size)
                require ext_code.size(address(_1707))
                staticcall address(_1707).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2043 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2043] == mem[_2043 + 31 len 1]
                if idx >= mem[_1315]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _1315 + 32] = mem[_2043 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1707))
                staticcall address(_1707).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2087 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2093 = mem[_2087]
                require mem[_2087] <= test266151307()
                require _2087 + mem[_2087] + 31 < _2087 + return_data.size
                _2097 = mem[_2087 + mem[_2087]]
                if mem[_2087 + mem[_2087]] > test266151307():
                    revert with 'NH{q', 65
                if _2087 + ceil32(return_data.size) + ceil32(ceil32(mem[_2087 + mem[_2087]])) + 1 > test266151307() or ceil32(ceil32(mem[_2087 + mem[_2087]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _2087 + ceil32(return_data.size) + ceil32(ceil32(mem[_2087 + mem[_2087]])) + 1
                mem[_2087 + ceil32(return_data.size)] = _2097
                require _2093 + _2097 + 32 <= return_data.size
                s = 0
                while s < _2097:
                    mem[_2087 + ceil32(return_data.size) + s + 32] = mem[_2087 + _2093 + s + 32]
                    _1683 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_2097) > _2097:
                    mem[_2087 + ceil32(return_data.size) + _2097 + 32] = 0
                if idx >= mem[_877]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _877 + 32] = _2087 + ceil32(return_data.size)
            else:
                mem[_1723 + ceil32(return_data.size) + _1765 + 32] = 0
                if idx >= mem[floor32(('cd', 4).length) + 97]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1723 + ceil32(return_data.size)
                require ext_code.size(address(_1707))
                staticcall address(_1707).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2051 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2051] == mem[_2051 + 31 len 1]
                if idx >= mem[_1315]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _1315 + 32] = mem[_2051 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1707))
                staticcall address(_1707).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2091 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2095 = mem[_2091]
                require mem[_2091] <= test266151307()
                require _2091 + mem[_2091] + 31 < _2091 + return_data.size
                _2099 = mem[_2091 + mem[_2091]]
                if mem[_2091 + mem[_2091]] > test266151307():
                    revert with 'NH{q', 65
                if _2091 + ceil32(return_data.size) + ceil32(ceil32(mem[_2091 + mem[_2091]])) + 1 > test266151307() or ceil32(ceil32(mem[_2091 + mem[_2091]])) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = _2091 + ceil32(return_data.size) + ceil32(ceil32(mem[_2091 + mem[_2091]])) + 1
                mem[_2091 + ceil32(return_data.size)] = _2099
                require _2095 + _2099 + 32 <= return_data.size
                s = 0
                while s < _2099:
                    mem[_2091 + ceil32(return_data.size) + s + 32] = mem[_2091 + _2095 + s + 32]
                    _1683 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_2099) > _2099:
                    mem[_2091 + ceil32(return_data.size) + _2099 + 32] = 0
                if idx >= mem[_877]:
                    revert with 'NH{q', 50
                mem[(32 * idx) + _877 + 32] = _2091 + ceil32(return_data.size)
            if idx == -1:
                revert with 'NH{q', 17
            _1683 = mem[96]
            idx = idx + 1
            continue 
        _1706 = mem[64]
        mem[mem[64]] = 96
        _1725 = mem[floor32(('cd', 4).length) + 97]
        mem[mem[64] + 96] = mem[floor32(('cd', 4).length) + 97]
        idx = 0
        s = floor32(('cd', 4).length) + 129
        t = mem[64] + (32 * _1725) + 128
        u = mem[64] + 128
        while idx < _1725:
            mem[u] = t + -_1706 - 128
            _1998 = mem[s]
            _2013 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _2013:
                mem[t + v + 32] = mem[_1998 + v + 32]
                v = v + 32
                continue 
            if ceil32(_2013) > _2013:
                mem[t + _2013 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = t + ceil32(_2013) + 32
            u = u + 32
            continue 
        mem[_1706 + 32] = t - _1706
        _2012 = mem[_877]
        mem[t] = mem[_877]
        idx = 0
        s = _877 + 32
        u = t + (32 * _2012) + 32
        v = t + 32
        while idx < _2012:
            mem[v] = u + -t - 32
            _2128 = mem[s]
            _2139 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2139:
                mem[u + t + 32] = mem[_2128 + t + 32]
                t = t + 32
                continue 
            if ceil32(_2139) > _2139:
                mem[u + _2139 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = u + ceil32(_2139) + 32
            v = v + 32
            continue 
        mem[_1706 + 64] = u - _1706
        _2138 = mem[_1315]
        mem[u] = mem[_1315]
        mem[u + 32 len 32 * _2138] = mem[_1315 + 32 len 32 * _2138]
        return memory
          from mem[64]
           len u + (32 * _2138) + -mem[64] + 32
    _1682 = mem[96]
    idx = 0
    while idx < _1682:
        if idx >= mem[96]:
            revert with 'NH{q', 50
        _1703 = mem[(32 * idx) + 128]
        mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
        require ext_code.size(address(_1703))
        staticcall address(_1703).name() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1722 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1734 = mem[_1722]
        require mem[_1722] <= test266151307()
        require _1722 + mem[_1722] + 31 < _1722 + return_data.size
        _1764 = mem[_1722 + mem[_1722]]
        if mem[_1722 + mem[_1722]] > test266151307():
            revert with 'NH{q', 65
        if _1722 + ceil32(return_data.size) + ceil32(ceil32(mem[_1722 + mem[_1722]])) + 1 > test266151307() or ceil32(ceil32(mem[_1722 + mem[_1722]])) + 1 < 0:
            revert with 'NH{q', 65
        mem[64] = _1722 + ceil32(return_data.size) + ceil32(ceil32(mem[_1722 + mem[_1722]])) + 1
        mem[_1722 + ceil32(return_data.size)] = _1764
        require _1734 + _1764 + 32 <= return_data.size
        s = 0
        while s < _1764:
            mem[_1722 + ceil32(return_data.size) + s + 32] = mem[_1722 + _1734 + s + 32]
            _1682 = mem[96]
            s = s + 32
            continue 
        if ceil32(_1764) <= _1764:
            if idx >= mem[floor32(('cd', 4).length) + 97]:
                revert with 'NH{q', 50
            mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1722 + ceil32(return_data.size)
            require ext_code.size(address(_1703))
            staticcall address(_1703).0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2042 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_2042] == mem[_2042 + 31 len 1]
            if idx >= mem[_1315]:
                revert with 'NH{q', 50
            mem[(32 * idx) + _1315 + 32] = mem[_2042 + 31 len 1]
            mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1703))
            staticcall address(_1703).0x95d89b41 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2086 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2092 = mem[_2086]
            require mem[_2086] <= test266151307()
            require _2086 + mem[_2086] + 31 < _2086 + return_data.size
            _2096 = mem[_2086 + mem[_2086]]
            if mem[_2086 + mem[_2086]] > test266151307():
                revert with 'NH{q', 65
            if _2086 + ceil32(return_data.size) + ceil32(ceil32(mem[_2086 + mem[_2086]])) + 1 > test266151307() or ceil32(ceil32(mem[_2086 + mem[_2086]])) + 1 < 0:
                revert with 'NH{q', 65
            mem[64] = _2086 + ceil32(return_data.size) + ceil32(ceil32(mem[_2086 + mem[_2086]])) + 1
            mem[_2086 + ceil32(return_data.size)] = _2096
            require _2092 + _2096 + 32 <= return_data.size
            s = 0
            while s < _2096:
                mem[_2086 + ceil32(return_data.size) + s + 32] = mem[_2086 + _2092 + s + 32]
                _1682 = mem[96]
                s = s + 32
                continue 
            if ceil32(_2096) > _2096:
                mem[_2086 + ceil32(return_data.size) + _2096 + 32] = 0
            if idx >= mem[_877]:
                revert with 'NH{q', 50
            mem[(32 * idx) + _877 + 32] = _2086 + ceil32(return_data.size)
        else:
            mem[_1722 + ceil32(return_data.size) + _1764 + 32] = 0
            if idx >= mem[floor32(('cd', 4).length) + 97]:
                revert with 'NH{q', 50
            mem[(32 * idx) + floor32(('cd', 4).length) + 129] = _1722 + ceil32(return_data.size)
            require ext_code.size(address(_1703))
            staticcall address(_1703).0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2049 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_2049] == mem[_2049 + 31 len 1]
            if idx >= mem[_1315]:
                revert with 'NH{q', 50
            mem[(32 * idx) + _1315 + 32] = mem[_2049 + 31 len 1]
            mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1703))
            staticcall address(_1703).0x95d89b41 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2089 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2094 = mem[_2089]
            require mem[_2089] <= test266151307()
            require _2089 + mem[_2089] + 31 < _2089 + return_data.size
            _2098 = mem[_2089 + mem[_2089]]
            if mem[_2089 + mem[_2089]] > test266151307():
                revert with 'NH{q', 65
            if _2089 + ceil32(return_data.size) + ceil32(ceil32(mem[_2089 + mem[_2089]])) + 1 > test266151307() or ceil32(ceil32(mem[_2089 + mem[_2089]])) + 1 < 0:
                revert with 'NH{q', 65
            mem[64] = _2089 + ceil32(return_data.size) + ceil32(ceil32(mem[_2089 + mem[_2089]])) + 1
            mem[_2089 + ceil32(return_data.size)] = _2098
            require _2094 + _2098 + 32 <= return_data.size
            s = 0
            while s < _2098:
                mem[_2089 + ceil32(return_data.size) + s + 32] = mem[_2089 + _2094 + s + 32]
                _1682 = mem[96]
                s = s + 32
                continue 
            if ceil32(_2098) > _2098:
                mem[_2089 + ceil32(return_data.size) + _2098 + 32] = 0
            if idx >= mem[_877]:
                revert with 'NH{q', 50
            mem[(32 * idx) + _877 + 32] = _2089 + ceil32(return_data.size)
        if idx == -1:
            revert with 'NH{q', 17
        _1682 = mem[96]
        idx = idx + 1
        continue 
    _1702 = mem[64]
    mem[mem[64]] = 96
    _1724 = mem[floor32(('cd', 4).length) + 97]
    mem[mem[64] + 96] = mem[floor32(('cd', 4).length) + 97]
    idx = 0
    s = floor32(('cd', 4).length) + 129
    t = mem[64] + (32 * _1724) + 128
    u = mem[64] + 128
    while idx < _1724:
        mem[u] = t + -_1702 - 128
        _1996 = mem[s]
        _2011 = mem[mem[s]]
        mem[t] = mem[mem[s]]
        v = 0
        while v < _2011:
            mem[t + v + 32] = mem[_1996 + v + 32]
            v = v + 32
            continue 
        if ceil32(_2011) > _2011:
            mem[t + _2011 + 32] = 0
        idx = idx + 1
        s = s + 32
        t = t + ceil32(_2011) + 32
        u = u + 32
        continue 
    mem[_1702 + 32] = t - _1702
    _2010 = mem[_877]
    mem[t] = mem[_877]
    idx = 0
    s = _877 + 32
    u = t + (32 * _2010) + 32
    v = t + 32
    while idx < _2010:
        mem[v] = u + -t - 32
        _2124 = mem[s]
        _2137 = mem[mem[s]]
        mem[u] = mem[mem[s]]
        t = 0
        while t < _2137:
            mem[u + t + 32] = mem[_2124 + t + 32]
            t = t + 32
            continue 
        if ceil32(_2137) > _2137:
            mem[u + _2137 + 32] = 0
        idx = idx + 1
        s = s + 32
        u = u + ceil32(_2137) + 32
        v = v + 32
        continue 
    mem[_1702 + 64] = u - _1702
    _2136 = mem[_1315]
    mem[u] = mem[_1315]
    mem[u + 32 len 32 * _2136] = mem[_1315 + 32 len 32 * _2136]
    var87001 = _2136
    var87002 = _1315 + (32 * _2136) + 32
    return memory
      from mem[64]
       len u + (32 * _2136) + -mem[64] + 32
}

function sub_62827861(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == arg2
    require arg3 == arg3
    if arg3 < arg2:
        revert with 'NH{q', 17
    if arg3 - arg2 > test266151307():
        revert with 'NH{q', 65
    mem[96] = arg3 - arg2
    if not arg3 - arg2:
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
        if not arg3 - arg2:
            if arg3 - arg2 > test266151307():
                revert with 'NH{q', 65
            mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
            if not arg3 - arg2:
                if arg3 - arg2 > test266151307():
                    revert with 'NH{q', 65
                mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
                mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
                if not arg3 - arg2:
                    idx = arg2
                    s = 0
                    while idx < arg3:
                        mem[mem[64] + 4] = idx
                        require ext_code.size(address(arg1))
                        staticcall address(arg1).allPairs(uint256 arg1) with:
                                gas gas_remaining wei
                               args idx
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _576 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _593 = mem[_576]
                        require mem[_576] == mem[_576 + 12 len 20]
                        if s >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + 128] = mem[_576 + 12 len 20]
                        require ext_code.size(address(_593))
                        staticcall address(_593).token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _704 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_704] == mem[_704 + 12 len 20]
                        if s >= mem[(32 * arg3 - arg2) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_704 + 12 len 20]
                        require ext_code.size(address(_593))
                        staticcall address(_593).token1() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _832 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_832] == mem[_832 + 12 len 20]
                        if s >= mem[(64 * arg3 - arg2) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_832 + 12 len 20]
                        require ext_code.size(address(_593))
                        staticcall address(_593).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _944 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        require mem[_944] == mem[_944 + 28 len 4]
                        require mem[_944 + 32] == mem[_944 + 60 len 4]
                        if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_944 + 28 len 4]
                        if s == -1:
                            revert with 'NH{q', 17
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    _528 = mem[64]
                    mem[mem[64]] = 128
                    _544 = mem[96]
                    mem[mem[64] + 128] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 160
                    while idx < _544:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_528 + 32] = (32 * _544) + 160
                    _1024 = mem[(32 * arg3 - arg2) + 128]
                    mem[_528 + (32 * _544) + 160] = mem[(32 * arg3 - arg2) + 128]
                    idx = 0
                    s = (32 * arg3 - arg2) + 160
                    t = _528 + (32 * _544) + 192
                    while idx < _1024:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_528 + 64] = (32 * _544) + (32 * _1024) + 192
                    _1152 = mem[(64 * arg3 - arg2) + 160]
                    mem[_528 + (32 * _544) + (32 * _1024) + 192] = mem[(64 * arg3 - arg2) + 160]
                    idx = 0
                    s = (64 * arg3 - arg2) + 192
                    t = _528 + (32 * _544) + (32 * _1024) + 224
                    while idx < _1152:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_528 + 96] = (32 * _544) + (32 * _1024) + (32 * _1152) + 224
                    _1248 = mem[(98 * arg3) + (-98 * arg2) + 192]
                    mem[_528 + (32 * _544) + (32 * _1024) + (32 * _1152) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                    mem[_528 + (32 * _544) + (32 * _1024) + (32 * _1152) + 256 len 32 * _1248] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1248]
                    return memory
                      from mem[64]
                       len _528 + (32 * _544) + (32 * _1024) + (32 * _1152) + (32 * _1248) + -mem[64] + 256
                mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _577 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _595 = mem[_577]
                    require mem[_577] == mem[_577 + 12 len 20]
                    if s >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + 128] = mem[_577 + 12 len 20]
                    require ext_code.size(address(_595))
                    staticcall address(_595).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _705 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_705] == mem[_705 + 12 len 20]
                    if s >= mem[(32 * arg3 - arg2) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_705 + 12 len 20]
                    require ext_code.size(address(_595))
                    staticcall address(_595).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _833 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_833] == mem[_833 + 12 len 20]
                    if s >= mem[(64 * arg3 - arg2) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_833 + 12 len 20]
                    require ext_code.size(address(_595))
                    staticcall address(_595).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _945 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    require mem[_945] == mem[_945 + 28 len 4]
                    require mem[_945 + 32] == mem[_945 + 60 len 4]
                    if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_945 + 28 len 4]
                    if s == -1:
                        revert with 'NH{q', 17
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                _529 = mem[64]
                mem[mem[64]] = 128
                _545 = mem[96]
                mem[mem[64] + 128] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 160
                while idx < _545:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_529 + 32] = (32 * _545) + 160
                _1025 = mem[(32 * arg3 - arg2) + 128]
                mem[_529 + (32 * _545) + 160] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = _529 + (32 * _545) + 192
                while idx < _1025:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_529 + 64] = (32 * _545) + (32 * _1025) + 192
                _1153 = mem[(64 * arg3 - arg2) + 160]
                mem[_529 + (32 * _545) + (32 * _1025) + 192] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _529 + (32 * _545) + (32 * _1025) + 224
                while idx < _1153:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_529 + 96] = (32 * _545) + (32 * _1025) + (32 * _1153) + 224
                _1249 = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_529 + (32 * _545) + (32 * _1025) + (32 * _1153) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_529 + (32 * _545) + (32 * _1025) + (32 * _1153) + 256 len 32 * _1249] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1249]
                return memory
                  from mem[64]
                   len _529 + (32 * _545) + (32 * _1025) + (32 * _1153) + (32 * _1249) + -mem[64] + 256
            mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            if arg3 - arg2 > test266151307():
                revert with 'NH{q', 65
            mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _578 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _597 = mem[_578]
                    require mem[_578] == mem[_578 + 12 len 20]
                    if s >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + 128] = mem[_578 + 12 len 20]
                    require ext_code.size(address(_597))
                    staticcall address(_597).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _706 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_706] == mem[_706 + 12 len 20]
                    if s >= mem[(32 * arg3 - arg2) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_706 + 12 len 20]
                    require ext_code.size(address(_597))
                    staticcall address(_597).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _834 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_834] == mem[_834 + 12 len 20]
                    if s >= mem[(64 * arg3 - arg2) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_834 + 12 len 20]
                    require ext_code.size(address(_597))
                    staticcall address(_597).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _946 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    require mem[_946] == mem[_946 + 28 len 4]
                    require mem[_946 + 32] == mem[_946 + 60 len 4]
                    if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_946 + 28 len 4]
                    if s == -1:
                        revert with 'NH{q', 17
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                _530 = mem[64]
                mem[mem[64]] = 128
                _546 = mem[96]
                mem[mem[64] + 128] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 160
                while idx < _546:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_530 + 32] = (32 * _546) + 160
                _1026 = mem[(32 * arg3 - arg2) + 128]
                mem[_530 + (32 * _546) + 160] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = _530 + (32 * _546) + 192
                while idx < _1026:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_530 + 64] = (32 * _546) + (32 * _1026) + 192
                _1154 = mem[(64 * arg3 - arg2) + 160]
                mem[_530 + (32 * _546) + (32 * _1026) + 192] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _530 + (32 * _546) + (32 * _1026) + 224
                while idx < _1154:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_530 + 96] = (32 * _546) + (32 * _1026) + (32 * _1154) + 224
                _1250 = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_530 + (32 * _546) + (32 * _1026) + (32 * _1154) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_530 + (32 * _546) + (32 * _1026) + (32 * _1154) + 256 len 32 * _1250] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1250]
                return memory
                  from mem[64]
                   len _530 + (32 * _546) + (32 * _1026) + (32 * _1154) + (32 * _1250) + -mem[64] + 256
            mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _579 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _599 = mem[_579]
                require mem[_579] == mem[_579 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_579 + 12 len 20]
                require ext_code.size(address(_599))
                staticcall address(_599).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _707 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_707] == mem[_707 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_707 + 12 len 20]
                require ext_code.size(address(_599))
                staticcall address(_599).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _835 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_835] == mem[_835 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_835 + 12 len 20]
                require ext_code.size(address(_599))
                staticcall address(_599).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _947 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_947] == mem[_947 + 28 len 4]
                require mem[_947 + 32] == mem[_947 + 60 len 4]
                if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_947 + 28 len 4]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _531 = mem[64]
            mem[mem[64]] = 128
            _547 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _547:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_531 + 32] = (32 * _547) + 160
            _1027 = mem[(32 * arg3 - arg2) + 128]
            mem[_531 + (32 * _547) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _531 + (32 * _547) + 192
            while idx < _1027:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_531 + 64] = (32 * _547) + (32 * _1027) + 192
            _1155 = mem[(64 * arg3 - arg2) + 160]
            mem[_531 + (32 * _547) + (32 * _1027) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _531 + (32 * _547) + (32 * _1027) + 224
            while idx < _1155:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_531 + 96] = (32 * _547) + (32 * _1027) + (32 * _1155) + 224
            _1251 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_531 + (32 * _547) + (32 * _1027) + (32 * _1155) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_531 + (32 * _547) + (32 * _1027) + (32 * _1155) + 256 len 32 * _1251] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1251]
            return memory
              from mem[64]
               len _531 + (32 * _547) + (32 * _1027) + (32 * _1155) + (32 * _1251) + -mem[64] + 256
        mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        if not arg3 - arg2:
            if arg3 - arg2 > test266151307():
                revert with 'NH{q', 65
            mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _580 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _601 = mem[_580]
                    require mem[_580] == mem[_580 + 12 len 20]
                    if s >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + 128] = mem[_580 + 12 len 20]
                    require ext_code.size(address(_601))
                    staticcall address(_601).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _708 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_708] == mem[_708 + 12 len 20]
                    if s >= mem[(32 * arg3 - arg2) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_708 + 12 len 20]
                    require ext_code.size(address(_601))
                    staticcall address(_601).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _836 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_836] == mem[_836 + 12 len 20]
                    if s >= mem[(64 * arg3 - arg2) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_836 + 12 len 20]
                    require ext_code.size(address(_601))
                    staticcall address(_601).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _948 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    require mem[_948] == mem[_948 + 28 len 4]
                    require mem[_948 + 32] == mem[_948 + 60 len 4]
                    if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_948 + 28 len 4]
                    if s == -1:
                        revert with 'NH{q', 17
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                _532 = mem[64]
                mem[mem[64]] = 128
                _548 = mem[96]
                mem[mem[64] + 128] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 160
                while idx < _548:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_532 + 32] = (32 * _548) + 160
                _1028 = mem[(32 * arg3 - arg2) + 128]
                mem[_532 + (32 * _548) + 160] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = _532 + (32 * _548) + 192
                while idx < _1028:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_532 + 64] = (32 * _548) + (32 * _1028) + 192
                _1156 = mem[(64 * arg3 - arg2) + 160]
                mem[_532 + (32 * _548) + (32 * _1028) + 192] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _532 + (32 * _548) + (32 * _1028) + 224
                while idx < _1156:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_532 + 96] = (32 * _548) + (32 * _1028) + (32 * _1156) + 224
                _1252 = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_532 + (32 * _548) + (32 * _1028) + (32 * _1156) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_532 + (32 * _548) + (32 * _1028) + (32 * _1156) + 256 len 32 * _1252] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1252]
                return memory
                  from mem[64]
                   len _532 + (32 * _548) + (32 * _1028) + (32 * _1156) + (32 * _1252) + -mem[64] + 256
            mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _581 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _603 = mem[_581]
                require mem[_581] == mem[_581 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_581 + 12 len 20]
                require ext_code.size(address(_603))
                staticcall address(_603).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _709 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_709] == mem[_709 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_709 + 12 len 20]
                require ext_code.size(address(_603))
                staticcall address(_603).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _837 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_837] == mem[_837 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_837 + 12 len 20]
                require ext_code.size(address(_603))
                staticcall address(_603).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _949 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_949] == mem[_949 + 28 len 4]
                require mem[_949 + 32] == mem[_949 + 60 len 4]
                if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_949 + 28 len 4]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _533 = mem[64]
            mem[mem[64]] = 128
            _549 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _549:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_533 + 32] = (32 * _549) + 160
            _1029 = mem[(32 * arg3 - arg2) + 128]
            mem[_533 + (32 * _549) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _533 + (32 * _549) + 192
            while idx < _1029:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_533 + 64] = (32 * _549) + (32 * _1029) + 192
            _1157 = mem[(64 * arg3 - arg2) + 160]
            mem[_533 + (32 * _549) + (32 * _1029) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _533 + (32 * _549) + (32 * _1029) + 224
            while idx < _1157:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_533 + 96] = (32 * _549) + (32 * _1029) + (32 * _1157) + 224
            _1253 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_533 + (32 * _549) + (32 * _1029) + (32 * _1157) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_533 + (32 * _549) + (32 * _1029) + (32 * _1157) + 256 len 32 * _1253] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1253]
            return memory
              from mem[64]
               len _533 + (32 * _549) + (32 * _1029) + (32 * _1157) + (32 * _1253) + -mem[64] + 256
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _582 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _605 = mem[_582]
                require mem[_582] == mem[_582 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_582 + 12 len 20]
                require ext_code.size(address(_605))
                staticcall address(_605).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _710 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_710] == mem[_710 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_710 + 12 len 20]
                require ext_code.size(address(_605))
                staticcall address(_605).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _838 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_838] == mem[_838 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_838 + 12 len 20]
                require ext_code.size(address(_605))
                staticcall address(_605).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _950 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_950] == mem[_950 + 28 len 4]
                require mem[_950 + 32] == mem[_950 + 60 len 4]
                if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_950 + 28 len 4]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _534 = mem[64]
            mem[mem[64]] = 128
            _550 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _550:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_534 + 32] = (32 * _550) + 160
            _1030 = mem[(32 * arg3 - arg2) + 128]
            mem[_534 + (32 * _550) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _534 + (32 * _550) + 192
            while idx < _1030:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_534 + 64] = (32 * _550) + (32 * _1030) + 192
            _1158 = mem[(64 * arg3 - arg2) + 160]
            mem[_534 + (32 * _550) + (32 * _1030) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _534 + (32 * _550) + (32 * _1030) + 224
            while idx < _1158:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_534 + 96] = (32 * _550) + (32 * _1030) + (32 * _1158) + 224
            _1254 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_534 + (32 * _550) + (32 * _1030) + (32 * _1158) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_534 + (32 * _550) + (32 * _1030) + (32 * _1158) + 256 len 32 * _1254] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1254]
            return memory
              from mem[64]
               len _534 + (32 * _550) + (32 * _1030) + (32 * _1158) + (32 * _1254) + -mem[64] + 256
        mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _583 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _607 = mem[_583]
            require mem[_583] == mem[_583 + 12 len 20]
            if s >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * s) + 128] = mem[_583 + 12 len 20]
            require ext_code.size(address(_607))
            staticcall address(_607).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _711 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_711] == mem[_711 + 12 len 20]
            if s >= mem[(32 * arg3 - arg2) + 128]:
                revert with 'NH{q', 50
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_711 + 12 len 20]
            require ext_code.size(address(_607))
            staticcall address(_607).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _839 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_839] == mem[_839 + 12 len 20]
            if s >= mem[(64 * arg3 - arg2) + 160]:
                revert with 'NH{q', 50
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_839 + 12 len 20]
            require ext_code.size(address(_607))
            staticcall address(_607).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _951 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            require mem[_951] == mem[_951 + 28 len 4]
            require mem[_951 + 32] == mem[_951 + 60 len 4]
            if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                revert with 'NH{q', 50
            mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_951 + 28 len 4]
            if s == -1:
                revert with 'NH{q', 17
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + 1
            continue 
        _535 = mem[64]
        mem[mem[64]] = 128
        _551 = mem[96]
        mem[mem[64] + 128] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 160
        while idx < _551:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_535 + 32] = (32 * _551) + 160
        _1031 = mem[(32 * arg3 - arg2) + 128]
        mem[_535 + (32 * _551) + 160] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _535 + (32 * _551) + 192
        while idx < _1031:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_535 + 64] = (32 * _551) + (32 * _1031) + 192
        _1159 = mem[(64 * arg3 - arg2) + 160]
        mem[_535 + (32 * _551) + (32 * _1031) + 192] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _535 + (32 * _551) + (32 * _1031) + 224
        while idx < _1159:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_535 + 96] = (32 * _551) + (32 * _1031) + (32 * _1159) + 224
        _1255 = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_535 + (32 * _551) + (32 * _1031) + (32 * _1159) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_535 + (32 * _551) + (32 * _1031) + (32 * _1159) + 256 len 32 * _1255] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1255]
        return memory
          from mem[64]
           len _535 + (32 * _551) + (32 * _1031) + (32 * _1159) + (32 * _1255) + -mem[64] + 256
    mem[128 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    if arg3 - arg2 > test266151307():
        revert with 'NH{q', 65
    mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
    if not arg3 - arg2:
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        if not arg3 - arg2:
            if arg3 - arg2 > test266151307():
                revert with 'NH{q', 65
            mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _584 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _609 = mem[_584]
                    require mem[_584] == mem[_584 + 12 len 20]
                    if s >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + 128] = mem[_584 + 12 len 20]
                    require ext_code.size(address(_609))
                    staticcall address(_609).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _712 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_712] == mem[_712 + 12 len 20]
                    if s >= mem[(32 * arg3 - arg2) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_712 + 12 len 20]
                    require ext_code.size(address(_609))
                    staticcall address(_609).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _840 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_840] == mem[_840 + 12 len 20]
                    if s >= mem[(64 * arg3 - arg2) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_840 + 12 len 20]
                    require ext_code.size(address(_609))
                    staticcall address(_609).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _952 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    require mem[_952] == mem[_952 + 28 len 4]
                    require mem[_952 + 32] == mem[_952 + 60 len 4]
                    if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_952 + 28 len 4]
                    if s == -1:
                        revert with 'NH{q', 17
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                _536 = mem[64]
                mem[mem[64]] = 128
                _552 = mem[96]
                mem[mem[64] + 128] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 160
                while idx < _552:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_536 + 32] = (32 * _552) + 160
                _1032 = mem[(32 * arg3 - arg2) + 128]
                mem[_536 + (32 * _552) + 160] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = _536 + (32 * _552) + 192
                while idx < _1032:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_536 + 64] = (32 * _552) + (32 * _1032) + 192
                _1160 = mem[(64 * arg3 - arg2) + 160]
                mem[_536 + (32 * _552) + (32 * _1032) + 192] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _536 + (32 * _552) + (32 * _1032) + 224
                while idx < _1160:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_536 + 96] = (32 * _552) + (32 * _1032) + (32 * _1160) + 224
                _1256 = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_536 + (32 * _552) + (32 * _1032) + (32 * _1160) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
                mem[_536 + (32 * _552) + (32 * _1032) + (32 * _1160) + 256 len 32 * _1256] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1256]
                return memory
                  from mem[64]
                   len _536 + (32 * _552) + (32 * _1032) + (32 * _1160) + (32 * _1256) + -mem[64] + 256
            mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _585 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _611 = mem[_585]
                require mem[_585] == mem[_585 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_585 + 12 len 20]
                require ext_code.size(address(_611))
                staticcall address(_611).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _713 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_713] == mem[_713 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_713 + 12 len 20]
                require ext_code.size(address(_611))
                staticcall address(_611).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _841 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_841] == mem[_841 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_841 + 12 len 20]
                require ext_code.size(address(_611))
                staticcall address(_611).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _953 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_953] == mem[_953 + 28 len 4]
                require mem[_953 + 32] == mem[_953 + 60 len 4]
                if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_953 + 28 len 4]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _537 = mem[64]
            mem[mem[64]] = 128
            _553 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _553:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_537 + 32] = (32 * _553) + 160
            _1033 = mem[(32 * arg3 - arg2) + 128]
            mem[_537 + (32 * _553) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _537 + (32 * _553) + 192
            while idx < _1033:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_537 + 64] = (32 * _553) + (32 * _1033) + 192
            _1161 = mem[(64 * arg3 - arg2) + 160]
            mem[_537 + (32 * _553) + (32 * _1033) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _537 + (32 * _553) + (32 * _1033) + 224
            while idx < _1161:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_537 + 96] = (32 * _553) + (32 * _1033) + (32 * _1161) + 224
            _1257 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_537 + (32 * _553) + (32 * _1033) + (32 * _1161) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_537 + (32 * _553) + (32 * _1033) + (32 * _1161) + 256 len 32 * _1257] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1257]
            return memory
              from mem[64]
               len _537 + (32 * _553) + (32 * _1033) + (32 * _1161) + (32 * _1257) + -mem[64] + 256
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _586 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _613 = mem[_586]
                require mem[_586] == mem[_586 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_586 + 12 len 20]
                require ext_code.size(address(_613))
                staticcall address(_613).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _714 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_714] == mem[_714 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_714 + 12 len 20]
                require ext_code.size(address(_613))
                staticcall address(_613).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _842 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_842] == mem[_842 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_842 + 12 len 20]
                require ext_code.size(address(_613))
                staticcall address(_613).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _954 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_954] == mem[_954 + 28 len 4]
                require mem[_954 + 32] == mem[_954 + 60 len 4]
                if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_954 + 28 len 4]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _538 = mem[64]
            mem[mem[64]] = 128
            _554 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _554:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_538 + 32] = (32 * _554) + 160
            _1034 = mem[(32 * arg3 - arg2) + 128]
            mem[_538 + (32 * _554) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _538 + (32 * _554) + 192
            while idx < _1034:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_538 + 64] = (32 * _554) + (32 * _1034) + 192
            _1162 = mem[(64 * arg3 - arg2) + 160]
            mem[_538 + (32 * _554) + (32 * _1034) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _538 + (32 * _554) + (32 * _1034) + 224
            while idx < _1162:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_538 + 96] = (32 * _554) + (32 * _1034) + (32 * _1162) + 224
            _1258 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_538 + (32 * _554) + (32 * _1034) + (32 * _1162) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_538 + (32 * _554) + (32 * _1034) + (32 * _1162) + 256 len 32 * _1258] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1258]
            return memory
              from mem[64]
               len _538 + (32 * _554) + (32 * _1034) + (32 * _1162) + (32 * _1258) + -mem[64] + 256
        mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _587 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _615 = mem[_587]
            require mem[_587] == mem[_587 + 12 len 20]
            if s >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * s) + 128] = mem[_587 + 12 len 20]
            require ext_code.size(address(_615))
            staticcall address(_615).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _715 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_715] == mem[_715 + 12 len 20]
            if s >= mem[(32 * arg3 - arg2) + 128]:
                revert with 'NH{q', 50
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_715 + 12 len 20]
            require ext_code.size(address(_615))
            staticcall address(_615).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _843 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_843] == mem[_843 + 12 len 20]
            if s >= mem[(64 * arg3 - arg2) + 160]:
                revert with 'NH{q', 50
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_843 + 12 len 20]
            require ext_code.size(address(_615))
            staticcall address(_615).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _955 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            require mem[_955] == mem[_955 + 28 len 4]
            require mem[_955 + 32] == mem[_955 + 60 len 4]
            if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                revert with 'NH{q', 50
            mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_955 + 28 len 4]
            if s == -1:
                revert with 'NH{q', 17
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + 1
            continue 
        _539 = mem[64]
        mem[mem[64]] = 128
        _555 = mem[96]
        mem[mem[64] + 128] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 160
        while idx < _555:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_539 + 32] = (32 * _555) + 160
        _1035 = mem[(32 * arg3 - arg2) + 128]
        mem[_539 + (32 * _555) + 160] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _539 + (32 * _555) + 192
        while idx < _1035:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_539 + 64] = (32 * _555) + (32 * _1035) + 192
        _1163 = mem[(64 * arg3 - arg2) + 160]
        mem[_539 + (32 * _555) + (32 * _1035) + 192] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _539 + (32 * _555) + (32 * _1035) + 224
        while idx < _1163:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_539 + 96] = (32 * _555) + (32 * _1035) + (32 * _1163) + 224
        _1259 = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_539 + (32 * _555) + (32 * _1035) + (32 * _1163) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_539 + (32 * _555) + (32 * _1035) + (32 * _1163) + 256 len 32 * _1259] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1259]
        return memory
          from mem[64]
           len _539 + (32 * _555) + (32 * _1035) + (32 * _1163) + (32 * _1259) + -mem[64] + 256
    mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    if arg3 - arg2 > test266151307():
        revert with 'NH{q', 65
    mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
    if not arg3 - arg2:
        if arg3 - arg2 > test266151307():
            revert with 'NH{q', 65
        mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _588 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _617 = mem[_588]
                require mem[_588] == mem[_588 + 12 len 20]
                if s >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * s) + 128] = mem[_588 + 12 len 20]
                require ext_code.size(address(_617))
                staticcall address(_617).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _716 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_716] == mem[_716 + 12 len 20]
                if s >= mem[(32 * arg3 - arg2) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_716 + 12 len 20]
                require ext_code.size(address(_617))
                staticcall address(_617).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _844 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_844] == mem[_844 + 12 len 20]
                if s >= mem[(64 * arg3 - arg2) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_844 + 12 len 20]
                require ext_code.size(address(_617))
                staticcall address(_617).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _956 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                require mem[_956] == mem[_956 + 28 len 4]
                require mem[_956 + 32] == mem[_956 + 60 len 4]
                if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                    revert with 'NH{q', 50
                mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_956 + 28 len 4]
                if s == -1:
                    revert with 'NH{q', 17
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            _540 = mem[64]
            mem[mem[64]] = 128
            _556 = mem[96]
            mem[mem[64] + 128] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 160
            while idx < _556:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_540 + 32] = (32 * _556) + 160
            _1036 = mem[(32 * arg3 - arg2) + 128]
            mem[_540 + (32 * _556) + 160] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _540 + (32 * _556) + 192
            while idx < _1036:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_540 + 64] = (32 * _556) + (32 * _1036) + 192
            _1164 = mem[(64 * arg3 - arg2) + 160]
            mem[_540 + (32 * _556) + (32 * _1036) + 192] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _540 + (32 * _556) + (32 * _1036) + 224
            while idx < _1164:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_540 + 96] = (32 * _556) + (32 * _1036) + (32 * _1164) + 224
            _1260 = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_540 + (32 * _556) + (32 * _1036) + (32 * _1164) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
            mem[_540 + (32 * _556) + (32 * _1036) + (32 * _1164) + 256 len 32 * _1260] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1260]
            return memory
              from mem[64]
               len _540 + (32 * _556) + (32 * _1036) + (32 * _1164) + (32 * _1260) + -mem[64] + 256
        mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _589 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _619 = mem[_589]
            require mem[_589] == mem[_589 + 12 len 20]
            if s >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * s) + 128] = mem[_589 + 12 len 20]
            require ext_code.size(address(_619))
            staticcall address(_619).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _717 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_717] == mem[_717 + 12 len 20]
            if s >= mem[(32 * arg3 - arg2) + 128]:
                revert with 'NH{q', 50
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_717 + 12 len 20]
            require ext_code.size(address(_619))
            staticcall address(_619).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _845 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_845] == mem[_845 + 12 len 20]
            if s >= mem[(64 * arg3 - arg2) + 160]:
                revert with 'NH{q', 50
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_845 + 12 len 20]
            require ext_code.size(address(_619))
            staticcall address(_619).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _957 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            require mem[_957] == mem[_957 + 28 len 4]
            require mem[_957 + 32] == mem[_957 + 60 len 4]
            if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                revert with 'NH{q', 50
            mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_957 + 28 len 4]
            if s == -1:
                revert with 'NH{q', 17
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + 1
            continue 
        _541 = mem[64]
        mem[mem[64]] = 128
        _557 = mem[96]
        mem[mem[64] + 128] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 160
        while idx < _557:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_541 + 32] = (32 * _557) + 160
        _1037 = mem[(32 * arg3 - arg2) + 128]
        mem[_541 + (32 * _557) + 160] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _541 + (32 * _557) + 192
        while idx < _1037:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_541 + 64] = (32 * _557) + (32 * _1037) + 192
        _1165 = mem[(64 * arg3 - arg2) + 160]
        mem[_541 + (32 * _557) + (32 * _1037) + 192] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _541 + (32 * _557) + (32 * _1037) + 224
        while idx < _1165:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_541 + 96] = (32 * _557) + (32 * _1037) + (32 * _1165) + 224
        _1261 = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_541 + (32 * _557) + (32 * _1037) + (32 * _1165) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_541 + (32 * _557) + (32 * _1037) + (32 * _1165) + 256 len 32 * _1261] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1261]
        return memory
          from mem[64]
           len _541 + (32 * _557) + (32 * _1037) + (32 * _1165) + (32 * _1261) + -mem[64] + 256
    mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    if arg3 - arg2 > test266151307():
        revert with 'NH{q', 65
    mem[(98 * arg3) + (-98 * arg2) + 192] = arg3 - arg2
    mem[64] = (98 * arg3) + (-98 * arg2) + (32 * arg3 - arg2) + 224
    if not arg3 - arg2:
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _590 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _621 = mem[_590]
            require mem[_590] == mem[_590 + 12 len 20]
            if s >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * s) + 128] = mem[_590 + 12 len 20]
            require ext_code.size(address(_621))
            staticcall address(_621).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _718 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_718] == mem[_718 + 12 len 20]
            if s >= mem[(32 * arg3 - arg2) + 128]:
                revert with 'NH{q', 50
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_718 + 12 len 20]
            require ext_code.size(address(_621))
            staticcall address(_621).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _846 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_846] == mem[_846 + 12 len 20]
            if s >= mem[(64 * arg3 - arg2) + 160]:
                revert with 'NH{q', 50
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_846 + 12 len 20]
            require ext_code.size(address(_621))
            staticcall address(_621).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _958 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            require mem[_958] == mem[_958 + 28 len 4]
            require mem[_958 + 32] == mem[_958 + 60 len 4]
            if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
                revert with 'NH{q', 50
            mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_958 + 28 len 4]
            if s == -1:
                revert with 'NH{q', 17
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + 1
            continue 
        _542 = mem[64]
        mem[mem[64]] = 128
        _558 = mem[96]
        mem[mem[64] + 128] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 160
        while idx < _558:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_542 + 32] = (32 * _558) + 160
        _1038 = mem[(32 * arg3 - arg2) + 128]
        mem[_542 + (32 * _558) + 160] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _542 + (32 * _558) + 192
        while idx < _1038:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_542 + 64] = (32 * _558) + (32 * _1038) + 192
        _1166 = mem[(64 * arg3 - arg2) + 160]
        mem[_542 + (32 * _558) + (32 * _1038) + 192] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _542 + (32 * _558) + (32 * _1038) + 224
        while idx < _1166:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_542 + 96] = (32 * _558) + (32 * _1038) + (32 * _1166) + 224
        _1262 = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_542 + (32 * _558) + (32 * _1038) + (32 * _1166) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
        mem[_542 + (32 * _558) + (32 * _1038) + (32 * _1166) + 256 len 32 * _1262] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1262]
        return memory
          from mem[64]
           len _542 + (32 * _558) + (32 * _1038) + (32 * _1166) + (32 * _1262) + -mem[64] + 256
    mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    idx = arg2
    s = 0
    while idx < arg3:
        mem[mem[64] + 4] = idx
        require ext_code.size(address(arg1))
        staticcall address(arg1).allPairs(uint256 arg1) with:
                gas gas_remaining wei
               args idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _591 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _623 = mem[_591]
        require mem[_591] == mem[_591 + 12 len 20]
        if s >= mem[96]:
            revert with 'NH{q', 50
        mem[(32 * s) + 128] = mem[_591 + 12 len 20]
        require ext_code.size(address(_623))
        staticcall address(_623).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _719 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_719] == mem[_719 + 12 len 20]
        if s >= mem[(32 * arg3 - arg2) + 128]:
            revert with 'NH{q', 50
        mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_719 + 12 len 20]
        require ext_code.size(address(_623))
        staticcall address(_623).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _847 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_847] == mem[_847 + 12 len 20]
        if s >= mem[(64 * arg3 - arg2) + 160]:
            revert with 'NH{q', 50
        mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_847 + 12 len 20]
        require ext_code.size(address(_623))
        staticcall address(_623).getTokenWeights() with:
                gas gas_remaining wei
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _959 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        require mem[_959] == mem[_959 + 28 len 4]
        require mem[_959 + 32] == mem[_959 + 60 len 4]
        if s >= mem[(98 * arg3) + (-98 * arg2) + 192]:
            revert with 'NH{q', 50
        mem[(32 * s) + (98 * arg3) + (-98 * arg2) + 224] = mem[_959 + 28 len 4]
        if s == -1:
            revert with 'NH{q', 17
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        s = s + 1
        continue 
    _543 = mem[64]
    mem[mem[64]] = 128
    _559 = mem[96]
    mem[mem[64] + 128] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 160
    while idx < _559:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_543 + 32] = (32 * _559) + 160
    _1039 = mem[(32 * arg3 - arg2) + 128]
    mem[_543 + (32 * _559) + 160] = mem[(32 * arg3 - arg2) + 128]
    idx = 0
    s = (32 * arg3 - arg2) + 160
    t = _543 + (32 * _559) + 192
    while idx < _1039:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_543 + 64] = (32 * _559) + (32 * _1039) + 192
    _1167 = mem[(64 * arg3 - arg2) + 160]
    mem[_543 + (32 * _559) + (32 * _1039) + 192] = mem[(64 * arg3 - arg2) + 160]
    idx = 0
    s = (64 * arg3 - arg2) + 192
    t = _543 + (32 * _559) + (32 * _1039) + 224
    while idx < _1167:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_543 + 96] = (32 * _559) + (32 * _1039) + (32 * _1167) + 224
    _1263 = mem[(98 * arg3) + (-98 * arg2) + 192]
    mem[_543 + (32 * _559) + (32 * _1039) + (32 * _1167) + 224] = mem[(98 * arg3) + (-98 * arg2) + 192]
    mem[_543 + (32 * _559) + (32 * _1039) + (32 * _1167) + 256 len 32 * _1263] = mem[(98 * arg3) + (-98 * arg2) + 224 len 32 * _1263]
    return memory
      from mem[64]
       len _543 + (32 * _559) + (32 * _1039) + (32 * _1167) + (32 * _1263) + -mem[64] + 256
}

function sub_fa935cfe(?) {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    mem[96] = ('cd', 4).length
    mem[64] = (32 * ('cd', 4).length) + 128
    if not ('cd', 4).length:
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
        if not ('cd', 4).length:
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
            mem[64] = (98 * ('cd', 4).length) + 192
            if not ('cd', 4).length:
                if ('cd', 4).length > test266151307():
                    revert with 'NH{q', 65
                mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
                if not ('cd', 4).length:
                    if ('cd', 4).length > test266151307():
                        revert with 'NH{q', 65
                    mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                    mem[64] = (164 * ('cd', 4).length) + 256
                    if not ('cd', 4).length:
                        idx = 0
                        while uint32(idx) < ('cd', 4).length:
                            if uint32(idx) >= ('cd', 36).length:
                                revert with 'NH{q', 50
                            if uint32(idx) >= ('cd', 4).length:
                                revert with 'NH{q', 50
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                                revert with 'NH{q', 65
                            _4180 = mem[64]
                            mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                                    revert with 'NH{q', 65
                                _4197 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = _4197 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8499 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_8499] == mem[_8499 + 12 len 20]
                                        if s >= mem[_4180]:
                                            revert with 'NH{q', 50
                                        mem[(32 * s) + _4180 + 32] = mem[_8499 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9733 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_9733] == mem[_9733]
                                        if s >= mem[_4197]:
                                            revert with 'NH{q', 50
                                        mem[(32 * s) + _4197 + 32] = mem[_9733]
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        continue 
                                    if uint32(idx) >= mem[96]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + 128] = _4180
                                    if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4197
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8383 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8383] == mem[_8383]
                                    if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8383]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8771 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8771] == mem[_8771]
                                    if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8771]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9858 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9858] == mem[_9858]
                                    if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9858]
                                else:
                                    mem[_4197 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8500 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_8500] == mem[_8500 + 12 len 20]
                                        if s >= mem[_4180]:
                                            revert with 'NH{q', 50
                                        mem[(32 * s) + _4180 + 32] = mem[_8500 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9734 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_9734] == mem[_9734]
                                        if s >= mem[_4197]:
                                            revert with 'NH{q', 50
                                        mem[(32 * s) + _4197 + 32] = mem[_9734]
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        continue 
                                    if uint32(idx) >= mem[96]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + 128] = _4180
                                    if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4197
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8384 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8384] == mem[_8384]
                                    if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8384]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8772 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8772] == mem[_8772]
                                    if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8772]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9859 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9859] == mem[_9859]
                                    if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                        revert with 'NH{q', 50
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9859]
                                if uint32(idx) == test266151307():
                                    revert with 'NH{q', 17
                                idx = uint32(idx) + 1
                                continue 
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                                revert with 'NH{q', 65
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _4180 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8501 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8501] == mem[_8501 + 12 len 20]
                                    if s >= mem[_4180]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4180 + 32] = mem[_8501 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9735 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9735] == mem[_9735]
                                    if s >= mem[_4180 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4180 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9735]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _4180
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4180 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8385 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8385] == mem[_8385]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8385]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8773 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8773] == mem[_8773]
                                if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8773]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9860 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9860] == mem[_9860]
                                if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9860]
                                if uint32(idx) == test266151307():
                                    revert with 'NH{q', 17
                                idx = uint32(idx) + 1
                                continue 
                            mem[_4180 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8502 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8502] == mem[_8502 + 12 len 20]
                                if s >= mem[_4180]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4180 + 32] = mem[_8502 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9736 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9736] == mem[_9736]
                                if s >= mem[_4180 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4180 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9736]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(s) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(s)) + 128] = _4180
                            if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4180 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8386 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8386] == mem[_8386]
                            if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8386]
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8774 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8774] == mem[_8774]
                            if uint32(s) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8774]
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9861 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9861] == mem[_9861]
                            if uint32(s) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9861]
                            if uint32(s) == test266151307():
                                revert with 'NH{q', 17
                            s = uint32(s) + 1
                            continue 
                        _4096 = mem[64]
                        mem[mem[64]] = 160
                        _4107 = mem[96]
                        mem[mem[64] + 160] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 192
                        u = mem[64] + 192
                        while idx < _4107:
                            mem[u] = t + -_4096 - 192
                            _8181 = mem[s]
                            _8368 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _8181 + 32
                            x = t + 32
                            while v < _8368:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            idx = idx + 1
                            s = s + 32
                            t = t + (32 * _8368) + 32
                            u = u + 32
                            continue 
                        mem[_4096 + 32] = t - _4096
                        _8367 = mem[(64 * ('cd', 4).length) + 160]
                        mem[t] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        u = t + (32 * _8367) + 32
                        v = t + 32
                        while idx < _8367:
                            mem[v] = u + -t - 32
                            _12211 = mem[s]
                            _12572 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _12211 + 32
                            x = u + 32
                            while t < _12572:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            idx = idx + 1
                            s = s + 32
                            u = u + (32 * _12572) + 32
                            v = v + 32
                            continue 
                        mem[_4096 + 64] = u - _4096
                        _12571 = mem[(32 * ('cd', 4).length) + 128]
                        mem[u] = mem[(32 * ('cd', 4).length) + 128]
                        mem[u + 32 len 32 * _12571] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12571]
                        mem[_4096 + 96] = u + (32 * _12571) + -_4096 + 32
                        _15483 = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _12571) + 32] = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _12571) + 64 len 32 * _15483] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15483]
                        mem[_4096 + 128] = u + (32 * _12571) + (32 * _15483) + -_4096 + 64
                        _16531 = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _12571) + (32 * _15483) + 64] = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _12571) + (32 * _15483) + 96 len 32 * _16531] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16531]
                        return memory
                          from mem[64]
                           len u + (32 * _12571) + (32 * _15483) + (32 * _16531) + -mem[64] + 96
                    mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    while uint32(idx) < ('cd', 4).length:
                        if uint32(idx) >= ('cd', 36).length:
                            revert with 'NH{q', 50
                        if uint32(idx) >= ('cd', 4).length:
                            revert with 'NH{q', 50
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _4181 = mem[64]
                        mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                                revert with 'NH{q', 65
                            _4198 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _4198 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8503 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8503] == mem[_8503 + 12 len 20]
                                    if s >= mem[_4181]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4181 + 32] = mem[_8503 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9737 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9737] == mem[_9737]
                                    if s >= mem[_4198]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4198 + 32] = mem[_9737]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _4181
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4198
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8387 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8387] == mem[_8387]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8387]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8775 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8775] == mem[_8775]
                                if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8775]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9863 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9863] == mem[_9863]
                                if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9863]
                            else:
                                mem[_4198 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8504 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8504] == mem[_8504 + 12 len 20]
                                    if s >= mem[_4181]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4181 + 32] = mem[_8504 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9738 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9738] == mem[_9738]
                                    if s >= mem[_4198]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4198 + 32] = mem[_9738]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _4181
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4198
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8388 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8388] == mem[_8388]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8388]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8776 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8776] == mem[_8776]
                                if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8776]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9864 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9864] == mem[_9864]
                                if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9864]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4181 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8505 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8505] == mem[_8505 + 12 len 20]
                                if s >= mem[_4181]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4181 + 32] = mem[_8505 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9739] == mem[_9739]
                                if s >= mem[_4181 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4181 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9739]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4181
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4181 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8389 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8389] == mem[_8389]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8389]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8777 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8777] == mem[_8777]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8777]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9865 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9865] == mem[_9865]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9865]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[_4181 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8506 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8506] == mem[_8506 + 12 len 20]
                            if s >= mem[_4181]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4181 + 32] = mem[_8506 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9740 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9740] == mem[_9740]
                            if s >= mem[_4181 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4181 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9740]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(s) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + 128] = _4181
                        if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4181 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8390] == mem[_8390]
                        if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8390]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8778 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8778] == mem[_8778]
                        if uint32(s) >= mem[(98 * ('cd', 4).length) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8778]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9866 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9866] == mem[_9866]
                        if uint32(s) >= mem[(131 * ('cd', 4).length) + 224]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9866]
                        if uint32(s) == test266151307():
                            revert with 'NH{q', 17
                        s = uint32(s) + 1
                        continue 
                    _4097 = mem[64]
                    mem[mem[64]] = 160
                    _4108 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4108:
                        mem[u] = t + -_4097 - 192
                        _8190 = mem[s]
                        _8370 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8190 + 32
                        x = t + 32
                        while v < _8370:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        t = t + (32 * _8370) + 32
                        u = u + 32
                        continue 
                    mem[_4097 + 32] = t - _4097
                    _8369 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8369) + 32
                    v = t + 32
                    while idx < _8369:
                        mem[v] = u + -t - 32
                        _12213 = mem[s]
                        _12574 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12213 + 32
                        x = u + 32
                        while t < _12574:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        u = u + (32 * _12574) + 32
                        v = v + 32
                        continue 
                    mem[_4097 + 64] = u - _4097
                    _12573 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12573] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12573]
                    mem[_4097 + 96] = u + (32 * _12573) + -_4097 + 32
                    _15484 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12573) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12573) + 64 len 32 * _15484] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15484]
                    mem[_4097 + 128] = u + (32 * _12573) + (32 * _15484) + -_4097 + 64
                    _16532 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12573) + (32 * _15484) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12573) + (32 * _15484) + 96 len 32 * _16532] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16532]
                    return memory
                      from mem[64]
                       len u + (32 * _12573) + (32 * _15484) + (32 * _16532) + -mem[64] + 96
                mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                if ('cd', 4).length > test266151307():
                    revert with 'NH{q', 65
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    while uint32(idx) < ('cd', 4).length:
                        if uint32(idx) >= ('cd', 36).length:
                            revert with 'NH{q', 50
                        if uint32(idx) >= ('cd', 4).length:
                            revert with 'NH{q', 50
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _4182 = mem[64]
                        mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                                revert with 'NH{q', 65
                            _4199 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _4199 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8507 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8507] == mem[_8507 + 12 len 20]
                                    if s >= mem[_4182]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4182 + 32] = mem[_8507 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9741 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9741] == mem[_9741]
                                    if s >= mem[_4199]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4199 + 32] = mem[_9741]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _4182
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4199
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8391 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8391] == mem[_8391]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8391]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8779 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8779] == mem[_8779]
                                if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8779]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9868 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9868] == mem[_9868]
                                if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9868]
                            else:
                                mem[_4199 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8508 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8508] == mem[_8508 + 12 len 20]
                                    if s >= mem[_4182]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4182 + 32] = mem[_8508 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9742 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9742] == mem[_9742]
                                    if s >= mem[_4199]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4199 + 32] = mem[_9742]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _4182
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4199
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8392 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8392] == mem[_8392]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8392]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8780 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8780] == mem[_8780]
                                if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8780]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9869 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9869] == mem[_9869]
                                if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9869]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4182 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8509 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8509] == mem[_8509 + 12 len 20]
                                if s >= mem[_4182]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4182 + 32] = mem[_8509 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9743 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9743] == mem[_9743]
                                if s >= mem[_4182 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4182 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9743]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4182
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4182 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8393 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8393] == mem[_8393]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8393]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8781 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8781] == mem[_8781]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8781]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9870 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9870] == mem[_9870]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9870]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[_4182 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8510 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8510] == mem[_8510 + 12 len 20]
                            if s >= mem[_4182]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4182 + 32] = mem[_8510 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9744 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9744] == mem[_9744]
                            if s >= mem[_4182 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4182 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9744]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(s) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + 128] = _4182
                        if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4182 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8394 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8394] == mem[_8394]
                        if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8394]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8782 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8782] == mem[_8782]
                        if uint32(s) >= mem[(98 * ('cd', 4).length) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8782]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9871 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9871] == mem[_9871]
                        if uint32(s) >= mem[(131 * ('cd', 4).length) + 224]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9871]
                        if uint32(s) == test266151307():
                            revert with 'NH{q', 17
                        s = uint32(s) + 1
                        continue 
                    _4098 = mem[64]
                    mem[mem[64]] = 160
                    _4109 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4109:
                        mem[u] = t + -_4098 - 192
                        _8199 = mem[s]
                        _8372 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8199 + 32
                        x = t + 32
                        while v < _8372:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        t = t + (32 * _8372) + 32
                        u = u + 32
                        continue 
                    mem[_4098 + 32] = t - _4098
                    _8371 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8371) + 32
                    v = t + 32
                    while idx < _8371:
                        mem[v] = u + -t - 32
                        _12215 = mem[s]
                        _12576 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12215 + 32
                        x = u + 32
                        while t < _12576:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        u = u + (32 * _12576) + 32
                        v = v + 32
                        continue 
                    mem[_4098 + 64] = u - _4098
                    _12575 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12575] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12575]
                    mem[_4098 + 96] = u + (32 * _12575) + -_4098 + 32
                    _15485 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12575) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12575) + 64 len 32 * _15485] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15485]
                    mem[_4098 + 128] = u + (32 * _12575) + (32 * _15485) + -_4098 + 64
                    _16533 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12575) + (32 * _15485) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12575) + (32 * _15485) + 96 len 32 * _16533] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16533]
                    return memory
                      from mem[64]
                       len u + (32 * _12575) + (32 * _15485) + (32 * _16533) + -mem[64] + 96
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _4183 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _4200 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4200 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8511 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8511] == mem[_8511 + 12 len 20]
                                if s >= mem[_4183]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4183 + 32] = mem[_8511 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9745 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9745] == mem[_9745]
                                if s >= mem[_4200]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4200 + 32] = mem[_9745]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4183
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4200
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8395 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8395] == mem[_8395]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8395]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8783 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8783] == mem[_8783]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8783]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9873 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9873] == mem[_9873]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9873]
                        else:
                            mem[_4200 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8512 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8512] == mem[_8512 + 12 len 20]
                                if s >= mem[_4183]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4183 + 32] = mem[_8512 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9746 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9746] == mem[_9746]
                                if s >= mem[_4200]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4200 + 32] = mem[_9746]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4183
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4200
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8396 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8396] == mem[_8396]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8396]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8784 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8784] == mem[_8784]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8784]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9874 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9874] == mem[_9874]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9874]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4183 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8513 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8513] == mem[_8513 + 12 len 20]
                            if s >= mem[_4183]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4183 + 32] = mem[_8513 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9747 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9747] == mem[_9747]
                            if s >= mem[_4183 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4183 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9747]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _4183
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4183 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8397 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8397] == mem[_8397]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8397]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8785 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8785] == mem[_8785]
                        if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8785]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9875 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9875] == mem[_9875]
                        if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9875]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_4183 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8514 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8514] == mem[_8514 + 12 len 20]
                        if s >= mem[_4183]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _4183 + 32] = mem[_8514 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9748] == mem[_9748]
                        if s >= mem[_4183 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _4183 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9748]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _4183
                    if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4183 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8398 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8398] == mem[_8398]
                    if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8398]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8786 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8786] == mem[_8786]
                    if uint32(s) >= mem[(98 * ('cd', 4).length) + 192]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8786]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9876 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9876] == mem[_9876]
                    if uint32(s) >= mem[(131 * ('cd', 4).length) + 224]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9876]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _4099 = mem[64]
                mem[mem[64]] = 160
                _4110 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4110:
                    mem[u] = t + -_4099 - 192
                    _8208 = mem[s]
                    _8374 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8208 + 32
                    x = t + 32
                    while v < _8374:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _8374) + 32
                    u = u + 32
                    continue 
                mem[_4099 + 32] = t - _4099
                _8373 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8373) + 32
                v = t + 32
                while idx < _8373:
                    mem[v] = u + -t - 32
                    _12217 = mem[s]
                    _12578 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12217 + 32
                    x = u + 32
                    while t < _12578:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _12578) + 32
                    v = v + 32
                    continue 
                mem[_4099 + 64] = u - _4099
                _12577 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12577] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12577]
                mem[_4099 + 96] = u + (32 * _12577) + -_4099 + 32
                _15486 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12577) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12577) + 64 len 32 * _15486] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15486]
                mem[_4099 + 128] = u + (32 * _12577) + (32 * _15486) + -_4099 + 64
                _16534 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12577) + (32 * _15486) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12577) + (32 * _15486) + 96 len 32 * _16534] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16534]
                return memory
                  from mem[64]
                   len u + (32 * _12577) + (32 * _15486) + (32 * _16534) + -mem[64] + 96
            mem[(64 * ('cd', 4).length) + 192] = 96
            s = (64 * ('cd', 4).length) + 192
            idx = ('cd', 4).length
            while idx - 1:
                mem[s + 32] = 96
                s = s + 32
                idx = idx - 1
                continue 
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            _4104 = mem[64]
            mem[mem[64]] = ('cd', 4).length
            if not ('cd', 4).length:
                if ('cd', 4).length > test266151307():
                    revert with 'NH{q', 65
                _4111 = mem[64] + (32 * ('cd', 4).length) + 32
                mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
                mem[64] = _4111 + (32 * ('cd', 4).length) + 32
                if not ('cd', 4).length:
                    idx = 0
                    while uint32(idx) < ('cd', 4).length:
                        if uint32(idx) >= ('cd', 36).length:
                            revert with 'NH{q', 50
                        if uint32(idx) >= ('cd', 4).length:
                            revert with 'NH{q', 50
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _8723 = mem[64]
                        mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                                revert with 'NH{q', 65
                            _8787 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _8787 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12819 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12819] == mem[_12819 + 12 len 20]
                                    if s >= mem[_8723]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _8723 + 32] = mem[_12819 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14139 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14139] == mem[_14139]
                                    if s >= mem[_8787]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _8787 + 32] = mem[_14139]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _8723
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8787
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12619 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12619] == mem[_12619]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12619]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13259 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_13259] == mem[_13259]
                                if uint32(idx) >= mem[_4104]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13259]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14232 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14232] == mem[_14232]
                                if uint32(idx) >= mem[_4111]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4111 + 32] = mem[_14232]
                            else:
                                mem[_8787 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12820 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12820] == mem[_12820 + 12 len 20]
                                    if s >= mem[_8723]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _8723 + 32] = mem[_12820 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14140 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14140] == mem[_14140]
                                    if s >= mem[_8787]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _8787 + 32] = mem[_14140]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _8723
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8787
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12620 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12620] == mem[_12620]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12620]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13260 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_13260] == mem[_13260]
                                if uint32(idx) >= mem[_4104]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13260]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14233 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14233] == mem[_14233]
                                if uint32(idx) >= mem[_4111]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4111 + 32] = mem[_14233]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _8723 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12821 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12821] == mem[_12821 + 12 len 20]
                                if s >= mem[_8723]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8723 + 32] = mem[_12821 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14141 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14141] == mem[_14141]
                                if s >= mem[_8723 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8723 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14141]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8723
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8723 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12621 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12621] == mem[_12621]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12621]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13261 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13261] == mem[_13261]
                            if uint32(idx) >= mem[_4104]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13261]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14234 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14234] == mem[_14234]
                            if uint32(idx) >= mem[_4111]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4111 + 32] = mem[_14234]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[_8723 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12822 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12822] == mem[_12822 + 12 len 20]
                            if s >= mem[_8723]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8723 + 32] = mem[_12822 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14142 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14142] == mem[_14142]
                            if s >= mem[_8723 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8723 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14142]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(s) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + 128] = _8723
                        if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8723 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12622 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12622] == mem[_12622]
                        if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12622]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13262 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13262] == mem[_13262]
                        if uint32(s) >= mem[_4104]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + _4104 + 32] = mem[_13262]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14235 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14235] == mem[_14235]
                        if uint32(s) >= mem[_4111]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + _4111 + 32] = mem[_14235]
                        if uint32(s) == test266151307():
                            revert with 'NH{q', 17
                        s = uint32(s) + 1
                        continue 
                    _8269 = mem[64]
                    mem[mem[64]] = 160
                    _8399 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _8399:
                        mem[u] = t + -_8269 - 192
                        _12219 = mem[s]
                        _12580 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _12219 + 32
                        x = t + 32
                        while v < _12580:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        t = t + (32 * _12580) + 32
                        u = u + 32
                        continue 
                    mem[_8269 + 32] = t - _8269
                    _12579 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _12579) + 32
                    v = t + 32
                    while idx < _12579:
                        mem[v] = u + -t - 32
                        _15275 = mem[s]
                        _15488 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _15275 + 32
                        x = u + 32
                        while t < _15488:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        u = u + (32 * _15488) + 32
                        v = v + 32
                        continue 
                    mem[_8269 + 64] = u - _8269
                    _15487 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _15487] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15487]
                    mem[_8269 + 96] = u + (32 * _15487) + -_8269 + 32
                    _16535 = mem[_4104]
                    mem[u + (32 * _15487) + 32] = mem[_4104]
                    mem[u + (32 * _15487) + 64 len 32 * _16535] = mem[_4104 + 32 len 32 * _16535]
                    mem[_8269 + 128] = u + (32 * _15487) + (32 * _16535) + -_8269 + 64
                    _16755 = mem[_4111]
                    mem[u + (32 * _15487) + (32 * _16535) + 64] = mem[_4111]
                    mem[u + (32 * _15487) + (32 * _16535) + 96 len 32 * _16755] = mem[_4111 + 32 len 32 * _16755]
                    return memory
                      from mem[64]
                       len u + (32 * _15487) + (32 * _16535) + (32 * _16755) + -mem[64] + 96
                mem[_4111 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8724 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _8788 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12823 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12823] == mem[_12823 + 12 len 20]
                                if s >= mem[_8724]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8724 + 32] = mem[_12823 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14143 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14143] == mem[_14143]
                                if s >= mem[_8788]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8788 + 32] = mem[_14143]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8724
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8788
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12623 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12623] == mem[_12623]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12623]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13263 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13263] == mem[_13263]
                            if uint32(idx) >= mem[_4104]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13263]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14237 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14237] == mem[_14237]
                            if uint32(idx) >= mem[_4111]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4111 + 32] = mem[_14237]
                        else:
                            mem[_8788 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12824 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12824] == mem[_12824 + 12 len 20]
                                if s >= mem[_8724]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8724 + 32] = mem[_12824 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14144 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14144] == mem[_14144]
                                if s >= mem[_8788]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8788 + 32] = mem[_14144]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8724
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8788
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12624 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12624] == mem[_12624]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12624]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13264 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13264] == mem[_13264]
                            if uint32(idx) >= mem[_4104]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13264]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14238 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14238] == mem[_14238]
                            if uint32(idx) >= mem[_4111]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4111 + 32] = mem[_14238]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8724 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12825 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12825] == mem[_12825 + 12 len 20]
                            if s >= mem[_8724]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8724 + 32] = mem[_12825 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14145 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14145] == mem[_14145]
                            if s >= mem[_8724 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8724 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14145]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8724
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8724 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12625 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12625] == mem[_12625]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12625]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13265] == mem[_13265]
                        if uint32(idx) >= mem[_4104]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13265]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14239 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14239] == mem[_14239]
                        if uint32(idx) >= mem[_4111]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4111 + 32] = mem[_14239]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_8724 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12826 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12826] == mem[_12826 + 12 len 20]
                        if s >= mem[_8724]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8724 + 32] = mem[_12826 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14146 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14146] == mem[_14146]
                        if s >= mem[_8724 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8724 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14146]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _8724
                    if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8724 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12626 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12626] == mem[_12626]
                    if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12626]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13266 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13266] == mem[_13266]
                    if uint32(s) >= mem[_4104]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4104 + 32] = mem[_13266]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14240 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14240] == mem[_14240]
                    if uint32(s) >= mem[_4111]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4111 + 32] = mem[_14240]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _8270 = mem[64]
                mem[mem[64]] = 160
                _8400 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8400:
                    mem[u] = t + -_8270 - 192
                    _12228 = mem[s]
                    _12582 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12228 + 32
                    x = t + 32
                    while v < _12582:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _12582) + 32
                    u = u + 32
                    continue 
                mem[_8270 + 32] = t - _8270
                _12581 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12581) + 32
                v = t + 32
                while idx < _12581:
                    mem[v] = u + -t - 32
                    _15277 = mem[s]
                    _15490 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15277 + 32
                    x = u + 32
                    while t < _15490:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _15490) + 32
                    v = v + 32
                    continue 
                mem[_8270 + 64] = u - _8270
                _15489 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15489] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15489]
                mem[_8270 + 96] = u + (32 * _15489) + -_8270 + 32
                _16536 = mem[_4104]
                mem[u + (32 * _15489) + 32] = mem[_4104]
                mem[u + (32 * _15489) + 64 len 32 * _16536] = mem[_4104 + 32 len 32 * _16536]
                mem[_8270 + 128] = u + (32 * _15489) + (32 * _16536) + -_8270 + 64
                _16756 = mem[_4111]
                mem[u + (32 * _15489) + (32 * _16536) + 64] = mem[_4111]
                mem[u + (32 * _15489) + (32 * _16536) + 96 len 32 * _16756] = mem[_4111 + 32 len 32 * _16756]
                return memory
                  from mem[64]
                   len u + (32 * _15489) + (32 * _16536) + (32 * _16756) + -mem[64] + 96
            mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = _4104 + (64 * ('cd', 4).length) + 64
            if not ('cd', 4).length:
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8725 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _8789 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _8789 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12827 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12827] == mem[_12827 + 12 len 20]
                                if s >= mem[_8725]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8725 + 32] = mem[_12827 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14147 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14147] == mem[_14147]
                                if s >= mem[_8789]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8789 + 32] = mem[_14147]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8725
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8789
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12627 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12627] == mem[_12627]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12627]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13267 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13267] == mem[_13267]
                            if uint32(idx) >= mem[_4104]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13267]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14242 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14242] == mem[_14242]
                            if uint32(idx) >= mem[_4104 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14242]
                        else:
                            mem[_8789 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12828 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12828] == mem[_12828 + 12 len 20]
                                if s >= mem[_8725]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8725 + 32] = mem[_12828 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14148 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14148] == mem[_14148]
                                if s >= mem[_8789]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8789 + 32] = mem[_14148]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8725
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8789
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12628] == mem[_12628]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12628]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13268 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13268] == mem[_13268]
                            if uint32(idx) >= mem[_4104]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13268]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14243 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14243] == mem[_14243]
                            if uint32(idx) >= mem[_4104 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14243]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8725 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12829 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12829] == mem[_12829 + 12 len 20]
                            if s >= mem[_8725]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8725 + 32] = mem[_12829 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14149 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14149] == mem[_14149]
                            if s >= mem[_8725 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8725 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14149]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8725
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8725 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12629] == mem[_12629]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12629]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13269 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13269] == mem[_13269]
                        if uint32(idx) >= mem[_4104]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13269]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14244 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14244] == mem[_14244]
                        if uint32(idx) >= mem[_4104 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14244]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_8725 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12830 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12830] == mem[_12830 + 12 len 20]
                        if s >= mem[_8725]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8725 + 32] = mem[_12830 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14150 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14150] == mem[_14150]
                        if s >= mem[_8725 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8725 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14150]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _8725
                    if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8725 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12630 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12630] == mem[_12630]
                    if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12630]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13270 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13270] == mem[_13270]
                    if uint32(s) >= mem[_4104]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4104 + 32] = mem[_13270]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14245 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14245] == mem[_14245]
                    if uint32(s) >= mem[_4104 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14245]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _8271 = mem[64]
                mem[mem[64]] = 160
                _8401 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8401:
                    mem[u] = t + -_8271 - 192
                    _12237 = mem[s]
                    _12584 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12237 + 32
                    x = t + 32
                    while v < _12584:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _12584) + 32
                    u = u + 32
                    continue 
                mem[_8271 + 32] = t - _8271
                _12583 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12583) + 32
                v = t + 32
                while idx < _12583:
                    mem[v] = u + -t - 32
                    _15279 = mem[s]
                    _15492 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15279 + 32
                    x = u + 32
                    while t < _15492:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _15492) + 32
                    v = v + 32
                    continue 
                mem[_8271 + 64] = u - _8271
                _15491 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15491] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15491]
                mem[_8271 + 96] = u + (32 * _15491) + -_8271 + 32
                _16537 = mem[_4104]
                mem[u + (32 * _15491) + 32] = mem[_4104]
                mem[u + (32 * _15491) + 64 len 32 * _16537] = mem[_4104 + 32 len 32 * _16537]
                mem[_8271 + 128] = u + (32 * _15491) + (32 * _16537) + -_8271 + 64
                _16757 = mem[_4104 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15491) + (32 * _16537) + 64] = mem[_4104 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15491) + (32 * _16537) + 96 len 32 * _16757] = mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * _16757]
                return memory
                  from mem[64]
                   len u + (32 * _15491) + (32 * _16537) + (32 * _16757) + -mem[64] + 96
            mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _8726 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8790 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12831 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12831] == mem[_12831 + 12 len 20]
                            if s >= mem[_8726]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8726 + 32] = mem[_12831 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14151 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14151] == mem[_14151]
                            if s >= mem[_8790]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8790 + 32] = mem[_14151]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8726
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8790
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12631 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12631] == mem[_12631]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12631]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13271 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13271] == mem[_13271]
                        if uint32(idx) >= mem[_4104]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13271]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14247 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14247] == mem[_14247]
                        if uint32(idx) >= mem[_4104 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14247]
                    else:
                        mem[_8790 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12832] == mem[_12832 + 12 len 20]
                            if s >= mem[_8726]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8726 + 32] = mem[_12832 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14152 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14152] == mem[_14152]
                            if s >= mem[_8790]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8790 + 32] = mem[_14152]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8726
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8790
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12632 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12632] == mem[_12632]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12632]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13272 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13272] == mem[_13272]
                        if uint32(idx) >= mem[_4104]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13272]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14248 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14248] == mem[_14248]
                        if uint32(idx) >= mem[_4104 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14248]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8726 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12833 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12833] == mem[_12833 + 12 len 20]
                        if s >= mem[_8726]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8726 + 32] = mem[_12833 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14153 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14153] == mem[_14153]
                        if s >= mem[_8726 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8726 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14153]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8726
                    if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8726 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12633 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12633] == mem[_12633]
                    if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12633]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13273 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13273] == mem[_13273]
                    if uint32(idx) >= mem[_4104]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13273]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14249 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14249] == mem[_14249]
                    if uint32(idx) >= mem[_4104 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14249]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_8726 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12834 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12834] == mem[_12834 + 12 len 20]
                    if s >= mem[_8726]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8726 + 32] = mem[_12834 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14154 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14154] == mem[_14154]
                    if s >= mem[_8726 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8726 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14154]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _8726
                if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8726 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12634 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12634] == mem[_12634]
                if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12634]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13274 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13274] == mem[_13274]
                if uint32(s) >= mem[_4104]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4104 + 32] = mem[_13274]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14250 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14250] == mem[_14250]
                if uint32(s) >= mem[_4104 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14250]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _8272 = mem[64]
            mem[mem[64]] = 160
            _8402 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8402:
                mem[u] = t + -_8272 - 192
                _12246 = mem[s]
                _12586 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12246 + 32
                x = t + 32
                while v < _12586:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _12586) + 32
                u = u + 32
                continue 
            mem[_8272 + 32] = t - _8272
            _12585 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12585) + 32
            v = t + 32
            while idx < _12585:
                mem[v] = u + -t - 32
                _15281 = mem[s]
                _15494 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15281 + 32
                x = u + 32
                while t < _15494:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _15494) + 32
                v = v + 32
                continue 
            mem[_8272 + 64] = u - _8272
            _15493 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15493] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15493]
            mem[_8272 + 96] = u + (32 * _15493) + -_8272 + 32
            _16538 = mem[_4104]
            mem[u + (32 * _15493) + 32] = mem[_4104]
            mem[u + (32 * _15493) + 64 len 32 * _16538] = mem[_4104 + 32 len 32 * _16538]
            mem[_8272 + 128] = u + (32 * _15493) + (32 * _16538) + -_8272 + 64
            _16758 = mem[_4104 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15493) + (32 * _16538) + 64] = mem[_4104 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15493) + (32 * _16538) + 96 len 32 * _16758] = mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * _16758]
            return memory
              from mem[64]
               len u + (32 * _15493) + (32 * _16538) + (32 * _16758) + -mem[64] + 96
        mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        mem[64] = (98 * ('cd', 4).length) + 192
        if not ('cd', 4).length:
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                if ('cd', 4).length > test266151307():
                    revert with 'NH{q', 65
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    while uint32(idx) < ('cd', 4).length:
                        if uint32(idx) >= ('cd', 36).length:
                            revert with 'NH{q', 50
                        if uint32(idx) >= ('cd', 4).length:
                            revert with 'NH{q', 50
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _4184 = mem[64]
                        mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                                revert with 'NH{q', 65
                            _4201 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _4201 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8515 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8515] == mem[_8515 + 12 len 20]
                                    if s >= mem[_4184]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4184 + 32] = mem[_8515 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9761 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9761] == mem[_9761]
                                    if s >= mem[_4201]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4201 + 32] = mem[_9761]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _4184
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4201
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8403 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8403] == mem[_8403]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8403]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8791 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8791] == mem[_8791]
                                if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8791]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9882 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9882] == mem[_9882]
                                if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9882]
                            else:
                                mem[_4201 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8516 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8516] == mem[_8516 + 12 len 20]
                                    if s >= mem[_4184]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4184 + 32] = mem[_8516 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9762 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_9762] == mem[_9762]
                                    if s >= mem[_4201]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _4201 + 32] = mem[_9762]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _4184
                                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4201
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8404 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8404] == mem[_8404]
                                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8404]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8792 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8792] == mem[_8792]
                                if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8792]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9883 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9883] == mem[_9883]
                                if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9883]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4184 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8517 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8517] == mem[_8517 + 12 len 20]
                                if s >= mem[_4184]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4184 + 32] = mem[_8517 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9763 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9763] == mem[_9763]
                                if s >= mem[_4184 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4184 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9763]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4184
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4184 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8405 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8405] == mem[_8405]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8405]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8793 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8793] == mem[_8793]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8793]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9884 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9884] == mem[_9884]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9884]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[_4184 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8518 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8518] == mem[_8518 + 12 len 20]
                            if s >= mem[_4184]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4184 + 32] = mem[_8518 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9764 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9764] == mem[_9764]
                            if s >= mem[_4184 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4184 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9764]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(s) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + 128] = _4184
                        if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4184 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8406 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8406] == mem[_8406]
                        if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8406]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8794 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8794] == mem[_8794]
                        if uint32(s) >= mem[(98 * ('cd', 4).length) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8794]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9885 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9885] == mem[_9885]
                        if uint32(s) >= mem[(131 * ('cd', 4).length) + 224]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9885]
                        if uint32(s) == test266151307():
                            revert with 'NH{q', 17
                        s = uint32(s) + 1
                        continue 
                    _4100 = mem[64]
                    mem[mem[64]] = 160
                    _4112 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4112:
                        mem[u] = t + -_4100 - 192
                        _8217 = mem[s]
                        _8376 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8217 + 32
                        x = t + 32
                        while v < _8376:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        t = t + (32 * _8376) + 32
                        u = u + 32
                        continue 
                    mem[_4100 + 32] = t - _4100
                    _8375 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8375) + 32
                    v = t + 32
                    while idx < _8375:
                        mem[v] = u + -t - 32
                        _12255 = mem[s]
                        _12588 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12255 + 32
                        x = u + 32
                        while t < _12588:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        u = u + (32 * _12588) + 32
                        v = v + 32
                        continue 
                    mem[_4100 + 64] = u - _4100
                    _12587 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12587] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12587]
                    mem[_4100 + 96] = u + (32 * _12587) + -_4100 + 32
                    _15495 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12587) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12587) + 64 len 32 * _15495] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15495]
                    mem[_4100 + 128] = u + (32 * _12587) + (32 * _15495) + -_4100 + 64
                    _16539 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12587) + (32 * _15495) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12587) + (32 * _15495) + 96 len 32 * _16539] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16539]
                    return memory
                      from mem[64]
                       len u + (32 * _12587) + (32 * _15495) + (32 * _16539) + -mem[64] + 96
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _4185 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _4202 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4202 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8519 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8519] == mem[_8519 + 12 len 20]
                                if s >= mem[_4185]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4185 + 32] = mem[_8519 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9765 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9765] == mem[_9765]
                                if s >= mem[_4202]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4202 + 32] = mem[_9765]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4185
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4202
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8407 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8407] == mem[_8407]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8407]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8795 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8795] == mem[_8795]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8795]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9887 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9887] == mem[_9887]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9887]
                        else:
                            mem[_4202 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8520 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8520] == mem[_8520 + 12 len 20]
                                if s >= mem[_4185]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4185 + 32] = mem[_8520 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9766 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9766] == mem[_9766]
                                if s >= mem[_4202]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4202 + 32] = mem[_9766]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4185
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4202
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8408 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8408] == mem[_8408]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8408]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8796 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8796] == mem[_8796]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8796]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9888 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9888] == mem[_9888]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9888]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4185 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8521 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8521] == mem[_8521 + 12 len 20]
                            if s >= mem[_4185]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4185 + 32] = mem[_8521 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9767 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9767] == mem[_9767]
                            if s >= mem[_4185 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4185 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9767]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _4185
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4185 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8409] == mem[_8409]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8409]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8797 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8797] == mem[_8797]
                        if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8797]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9889 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9889] == mem[_9889]
                        if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9889]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_4185 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8522 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8522] == mem[_8522 + 12 len 20]
                        if s >= mem[_4185]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _4185 + 32] = mem[_8522 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9768 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9768] == mem[_9768]
                        if s >= mem[_4185 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _4185 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9768]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _4185
                    if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4185 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8410 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8410] == mem[_8410]
                    if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8410]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8798 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8798] == mem[_8798]
                    if uint32(s) >= mem[(98 * ('cd', 4).length) + 192]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8798]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9890 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9890] == mem[_9890]
                    if uint32(s) >= mem[(131 * ('cd', 4).length) + 224]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9890]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _4101 = mem[64]
                mem[mem[64]] = 160
                _4113 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4113:
                    mem[u] = t + -_4101 - 192
                    _8226 = mem[s]
                    _8378 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8226 + 32
                    x = t + 32
                    while v < _8378:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _8378) + 32
                    u = u + 32
                    continue 
                mem[_4101 + 32] = t - _4101
                _8377 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8377) + 32
                v = t + 32
                while idx < _8377:
                    mem[v] = u + -t - 32
                    _12257 = mem[s]
                    _12590 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12257 + 32
                    x = u + 32
                    while t < _12590:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _12590) + 32
                    v = v + 32
                    continue 
                mem[_4101 + 64] = u - _4101
                _12589 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12589] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12589]
                mem[_4101 + 96] = u + (32 * _12589) + -_4101 + 32
                _15496 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12589) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12589) + 64 len 32 * _15496] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15496]
                mem[_4101 + 128] = u + (32 * _12589) + (32 * _15496) + -_4101 + 64
                _16540 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12589) + (32 * _15496) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12589) + (32 * _15496) + 96 len 32 * _16540] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16540]
                return memory
                  from mem[64]
                   len u + (32 * _12589) + (32 * _15496) + (32 * _16540) + -mem[64] + 96
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _4186 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _4203 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4203 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8523 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8523] == mem[_8523 + 12 len 20]
                                if s >= mem[_4186]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4186 + 32] = mem[_8523 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9769 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9769] == mem[_9769]
                                if s >= mem[_4203]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4203 + 32] = mem[_9769]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4186
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4203
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8411 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8411] == mem[_8411]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8411]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8799 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8799] == mem[_8799]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8799]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9892 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9892] == mem[_9892]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9892]
                        else:
                            mem[_4203 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8524 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8524] == mem[_8524 + 12 len 20]
                                if s >= mem[_4186]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4186 + 32] = mem[_8524 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9770 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_9770] == mem[_9770]
                                if s >= mem[_4203]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _4203 + 32] = mem[_9770]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _4186
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4203
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8412 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8412] == mem[_8412]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8412]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8800 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8800] == mem[_8800]
                            if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8800]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9893 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9893] == mem[_9893]
                            if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9893]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4186 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8525 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8525] == mem[_8525 + 12 len 20]
                            if s >= mem[_4186]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4186 + 32] = mem[_8525 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9771 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9771] == mem[_9771]
                            if s >= mem[_4186 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4186 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9771]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _4186
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4186 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8413 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8413] == mem[_8413]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8413]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8801 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8801] == mem[_8801]
                        if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8801]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9894 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9894] == mem[_9894]
                        if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9894]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_4186 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8526 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8526] == mem[_8526 + 12 len 20]
                        if s >= mem[_4186]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _4186 + 32] = mem[_8526 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9772 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9772] == mem[_9772]
                        if s >= mem[_4186 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _4186 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9772]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _4186
                    if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4186 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8414 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8414] == mem[_8414]
                    if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8414]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8802 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8802] == mem[_8802]
                    if uint32(s) >= mem[(98 * ('cd', 4).length) + 192]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8802]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9895 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9895] == mem[_9895]
                    if uint32(s) >= mem[(131 * ('cd', 4).length) + 224]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9895]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _4102 = mem[64]
                mem[mem[64]] = 160
                _4114 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4114:
                    mem[u] = t + -_4102 - 192
                    _8235 = mem[s]
                    _8380 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8235 + 32
                    x = t + 32
                    while v < _8380:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _8380) + 32
                    u = u + 32
                    continue 
                mem[_4102 + 32] = t - _4102
                _8379 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8379) + 32
                v = t + 32
                while idx < _8379:
                    mem[v] = u + -t - 32
                    _12259 = mem[s]
                    _12592 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12259 + 32
                    x = u + 32
                    while t < _12592:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _12592) + 32
                    v = v + 32
                    continue 
                mem[_4102 + 64] = u - _4102
                _12591 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12591] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12591]
                mem[_4102 + 96] = u + (32 * _12591) + -_4102 + 32
                _15497 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12591) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12591) + 64 len 32 * _15497] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15497]
                mem[_4102 + 128] = u + (32 * _12591) + (32 * _15497) + -_4102 + 64
                _16541 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12591) + (32 * _15497) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12591) + (32 * _15497) + 96 len 32 * _16541] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16541]
                return memory
                  from mem[64]
                   len u + (32 * _12591) + (32 * _15497) + (32 * _16541) + -mem[64] + 96
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _4187 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _4204 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4204 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8527 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8527] == mem[_8527 + 12 len 20]
                            if s >= mem[_4187]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4187 + 32] = mem[_8527 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9773 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9773] == mem[_9773]
                            if s >= mem[_4204]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4204 + 32] = mem[_9773]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _4187
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4204
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8415 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8415] == mem[_8415]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8415]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8803 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8803] == mem[_8803]
                        if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8803]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9897 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9897] == mem[_9897]
                        if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9897]
                    else:
                        mem[_4204 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8528 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8528] == mem[_8528 + 12 len 20]
                            if s >= mem[_4187]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4187 + 32] = mem[_8528 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9774 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_9774] == mem[_9774]
                            if s >= mem[_4204]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _4204 + 32] = mem[_9774]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _4187
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4204
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8416 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8416] == mem[_8416]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8416]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8804 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8804] == mem[_8804]
                        if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8804]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9898 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9898] == mem[_9898]
                        if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9898]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _4187 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8529 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8529] == mem[_8529 + 12 len 20]
                        if s >= mem[_4187]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _4187 + 32] = mem[_8529 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9775 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9775] == mem[_9775]
                        if s >= mem[_4187 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _4187 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9775]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _4187
                    if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4187 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8417 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8417] == mem[_8417]
                    if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8417]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8805 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8805] == mem[_8805]
                    if uint32(idx) >= mem[(98 * ('cd', 4).length) + 192]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8805]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9899 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9899] == mem[_9899]
                    if uint32(idx) >= mem[(131 * ('cd', 4).length) + 224]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9899]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_4187 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8530 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8530] == mem[_8530 + 12 len 20]
                    if s >= mem[_4187]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _4187 + 32] = mem[_8530 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9776 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9776] == mem[_9776]
                    if s >= mem[_4187 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _4187 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9776]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _4187
                if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4187 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8418 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8418] == mem[_8418]
                if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8418]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8806 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8806] == mem[_8806]
                if uint32(s) >= mem[(98 * ('cd', 4).length) + 192]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8806]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9900 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_9900] == mem[_9900]
                if uint32(s) >= mem[(131 * ('cd', 4).length) + 224]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9900]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _4103 = mem[64]
            mem[mem[64]] = 160
            _4115 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _4115:
                mem[u] = t + -_4103 - 192
                _8244 = mem[s]
                _8382 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _8244 + 32
                x = t + 32
                while v < _8382:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _8382) + 32
                u = u + 32
                continue 
            mem[_4103 + 32] = t - _4103
            _8381 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _8381) + 32
            v = t + 32
            while idx < _8381:
                mem[v] = u + -t - 32
                _12261 = mem[s]
                _12594 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _12261 + 32
                x = u + 32
                while t < _12594:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _12594) + 32
                v = v + 32
                continue 
            mem[_4103 + 64] = u - _4103
            _12593 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _12593] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12593]
            mem[_4103 + 96] = u + (32 * _12593) + -_4103 + 32
            _15498 = mem[(98 * ('cd', 4).length) + 192]
            mem[u + (32 * _12593) + 32] = mem[(98 * ('cd', 4).length) + 192]
            mem[u + (32 * _12593) + 64 len 32 * _15498] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15498]
            mem[_4103 + 128] = u + (32 * _12593) + (32 * _15498) + -_4103 + 64
            _16542 = mem[(131 * ('cd', 4).length) + 224]
            mem[u + (32 * _12593) + (32 * _15498) + 64] = mem[(131 * ('cd', 4).length) + 224]
            mem[u + (32 * _12593) + (32 * _15498) + 96 len 32 * _16542] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16542]
            return memory
              from mem[64]
               len u + (32 * _12593) + (32 * _15498) + (32 * _16542) + -mem[64] + 96
        mem[(64 * ('cd', 4).length) + 192] = 96
        s = (64 * ('cd', 4).length) + 192
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        _4105 = mem[64]
        mem[mem[64]] = ('cd', 4).length
        if not ('cd', 4).length:
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            _4116 = mem[64] + (32 * ('cd', 4).length) + 32
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = _4116 + (32 * ('cd', 4).length) + 32
            if not ('cd', 4).length:
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8759 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _8807 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _8807 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12835 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12835] == mem[_12835 + 12 len 20]
                                if s >= mem[_8759]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8759 + 32] = mem[_12835 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14155 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14155] == mem[_14155]
                                if s >= mem[_8807]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8807 + 32] = mem[_14155]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8759
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8807
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12635 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12635] == mem[_12635]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12635]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13275 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13275] == mem[_13275]
                            if uint32(idx) >= mem[_4105]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13275]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14256 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14256] == mem[_14256]
                            if uint32(idx) >= mem[_4116]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14256]
                        else:
                            mem[_8807 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12836 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12836] == mem[_12836 + 12 len 20]
                                if s >= mem[_8759]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8759 + 32] = mem[_12836 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14156 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14156] == mem[_14156]
                                if s >= mem[_8807]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8807 + 32] = mem[_14156]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8759
                            if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8807
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12636 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12636] == mem[_12636]
                            if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12636]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13276 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13276] == mem[_13276]
                            if uint32(idx) >= mem[_4105]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13276]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14257] == mem[_14257]
                            if uint32(idx) >= mem[_4116]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14257]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8759 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12837] == mem[_12837 + 12 len 20]
                            if s >= mem[_8759]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8759 + 32] = mem[_12837 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14157 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14157] == mem[_14157]
                            if s >= mem[_8759 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8759 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14157]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8759
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8759 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12637 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12637] == mem[_12637]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12637]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13277 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13277] == mem[_13277]
                        if uint32(idx) >= mem[_4105]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13277]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14258 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14258] == mem[_14258]
                        if uint32(idx) >= mem[_4116]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14258]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_8759 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12838 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12838] == mem[_12838 + 12 len 20]
                        if s >= mem[_8759]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8759 + 32] = mem[_12838 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14158 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14158] == mem[_14158]
                        if s >= mem[_8759 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8759 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14158]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _8759
                    if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8759 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12638 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12638] == mem[_12638]
                    if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12638]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13278 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13278] == mem[_13278]
                    if uint32(s) >= mem[_4105]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4105 + 32] = mem[_13278]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14259 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14259] == mem[_14259]
                    if uint32(s) >= mem[_4116]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4116 + 32] = mem[_14259]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _8289 = mem[64]
                mem[mem[64]] = 160
                _8419 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8419:
                    mem[u] = t + -_8289 - 192
                    _12263 = mem[s]
                    _12596 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12263 + 32
                    x = t + 32
                    while v < _12596:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _12596) + 32
                    u = u + 32
                    continue 
                mem[_8289 + 32] = t - _8289
                _12595 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12595) + 32
                v = t + 32
                while idx < _12595:
                    mem[v] = u + -t - 32
                    _15291 = mem[s]
                    _15500 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15291 + 32
                    x = u + 32
                    while t < _15500:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _15500) + 32
                    v = v + 32
                    continue 
                mem[_8289 + 64] = u - _8289
                _15499 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15499] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15499]
                mem[_8289 + 96] = u + (32 * _15499) + -_8289 + 32
                _16543 = mem[_4105]
                mem[u + (32 * _15499) + 32] = mem[_4105]
                mem[u + (32 * _15499) + 64 len 32 * _16543] = mem[_4105 + 32 len 32 * _16543]
                mem[_8289 + 128] = u + (32 * _15499) + (32 * _16543) + -_8289 + 64
                _16759 = mem[_4116]
                mem[u + (32 * _15499) + (32 * _16543) + 64] = mem[_4116]
                mem[u + (32 * _15499) + (32 * _16543) + 96 len 32 * _16759] = mem[_4116 + 32 len 32 * _16759]
                return memory
                  from mem[64]
                   len u + (32 * _15499) + (32 * _16543) + (32 * _16759) + -mem[64] + 96
            mem[_4116 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _8760 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8808 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8808 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12839] == mem[_12839 + 12 len 20]
                            if s >= mem[_8760]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8760 + 32] = mem[_12839 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14159 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14159] == mem[_14159]
                            if s >= mem[_8808]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8808 + 32] = mem[_14159]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8760
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8808
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12639 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12639] == mem[_12639]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12639]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13279 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13279] == mem[_13279]
                        if uint32(idx) >= mem[_4105]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13279]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14261 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14261] == mem[_14261]
                        if uint32(idx) >= mem[_4116]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14261]
                    else:
                        mem[_8808 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12840 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12840] == mem[_12840 + 12 len 20]
                            if s >= mem[_8760]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8760 + 32] = mem[_12840 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14160 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14160] == mem[_14160]
                            if s >= mem[_8808]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8808 + 32] = mem[_14160]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8760
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8808
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12640 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12640] == mem[_12640]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12640]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13280 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13280] == mem[_13280]
                        if uint32(idx) >= mem[_4105]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13280]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14262 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14262] == mem[_14262]
                        if uint32(idx) >= mem[_4116]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14262]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8760 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12841] == mem[_12841 + 12 len 20]
                        if s >= mem[_8760]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8760 + 32] = mem[_12841 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14161 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14161] == mem[_14161]
                        if s >= mem[_8760 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8760 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14161]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8760
                    if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8760 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12641 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12641] == mem[_12641]
                    if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12641]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13281 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13281] == mem[_13281]
                    if uint32(idx) >= mem[_4105]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13281]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14263 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14263] == mem[_14263]
                    if uint32(idx) >= mem[_4116]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14263]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_8760 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12842 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12842] == mem[_12842 + 12 len 20]
                    if s >= mem[_8760]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8760 + 32] = mem[_12842 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14162 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14162] == mem[_14162]
                    if s >= mem[_8760 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8760 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14162]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _8760
                if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8760 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12642 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12642] == mem[_12642]
                if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12642]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13282 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13282] == mem[_13282]
                if uint32(s) >= mem[_4105]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4105 + 32] = mem[_13282]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14264 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14264] == mem[_14264]
                if uint32(s) >= mem[_4116]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4116 + 32] = mem[_14264]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _8290 = mem[64]
            mem[mem[64]] = 160
            _8420 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8420:
                mem[u] = t + -_8290 - 192
                _12272 = mem[s]
                _12598 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12272 + 32
                x = t + 32
                while v < _12598:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _12598) + 32
                u = u + 32
                continue 
            mem[_8290 + 32] = t - _8290
            _12597 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12597) + 32
            v = t + 32
            while idx < _12597:
                mem[v] = u + -t - 32
                _15293 = mem[s]
                _15502 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15293 + 32
                x = u + 32
                while t < _15502:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _15502) + 32
                v = v + 32
                continue 
            mem[_8290 + 64] = u - _8290
            _15501 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15501] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15501]
            mem[_8290 + 96] = u + (32 * _15501) + -_8290 + 32
            _16544 = mem[_4105]
            mem[u + (32 * _15501) + 32] = mem[_4105]
            mem[u + (32 * _15501) + 64 len 32 * _16544] = mem[_4105 + 32 len 32 * _16544]
            mem[_8290 + 128] = u + (32 * _15501) + (32 * _16544) + -_8290 + 64
            _16760 = mem[_4116]
            mem[u + (32 * _15501) + (32 * _16544) + 64] = mem[_4116]
            mem[u + (32 * _15501) + (32 * _16544) + 96 len 32 * _16760] = mem[_4116 + 32 len 32 * _16760]
            return memory
              from mem[64]
               len u + (32 * _15501) + (32 * _16544) + (32 * _16760) + -mem[64] + 96
        mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = _4105 + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _8761 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8809 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8809 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12843 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12843] == mem[_12843 + 12 len 20]
                            if s >= mem[_8761]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8761 + 32] = mem[_12843 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14163 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14163] == mem[_14163]
                            if s >= mem[_8809]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8809 + 32] = mem[_14163]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8761
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8809
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12643 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12643] == mem[_12643]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12643]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13283 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13283] == mem[_13283]
                        if uint32(idx) >= mem[_4105]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13283]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14266 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14266] == mem[_14266]
                        if uint32(idx) >= mem[_4105 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14266]
                    else:
                        mem[_8809 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12844 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12844] == mem[_12844 + 12 len 20]
                            if s >= mem[_8761]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8761 + 32] = mem[_12844 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14164 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14164] == mem[_14164]
                            if s >= mem[_8809]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8809 + 32] = mem[_14164]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8761
                        if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8809
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12644] == mem[_12644]
                        if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12644]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13284 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13284] == mem[_13284]
                        if uint32(idx) >= mem[_4105]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13284]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14267 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14267] == mem[_14267]
                        if uint32(idx) >= mem[_4105 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14267]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8761 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12845 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12845] == mem[_12845 + 12 len 20]
                        if s >= mem[_8761]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8761 + 32] = mem[_12845 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14165 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14165] == mem[_14165]
                        if s >= mem[_8761 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8761 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14165]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8761
                    if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8761 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12645 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12645] == mem[_12645]
                    if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12645]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13285 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13285] == mem[_13285]
                    if uint32(idx) >= mem[_4105]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13285]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14268 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14268] == mem[_14268]
                    if uint32(idx) >= mem[_4105 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14268]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_8761 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12846 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12846] == mem[_12846 + 12 len 20]
                    if s >= mem[_8761]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8761 + 32] = mem[_12846 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14166 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14166] == mem[_14166]
                    if s >= mem[_8761 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8761 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14166]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _8761
                if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8761 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12646 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12646] == mem[_12646]
                if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12646]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13286 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13286] == mem[_13286]
                if uint32(s) >= mem[_4105]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4105 + 32] = mem[_13286]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14269 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14269] == mem[_14269]
                if uint32(s) >= mem[_4105 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14269]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _8291 = mem[64]
            mem[mem[64]] = 160
            _8421 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8421:
                mem[u] = t + -_8291 - 192
                _12281 = mem[s]
                _12600 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12281 + 32
                x = t + 32
                while v < _12600:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _12600) + 32
                u = u + 32
                continue 
            mem[_8291 + 32] = t - _8291
            _12599 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12599) + 32
            v = t + 32
            while idx < _12599:
                mem[v] = u + -t - 32
                _15295 = mem[s]
                _15504 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15295 + 32
                x = u + 32
                while t < _15504:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _15504) + 32
                v = v + 32
                continue 
            mem[_8291 + 64] = u - _8291
            _15503 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15503] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15503]
            mem[_8291 + 96] = u + (32 * _15503) + -_8291 + 32
            _16545 = mem[_4105]
            mem[u + (32 * _15503) + 32] = mem[_4105]
            mem[u + (32 * _15503) + 64 len 32 * _16545] = mem[_4105 + 32 len 32 * _16545]
            mem[_8291 + 128] = u + (32 * _15503) + (32 * _16545) + -_8291 + 64
            _16761 = mem[_4105 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15503) + (32 * _16545) + 64] = mem[_4105 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15503) + (32 * _16545) + 96 len 32 * _16761] = mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * _16761]
            return memory
              from mem[64]
               len u + (32 * _15503) + (32 * _16545) + (32 * _16761) + -mem[64] + 96
        mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while uint32(idx) < ('cd', 4).length:
            if uint32(idx) >= ('cd', 36).length:
                revert with 'NH{q', 50
            if uint32(idx) >= ('cd', 4).length:
                revert with 'NH{q', 50
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            _8762 = mem[64]
            mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _8810 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8810 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12847 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12847] == mem[_12847 + 12 len 20]
                        if s >= mem[_8762]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8762 + 32] = mem[_12847 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14167 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14167] == mem[_14167]
                        if s >= mem[_8810]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8810 + 32] = mem[_14167]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8762
                    if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8810
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12647 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12647] == mem[_12647]
                    if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12647]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13287 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13287] == mem[_13287]
                    if uint32(idx) >= mem[_4105]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13287]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14271 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14271] == mem[_14271]
                    if uint32(idx) >= mem[_4105 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14271]
                else:
                    mem[_8810 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12848] == mem[_12848 + 12 len 20]
                        if s >= mem[_8762]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8762 + 32] = mem[_12848 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14168 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14168] == mem[_14168]
                        if s >= mem[_8810]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8810 + 32] = mem[_14168]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8762
                    if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8810
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12648 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12648] == mem[_12648]
                    if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12648]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13288 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13288] == mem[_13288]
                    if uint32(idx) >= mem[_4105]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13288]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14272 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14272] == mem[_14272]
                    if uint32(idx) >= mem[_4105 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14272]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _8762 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12849 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12849] == mem[_12849 + 12 len 20]
                    if s >= mem[_8762]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8762 + 32] = mem[_12849 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14169 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14169] == mem[_14169]
                    if s >= mem[_8762 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8762 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14169]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(idx) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + 128] = _8762
                if uint32(idx) >= mem[(64 * ('cd', 4).length) + 160]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8762 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12649 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12649] == mem[_12649]
                if uint32(idx) >= mem[(32 * ('cd', 4).length) + 128]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12649]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13289 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13289] == mem[_13289]
                if uint32(idx) >= mem[_4105]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13289]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14273 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14273] == mem[_14273]
                if uint32(idx) >= mem[_4105 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14273]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[_8762 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12850 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12850] == mem[_12850 + 12 len 20]
                if s >= mem[_8762]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _8762 + 32] = mem[_12850 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14170 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14170] == mem[_14170]
                if s >= mem[_8762 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _8762 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14170]
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                continue 
            if uint32(s) >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + 128] = _8762
            if uint32(s) >= mem[(64 * ('cd', 4).length) + 160]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8762 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12650 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_12650] == mem[_12650]
            if uint32(s) >= mem[(32 * ('cd', 4).length) + 128]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12650]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13290 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_13290] == mem[_13290]
            if uint32(s) >= mem[_4105]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4105 + 32] = mem[_13290]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14274 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_14274] == mem[_14274]
            if uint32(s) >= mem[_4105 + (32 * ('cd', 4).length) + 32]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14274]
            if uint32(s) == test266151307():
                revert with 'NH{q', 17
            s = uint32(s) + 1
            continue 
        _8292 = mem[64]
        mem[mem[64]] = 160
        _8422 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _8422:
            mem[u] = t + -_8292 - 192
            _12290 = mem[s]
            _12602 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _12290 + 32
            x = t + 32
            while v < _12602:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            t = t + (32 * _12602) + 32
            u = u + 32
            continue 
        mem[_8292 + 32] = t - _8292
        _12601 = mem[(64 * ('cd', 4).length) + 160]
        mem[t] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        u = t + (32 * _12601) + 32
        v = t + 32
        while idx < _12601:
            mem[v] = u + -t - 32
            _15297 = mem[s]
            _15506 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _15297 + 32
            x = u + 32
            while t < _15506:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            u = u + (32 * _15506) + 32
            v = v + 32
            continue 
        mem[_8292 + 64] = u - _8292
        _15505 = mem[(32 * ('cd', 4).length) + 128]
        mem[u] = mem[(32 * ('cd', 4).length) + 128]
        mem[u + 32 len 32 * _15505] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15505]
        mem[_8292 + 96] = u + (32 * _15505) + -_8292 + 32
        _16546 = mem[_4105]
        mem[u + (32 * _15505) + 32] = mem[_4105]
        mem[u + (32 * _15505) + 64 len 32 * _16546] = mem[_4105 + 32 len 32 * _16546]
        mem[_8292 + 128] = u + (32 * _15505) + (32 * _16546) + -_8292 + 64
        _16762 = mem[_4105 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _15505) + (32 * _16546) + 64] = mem[_4105 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _15505) + (32 * _16546) + 96 len 32 * _16762] = mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * _16762]
        return memory
          from mem[64]
           len u + (32 * _15505) + (32 * _16546) + (32 * _16762) + -mem[64] + 96
    mem[128] = 96
    s = 128
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    _4106 = mem[64]
    mem[mem[64]] = ('cd', 4).length
    if not ('cd', 4).length:
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        _4117 = mem[64] + (32 * ('cd', 4).length) + 32
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = _4117 + (32 * ('cd', 4).length) + 32
        if not ('cd', 4).length:
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            mem[_4117 + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            if not ('cd', 4).length:
                if ('cd', 4).length > test266151307():
                    revert with 'NH{q', 65
                mem[_4117 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                mem[64] = _4117 + (98 * ('cd', 4).length) + 96
                if not ('cd', 4).length:
                    idx = 0
                    while uint32(idx) < ('cd', 4).length:
                        if uint32(idx) >= ('cd', 36).length:
                            revert with 'NH{q', 50
                        if uint32(idx) >= ('cd', 4).length:
                            revert with 'NH{q', 50
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _8763 = mem[64]
                        mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                                revert with 'NH{q', 65
                            _8811 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _8811 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12851 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12851] == mem[_12851 + 12 len 20]
                                    if s >= mem[_8763]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _8763 + 32] = mem[_12851 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14171 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14171] == mem[_14171]
                                    if s >= mem[_8811]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _8811 + 32] = mem[_14171]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _8763
                                if uint32(idx) >= mem[_4117]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4117 + 32] = _8811
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12651 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12651] == mem[_12651]
                                if uint32(idx) >= mem[_4106]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12651]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13291 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_13291] == mem[_13291]
                                if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13291]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14276 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14276] == mem[_14276]
                                if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14276]
                            else:
                                mem[_8811 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12852 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12852] == mem[_12852 + 12 len 20]
                                    if s >= mem[_8763]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _8763 + 32] = mem[_12852 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _14172 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_14172] == mem[_14172]
                                    if s >= mem[_8811]:
                                        revert with 'NH{q', 50
                                    mem[(32 * s) + _8811 + 32] = mem[_14172]
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    continue 
                                if uint32(idx) >= mem[96]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + 128] = _8763
                                if uint32(idx) >= mem[_4117]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4117 + 32] = _8811
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12652 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12652] == mem[_12652]
                                if uint32(idx) >= mem[_4106]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12652]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13292 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_13292] == mem[_13292]
                                if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13292]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14277 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14277] == mem[_14277]
                                if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                                    revert with 'NH{q', 50
                                mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14277]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _8763 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12853 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12853] == mem[_12853 + 12 len 20]
                                if s >= mem[_8763]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8763 + 32] = mem[_12853 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14173 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14173] == mem[_14173]
                                if s >= mem[_8763 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8763 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14173]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8763
                            if uint32(idx) >= mem[_4117]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8763 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12653 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12653] == mem[_12653]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12653]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13293 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13293] == mem[_13293]
                            if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13293]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14278 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14278] == mem[_14278]
                            if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14278]
                            if uint32(idx) == test266151307():
                                revert with 'NH{q', 17
                            idx = uint32(idx) + 1
                            continue 
                        mem[_8763 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12854] == mem[_12854 + 12 len 20]
                            if s >= mem[_8763]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8763 + 32] = mem[_12854 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14174 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14174] == mem[_14174]
                            if s >= mem[_8763 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8763 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14174]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(s) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + 128] = _8763
                        if uint32(s) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + _4117 + 32] = _8763 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12654 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12654] == mem[_12654]
                        if uint32(s) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + _4106 + 32] = mem[_12654]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13294 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13294] == mem[_13294]
                        if uint32(s) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13294]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14279 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14279] == mem[_14279]
                        if uint32(s) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14279]
                        if uint32(s) == test266151307():
                            revert with 'NH{q', 17
                        s = uint32(s) + 1
                        continue 
                    _8293 = mem[64]
                    mem[mem[64]] = 160
                    _8423 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _8423:
                        mem[u] = t + -_8293 - 192
                        _12299 = mem[s]
                        _12604 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _12299 + 32
                        x = t + 32
                        while v < _12604:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        t = t + (32 * _12604) + 32
                        u = u + 32
                        continue 
                    mem[_8293 + 32] = t - _8293
                    _12603 = mem[_4117]
                    mem[t] = mem[_4117]
                    idx = 0
                    s = _4117 + 32
                    u = t + (32 * _12603) + 32
                    v = t + 32
                    while idx < _12603:
                        mem[v] = u + -t - 32
                        _15299 = mem[s]
                        _15508 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _15299 + 32
                        x = u + 32
                        while t < _15508:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        idx = idx + 1
                        s = s + 32
                        u = u + (32 * _15508) + 32
                        v = v + 32
                        continue 
                    mem[_8293 + 64] = u - _8293
                    _15507 = mem[_4106]
                    mem[u] = mem[_4106]
                    mem[u + 32 len 32 * _15507] = mem[_4106 + 32 len 32 * _15507]
                    mem[_8293 + 96] = u + (32 * _15507) + -_8293 + 32
                    _16547 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _15507) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _15507) + 64 len 32 * _16547] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16547]
                    mem[_8293 + 128] = u + (32 * _15507) + (32 * _16547) + -_8293 + 64
                    _16763 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _15507) + (32 * _16547) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _15507) + (32 * _16547) + 96 len 32 * _16763] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16763]
                    return memory
                      from mem[64]
                       len u + (32 * _15507) + (32 * _16547) + (32 * _16763) + -mem[64] + 96
                mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8764 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _8812 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _8812 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12855 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12855] == mem[_12855 + 12 len 20]
                                if s >= mem[_8764]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8764 + 32] = mem[_12855 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14175 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14175] == mem[_14175]
                                if s >= mem[_8812]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8812 + 32] = mem[_14175]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8764
                            if uint32(idx) >= mem[_4117]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8812
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12655 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12655] == mem[_12655]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12655]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13295 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13295] == mem[_13295]
                            if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13295]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14281 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14281] == mem[_14281]
                            if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14281]
                        else:
                            mem[_8812 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12856 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12856] == mem[_12856 + 12 len 20]
                                if s >= mem[_8764]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8764 + 32] = mem[_12856 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14176 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14176] == mem[_14176]
                                if s >= mem[_8812]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8812 + 32] = mem[_14176]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8764
                            if uint32(idx) >= mem[_4117]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8812
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12656 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12656] == mem[_12656]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12656]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13296 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13296] == mem[_13296]
                            if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13296]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14282 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14282] == mem[_14282]
                            if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14282]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8764 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12857 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12857] == mem[_12857 + 12 len 20]
                            if s >= mem[_8764]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8764 + 32] = mem[_12857 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14177 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14177] == mem[_14177]
                            if s >= mem[_8764 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8764 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14177]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8764
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8764 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12657 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12657] == mem[_12657]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12657]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13297 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13297] == mem[_13297]
                        if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13297]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14283 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14283] == mem[_14283]
                        if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14283]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_8764 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12858 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12858] == mem[_12858 + 12 len 20]
                        if s >= mem[_8764]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8764 + 32] = mem[_12858 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14178 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14178] == mem[_14178]
                        if s >= mem[_8764 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8764 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14178]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _8764
                    if uint32(s) >= mem[_4117]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4117 + 32] = _8764 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12658 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12658] == mem[_12658]
                    if uint32(s) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12658]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13298 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13298] == mem[_13298]
                    if uint32(s) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13298]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14284 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14284] == mem[_14284]
                    if uint32(s) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14284]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _8294 = mem[64]
                mem[mem[64]] = 160
                _8424 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8424:
                    mem[u] = t + -_8294 - 192
                    _12308 = mem[s]
                    _12606 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12308 + 32
                    x = t + 32
                    while v < _12606:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _12606) + 32
                    u = u + 32
                    continue 
                mem[_8294 + 32] = t - _8294
                _12605 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _12605) + 32
                v = t + 32
                while idx < _12605:
                    mem[v] = u + -t - 32
                    _15301 = mem[s]
                    _15510 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15301 + 32
                    x = u + 32
                    while t < _15510:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _15510) + 32
                    v = v + 32
                    continue 
                mem[_8294 + 64] = u - _8294
                _15509 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15509] = mem[_4106 + 32 len 32 * _15509]
                mem[_8294 + 96] = u + (32 * _15509) + -_8294 + 32
                _16548 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15509) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15509) + 64 len 32 * _16548] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16548]
                mem[_8294 + 128] = u + (32 * _15509) + (32 * _16548) + -_8294 + 64
                _16764 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15509) + (32 * _16548) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15509) + (32 * _16548) + 96 len 32 * _16764] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16764]
                return memory
                  from mem[64]
                   len u + (32 * _15509) + (32 * _16548) + (32 * _16764) + -mem[64] + 96
            mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            mem[_4117 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = _4117 + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8765 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _8813 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _8813 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12859 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12859] == mem[_12859 + 12 len 20]
                                if s >= mem[_8765]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8765 + 32] = mem[_12859 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14179 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14179] == mem[_14179]
                                if s >= mem[_8813]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8813 + 32] = mem[_14179]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8765
                            if uint32(idx) >= mem[_4117]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8813
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12659] == mem[_12659]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12659]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13299 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13299] == mem[_13299]
                            if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13299]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14286 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14286] == mem[_14286]
                            if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14286]
                        else:
                            mem[_8813 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12860 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12860] == mem[_12860 + 12 len 20]
                                if s >= mem[_8765]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8765 + 32] = mem[_12860 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14180 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14180] == mem[_14180]
                                if s >= mem[_8813]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8813 + 32] = mem[_14180]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8765
                            if uint32(idx) >= mem[_4117]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8813
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12660 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12660] == mem[_12660]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12660]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13300 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13300] == mem[_13300]
                            if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13300]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14287 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14287] == mem[_14287]
                            if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14287]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8765 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12861 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12861] == mem[_12861 + 12 len 20]
                            if s >= mem[_8765]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8765 + 32] = mem[_12861 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14181 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14181] == mem[_14181]
                            if s >= mem[_8765 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8765 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14181]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8765
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8765 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12661 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12661] == mem[_12661]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12661]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13301 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13301] == mem[_13301]
                        if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13301]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14288 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14288] == mem[_14288]
                        if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14288]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_8765 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12862 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12862] == mem[_12862 + 12 len 20]
                        if s >= mem[_8765]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8765 + 32] = mem[_12862 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14182 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14182] == mem[_14182]
                        if s >= mem[_8765 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8765 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14182]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _8765
                    if uint32(s) >= mem[_4117]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4117 + 32] = _8765 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12662 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12662] == mem[_12662]
                    if uint32(s) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12662]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13302 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13302] == mem[_13302]
                    if uint32(s) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13302]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14289] == mem[_14289]
                    if uint32(s) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14289]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _8295 = mem[64]
                mem[mem[64]] = 160
                _8425 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8425:
                    mem[u] = t + -_8295 - 192
                    _12317 = mem[s]
                    _12608 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12317 + 32
                    x = t + 32
                    while v < _12608:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _12608) + 32
                    u = u + 32
                    continue 
                mem[_8295 + 32] = t - _8295
                _12607 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _12607) + 32
                v = t + 32
                while idx < _12607:
                    mem[v] = u + -t - 32
                    _15303 = mem[s]
                    _15512 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15303 + 32
                    x = u + 32
                    while t < _15512:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _15512) + 32
                    v = v + 32
                    continue 
                mem[_8295 + 64] = u - _8295
                _15511 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15511] = mem[_4106 + 32 len 32 * _15511]
                mem[_8295 + 96] = u + (32 * _15511) + -_8295 + 32
                _16549 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15511) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15511) + 64 len 32 * _16549] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16549]
                mem[_8295 + 128] = u + (32 * _15511) + (32 * _16549) + -_8295 + 64
                _16765 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15511) + (32 * _16549) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15511) + (32 * _16549) + 96 len 32 * _16765] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16765]
                return memory
                  from mem[64]
                   len u + (32 * _15511) + (32 * _16549) + (32 * _16765) + -mem[64] + 96
            mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _8766 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8814 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8814 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12863 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12863] == mem[_12863 + 12 len 20]
                            if s >= mem[_8766]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8766 + 32] = mem[_12863 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14183 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14183] == mem[_14183]
                            if s >= mem[_8814]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8814 + 32] = mem[_14183]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8766
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8814
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12663 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12663] == mem[_12663]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12663]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13303 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13303] == mem[_13303]
                        if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13303]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14291 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14291] == mem[_14291]
                        if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14291]
                    else:
                        mem[_8814 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12864 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12864] == mem[_12864 + 12 len 20]
                            if s >= mem[_8766]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8766 + 32] = mem[_12864 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14184 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14184] == mem[_14184]
                            if s >= mem[_8814]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8814 + 32] = mem[_14184]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8766
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8814
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12664 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12664] == mem[_12664]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12664]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13304 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13304] == mem[_13304]
                        if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13304]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14292 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14292] == mem[_14292]
                        if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14292]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8766 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12865 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12865] == mem[_12865 + 12 len 20]
                        if s >= mem[_8766]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8766 + 32] = mem[_12865 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14185] == mem[_14185]
                        if s >= mem[_8766 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8766 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14185]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8766
                    if uint32(idx) >= mem[_4117]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4117 + 32] = _8766 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12665 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12665] == mem[_12665]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12665]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13305 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13305] == mem[_13305]
                    if uint32(idx) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13305]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14293 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14293] == mem[_14293]
                    if uint32(idx) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14293]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_8766 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12866 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12866] == mem[_12866 + 12 len 20]
                    if s >= mem[_8766]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8766 + 32] = mem[_12866 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14186 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14186] == mem[_14186]
                    if s >= mem[_8766 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8766 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14186]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _8766
                if uint32(s) >= mem[_4117]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4117 + 32] = _8766 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12666 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12666] == mem[_12666]
                if uint32(s) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12666]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13306 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13306] == mem[_13306]
                if uint32(s) >= mem[_4117 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13306]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14294 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14294] == mem[_14294]
                if uint32(s) >= mem[_4117 + (64 * ('cd', 4).length) + 64]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14294]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _8296 = mem[64]
            mem[mem[64]] = 160
            _8426 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8426:
                mem[u] = t + -_8296 - 192
                _12326 = mem[s]
                _12610 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12326 + 32
                x = t + 32
                while v < _12610:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _12610) + 32
                u = u + 32
                continue 
            mem[_8296 + 32] = t - _8296
            _12609 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _12609) + 32
            v = t + 32
            while idx < _12609:
                mem[v] = u + -t - 32
                _15305 = mem[s]
                _15514 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15305 + 32
                x = u + 32
                while t < _15514:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _15514) + 32
                v = v + 32
                continue 
            mem[_8296 + 64] = u - _8296
            _15513 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15513] = mem[_4106 + 32 len 32 * _15513]
            mem[_8296 + 96] = u + (32 * _15513) + -_8296 + 32
            _16550 = mem[_4117 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15513) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15513) + 64 len 32 * _16550] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16550]
            mem[_8296 + 128] = u + (32 * _15513) + (32 * _16550) + -_8296 + 64
            _16766 = mem[_4117 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15513) + (32 * _16550) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15513) + (32 * _16550) + 96 len 32 * _16766] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16766]
            return memory
              from mem[64]
               len u + (32 * _15513) + (32 * _16550) + (32 * _16766) + -mem[64] + 96
        mem[_4117 + 32] = 96
        s = _4117 + 32
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        _8365 = mem[64]
        mem[mem[64]] = ('cd', 4).length
        if not ('cd', 4).length:
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            _8427 = mem[64] + (32 * ('cd', 4).length) + 32
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = _8427 + (32 * ('cd', 4).length) + 32
            if not ('cd', 4).length:
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _13219 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _13307 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _13307 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _15635 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_15635] == mem[_15635 + 12 len 20]
                                if s >= mem[_13219]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _13219 + 32] = mem[_15635 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16219 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16219] == mem[_16219]
                                if s >= mem[_13307]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _13307 + 32] = mem[_16219]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _13219
                            if uint32(idx) >= mem[_4117]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + 32] = _13307
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15539 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15539] == mem[_15539]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15539]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15891 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15891] == mem[_15891]
                            if uint32(idx) >= mem[_8365]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15891]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16264 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16264] == mem[_16264]
                            if uint32(idx) >= mem[_8427]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _8427 + 32] = mem[_16264]
                        else:
                            mem[_13307 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _15636 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_15636] == mem[_15636 + 12 len 20]
                                if s >= mem[_13219]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _13219 + 32] = mem[_15636 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16220 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_16220] == mem[_16220]
                                if s >= mem[_13307]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _13307 + 32] = mem[_16220]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _13219
                            if uint32(idx) >= mem[_4117]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4117 + 32] = _13307
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15540 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15540] == mem[_15540]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15540]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15892 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15892] == mem[_15892]
                            if uint32(idx) >= mem[_8365]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15892]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16265 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16265] == mem[_16265]
                            if uint32(idx) >= mem[_8427]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _8427 + 32] = mem[_16265]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _13219 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15637 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15637] == mem[_15637 + 12 len 20]
                            if s >= mem[_13219]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13219 + 32] = mem[_15637 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16221 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16221] == mem[_16221]
                            if s >= mem[_13219 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13219 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16221]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _13219
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13219 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15541 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15541] == mem[_15541]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15541]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15893 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15893] == mem[_15893]
                        if uint32(idx) >= mem[_8365]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15893]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16266 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16266] == mem[_16266]
                        if uint32(idx) >= mem[_8427]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8427 + 32] = mem[_16266]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_13219 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15638 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15638] == mem[_15638 + 12 len 20]
                        if s >= mem[_13219]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13219 + 32] = mem[_15638 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16222 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16222] == mem[_16222]
                        if s >= mem[_13219 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13219 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16222]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _13219
                    if uint32(s) >= mem[_4117]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4117 + 32] = _13219 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15542 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15542] == mem[_15542]
                    if uint32(s) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_15542]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15894 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15894] == mem[_15894]
                    if uint32(s) >= mem[_8365]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _8365 + 32] = mem[_15894]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16267 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16267] == mem[_16267]
                    if uint32(s) >= mem[_8427]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _8427 + 32] = mem[_16267]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _12419 = mem[64]
                mem[mem[64]] = 160
                _12667 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _12667:
                    mem[u] = t + -_12419 - 192
                    _15307 = mem[s]
                    _15516 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _15307 + 32
                    x = t + 32
                    while v < _15516:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _15516) + 32
                    u = u + 32
                    continue 
                mem[_12419 + 32] = t - _12419
                _15515 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _15515) + 32
                v = t + 32
                while idx < _15515:
                    mem[v] = u + -t - 32
                    _16507 = mem[s]
                    _16552 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _16507 + 32
                    x = u + 32
                    while t < _16552:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _16552) + 32
                    v = v + 32
                    continue 
                mem[_12419 + 64] = u - _12419
                _16551 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _16551] = mem[_4106 + 32 len 32 * _16551]
                mem[_12419 + 96] = u + (32 * _16551) + -_12419 + 32
                _16767 = mem[_8365]
                mem[u + (32 * _16551) + 32] = mem[_8365]
                mem[u + (32 * _16551) + 64 len 32 * _16767] = mem[_8365 + 32 len 32 * _16767]
                mem[_12419 + 128] = u + (32 * _16551) + (32 * _16767) + -_12419 + 64
                _16883 = mem[_8427]
                mem[u + (32 * _16551) + (32 * _16767) + 64] = mem[_8427]
                mem[u + (32 * _16551) + (32 * _16767) + 96 len 32 * _16883] = mem[_8427 + 32 len 32 * _16883]
                return memory
                  from mem[64]
                   len u + (32 * _16551) + (32 * _16767) + (32 * _16883) + -mem[64] + 96
            mem[_8427 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _13220 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _13308 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15639 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15639] == mem[_15639 + 12 len 20]
                            if s >= mem[_13220]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13220 + 32] = mem[_15639 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16223 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16223] == mem[_16223]
                            if s >= mem[_13308]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13308 + 32] = mem[_16223]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _13220
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13308
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15543 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15543] == mem[_15543]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15543]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15895 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15895] == mem[_15895]
                        if uint32(idx) >= mem[_8365]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15895]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16269 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16269] == mem[_16269]
                        if uint32(idx) >= mem[_8427]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8427 + 32] = mem[_16269]
                    else:
                        mem[_13308 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15640 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15640] == mem[_15640 + 12 len 20]
                            if s >= mem[_13220]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13220 + 32] = mem[_15640 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16224 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16224] == mem[_16224]
                            if s >= mem[_13308]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13308 + 32] = mem[_16224]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _13220
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13308
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15544 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15544] == mem[_15544]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15544]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15896 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15896] == mem[_15896]
                        if uint32(idx) >= mem[_8365]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15896]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16270 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16270] == mem[_16270]
                        if uint32(idx) >= mem[_8427]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8427 + 32] = mem[_16270]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _13220 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15641 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15641] == mem[_15641 + 12 len 20]
                        if s >= mem[_13220]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13220 + 32] = mem[_15641 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16225 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16225] == mem[_16225]
                        if s >= mem[_13220 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13220 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16225]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13220
                    if uint32(idx) >= mem[_4117]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13220 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15545 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15545] == mem[_15545]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15545]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15897 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15897] == mem[_15897]
                    if uint32(idx) >= mem[_8365]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15897]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16271 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16271] == mem[_16271]
                    if uint32(idx) >= mem[_8427]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8427 + 32] = mem[_16271]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_13220 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15642 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15642] == mem[_15642 + 12 len 20]
                    if s >= mem[_13220]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13220 + 32] = mem[_15642 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16226 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16226] == mem[_16226]
                    if s >= mem[_13220 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13220 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16226]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _13220
                if uint32(s) >= mem[_4117]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4117 + 32] = _13220 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15546 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15546] == mem[_15546]
                if uint32(s) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15546]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15898 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15898] == mem[_15898]
                if uint32(s) >= mem[_8365]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _8365 + 32] = mem[_15898]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16272 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16272] == mem[_16272]
                if uint32(s) >= mem[_8427]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _8427 + 32] = mem[_16272]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _12420 = mem[64]
            mem[mem[64]] = 160
            _12668 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12668:
                mem[u] = t + -_12420 - 192
                _15316 = mem[s]
                _15518 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15316 + 32
                x = t + 32
                while v < _15518:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _15518) + 32
                u = u + 32
                continue 
            mem[_12420 + 32] = t - _12420
            _15517 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _15517) + 32
            v = t + 32
            while idx < _15517:
                mem[v] = u + -t - 32
                _16509 = mem[s]
                _16554 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16509 + 32
                x = u + 32
                while t < _16554:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _16554) + 32
                v = v + 32
                continue 
            mem[_12420 + 64] = u - _12420
            _16553 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16553] = mem[_4106 + 32 len 32 * _16553]
            mem[_12420 + 96] = u + (32 * _16553) + -_12420 + 32
            _16768 = mem[_8365]
            mem[u + (32 * _16553) + 32] = mem[_8365]
            mem[u + (32 * _16553) + 64 len 32 * _16768] = mem[_8365 + 32 len 32 * _16768]
            mem[_12420 + 128] = u + (32 * _16553) + (32 * _16768) + -_12420 + 64
            _16884 = mem[_8427]
            mem[u + (32 * _16553) + (32 * _16768) + 64] = mem[_8427]
            mem[u + (32 * _16553) + (32 * _16768) + 96 len 32 * _16884] = mem[_8427 + 32 len 32 * _16884]
            return memory
              from mem[64]
               len u + (32 * _16553) + (32 * _16768) + (32 * _16884) + -mem[64] + 96
        mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = _8365 + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _13221 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _13309 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _13309 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15643 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15643] == mem[_15643 + 12 len 20]
                            if s >= mem[_13221]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13221 + 32] = mem[_15643 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16227 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16227] == mem[_16227]
                            if s >= mem[_13309]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13309 + 32] = mem[_16227]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _13221
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13309
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15547 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15547] == mem[_15547]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15547]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15899 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15899] == mem[_15899]
                        if uint32(idx) >= mem[_8365]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15899]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16274 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16274] == mem[_16274]
                        if uint32(idx) >= mem[_8365 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8365 + (32 * ('cd', 4).length) + 64] = mem[_16274]
                    else:
                        mem[_13309 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15644 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15644] == mem[_15644 + 12 len 20]
                            if s >= mem[_13221]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13221 + 32] = mem[_15644 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16228 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16228] == mem[_16228]
                            if s >= mem[_13309]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13309 + 32] = mem[_16228]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _13221
                        if uint32(idx) >= mem[_4117]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13309
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15548 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15548] == mem[_15548]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15548]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15900 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15900] == mem[_15900]
                        if uint32(idx) >= mem[_8365]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15900]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16275 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16275] == mem[_16275]
                        if uint32(idx) >= mem[_8365 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8365 + (32 * ('cd', 4).length) + 64] = mem[_16275]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _13221 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15645 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15645] == mem[_15645 + 12 len 20]
                        if s >= mem[_13221]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13221 + 32] = mem[_15645 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16229 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16229] == mem[_16229]
                        if s >= mem[_13221 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13221 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16229]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13221
                    if uint32(idx) >= mem[_4117]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13221 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15549 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15549] == mem[_15549]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15549]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15901 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15901] == mem[_15901]
                    if uint32(idx) >= mem[_8365]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15901]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16276 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16276] == mem[_16276]
                    if uint32(idx) >= mem[_8365 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8365 + (32 * ('cd', 4).length) + 64] = mem[_16276]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_13221 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15646 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15646] == mem[_15646 + 12 len 20]
                    if s >= mem[_13221]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13221 + 32] = mem[_15646 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16230 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16230] == mem[_16230]
                    if s >= mem[_13221 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13221 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16230]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _13221
                if uint32(s) >= mem[_4117]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4117 + 32] = _13221 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15550 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15550] == mem[_15550]
                if uint32(s) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15550]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15902 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15902] == mem[_15902]
                if uint32(s) >= mem[_8365]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _8365 + 32] = mem[_15902]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16277 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16277] == mem[_16277]
                if uint32(s) >= mem[_8365 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _8365 + (32 * ('cd', 4).length) + 64] = mem[_16277]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _12421 = mem[64]
            mem[mem[64]] = 160
            _12669 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12669:
                mem[u] = t + -_12421 - 192
                _15325 = mem[s]
                _15520 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15325 + 32
                x = t + 32
                while v < _15520:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _15520) + 32
                u = u + 32
                continue 
            mem[_12421 + 32] = t - _12421
            _15519 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _15519) + 32
            v = t + 32
            while idx < _15519:
                mem[v] = u + -t - 32
                _16511 = mem[s]
                _16556 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16511 + 32
                x = u + 32
                while t < _16556:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _16556) + 32
                v = v + 32
                continue 
            mem[_12421 + 64] = u - _12421
            _16555 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16555] = mem[_4106 + 32 len 32 * _16555]
            mem[_12421 + 96] = u + (32 * _16555) + -_12421 + 32
            _16769 = mem[_8365]
            mem[u + (32 * _16555) + 32] = mem[_8365]
            mem[u + (32 * _16555) + 64 len 32 * _16769] = mem[_8365 + 32 len 32 * _16769]
            mem[_12421 + 128] = u + (32 * _16555) + (32 * _16769) + -_12421 + 64
            _16885 = mem[_8365 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _16555) + (32 * _16769) + 64] = mem[_8365 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _16555) + (32 * _16769) + 96 len 32 * _16885] = mem[_8365 + (32 * ('cd', 4).length) + 64 len 32 * _16885]
            return memory
              from mem[64]
               len u + (32 * _16555) + (32 * _16769) + (32 * _16885) + -mem[64] + 96
        mem[_8365 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while uint32(idx) < ('cd', 4).length:
            if uint32(idx) >= ('cd', 36).length:
                revert with 'NH{q', 50
            if uint32(idx) >= ('cd', 4).length:
                revert with 'NH{q', 50
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            _13222 = mem[64]
            mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _13310 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15647 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15647] == mem[_15647 + 12 len 20]
                        if s >= mem[_13222]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13222 + 32] = mem[_15647 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16231 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16231] == mem[_16231]
                        if s >= mem[_13310]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13310 + 32] = mem[_16231]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13222
                    if uint32(idx) >= mem[_4117]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13310
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15551 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15551] == mem[_15551]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15551]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15903 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15903] == mem[_15903]
                    if uint32(idx) >= mem[_8365]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15903]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16279 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16279] == mem[_16279]
                    if uint32(idx) >= mem[_8365 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8365 + (32 * ('cd', 4).length) + 64] = mem[_16279]
                else:
                    mem[_13310 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15648 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15648] == mem[_15648 + 12 len 20]
                        if s >= mem[_13222]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13222 + 32] = mem[_15648 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16232 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16232] == mem[_16232]
                        if s >= mem[_13310]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13310 + 32] = mem[_16232]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13222
                    if uint32(idx) >= mem[_4117]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13310
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15552 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15552] == mem[_15552]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15552]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15904 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15904] == mem[_15904]
                    if uint32(idx) >= mem[_8365]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15904]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16280 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16280] == mem[_16280]
                    if uint32(idx) >= mem[_8365 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8365 + (32 * ('cd', 4).length) + 64] = mem[_16280]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _13222 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15649 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15649] == mem[_15649 + 12 len 20]
                    if s >= mem[_13222]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13222 + 32] = mem[_15649 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16233 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16233] == mem[_16233]
                    if s >= mem[_13222 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13222 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16233]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(idx) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + 128] = _13222
                if uint32(idx) >= mem[_4117]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4117 + 32] = _13222 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15553 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15553] == mem[_15553]
                if uint32(idx) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15553]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15905 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15905] == mem[_15905]
                if uint32(idx) >= mem[_8365]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8365 + 32] = mem[_15905]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16281 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16281] == mem[_16281]
                if uint32(idx) >= mem[_8365 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8365 + (32 * ('cd', 4).length) + 64] = mem[_16281]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[_13222 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15650 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15650] == mem[_15650 + 12 len 20]
                if s >= mem[_13222]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _13222 + 32] = mem[_15650 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16234 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16234] == mem[_16234]
                if s >= mem[_13222 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _13222 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16234]
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                continue 
            if uint32(s) >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + 128] = _13222
            if uint32(s) >= mem[_4117]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4117 + 32] = _13222 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15554 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15554] == mem[_15554]
            if uint32(s) >= mem[_4106]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15554]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15906 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15906] == mem[_15906]
            if uint32(s) >= mem[_8365]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _8365 + 32] = mem[_15906]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16282 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_16282] == mem[_16282]
            if uint32(s) >= mem[_8365 + (32 * ('cd', 4).length) + 32]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _8365 + (32 * ('cd', 4).length) + 64] = mem[_16282]
            if uint32(s) == test266151307():
                revert with 'NH{q', 17
            s = uint32(s) + 1
            continue 
        _12422 = mem[64]
        mem[mem[64]] = 160
        _12670 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12670:
            mem[u] = t + -_12422 - 192
            _15334 = mem[s]
            _15522 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15334 + 32
            x = t + 32
            while v < _15522:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            t = t + (32 * _15522) + 32
            u = u + 32
            continue 
        mem[_12422 + 32] = t - _12422
        _15521 = mem[_4117]
        mem[t] = mem[_4117]
        idx = 0
        s = _4117 + 32
        u = t + (32 * _15521) + 32
        v = t + 32
        while idx < _15521:
            mem[v] = u + -t - 32
            _16513 = mem[s]
            _16558 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16513 + 32
            x = u + 32
            while t < _16558:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            u = u + (32 * _16558) + 32
            v = v + 32
            continue 
        mem[_12422 + 64] = u - _12422
        _16557 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16557] = mem[_4106 + 32 len 32 * _16557]
        mem[_12422 + 96] = u + (32 * _16557) + -_12422 + 32
        _16770 = mem[_8365]
        mem[u + (32 * _16557) + 32] = mem[_8365]
        mem[u + (32 * _16557) + 64 len 32 * _16770] = mem[_8365 + 32 len 32 * _16770]
        mem[_12422 + 128] = u + (32 * _16557) + (32 * _16770) + -_12422 + 64
        _16886 = mem[_8365 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16557) + (32 * _16770) + 64] = mem[_8365 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16557) + (32 * _16770) + 96 len 32 * _16886] = mem[_8365 + (32 * ('cd', 4).length) + 64 len 32 * _16886]
        return memory
          from mem[64]
           len u + (32 * _16557) + (32 * _16770) + (32 * _16886) + -mem[64] + 96
    mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
    mem[64] = _4106 + (64 * ('cd', 4).length) + 64
    if not ('cd', 4).length:
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        mem[_4106 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
        if not ('cd', 4).length:
            if ('cd', 4).length > test266151307():
                revert with 'NH{q', 65
            mem[_4106 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
            mem[64] = _4106 + (131 * ('cd', 4).length) + 128
            if not ('cd', 4).length:
                idx = 0
                while uint32(idx) < ('cd', 4).length:
                    if uint32(idx) >= ('cd', 36).length:
                        revert with 'NH{q', 50
                    if uint32(idx) >= ('cd', 4).length:
                        revert with 'NH{q', 50
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8767 = mem[64]
                    mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                            revert with 'NH{q', 65
                        _8815 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _8815 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12867 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12867] == mem[_12867 + 12 len 20]
                                if s >= mem[_8767]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8767 + 32] = mem[_12867 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14199 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14199] == mem[_14199]
                                if s >= mem[_8815]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8815 + 32] = mem[_14199]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8767
                            if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8815
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12671 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12671] == mem[_12671]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12671]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13311 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13311] == mem[_13311]
                            if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13311]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14300 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14300] == mem[_14300]
                            if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14300]
                        else:
                            mem[_8815 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12868 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12868] == mem[_12868 + 12 len 20]
                                if s >= mem[_8767]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8767 + 32] = mem[_12868 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14200 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_14200] == mem[_14200]
                                if s >= mem[_8815]:
                                    revert with 'NH{q', 50
                                mem[(32 * s) + _8815 + 32] = mem[_14200]
                                if s == -1:
                                    revert with 'NH{q', 17
                                s = s + 1
                                continue 
                            if uint32(idx) >= mem[96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + 128] = _8767
                            if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8815
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12672 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12672] == mem[_12672]
                            if uint32(idx) >= mem[_4106]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12672]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13312 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_13312] == mem[_13312]
                            if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13312]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14301 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14301] == mem[_14301]
                            if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                                revert with 'NH{q', 50
                            mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14301]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8767 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12869 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12869] == mem[_12869 + 12 len 20]
                            if s >= mem[_8767]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8767 + 32] = mem[_12869 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14201 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14201] == mem[_14201]
                            if s >= mem[_8767 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8767 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14201]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8767
                        if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8767 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12673 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12673] == mem[_12673]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12673]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13313 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13313] == mem[_13313]
                        if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13313]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14302] == mem[_14302]
                        if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14302]
                        if uint32(idx) == test266151307():
                            revert with 'NH{q', 17
                        idx = uint32(idx) + 1
                        continue 
                    mem[_8767 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12870 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12870] == mem[_12870 + 12 len 20]
                        if s >= mem[_8767]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8767 + 32] = mem[_12870 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14202 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14202] == mem[_14202]
                        if s >= mem[_8767 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8767 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14202]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(s) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + 128] = _8767
                    if uint32(s) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8767 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12674 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12674] == mem[_12674]
                    if uint32(s) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12674]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13314 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13314] == mem[_13314]
                    if uint32(s) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13314]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14303] == mem[_14303]
                    if uint32(s) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14303]
                    if uint32(s) == test266151307():
                        revert with 'NH{q', 17
                    s = uint32(s) + 1
                    continue 
                _8297 = mem[64]
                mem[mem[64]] = 160
                _8428 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8428:
                    mem[u] = t + -_8297 - 192
                    _12335 = mem[s]
                    _12612 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12335 + 32
                    x = t + 32
                    while v < _12612:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    t = t + (32 * _12612) + 32
                    u = u + 32
                    continue 
                mem[_8297 + 32] = t - _8297
                _12611 = mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
                idx = 0
                s = _4106 + (32 * ('cd', 4).length) + 64
                u = t + (32 * _12611) + 32
                v = t + 32
                while idx < _12611:
                    mem[v] = u + -t - 32
                    _15343 = mem[s]
                    _15524 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15343 + 32
                    x = u + 32
                    while t < _15524:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    idx = idx + 1
                    s = s + 32
                    u = u + (32 * _15524) + 32
                    v = v + 32
                    continue 
                mem[_8297 + 64] = u - _8297
                _15523 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15523] = mem[_4106 + 32 len 32 * _15523]
                mem[_8297 + 96] = u + (32 * _15523) + -_8297 + 32
                _16559 = mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15523) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15523) + 64 len 32 * _16559] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16559]
                mem[_8297 + 128] = u + (32 * _15523) + (32 * _16559) + -_8297 + 64
                _16771 = mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _15523) + (32 * _16559) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _15523) + (32 * _16559) + 96 len 32 * _16771] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16771]
                return memory
                  from mem[64]
                   len u + (32 * _15523) + (32 * _16559) + (32 * _16771) + -mem[64] + 96
            mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _8768 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8816 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8816 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12871 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12871] == mem[_12871 + 12 len 20]
                            if s >= mem[_8768]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8768 + 32] = mem[_12871 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14203] == mem[_14203]
                            if s >= mem[_8816]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8816 + 32] = mem[_14203]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8768
                        if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8816
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12675 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12675] == mem[_12675]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12675]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13315 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13315] == mem[_13315]
                        if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13315]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14305 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14305] == mem[_14305]
                        if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14305]
                    else:
                        mem[_8816 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12872 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12872] == mem[_12872 + 12 len 20]
                            if s >= mem[_8768]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8768 + 32] = mem[_12872 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14204 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14204] == mem[_14204]
                            if s >= mem[_8816]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8816 + 32] = mem[_14204]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8768
                        if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8816
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12676 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12676] == mem[_12676]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12676]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13316 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13316] == mem[_13316]
                        if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13316]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14306] == mem[_14306]
                        if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14306]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8768 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12873 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12873] == mem[_12873 + 12 len 20]
                        if s >= mem[_8768]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8768 + 32] = mem[_12873 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14205 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14205] == mem[_14205]
                        if s >= mem[_8768 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8768 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14205]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8768
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8768 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12677 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12677] == mem[_12677]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12677]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13317 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13317] == mem[_13317]
                    if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13317]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14307 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14307] == mem[_14307]
                    if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14307]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_8768 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12874 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12874] == mem[_12874 + 12 len 20]
                    if s >= mem[_8768]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8768 + 32] = mem[_12874 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14206 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14206] == mem[_14206]
                    if s >= mem[_8768 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8768 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14206]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _8768
                if uint32(s) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8768 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12678 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12678] == mem[_12678]
                if uint32(s) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12678]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13318 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13318] == mem[_13318]
                if uint32(s) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13318]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14308 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14308] == mem[_14308]
                if uint32(s) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14308]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _8298 = mem[64]
            mem[mem[64]] = 160
            _8429 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8429:
                mem[u] = t + -_8298 - 192
                _12344 = mem[s]
                _12614 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12344 + 32
                x = t + 32
                while v < _12614:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _12614) + 32
                u = u + 32
                continue 
            mem[_8298 + 32] = t - _8298
            _12613 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _12613) + 32
            v = t + 32
            while idx < _12613:
                mem[v] = u + -t - 32
                _15345 = mem[s]
                _15526 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15345 + 32
                x = u + 32
                while t < _15526:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _15526) + 32
                v = v + 32
                continue 
            mem[_8298 + 64] = u - _8298
            _15525 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15525] = mem[_4106 + 32 len 32 * _15525]
            mem[_8298 + 96] = u + (32 * _15525) + -_8298 + 32
            _16560 = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15525) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15525) + 64 len 32 * _16560] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16560]
            mem[_8298 + 128] = u + (32 * _15525) + (32 * _16560) + -_8298 + 64
            _16772 = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15525) + (32 * _16560) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15525) + (32 * _16560) + 96 len 32 * _16772] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16772]
            return memory
              from mem[64]
               len u + (32 * _15525) + (32 * _16560) + (32 * _16772) + -mem[64] + 96
        mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        mem[_4106 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
        mem[64] = _4106 + (131 * ('cd', 4).length) + 128
        if not ('cd', 4).length:
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _8769 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _8817 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _8817 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12875 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12875] == mem[_12875 + 12 len 20]
                            if s >= mem[_8769]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8769 + 32] = mem[_12875 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14207 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14207] == mem[_14207]
                            if s >= mem[_8817]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8817 + 32] = mem[_14207]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8769
                        if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8817
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12679 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12679] == mem[_12679]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12679]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13319 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13319] == mem[_13319]
                        if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13319]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14310 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14310] == mem[_14310]
                        if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14310]
                    else:
                        mem[_8817 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12876 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12876] == mem[_12876 + 12 len 20]
                            if s >= mem[_8769]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8769 + 32] = mem[_12876 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14208 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_14208] == mem[_14208]
                            if s >= mem[_8817]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _8817 + 32] = mem[_14208]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _8769
                        if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8817
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12680 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12680] == mem[_12680]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12680]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13320 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13320] == mem[_13320]
                        if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13320]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14311] == mem[_14311]
                        if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14311]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8769 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12877 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12877] == mem[_12877 + 12 len 20]
                        if s >= mem[_8769]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8769 + 32] = mem[_12877 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14209 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14209] == mem[_14209]
                        if s >= mem[_8769 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8769 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14209]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8769
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8769 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12681 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12681] == mem[_12681]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12681]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13321 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13321] == mem[_13321]
                    if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13321]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14312 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14312] == mem[_14312]
                    if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14312]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_8769 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12878 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12878] == mem[_12878 + 12 len 20]
                    if s >= mem[_8769]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8769 + 32] = mem[_12878 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14210 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14210] == mem[_14210]
                    if s >= mem[_8769 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8769 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14210]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _8769
                if uint32(s) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8769 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12682 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12682] == mem[_12682]
                if uint32(s) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12682]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13322 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13322] == mem[_13322]
                if uint32(s) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13322]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14313 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14313] == mem[_14313]
                if uint32(s) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14313]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _8299 = mem[64]
            mem[mem[64]] = 160
            _8430 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8430:
                mem[u] = t + -_8299 - 192
                _12353 = mem[s]
                _12616 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12353 + 32
                x = t + 32
                while v < _12616:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _12616) + 32
                u = u + 32
                continue 
            mem[_8299 + 32] = t - _8299
            _12615 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _12615) + 32
            v = t + 32
            while idx < _12615:
                mem[v] = u + -t - 32
                _15347 = mem[s]
                _15528 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15347 + 32
                x = u + 32
                while t < _15528:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _15528) + 32
                v = v + 32
                continue 
            mem[_8299 + 64] = u - _8299
            _15527 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15527] = mem[_4106 + 32 len 32 * _15527]
            mem[_8299 + 96] = u + (32 * _15527) + -_8299 + 32
            _16561 = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15527) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15527) + 64 len 32 * _16561] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16561]
            mem[_8299 + 128] = u + (32 * _15527) + (32 * _16561) + -_8299 + 64
            _16773 = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15527) + (32 * _16561) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15527) + (32 * _16561) + 96 len 32 * _16773] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16773]
            return memory
              from mem[64]
               len u + (32 * _15527) + (32 * _16561) + (32 * _16773) + -mem[64] + 96
        mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while uint32(idx) < ('cd', 4).length:
            if uint32(idx) >= ('cd', 36).length:
                revert with 'NH{q', 50
            if uint32(idx) >= ('cd', 4).length:
                revert with 'NH{q', 50
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            _8770 = mem[64]
            mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _8818 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _8818 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12879 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12879] == mem[_12879 + 12 len 20]
                        if s >= mem[_8770]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8770 + 32] = mem[_12879 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14211 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14211] == mem[_14211]
                        if s >= mem[_8818]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8818 + 32] = mem[_14211]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8770
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8818
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12683 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12683] == mem[_12683]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12683]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13323 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13323] == mem[_13323]
                    if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13323]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14315 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14315] == mem[_14315]
                    if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14315]
                else:
                    mem[_8818 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12880 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12880] == mem[_12880 + 12 len 20]
                        if s >= mem[_8770]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8770 + 32] = mem[_12880 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14212 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_14212] == mem[_14212]
                        if s >= mem[_8818]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _8818 + 32] = mem[_14212]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _8770
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8818
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12684 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12684] == mem[_12684]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12684]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13324 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13324] == mem[_13324]
                    if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13324]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14316 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14316] == mem[_14316]
                    if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14316]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _8770 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12881 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12881] == mem[_12881 + 12 len 20]
                    if s >= mem[_8770]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8770 + 32] = mem[_12881 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14213 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_14213] == mem[_14213]
                    if s >= mem[_8770 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _8770 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14213]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(idx) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + 128] = _8770
                if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8770 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12685 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12685] == mem[_12685]
                if uint32(idx) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12685]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13325 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13325] == mem[_13325]
                if uint32(idx) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13325]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14317 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14317] == mem[_14317]
                if uint32(idx) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14317]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[_8770 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12882 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12882] == mem[_12882 + 12 len 20]
                if s >= mem[_8770]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _8770 + 32] = mem[_12882 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14214 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_14214] == mem[_14214]
                if s >= mem[_8770 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _8770 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14214]
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                continue 
            if uint32(s) >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + 128] = _8770
            if uint32(s) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8770 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12686 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_12686] == mem[_12686]
            if uint32(s) >= mem[_4106]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_12686]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13326 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_13326] == mem[_13326]
            if uint32(s) >= mem[_4106 + (64 * ('cd', 4).length) + 64]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13326]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14318 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_14318] == mem[_14318]
            if uint32(s) >= mem[_4106 + (98 * ('cd', 4).length) + 96]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14318]
            if uint32(s) == test266151307():
                revert with 'NH{q', 17
            s = uint32(s) + 1
            continue 
        _8300 = mem[64]
        mem[mem[64]] = 160
        _8431 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _8431:
            mem[u] = t + -_8300 - 192
            _12362 = mem[s]
            _12618 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _12362 + 32
            x = t + 32
            while v < _12618:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            t = t + (32 * _12618) + 32
            u = u + 32
            continue 
        mem[_8300 + 32] = t - _8300
        _12617 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _12617) + 32
        v = t + 32
        while idx < _12617:
            mem[v] = u + -t - 32
            _15349 = mem[s]
            _15530 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _15349 + 32
            x = u + 32
            while t < _15530:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            u = u + (32 * _15530) + 32
            v = v + 32
            continue 
        mem[_8300 + 64] = u - _8300
        _15529 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _15529] = mem[_4106 + 32 len 32 * _15529]
        mem[_8300 + 96] = u + (32 * _15529) + -_8300 + 32
        _16562 = mem[_4106 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _15529) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _15529) + 64 len 32 * _16562] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16562]
        mem[_8300 + 128] = u + (32 * _15529) + (32 * _16562) + -_8300 + 64
        _16774 = mem[_4106 + (98 * ('cd', 4).length) + 96]
        mem[u + (32 * _15529) + (32 * _16562) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
        mem[u + (32 * _15529) + (32 * _16562) + 96 len 32 * _16774] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16774]
        return memory
          from mem[64]
           len u + (32 * _15529) + (32 * _16562) + (32 * _16774) + -mem[64] + 96
    mem[_4106 + (32 * ('cd', 4).length) + 64] = 96
    s = _4106 + (32 * ('cd', 4).length) + 64
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    _8366 = mem[64]
    mem[mem[64]] = ('cd', 4).length
    if not ('cd', 4).length:
        if ('cd', 4).length > test266151307():
            revert with 'NH{q', 65
        _8432 = mem[64] + (32 * ('cd', 4).length) + 32
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = _8432 + (32 * ('cd', 4).length) + 32
        if not ('cd', 4).length:
            idx = 0
            while uint32(idx) < ('cd', 4).length:
                if uint32(idx) >= ('cd', 36).length:
                    revert with 'NH{q', 50
                if uint32(idx) >= ('cd', 4).length:
                    revert with 'NH{q', 50
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _13255 = mem[64]
                mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                        revert with 'NH{q', 65
                    _13327 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _13327 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15651 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15651] == mem[_15651 + 12 len 20]
                            if s >= mem[_13255]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13255 + 32] = mem[_15651 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16235 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16235] == mem[_16235]
                            if s >= mem[_13327]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13327 + 32] = mem[_16235]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _13255
                        if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13327
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15555 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15555] == mem[_15555]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15555]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15907 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15907] == mem[_15907]
                        if uint32(idx) >= mem[_8366]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15907]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16288 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16288] == mem[_16288]
                        if uint32(idx) >= mem[_8432]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8432 + 32] = mem[_16288]
                    else:
                        mem[_13327 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15652 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15652] == mem[_15652 + 12 len 20]
                            if s >= mem[_13255]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13255 + 32] = mem[_15652 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16236 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16236] == mem[_16236]
                            if s >= mem[_13327]:
                                revert with 'NH{q', 50
                            mem[(32 * s) + _13327 + 32] = mem[_16236]
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            continue 
                        if uint32(idx) >= mem[96]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + 128] = _13255
                        if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13327
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15556 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15556] == mem[_15556]
                        if uint32(idx) >= mem[_4106]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15556]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15908 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15908] == mem[_15908]
                        if uint32(idx) >= mem[_8366]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15908]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16289 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16289] == mem[_16289]
                        if uint32(idx) >= mem[_8432]:
                            revert with 'NH{q', 50
                        mem[(32 * uint32(idx)) + _8432 + 32] = mem[_16289]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _13255 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15653 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15653] == mem[_15653 + 12 len 20]
                        if s >= mem[_13255]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13255 + 32] = mem[_15653 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16237 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16237] == mem[_16237]
                        if s >= mem[_13255 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13255 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16237]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13255
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13255 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15557 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15557] == mem[_15557]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15557]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15909 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15909] == mem[_15909]
                    if uint32(idx) >= mem[_8366]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15909]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16290 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16290] == mem[_16290]
                    if uint32(idx) >= mem[_8432]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8432 + 32] = mem[_16290]
                    if uint32(idx) == test266151307():
                        revert with 'NH{q', 17
                    idx = uint32(idx) + 1
                    continue 
                mem[_13255 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15654 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15654] == mem[_15654 + 12 len 20]
                    if s >= mem[_13255]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13255 + 32] = mem[_15654 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16238 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16238] == mem[_16238]
                    if s >= mem[_13255 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13255 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16238]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(s) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + 128] = _13255
                if uint32(s) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13255 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15558 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15558] == mem[_15558]
                if uint32(s) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15558]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15910 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15910] == mem[_15910]
                if uint32(s) >= mem[_8366]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _8366 + 32] = mem[_15910]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16291 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16291] == mem[_16291]
                if uint32(s) >= mem[_8432]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(s)) + _8432 + 32] = mem[_16291]
                if uint32(s) == test266151307():
                    revert with 'NH{q', 17
                s = uint32(s) + 1
                continue 
            _12439 = mem[64]
            mem[mem[64]] = 160
            _12687 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12687:
                mem[u] = t + -_12439 - 192
                _15351 = mem[s]
                _15532 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15351 + 32
                x = t + 32
                while v < _15532:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                t = t + (32 * _15532) + 32
                u = u + 32
                continue 
            mem[_12439 + 32] = t - _12439
            _15531 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _15531) + 32
            v = t + 32
            while idx < _15531:
                mem[v] = u + -t - 32
                _16523 = mem[s]
                _16564 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16523 + 32
                x = u + 32
                while t < _16564:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                idx = idx + 1
                s = s + 32
                u = u + (32 * _16564) + 32
                v = v + 32
                continue 
            mem[_12439 + 64] = u - _12439
            _16563 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16563] = mem[_4106 + 32 len 32 * _16563]
            mem[_12439 + 96] = u + (32 * _16563) + -_12439 + 32
            _16775 = mem[_8366]
            mem[u + (32 * _16563) + 32] = mem[_8366]
            mem[u + (32 * _16563) + 64 len 32 * _16775] = mem[_8366 + 32 len 32 * _16775]
            mem[_12439 + 128] = u + (32 * _16563) + (32 * _16775) + -_12439 + 64
            _16887 = mem[_8432]
            mem[u + (32 * _16563) + (32 * _16775) + 64] = mem[_8432]
            mem[u + (32 * _16563) + (32 * _16775) + 96 len 32 * _16887] = mem[_8432 + 32 len 32 * _16887]
            return memory
              from mem[64]
               len u + (32 * _16563) + (32 * _16775) + (32 * _16887) + -mem[64] + 96
        mem[_8432 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while uint32(idx) < ('cd', 4).length:
            if uint32(idx) >= ('cd', 36).length:
                revert with 'NH{q', 50
            if uint32(idx) >= ('cd', 4).length:
                revert with 'NH{q', 50
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            _13256 = mem[64]
            mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _13328 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _13328 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15655 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15655] == mem[_15655 + 12 len 20]
                        if s >= mem[_13256]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13256 + 32] = mem[_15655 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16239 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16239] == mem[_16239]
                        if s >= mem[_13328]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13328 + 32] = mem[_16239]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13256
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13328
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15559 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15559] == mem[_15559]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15559]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15911 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15911] == mem[_15911]
                    if uint32(idx) >= mem[_8366]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15911]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16293 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16293] == mem[_16293]
                    if uint32(idx) >= mem[_8432]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8432 + 32] = mem[_16293]
                else:
                    mem[_13328 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15656 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15656] == mem[_15656 + 12 len 20]
                        if s >= mem[_13256]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13256 + 32] = mem[_15656 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16240 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16240] == mem[_16240]
                        if s >= mem[_13328]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13328 + 32] = mem[_16240]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13256
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13328
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15560 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15560] == mem[_15560]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15560]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15912 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15912] == mem[_15912]
                    if uint32(idx) >= mem[_8366]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15912]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16294 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16294] == mem[_16294]
                    if uint32(idx) >= mem[_8432]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8432 + 32] = mem[_16294]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _13256 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15657 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15657] == mem[_15657 + 12 len 20]
                    if s >= mem[_13256]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13256 + 32] = mem[_15657 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16241 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16241] == mem[_16241]
                    if s >= mem[_13256 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13256 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16241]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(idx) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + 128] = _13256
                if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13256 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15561 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15561] == mem[_15561]
                if uint32(idx) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15561]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15913 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15913] == mem[_15913]
                if uint32(idx) >= mem[_8366]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15913]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16295 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16295] == mem[_16295]
                if uint32(idx) >= mem[_8432]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8432 + 32] = mem[_16295]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[_13256 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15658 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15658] == mem[_15658 + 12 len 20]
                if s >= mem[_13256]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _13256 + 32] = mem[_15658 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16242 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16242] == mem[_16242]
                if s >= mem[_13256 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _13256 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16242]
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                continue 
            if uint32(s) >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + 128] = _13256
            if uint32(s) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13256 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15562 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15562] == mem[_15562]
            if uint32(s) >= mem[_4106]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15562]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15914 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15914] == mem[_15914]
            if uint32(s) >= mem[_8366]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _8366 + 32] = mem[_15914]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16296 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_16296] == mem[_16296]
            if uint32(s) >= mem[_8432]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _8432 + 32] = mem[_16296]
            if uint32(s) == test266151307():
                revert with 'NH{q', 17
            s = uint32(s) + 1
            continue 
        _12440 = mem[64]
        mem[mem[64]] = 160
        _12688 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12688:
            mem[u] = t + -_12440 - 192
            _15360 = mem[s]
            _15534 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15360 + 32
            x = t + 32
            while v < _15534:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            t = t + (32 * _15534) + 32
            u = u + 32
            continue 
        mem[_12440 + 32] = t - _12440
        _15533 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _15533) + 32
        v = t + 32
        while idx < _15533:
            mem[v] = u + -t - 32
            _16525 = mem[s]
            _16566 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16525 + 32
            x = u + 32
            while t < _16566:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            u = u + (32 * _16566) + 32
            v = v + 32
            continue 
        mem[_12440 + 64] = u - _12440
        _16565 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16565] = mem[_4106 + 32 len 32 * _16565]
        mem[_12440 + 96] = u + (32 * _16565) + -_12440 + 32
        _16776 = mem[_8366]
        mem[u + (32 * _16565) + 32] = mem[_8366]
        mem[u + (32 * _16565) + 64 len 32 * _16776] = mem[_8366 + 32 len 32 * _16776]
        mem[_12440 + 128] = u + (32 * _16565) + (32 * _16776) + -_12440 + 64
        _16888 = mem[_8432]
        mem[u + (32 * _16565) + (32 * _16776) + 64] = mem[_8432]
        mem[u + (32 * _16565) + (32 * _16776) + 96 len 32 * _16888] = mem[_8432 + 32 len 32 * _16888]
        return memory
          from mem[64]
           len u + (32 * _16565) + (32 * _16776) + (32 * _16888) + -mem[64] + 96
    mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    if ('cd', 4).length > test266151307():
        revert with 'NH{q', 65
    mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
    mem[64] = _8366 + (64 * ('cd', 4).length) + 64
    if not ('cd', 4).length:
        idx = 0
        while uint32(idx) < ('cd', 4).length:
            if uint32(idx) >= ('cd', 36).length:
                revert with 'NH{q', 50
            if uint32(idx) >= ('cd', 4).length:
                revert with 'NH{q', 50
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            _13257 = mem[64]
            mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                    revert with 'NH{q', 65
                _13329 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = _13329 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15659 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15659] == mem[_15659 + 12 len 20]
                        if s >= mem[_13257]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13257 + 32] = mem[_15659 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16243 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16243] == mem[_16243]
                        if s >= mem[_13329]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13329 + 32] = mem[_16243]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13257
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13329
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15563 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15563] == mem[_15563]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15563]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15915 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15915] == mem[_15915]
                    if uint32(idx) >= mem[_8366]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15915]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16298 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16298] == mem[_16298]
                    if uint32(idx) >= mem[_8366 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8366 + (32 * ('cd', 4).length) + 64] = mem[_16298]
                else:
                    mem[_13329 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15660 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15660] == mem[_15660 + 12 len 20]
                        if s >= mem[_13257]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13257 + 32] = mem[_15660 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16244 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16244] == mem[_16244]
                        if s >= mem[_13329]:
                            revert with 'NH{q', 50
                        mem[(32 * s) + _13329 + 32] = mem[_16244]
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        continue 
                    if uint32(idx) >= mem[96]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + 128] = _13257
                    if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13329
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15564 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15564] == mem[_15564]
                    if uint32(idx) >= mem[_4106]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15564]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15916 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15916] == mem[_15916]
                    if uint32(idx) >= mem[_8366]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15916]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16299 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16299] == mem[_16299]
                    if uint32(idx) >= mem[_8366 + (32 * ('cd', 4).length) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * uint32(idx)) + _8366 + (32 * ('cd', 4).length) + 64] = mem[_16299]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _13257 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15661 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15661] == mem[_15661 + 12 len 20]
                    if s >= mem[_13257]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13257 + 32] = mem[_15661 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16245 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16245] == mem[_16245]
                    if s >= mem[_13257 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13257 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16245]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(idx) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + 128] = _13257
                if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13257 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15565 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15565] == mem[_15565]
                if uint32(idx) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15565]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15917 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15917] == mem[_15917]
                if uint32(idx) >= mem[_8366]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15917]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16300 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16300] == mem[_16300]
                if uint32(idx) >= mem[_8366 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8366 + (32 * ('cd', 4).length) + 64] = mem[_16300]
                if uint32(idx) == test266151307():
                    revert with 'NH{q', 17
                idx = uint32(idx) + 1
                continue 
            mem[_13257 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15662 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15662] == mem[_15662 + 12 len 20]
                if s >= mem[_13257]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _13257 + 32] = mem[_15662 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16246 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16246] == mem[_16246]
                if s >= mem[_13257 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _13257 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16246]
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                continue 
            if uint32(s) >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + 128] = _13257
            if uint32(s) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13257 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15566 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15566] == mem[_15566]
            if uint32(s) >= mem[_4106]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15566]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15918 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15918] == mem[_15918]
            if uint32(s) >= mem[_8366]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _8366 + 32] = mem[_15918]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16301 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_16301] == mem[_16301]
            if uint32(s) >= mem[_8366 + (32 * ('cd', 4).length) + 32]:
                revert with 'NH{q', 50
            mem[(32 * uint32(s)) + _8366 + (32 * ('cd', 4).length) + 64] = mem[_16301]
            if uint32(s) == test266151307():
                revert with 'NH{q', 17
            s = uint32(s) + 1
            continue 
        _12441 = mem[64]
        mem[mem[64]] = 160
        _12689 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12689:
            mem[u] = t + -_12441 - 192
            _15369 = mem[s]
            _15536 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15369 + 32
            x = t + 32
            while v < _15536:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            t = t + (32 * _15536) + 32
            u = u + 32
            continue 
        mem[_12441 + 32] = t - _12441
        _15535 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _15535) + 32
        v = t + 32
        while idx < _15535:
            mem[v] = u + -t - 32
            _16527 = mem[s]
            _16568 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16527 + 32
            x = u + 32
            while t < _16568:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            idx = idx + 1
            s = s + 32
            u = u + (32 * _16568) + 32
            v = v + 32
            continue 
        mem[_12441 + 64] = u - _12441
        _16567 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16567] = mem[_4106 + 32 len 32 * _16567]
        mem[_12441 + 96] = u + (32 * _16567) + -_12441 + 32
        _16777 = mem[_8366]
        mem[u + (32 * _16567) + 32] = mem[_8366]
        mem[u + (32 * _16567) + 64 len 32 * _16777] = mem[_8366 + 32 len 32 * _16777]
        mem[_12441 + 128] = u + (32 * _16567) + (32 * _16777) + -_12441 + 64
        _16889 = mem[_8366 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16567) + (32 * _16777) + 64] = mem[_8366 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16567) + (32 * _16777) + 96 len 32 * _16889] = mem[_8366 + (32 * ('cd', 4).length) + 64 len 32 * _16889]
        return memory
          from mem[64]
           len u + (32 * _16567) + (32 * _16777) + (32 * _16889) + -mem[64] + 96
    mem[_8366 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    while uint32(idx) < ('cd', 4).length:
        if uint32(idx) >= ('cd', 36).length:
            revert with 'NH{q', 50
        if uint32(idx) >= ('cd', 4).length:
            revert with 'NH{q', 50
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
            revert with 'NH{q', 65
        _13258 = mem[64]
        mem[mem[64]] = cd[((32 * uint32(idx)) + cd[36] + 36)]
        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
            if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
                revert with 'NH{q', 65
            _13330 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _13330 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15663 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15663] == mem[_15663 + 12 len 20]
                    if s >= mem[_13258]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13258 + 32] = mem[_15663 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16247 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16247] == mem[_16247]
                    if s >= mem[_13330]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13330 + 32] = mem[_16247]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(idx) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + 128] = _13258
                if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13330
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15567 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15567] == mem[_15567]
                if uint32(idx) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15567]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15919 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15919] == mem[_15919]
                if uint32(idx) >= mem[_8366]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15919]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16303 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16303] == mem[_16303]
                if uint32(idx) >= mem[_8366 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8366 + (32 * ('cd', 4).length) + 64] = mem[_16303]
            else:
                mem[_13330 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15664 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15664] == mem[_15664 + 12 len 20]
                    if s >= mem[_13258]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13258 + 32] = mem[_15664 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16248 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_16248] == mem[_16248]
                    if s >= mem[_13330]:
                        revert with 'NH{q', 50
                    mem[(32 * s) + _13330 + 32] = mem[_16248]
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    continue 
                if uint32(idx) >= mem[96]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + 128] = _13258
                if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13330
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15568 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15568] == mem[_15568]
                if uint32(idx) >= mem[_4106]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15568]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15920 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15920] == mem[_15920]
                if uint32(idx) >= mem[_8366]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15920]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16304 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16304] == mem[_16304]
                if uint32(idx) >= mem[_8366 + (32 * ('cd', 4).length) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * uint32(idx)) + _8366 + (32 * ('cd', 4).length) + 64] = mem[_16304]
            if uint32(idx) == test266151307():
                revert with 'NH{q', 17
            idx = uint32(idx) + 1
            continue 
        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
        if cd[((32 * uint32(idx)) + cd[36] + 36)] > test266151307():
            revert with 'NH{q', 65
        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
        mem[64] = _13258 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
            s = 0
            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15665 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15665] == mem[_15665 + 12 len 20]
                if s >= mem[_13258]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _13258 + 32] = mem[_15665 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16249 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_16249] == mem[_16249]
                if s >= mem[_13258 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]:
                    revert with 'NH{q', 50
                mem[(32 * s) + _13258 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16249]
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                continue 
            if uint32(idx) >= mem[96]:
                revert with 'NH{q', 50
            mem[(32 * uint32(idx)) + 128] = _13258
            if uint32(idx) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
                revert with 'NH{q', 50
            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13258 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15569 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15569] == mem[_15569]
            if uint32(idx) >= mem[_4106]:
                revert with 'NH{q', 50
            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15569]
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15921 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15921] == mem[_15921]
            if uint32(idx) >= mem[_8366]:
                revert with 'NH{q', 50
            mem[(32 * uint32(idx)) + _8366 + 32] = mem[_15921]
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16305 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_16305] == mem[_16305]
            if uint32(idx) >= mem[_8366 + (32 * ('cd', 4).length) + 32]:
                revert with 'NH{q', 50
            mem[(32 * uint32(idx)) + _8366 + (32 * ('cd', 4).length) + 64] = mem[_16305]
            if uint32(idx) == test266151307():
                revert with 'NH{q', 17
            idx = uint32(idx) + 1
            continue 
        mem[_13258 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
        s = 0
        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
            mem[mem[64] + 4] = s
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                    gas gas_remaining wei
                   args s
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15666 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15666] == mem[_15666 + 12 len 20]
            if s >= mem[_13258]:
                revert with 'NH{q', 50
            mem[(32 * s) + _13258 + 32] = mem[_15666 + 12 len 20]
            mem[mem[64] + 4] = s
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                    gas gas_remaining wei
                   args s
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16250 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_16250] == mem[_16250]
            if s >= mem[_13258 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]:
                revert with 'NH{q', 50
            mem[(32 * s) + _13258 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16250]
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            continue 
        if uint32(s) >= mem[96]:
            revert with 'NH{q', 50
        mem[(32 * uint32(s)) + 128] = _13258
        if uint32(s) >= mem[_4106 + (32 * ('cd', 4).length) + 32]:
            revert with 'NH{q', 50
        mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13258 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _15570 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_15570] == mem[_15570]
        if uint32(s) >= mem[_4106]:
            revert with 'NH{q', 50
        mem[(32 * uint32(s)) + _4106 + 32] = mem[_15570]
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _15922 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_15922] == mem[_15922]
        if uint32(s) >= mem[_8366]:
            revert with 'NH{q', 50
        mem[(32 * uint32(s)) + _8366 + 32] = mem[_15922]
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _16306 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_16306] == mem[_16306]
        if uint32(s) >= mem[_8366 + (32 * ('cd', 4).length) + 32]:
            revert with 'NH{q', 50
        mem[(32 * uint32(s)) + _8366 + (32 * ('cd', 4).length) + 64] = mem[_16306]
        if uint32(s) == test266151307():
            revert with 'NH{q', 17
        s = uint32(s) + 1
        continue 
    _12442 = mem[64]
    mem[mem[64]] = 160
    _12690 = mem[96]
    mem[mem[64] + 160] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + (32 * mem[96]) + 192
    u = mem[64] + 192
    while idx < _12690:
        mem[u] = t + -_12442 - 192
        _15378 = mem[s]
        _15538 = mem[mem[s]]
        mem[t] = mem[mem[s]]
        v = 0
        w = _15378 + 32
        x = t + 32
        while v < _15538:
            mem[x] = mem[w + 12 len 20]
            v = v + 1
            w = w + 32
            x = x + 32
            continue 
        idx = idx + 1
        s = s + 32
        t = t + (32 * _15538) + 32
        u = u + 32
        continue 
    mem[_12442 + 32] = t - _12442
    _15537 = mem[_4106 + (32 * ('cd', 4).length) + 32]
    mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
    idx = 0
    s = _4106 + (32 * ('cd', 4).length) + 64
    u = t + (32 * _15537) + 32
    v = t + 32
    while idx < _15537:
        mem[v] = u + -t - 32
        _16529 = mem[s]
        _16570 = mem[mem[s]]
        mem[u] = mem[mem[s]]
        t = 0
        w = _16529 + 32
        x = u + 32
        while t < _16570:
            mem[x] = mem[w]
            t = t + 1
            w = w + 32
            x = x + 32
            continue 
        idx = idx + 1
        s = s + 32
        u = u + (32 * _16570) + 32
        v = v + 32
        continue 
    mem[_12442 + 64] = u - _12442
    _16569 = mem[_4106]
    mem[u] = mem[_4106]
    mem[u + 32 len 32 * _16569] = mem[_4106 + 32 len 32 * _16569]
    mem[_12442 + 96] = u + (32 * _16569) + -_12442 + 32
    _16778 = mem[_8366]
    mem[u + (32 * _16569) + 32] = mem[_8366]
    mem[u + (32 * _16569) + 64 len 32 * _16778] = mem[_8366 + 32 len 32 * _16778]
    mem[_12442 + 128] = u + (32 * _16569) + (32 * _16778) + -_12442 + 64
    _16890 = mem[_8366 + (32 * ('cd', 4).length) + 32]
    mem[u + (32 * _16569) + (32 * _16778) + 64] = mem[_8366 + (32 * ('cd', 4).length) + 32]
    mem[u + (32 * _16569) + (32 * _16778) + 96 len 32 * _16890] = mem[_8366 + (32 * ('cd', 4).length) + 64 len 32 * _16890]
    return memory
      from mem[64]
       len u + (32 * _16569) + (32 * _16778) + (32 * _16890) + -mem[64] + 96
}



}
