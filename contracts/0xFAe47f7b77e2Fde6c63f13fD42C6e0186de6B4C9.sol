contract main {




// =====================  Runtime code  =====================


#
#  - sub_23b12d4b(?)
#
address owner;
array of address add;
array of struct sub_6cbb1b68;
address mdxAddress;
address sub_1d801decAddress;

function add(uint256 arg1) {
    require calldata.size - 4 >= 32
    require arg1 < add.length
    return add[arg1]
}

function sub_1d801dec(?) {
    return sub_1d801decAddress
}

function mdx() {
    return mdxAddress
}

function sub_6cbb1b68(?) {
    require calldata.size - 4 >= 32
    require arg1 < sub_6cbb1b68.length
    return sub_6cbb1b68[arg1].field_0, sub_6cbb1b68[arg1].field_256, sub_6cbb1b68[arg1].field_512, sub_6cbb1b68[arg1].field_768
}

function owner() {
    return owner
}

function _fallback() payable {
  stop
}

function getAmountOut(uint256 arg1, uint256 arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require (997 * arg1) + (1000 * arg2)
    return (997 * arg1 * arg3 / (997 * arg1) + (1000 * arg2))
}

function sub_8209b7e0(?) {
    require ext_code.size(sub_1d801decAddress)
    call sub_1d801decAddress.takerWithdraw() with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function renounceOwnership() {
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function sortTokens(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if arg1 == arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
    if arg1 < arg2:
        if not arg1:
            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
        return address(arg1), arg2
    if not arg2:
        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
    return address(arg2), arg1
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_2976350d(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    if arg1:
        call msg.sender with:
           value arg1 wei
             gas 2300 * is_zero(value) wei
    else:
        call msg.sender with:
           value eth.balance(this.address) wei
             gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function withdrawall() {
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83)
    staticcall 0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83.balanceOf(address rg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        require ext_code.size(0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83)
        call 0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83.transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args msg.sender, ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function withdraw(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    if arg2:
        call arg1.transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args msg.sender, arg2
    else:
        staticcall arg1.balanceOf(address rg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg1)
        call arg1.transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function approve(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.decimals() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    require ext_code.size(arg1)
    staticcall arg1.allowance(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(this.address), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < 10000 * 10^uint8(ext_call.return_data[0]):
        require ext_code.size(arg1)
        call arg1.approve(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args address(arg2), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function approve(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.decimals() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    require ext_code.size(arg1)
    staticcall arg1.allowance(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(this.address), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < 10000 * 10^uint8(ext_call.return_data[0]):
        require ext_code.size(arg1)
        staticcall arg1.decimals() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        require ext_code.size(arg1)
        call arg1.approve(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args address(arg2), arg3 * 10^uint8(ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_33293526(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == Mask(32, 224, arg2)
    if owner != msg.sender:
        if msg.sender != 0xc5c4ee80481b0560774459dc47770dc6ec5f47:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
    if arg4:
        if arg4 != 1:
            if 2 == arg4:
                mem[196 len 96] = uint32(arg2), msg.sender, arg3, mem[196 len 28]
                call address(arg1).mem[196 len 4] with:
                     gas gas_remaining wei
                    args mem[200 len 64]
        else:
            mem[164 len 64] = uint32(arg2), arg3, mem[164 len 28]
            call address(arg1).mem[164 len 4] with:
                 gas gas_remaining wei
                args mem[168]
            if not return_data.size:
                if 2 == arg4:
                    mem[264 len 96] = uint32(arg2), msg.sender, arg3, mem[264 len 28]
                    call address(arg1).mem[264 len 4] with:
                         gas gas_remaining wei
                        args mem[268 len 64]
            else:
                if 2 == arg4:
                    mem[ceil32(return_data.size) + 265 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 265 len 28]
                    call address(arg1).mem[ceil32(return_data.size) + 265 len 4] with:
                         gas gas_remaining wei
                        args mem[ceil32(return_data.size) + 269 len 64]
    else:
        mem[132] = uint32(arg2), mem[132 len 28]
        call address(arg1).mem[132 len 4] with:
             gas gas_remaining wei
        if not return_data.size:
            if arg4 != 1:
                if 2 == arg4:
                    mem[232 len 96] = uint32(arg2), msg.sender, arg3, mem[232 len 28]
                    call address(arg1).mem[232 len 4] with:
                         gas gas_remaining wei
                        args mem[236 len 64]
            else:
                mem[200 len 64] = uint32(arg2), arg3, mem[200 len 28]
                call address(arg1).mem[200 len 4] with:
                     gas gas_remaining wei
                    args mem[204]
                if not return_data.size:
                    if 2 == arg4:
                        mem[300 len 96] = uint32(arg2), msg.sender, arg3, mem[300 len 28]
                        call address(arg1).mem[300 len 4] with:
                             gas gas_remaining wei
                            args mem[304 len 64]
                else:
                    if 2 == arg4:
                        mem[ceil32(return_data.size) + 301 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 301 len 28]
                        call address(arg1).mem[ceil32(return_data.size) + 301 len 4] with:
                             gas gas_remaining wei
                            args mem[ceil32(return_data.size) + 305 len 64]
        else:
            if arg4 != 1:
                if 2 == arg4:
                    mem[ceil32(return_data.size) + 233 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 233 len 28]
                    call address(arg1).mem[ceil32(return_data.size) + 233 len 4] with:
                         gas gas_remaining wei
                        args mem[ceil32(return_data.size) + 237 len 64]
            else:
                mem[ceil32(return_data.size) + 201 len 64] = uint32(arg2), arg3, mem[ceil32(return_data.size) + 201 len 28]
                call address(arg1).mem[ceil32(return_data.size) + 201 len 4] with:
                     gas gas_remaining wei
                    args mem[ceil32(return_data.size) + 205]
                if not return_data.size:
                    if 2 == arg4:
                        mem[ceil32(return_data.size) + 301 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 301 len 28]
                        call address(arg1).mem[ceil32(return_data.size) + 301 len 4] with:
                             gas gas_remaining wei
                            args mem[ceil32(return_data.size) + 305 len 64]
                else:
                    if 2 == arg4:
                        mem[(2 * ceil32(return_data.size)) + 302 len 96] = uint32(arg2), msg.sender, arg3, mem[(2 * ceil32(return_data.size)) + 302 len 28]
                        call address(arg1).mem[(2 * ceil32(return_data.size)) + 302 len 4] with:
                             gas gas_remaining wei
                            args mem[(2 * ceil32(return_data.size)) + 306 len 64]
}

function sub_0b7cbaa6(?) {
    require calldata.size - 4 >= 64
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 128 >= 96 and (32 * ('cd', 36).length) + 128 <= test266151307()
    mem[96] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 36).length / 2 <= test266151307()
    mem[(32 * ('cd', 36).length) + 128] = ('cd', 36).length / 2
    mem[64] = (32 * ('cd', 36).length) + (16 * Mask(251, 1, ('cd', 36).length)) + 160
    if not Mask(255, 1, ('cd', 36).length):
        idx = ('cd', 36).length / 2
        s = 0
        s = cd[4]
        while idx < ('cd', 36).length - 1:
            require idx - (('cd', 36).length / 2) < mem[96]
            require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
            staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _192 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _197 = mem[_192]
            require mem[_192] == mem[_192 + 12 len 20]
            require idx < mem[96]
            require idx + 1 < mem[96]
            _206 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_206)
            require ext_code.size(address(_197))
            staticcall address(_197).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_206)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _212 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _214 = mem[_212]
            require mem[_212] == mem[_212 + 12 len 20]
            require ext_code.size(mem[_212 + 12 len 20])
            staticcall mem[_212 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _220 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _222 = mem[_220]
            require mem[_220] == mem[_220 + 18 len 14]
            _224 = mem[_220 + 32]
            require mem[_220 + 32] == mem[_220 + 50 len 14]
            require mem[_220 + 64] == mem[_220 + 92 len 4]
            require idx < mem[96]
            require idx + 1 < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require (997 * s) + (1000 * mem[_220 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 50 len 14] / (997 * s) + (1000 * mem[_220 + 18 len 14])
                    idx = idx + 1
                    s = _214
                    s = 997 * s * Mask(112, 0, _224) / (997 * s) + (1000 * Mask(112, 0, _222))
                    continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require (997 * s) + (1000 * mem[_220 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 50 len 14] / (997 * s) + (1000 * mem[_220 + 18 len 14])
                    idx = idx + 1
                    s = _214
                    s = 997 * s * Mask(112, 0, _224) / (997 * s) + (1000 * Mask(112, 0, _222))
                    continue 
            require (997 * s) + (1000 * mem[_220 + 50 len 14])
            require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
            mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 18 len 14] / (997 * s) + (1000 * mem[_220 + 50 len 14])
            idx = idx + 1
            s = _214
            s = 997 * s * Mask(112, 0, _222) / (997 * s) + (1000 * Mask(112, 0, _224))
            continue 
        mem[mem[64]] = 32
        _190 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len 32 * _190] = mem[(32 * ('cd', 36).length) + 160 len 32 * _190]
        return 32, mem[mem[64] + 32 len (32 * _190) + 32]
    mem[(32 * ('cd', 36).length) + 160 len 16 * Mask(251, 1, ('cd', 36).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 36).length)]
    idx = ('cd', 36).length / 2
    s = 0
    s = cd[4]
    while idx < ('cd', 36).length - 1:
        require idx - (('cd', 36).length / 2) < mem[96]
        require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
        staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _193 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _199 = mem[_193]
        require mem[_193] == mem[_193 + 12 len 20]
        require idx < mem[96]
        require idx + 1 < mem[96]
        _208 = mem[(32 * idx + 1) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = address(_208)
        require ext_code.size(address(_199))
        staticcall address(_199).getPair(address rg1, address rg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_208)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _213 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _215 = mem[_213]
        require mem[_213] == mem[_213 + 12 len 20]
        require ext_code.size(mem[_213 + 12 len 20])
        staticcall mem[_213 + 12 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _221 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _223 = mem[_221]
        require mem[_221] == mem[_221 + 18 len 14]
        _225 = mem[_221 + 32]
        require mem[_221 + 32] == mem[_221 + 50 len 14]
        require mem[_221 + 64] == mem[_221 + 92 len 4]
        require idx < mem[96]
        require idx + 1 < mem[96]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require (997 * s) + (1000 * mem[_221 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 50 len 14] / (997 * s) + (1000 * mem[_221 + 18 len 14])
                idx = idx + 1
                s = _215
                s = 997 * s * Mask(112, 0, _225) / (997 * s) + (1000 * Mask(112, 0, _223))
                continue 
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require (997 * s) + (1000 * mem[_221 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 50 len 14] / (997 * s) + (1000 * mem[_221 + 18 len 14])
                idx = idx + 1
                s = _215
                s = 997 * s * Mask(112, 0, _225) / (997 * s) + (1000 * Mask(112, 0, _223))
                continue 
        require (997 * s) + (1000 * mem[_221 + 50 len 14])
        require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
        mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 18 len 14] / (997 * s) + (1000 * mem[_221 + 50 len 14])
        idx = idx + 1
        s = _215
        s = 997 * s * Mask(112, 0, _223) / (997 * s) + (1000 * Mask(112, 0, _225))
        continue 
    mem[mem[64]] = 32
    _191 = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 64 len 32 * _191] = mem[(32 * ('cd', 36).length) + 160 len 32 * _191]
    return 32, mem[mem[64] + 32 len (32 * _191) + 32]
}

function sub_bdeae178(?) {
    require calldata.size - 4 >= 192
    require calldata.size - 68 >= 128
    require arg3 == address(arg3)
    mem[96] = arg3
    require arg4 == address(arg4)
    mem[128] = arg4
    require arg5 == address(arg5)
    mem[160] = arg5
    require arg6 == address(arg6)
    mem[192] = arg6
    if msg.sender == owner:
        mem[224] = 2
        mem[256] = address(arg5)
        mem[288] = address(arg6)
        mem[320] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[324] = arg1
        mem[356] = 64
        mem[388] = 2
        idx = 0
        s = 256
        t = 420
        while idx < 2:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        require ext_code.size(address(arg3))
        staticcall address(arg3).getAmountsOut(uint256 rg1, address[] rg2) with:
                gas gas_remaining wei
               args arg1, Array(len=2, data=mem[420 len 64])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[320 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 320
        require return_data.size >= 32
        _794 = mem[320 len 4], Mask(224, 32, arg1) >> 32
        require mem[320 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
        require return_data.size + 320 > mem[320 len 4], Mask(224, 32, arg1) >> 32 + 351
        _797 = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
        require mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320] <= test266151307()
        require (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 32 >= 0 and ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352 <= test266151307()
        mem[64] = ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352
        mem[ceil32(return_data.size) + 320] = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
        require return_data.size >= _794 + (32 * _797) + 32
        mem[ceil32(return_data.size) + 352 len 32 * _797] = mem[_794 + 352 len 32 * _797]
        mem[256] = address(arg6)
        mem[288] = address(arg5)
        require 1 < _797
        _1559 = mem[ceil32(return_data.size) + 384]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _1559
        mem[mem[64] + 36] = 64
        mem[mem[64] + 68] = 2
        idx = 0
        s = 256
        t = mem[64] + 100
        while idx < 2:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        require ext_code.size(address(arg4))
        staticcall address(arg4).getAmountsOut(uint256 rg1, address[] rg2) with:
                gas gas_remaining wei
               args _1559, Array(len=2, data=mem[mem[64] + 100 len 64])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2279 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2282 = mem[_2279]
        require mem[_2279] <= test266151307()
        require _2279 + return_data.size > _2279 + mem[_2279] + 31
        _2285 = mem[_2279 + mem[_2279]]
        require mem[_2279 + mem[_2279]] <= test266151307()
        require (32 * mem[_2279 + mem[_2279]]) + 32 >= 0 and _2279 + ceil32(return_data.size) + (32 * mem[_2279 + mem[_2279]]) + 32 <= test266151307()
        mem[64] = _2279 + ceil32(return_data.size) + (32 * mem[_2279 + mem[_2279]]) + 32
        mem[_2279 + ceil32(return_data.size)] = _2285
        require return_data.size >= _2282 + (32 * _2285) + 32
        mem[_2279 + ceil32(return_data.size) + 32 len 32 * _2285] = mem[_2279 + _2282 + 32 len 32 * _2285]
        require 1 < _2285
        if mem[_2279 + ceil32(return_data.size) + 64] < arg2 * arg1 / 10000:
            revert with 0, 'e1'
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(arg5))
        staticcall address(arg5).balanceOf(address rg1) with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3002 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3005 = mem[_3002]
        require ext_code.size(address(arg3))
        staticcall address(arg3).factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3017 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3020 = mem[_3017]
        require mem[_3017] == mem[_3017 + 12 len 20]
        _3024 = mem[192]
        mem[mem[64] + 4] = address(arg5)
        mem[mem[64] + 36] = address(_3024)
        require ext_code.size(address(_3020))
        staticcall address(_3020).getPair(address rg1, address rg2) with:
                gas gas_remaining wei
               args address(arg5), address(_3024)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3035 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3038 = mem[_3035]
        require mem[_3035] == mem[_3035 + 12 len 20]
        mem[mem[64] + 4] = mem[_3035 + 12 len 20]
        mem[mem[64] + 36] = arg1
        require ext_code.size(address(arg5))
        call address(arg5).transfer(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args mem[mem[64] + 4], arg1
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3050 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_3050] == bool(mem[_3050])
        require ext_code.size(address(_3038))
        staticcall address(_3038).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3062 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3065 = mem[_3062]
        require mem[_3062] == mem[_3062 + 12 len 20]
        require 1 < mem[ceil32(return_data.size) + 320]
        _3071 = mem[ceil32(return_data.size) + 384]
        require ext_code.size(address(arg4))
        staticcall address(arg4).factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if address(arg5) != mem[_3062 + 12 len 20]:
            _3096 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3102 = mem[_3096]
            require mem[_3096] == mem[_3096 + 12 len 20]
            _3111 = mem[192]
            mem[mem[64] + 4] = address(arg5)
            mem[mem[64] + 36] = address(_3111)
            require ext_code.size(address(_3102))
            staticcall address(_3102).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg5), address(_3111)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3132 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3138 = mem[_3132]
            require mem[_3132] == mem[_3132 + 12 len 20]
            _3144 = mem[64]
            mem[mem[64]] = 0
            mem[64] = mem[64] + 32
            mem[_3144 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
            mem[_3144 + 36] = _3071
            mem[_3144 + 68] = 0
            mem[_3144 + 100] = address(_3138)
            mem[_3144 + 132] = 128
            mem[_3144 + 164] = mem[_3144]
            mem[_3144 + 196 len ceil32(mem[_3144])] = mem[_3144 + 32 len ceil32(mem[_3144])]
            if ceil32(mem[_3144]) > mem[_3144]:
                mem[mem[_3144] + _3144 + 196] = 0
            require ext_code.size(address(_3038))
            call address(_3038).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                 gas gas_remaining wei
                args _3071, 0, address(_3138), 128, mem[_3144], mem[_3144 + 196 len ceil32(mem[_3144])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require 1 < _2285
            require ext_code.size(address(_3138))
            if mem[204 len 20] == address(_3065):
                call address(_3138).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                     gas gas_remaining wei
                    args 0, mem[_2279 + ceil32(return_data.size) + 64], address(this.address), 128, 0, None
            else:
                call address(_3138) with:
                     gas gas_remaining wei
                    args mem[_2279 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(address(arg5))
            staticcall address(arg5).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < _3005 - arg1 + (arg1 * arg2 / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            _3095 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3101 = mem[_3095]
            require mem[_3095] == mem[_3095 + 12 len 20]
            _3108 = mem[192]
            mem[mem[64] + 4] = address(arg5)
            mem[mem[64] + 36] = address(_3108)
            require ext_code.size(address(_3101))
            staticcall address(_3101).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg5), address(_3108)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3131 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3137 = mem[_3131]
            require mem[_3131] == mem[_3131 + 12 len 20]
            _3143 = mem[64]
            mem[mem[64]] = 0
            mem[64] = mem[64] + 32
            mem[_3143 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
            mem[_3143 + 36] = 0
            mem[_3143 + 68] = _3071
            mem[_3143 + 100] = address(_3137)
            mem[_3143 + 132] = 128
            mem[_3143 + 164] = mem[_3143]
            mem[_3143 + 196 len ceil32(mem[_3143])] = mem[_3143 + 32 len ceil32(mem[_3143])]
            if ceil32(mem[_3143]) <= mem[_3143]:
                require ext_code.size(address(_3038))
                call address(_3038) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3143]) + _3143 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < _2285
                _3695 = mem[_2279 + ceil32(return_data.size) + 64]
                if mem[204 len 20] == address(_3065):
                    _3719 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3719 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3719 + 36] = 0
                    mem[_3719 + 68] = _3695
                    mem[_3719 + 100] = this.address
                    mem[_3719 + 132] = 128
                    mem[_3719 + 164] = mem[_3719]
                    mem[_3719 + 196 len ceil32(mem[_3719])] = mem[_3719 + 32 len ceil32(mem[_3719])]
                    if ceil32(mem[_3719]) > mem[_3719]:
                        mem[mem[_3719] + _3719 + 196] = 0
                    require ext_code.size(address(_3137))
                    call address(_3137).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, _3695, address(this.address), 128, mem[_3719], mem[_3719 + 196 len ceil32(mem[_3719])]
                else:
                    _3720 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3720 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3720 + 36] = _3695
                    mem[_3720 + 68] = 0
                    mem[_3720 + 100] = this.address
                    mem[_3720 + 132] = 128
                    mem[_3720 + 164] = mem[_3720]
                    mem[_3720 + 196 len ceil32(mem[_3720])] = mem[_3720 + 32 len ceil32(mem[_3720])]
                    if ceil32(mem[_3720]) > mem[_3720]:
                        mem[mem[_3720] + _3720 + 196] = 0
                    require ext_code.size(address(_3137))
                    call address(_3137).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3695, 0, address(this.address), 128, mem[_3720], mem[_3720 + 196 len ceil32(mem[_3720])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(address(arg5))
                staticcall address(arg5).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < _3005 - arg1 + (arg1 * arg2 / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[mem[_3143] + _3143 + 196] = 0
                require ext_code.size(address(_3038))
                call address(_3038) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3143]) + _3143 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require 1 < _2285
                _3697 = mem[_2279 + ceil32(return_data.size) + 64]
                if mem[204 len 20] != address(_3065):
                    _3722 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3722 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3722 + 36] = _3697
                    mem[_3722 + 68] = 0
                    mem[_3722 + 100] = this.address
                    mem[_3722 + 132] = 128
                    mem[_3722 + 164] = mem[_3722]
                    mem[_3722 + 196 len ceil32(mem[_3722])] = mem[_3722 + 32 len ceil32(mem[_3722])]
                    if ceil32(mem[_3722]) > mem[_3722]:
                        mem[mem[_3722] + _3722 + 196] = 0
                    require ext_code.size(address(_3137))
                    call address(_3137).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3697, 0, address(this.address), 128, mem[_3722], mem[_3722 + 196 len ceil32(mem[_3722])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(address(arg5))
                    staticcall address(arg5).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < _3005 - arg1 + (arg1 * arg2 / 10000):
                        revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                else:
                    _3721 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3721 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3721 + 36] = 0
                    mem[_3721 + 68] = _3697
                    mem[_3721 + 100] = this.address
                    mem[_3721 + 132] = 128
                    mem[_3721 + 164] = mem[_3721]
                    mem[_3721 + 196 len ceil32(mem[_3721])] = mem[_3721 + 32 len ceil32(mem[_3721])]
                    if ceil32(mem[_3721]) <= mem[_3721]:
                        require ext_code.size(address(_3137))
                        call address(_3137) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3721]) + _3721 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4395 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4395] < _3005 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        mem[mem[_3721] + _3721 + 196] = 0
                        require ext_code.size(address(_3137))
                        call address(_3137) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3721]) + _3721 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4396 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4396] < _3005 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            mem[224] = 2
            mem[256] = address(arg5)
            mem[288] = address(arg6)
            mem[320] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[324] = arg1
            mem[356] = 64
            mem[388] = 2
            idx = 0
            s = 256
            t = 420
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(arg3))
            staticcall address(arg3).getAmountsOut(uint256 rg1, address[] rg2) with:
                    gas gas_remaining wei
                   args arg1, Array(len=2, data=mem[420 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[320 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = ceil32(return_data.size) + 320
            require return_data.size >= 32
            _795 = mem[320 len 4], Mask(224, 32, arg1) >> 32
            require mem[320 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
            require return_data.size + 320 > mem[320 len 4], Mask(224, 32, arg1) >> 32 + 351
            _798 = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
            require mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320] <= test266151307()
            require (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 32 >= 0 and ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352 <= test266151307()
            mem[64] = ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352
            mem[ceil32(return_data.size) + 320] = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
            require return_data.size >= _795 + (32 * _798) + 32
            mem[ceil32(return_data.size) + 352 len 32 * _798] = mem[_795 + 352 len 32 * _798]
            mem[256] = address(arg6)
            mem[288] = address(arg5)
            require 1 < _798
            _1561 = mem[ceil32(return_data.size) + 384]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _1561
            mem[mem[64] + 36] = 64
            mem[mem[64] + 68] = 2
            idx = 0
            s = 256
            t = mem[64] + 100
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(arg4))
            staticcall address(arg4).getAmountsOut(uint256 rg1, address[] rg2) with:
                    gas gas_remaining wei
                   args _1561, Array(len=2, data=mem[mem[64] + 100 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2280 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2283 = mem[_2280]
            require mem[_2280] <= test266151307()
            require _2280 + return_data.size > _2280 + mem[_2280] + 31
            _2286 = mem[_2280 + mem[_2280]]
            require mem[_2280 + mem[_2280]] <= test266151307()
            require (32 * mem[_2280 + mem[_2280]]) + 32 >= 0 and _2280 + ceil32(return_data.size) + (32 * mem[_2280 + mem[_2280]]) + 32 <= test266151307()
            mem[64] = _2280 + ceil32(return_data.size) + (32 * mem[_2280 + mem[_2280]]) + 32
            mem[_2280 + ceil32(return_data.size)] = _2286
            require return_data.size >= _2283 + (32 * _2286) + 32
            mem[_2280 + ceil32(return_data.size) + 32 len 32 * _2286] = mem[_2280 + _2283 + 32 len 32 * _2286]
            require 1 < _2286
            if mem[_2280 + ceil32(return_data.size) + 64] < arg2 * arg1 / 10000:
                revert with 0, 'e1'
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(arg5))
            staticcall address(arg5).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3003 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3006 = mem[_3003]
            require ext_code.size(address(arg3))
            staticcall address(arg3).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3018 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3021 = mem[_3018]
            require mem[_3018] == mem[_3018 + 12 len 20]
            _3027 = mem[192]
            mem[mem[64] + 4] = address(arg5)
            mem[mem[64] + 36] = address(_3027)
            require ext_code.size(address(_3021))
            staticcall address(_3021).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg5), address(_3027)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3036 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3039 = mem[_3036]
            require mem[_3036] == mem[_3036 + 12 len 20]
            mem[mem[64] + 4] = mem[_3036 + 12 len 20]
            mem[mem[64] + 36] = arg1
            require ext_code.size(address(arg5))
            call address(arg5).transfer(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args mem[mem[64] + 4], arg1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3051 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3051] == bool(mem[_3051])
            require ext_code.size(address(_3039))
            staticcall address(_3039).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3063 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3066 = mem[_3063]
            require mem[_3063] == mem[_3063 + 12 len 20]
            require 1 < mem[ceil32(return_data.size) + 320]
            _3073 = mem[ceil32(return_data.size) + 384]
            require ext_code.size(address(arg4))
            staticcall address(arg4).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if address(arg5) == mem[_3063 + 12 len 20]:
                _3097 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3103 = mem[_3097]
                require mem[_3097] == mem[_3097 + 12 len 20]
                _3114 = mem[192]
                mem[mem[64] + 4] = address(arg5)
                mem[mem[64] + 36] = address(_3114)
                require ext_code.size(address(_3103))
                staticcall address(_3103).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg5), address(_3114)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3133 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3139 = mem[_3133]
                require mem[_3133] == mem[_3133 + 12 len 20]
                _3145 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3145 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3145 + 36] = 0
                mem[_3145 + 68] = _3073
                mem[_3145 + 100] = address(_3139)
                mem[_3145 + 132] = 128
                mem[_3145 + 164] = mem[_3145]
                mem[_3145 + 196 len ceil32(mem[_3145])] = mem[_3145 + 32 len ceil32(mem[_3145])]
                if ceil32(mem[_3145]) <= mem[_3145]:
                    require ext_code.size(address(_3039))
                    call address(_3039).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, _3073, address(_3139), 128, mem[_3145], mem[_3145 + 196 len ceil32(mem[_3145])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2286
                    require ext_code.size(address(_3139))
                    if mem[204 len 20] == address(_3066):
                        call address(_3139).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, mem[_2280 + ceil32(return_data.size) + 64], address(this.address), 128, 0, None
                    else:
                        call address(_3139) with:
                             gas gas_remaining wei
                            args mem[_2280 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0
                else:
                    mem[mem[_3145] + _3145 + 196] = 0
                    require ext_code.size(address(_3039))
                    call address(_3039).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, _3073, address(_3139), 128, mem[_3145], mem[_3145 + 196 len ceil32(mem[_3145])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2286
                    require ext_code.size(address(_3139))
                    if mem[204 len 20] == address(_3066):
                        call address(_3139) with:
                             gas gas_remaining wei
                            args 0, mem[_2280 + ceil32(return_data.size) + 64], address(this.address), 128, 0
                    else:
                        call address(_3139).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args mem[_2280 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0, None
            else:
                _3098 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3104 = mem[_3098]
                require mem[_3098] == mem[_3098 + 12 len 20]
                _3117 = mem[192]
                mem[mem[64] + 4] = address(arg5)
                mem[mem[64] + 36] = address(_3117)
                require ext_code.size(address(_3104))
                staticcall address(_3104).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg5), address(_3117)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3134 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3140 = mem[_3134]
                require mem[_3134] == mem[_3134 + 12 len 20]
                _3146 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3146 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3146 + 36] = _3073
                mem[_3146 + 68] = 0
                mem[_3146 + 100] = address(_3140)
                mem[_3146 + 132] = 128
                mem[_3146 + 164] = mem[_3146]
                mem[_3146 + 196 len ceil32(mem[_3146])] = mem[_3146 + 32 len ceil32(mem[_3146])]
                if ceil32(mem[_3146]) <= mem[_3146]:
                    require ext_code.size(address(_3039))
                    call address(_3039) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3146]) + _3146 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2286
                    _3707 = mem[_2280 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] == address(_3066):
                        _3731 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3731 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3731 + 36] = 0
                        mem[_3731 + 68] = _3707
                        mem[_3731 + 100] = this.address
                        mem[_3731 + 132] = 128
                        mem[_3731 + 164] = mem[_3731]
                        mem[_3731 + 196 len ceil32(mem[_3731])] = mem[_3731 + 32 len ceil32(mem[_3731])]
                        if ceil32(mem[_3731]) > mem[_3731]:
                            mem[mem[_3731] + _3731 + 196] = 0
                        require ext_code.size(address(_3140))
                        call address(_3140).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3707, address(this.address), 128, mem[_3731], mem[_3731 + 196 len ceil32(mem[_3731])]
                    else:
                        _3732 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3732 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3732 + 36] = _3707
                        mem[_3732 + 68] = 0
                        mem[_3732 + 100] = this.address
                        mem[_3732 + 132] = 128
                        mem[_3732 + 164] = mem[_3732]
                        mem[_3732 + 196 len ceil32(mem[_3732])] = mem[_3732 + 32 len ceil32(mem[_3732])]
                        if ceil32(mem[_3732]) > mem[_3732]:
                            mem[mem[_3732] + _3732 + 196] = 0
                        require ext_code.size(address(_3140))
                        call address(_3140).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3707, 0, address(this.address), 128, mem[_3732], mem[_3732 + 196 len ceil32(mem[_3732])]
                else:
                    mem[mem[_3146] + _3146 + 196] = 0
                    require ext_code.size(address(_3039))
                    call address(_3039) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3146]) + _3146 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2286
                    _3709 = mem[_2280 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] == address(_3066):
                        _3733 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3733 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3733 + 36] = 0
                        mem[_3733 + 68] = _3709
                        mem[_3733 + 100] = this.address
                        mem[_3733 + 132] = 128
                        mem[_3733 + 164] = mem[_3733]
                        mem[_3733 + 196 len ceil32(mem[_3733])] = mem[_3733 + 32 len ceil32(mem[_3733])]
                        if ceil32(mem[_3733]) > mem[_3733]:
                            mem[mem[_3733] + _3733 + 196] = 0
                        require ext_code.size(address(_3140))
                        call address(_3140).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3709, address(this.address), 128, mem[_3733], mem[_3733 + 196 len ceil32(mem[_3733])]
                    else:
                        _3734 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3734 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3734 + 36] = _3709
                        mem[_3734 + 68] = 0
                        mem[_3734 + 100] = this.address
                        mem[_3734 + 132] = 128
                        mem[_3734 + 164] = mem[_3734]
                        mem[_3734 + 196 len ceil32(mem[_3734])] = mem[_3734 + 32 len ceil32(mem[_3734])]
                        if ceil32(mem[_3734]) > mem[_3734]:
                            mem[mem[_3734] + _3734 + 196] = 0
                        require ext_code.size(address(_3140))
                        call address(_3140).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3709, 0, address(this.address), 128, mem[_3734], mem[_3734 + 196 len ceil32(mem[_3734])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(address(arg5))
            staticcall address(arg5).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < _3006 - arg1 + (arg1 * arg2 / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            mem[224] = 2
            mem[256] = address(arg5)
            mem[288] = address(arg6)
            mem[320] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[324] = arg1
            mem[356] = 64
            mem[388] = 2
            idx = 0
            s = 256
            t = 420
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(arg3))
            staticcall address(arg3).getAmountsOut(uint256 rg1, address[] rg2) with:
                    gas gas_remaining wei
                   args arg1, Array(len=2, data=mem[420 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[320 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = ceil32(return_data.size) + 320
            require return_data.size >= 32
            _796 = mem[320 len 4], Mask(224, 32, arg1) >> 32
            require mem[320 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
            require return_data.size + 320 > mem[320 len 4], Mask(224, 32, arg1) >> 32 + 351
            _799 = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
            require mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320] <= test266151307()
            require (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 32 >= 0 and ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352 <= test266151307()
            mem[64] = ceil32(return_data.size) + (32 * mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]) + 352
            mem[ceil32(return_data.size) + 320] = mem[mem[320 len 4], Mask(224, 32, arg1) >> 32 + 320]
            require return_data.size >= _796 + (32 * _799) + 32
            mem[ceil32(return_data.size) + 352 len 32 * _799] = mem[_796 + 352 len 32 * _799]
            mem[256] = address(arg6)
            mem[288] = address(arg5)
            require 1 < _799
            _1563 = mem[ceil32(return_data.size) + 384]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _1563
            mem[mem[64] + 36] = 64
            mem[mem[64] + 68] = 2
            idx = 0
            s = 256
            t = mem[64] + 100
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(address(arg4))
            staticcall address(arg4).getAmountsOut(uint256 rg1, address[] rg2) with:
                    gas gas_remaining wei
                   args _1563, Array(len=2, data=mem[mem[64] + 100 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2281 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2284 = mem[_2281]
            require mem[_2281] <= test266151307()
            require _2281 + return_data.size > _2281 + mem[_2281] + 31
            _2287 = mem[_2281 + mem[_2281]]
            require mem[_2281 + mem[_2281]] <= test266151307()
            require (32 * mem[_2281 + mem[_2281]]) + 32 >= 0 and _2281 + ceil32(return_data.size) + (32 * mem[_2281 + mem[_2281]]) + 32 <= test266151307()
            mem[64] = _2281 + ceil32(return_data.size) + (32 * mem[_2281 + mem[_2281]]) + 32
            mem[_2281 + ceil32(return_data.size)] = _2287
            require return_data.size >= _2284 + (32 * _2287) + 32
            mem[_2281 + ceil32(return_data.size) + 32 len 32 * _2287] = mem[_2281 + _2284 + 32 len 32 * _2287]
            require 1 < _2287
            if mem[_2281 + ceil32(return_data.size) + 64] < arg2 * arg1 / 10000:
                revert with 0, 'e1'
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(arg5))
            staticcall address(arg5).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3004 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3007 = mem[_3004]
            require ext_code.size(address(arg3))
            staticcall address(arg3).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3019 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3022 = mem[_3019]
            require mem[_3019] == mem[_3019 + 12 len 20]
            _3030 = mem[192]
            mem[mem[64] + 4] = address(arg5)
            mem[mem[64] + 36] = address(_3030)
            require ext_code.size(address(_3022))
            staticcall address(_3022).getPair(address rg1, address rg2) with:
                    gas gas_remaining wei
                   args address(arg5), address(_3030)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3037 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3040 = mem[_3037]
            require mem[_3037] == mem[_3037 + 12 len 20]
            mem[mem[64] + 4] = mem[_3037 + 12 len 20]
            mem[mem[64] + 36] = arg1
            require ext_code.size(address(arg5))
            call address(arg5).transfer(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args mem[mem[64] + 4], arg1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3052 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_3052] == bool(mem[_3052])
            require ext_code.size(address(_3040))
            staticcall address(_3040).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3064 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3067 = mem[_3064]
            require mem[_3064] == mem[_3064 + 12 len 20]
            require 1 < mem[ceil32(return_data.size) + 320]
            _3075 = mem[ceil32(return_data.size) + 384]
            require ext_code.size(address(arg4))
            staticcall address(arg4).factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if address(arg5) != mem[_3064 + 12 len 20]:
                _3100 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3106 = mem[_3100]
                require mem[_3100] == mem[_3100 + 12 len 20]
                _3123 = mem[192]
                mem[mem[64] + 4] = address(arg5)
                mem[mem[64] + 36] = address(_3123)
                require ext_code.size(address(_3106))
                staticcall address(_3106).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg5), address(_3123)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3136 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3142 = mem[_3136]
                require mem[_3136] == mem[_3136 + 12 len 20]
                _3148 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3148 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3148 + 36] = _3075
                mem[_3148 + 68] = 0
                mem[_3148 + 100] = address(_3142)
                mem[_3148 + 132] = 128
                mem[_3148 + 164] = mem[_3148]
                mem[_3148 + 196 len ceil32(mem[_3148])] = mem[_3148 + 32 len ceil32(mem[_3148])]
                if ceil32(mem[_3148]) <= mem[_3148]:
                    require ext_code.size(address(_3040))
                    call address(_3040).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3075, 0, address(_3142), 128, mem[_3148], mem[_3148 + 196 len ceil32(mem[_3148])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2287
                    require ext_code.size(address(_3142))
                    if mem[204 len 20] == address(_3067):
                        call address(_3142).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, mem[_2281 + ceil32(return_data.size) + 64], address(this.address), 128, 0, None
                    else:
                        call address(_3142) with:
                             gas gas_remaining wei
                            args mem[_2281 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0
                else:
                    mem[mem[_3148] + _3148 + 196] = 0
                    require ext_code.size(address(_3040))
                    call address(_3040).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3075, 0, address(_3142), 128, mem[_3148], mem[_3148 + 196 len ceil32(mem[_3148])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2287
                    require ext_code.size(address(_3142))
                    if mem[204 len 20] == address(_3067):
                        call address(_3142).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, mem[_2281 + ceil32(return_data.size) + 64], address(this.address), 128, 0, None
                    else:
                        call address(_3142).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args mem[_2281 + ceil32(return_data.size) + 64], 0, address(this.address), 128, 0, None
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(address(arg5))
                staticcall address(arg5).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < _3007 - arg1 + (arg1 * arg2 / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                _3099 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3105 = mem[_3099]
                require mem[_3099] == mem[_3099 + 12 len 20]
                _3120 = mem[192]
                mem[mem[64] + 4] = address(arg5)
                mem[mem[64] + 36] = address(_3120)
                require ext_code.size(address(_3105))
                staticcall address(_3105).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(arg5), address(_3120)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3135 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3141 = mem[_3135]
                require mem[_3135] == mem[_3135 + 12 len 20]
                _3147 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3147 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3147 + 36] = 0
                mem[_3147 + 68] = _3075
                mem[_3147 + 100] = address(_3141)
                mem[_3147 + 132] = 128
                mem[_3147 + 164] = mem[_3147]
                mem[_3147 + 196 len ceil32(mem[_3147])] = mem[_3147 + 32 len ceil32(mem[_3147])]
                if ceil32(mem[_3147]) <= mem[_3147]:
                    require ext_code.size(address(_3040))
                    call address(_3040) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3147]) + _3147 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2287
                    _3711 = mem[_2281 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] == address(_3067):
                        _3735 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3735 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3735 + 36] = 0
                        mem[_3735 + 68] = _3711
                        mem[_3735 + 100] = this.address
                        mem[_3735 + 132] = 128
                        mem[_3735 + 164] = mem[_3735]
                        mem[_3735 + 196 len ceil32(mem[_3735])] = mem[_3735 + 32 len ceil32(mem[_3735])]
                        if ceil32(mem[_3735]) <= mem[_3735]:
                            require ext_code.size(address(_3141))
                            call address(_3141) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3735]) + _3735 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4423 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4423] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3735] + _3735 + 196] = 0
                            require ext_code.size(address(_3141))
                            call address(_3141) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3735]) + _3735 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4424 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4424] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        _3736 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3736 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3736 + 36] = _3711
                        mem[_3736 + 68] = 0
                        mem[_3736 + 100] = this.address
                        mem[_3736 + 132] = 128
                        mem[_3736 + 164] = mem[_3736]
                        mem[_3736 + 196 len ceil32(mem[_3736])] = mem[_3736 + 32 len ceil32(mem[_3736])]
                        if ceil32(mem[_3736]) <= mem[_3736]:
                            require ext_code.size(address(_3141))
                            call address(_3141) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3736]) + _3736 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4425 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4425] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3736] + _3736 + 196] = 0
                            require ext_code.size(address(_3141))
                            call address(_3141) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3736]) + _3736 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4426 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4426] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                else:
                    mem[mem[_3147] + _3147 + 196] = 0
                    require ext_code.size(address(_3040))
                    call address(_3040) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3147]) + _3147 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require 1 < _2287
                    _3713 = mem[_2281 + ceil32(return_data.size) + 64]
                    if mem[204 len 20] != address(_3067):
                        _3738 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3738 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3738 + 36] = _3713
                        mem[_3738 + 68] = 0
                        mem[_3738 + 100] = this.address
                        mem[_3738 + 132] = 128
                        mem[_3738 + 164] = mem[_3738]
                        mem[_3738 + 196 len ceil32(mem[_3738])] = mem[_3738 + 32 len ceil32(mem[_3738])]
                        if ceil32(mem[_3738]) > mem[_3738]:
                            mem[mem[_3738] + _3738 + 196] = 0
                        require ext_code.size(address(_3141))
                        call address(_3141).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3713, 0, address(this.address), 128, mem[_3738], mem[_3738 + 196 len ceil32(mem[_3738])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require ext_code.size(address(arg5))
                        staticcall address(arg5).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < _3007 - arg1 + (arg1 * arg2 / 10000):
                            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                    else:
                        _3737 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3737 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3737 + 36] = 0
                        mem[_3737 + 68] = _3713
                        mem[_3737 + 100] = this.address
                        mem[_3737 + 132] = 128
                        mem[_3737 + 164] = mem[_3737]
                        mem[_3737 + 196 len ceil32(mem[_3737])] = mem[_3737 + 32 len ceil32(mem[_3737])]
                        if ceil32(mem[_3737]) <= mem[_3737]:
                            require ext_code.size(address(_3141))
                            call address(_3141) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3737]) + _3737 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4427 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4427] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
                        else:
                            mem[mem[_3737] + _3737 + 196] = 0
                            require ext_code.size(address(_3141))
                            call address(_3141) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3737]) + _3737 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(arg5))
                            staticcall address(arg5).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4428 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4428] < _3007 - arg1 + (arg1 * arg2 / 10000):
                                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_03919452(?) {
    require calldata.size - 4 >= 96
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2513 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2543 = mem[_2513]
                require mem[_2513] == mem[_2513 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2595 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2595)
                require ext_code.size(address(_2543))
                staticcall address(_2543).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2595)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2640 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2675 = mem[_2640]
                require mem[_2640] == mem[_2640 + 12 len 20]
                require ext_code.size(mem[_2640 + 12 len 20])
                staticcall mem[_2640 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2752 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2774 = mem[_2752]
                require mem[_2752] == mem[_2752 + 18 len 14]
                _2800 = mem[_2752 + 32]
                require mem[_2752 + 32] == mem[_2752 + 50 len 14]
                require mem[_2752 + 64] == mem[_2752 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2752 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2752 + 50 len 14] / (997 * s) + (1000 * mem[_2752 + 18 len 14])
                        idx = idx + 1
                        s = _2675
                        s = 997 * s * Mask(112, 0, _2800) / (997 * s) + (1000 * Mask(112, 0, _2774))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2752 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2752 + 50 len 14] / (997 * s) + (1000 * mem[_2752 + 18 len 14])
                        idx = idx + 1
                        s = _2675
                        s = 997 * s * Mask(112, 0, _2800) / (997 * s) + (1000 * Mask(112, 0, _2774))
                        continue 
                require (997 * s) + (1000 * mem[_2752 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2752 + 18 len 14] / (997 * s) + (1000 * mem[_2752 + 50 len 14])
                idx = idx + 1
                s = _2675
                s = 997 * s * Mask(112, 0, _2774) / (997 * s) + (1000 * Mask(112, 0, _2800))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2510 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2511 = mem[96]
            require mem[96] / 2 < mem[96]
            _2540 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2540))
            staticcall address(_2540).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3680 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3680 - 1:
                require idx < mem[96]
                require 0 < mem[_2510]
                mem[_2510 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2510]
                mem[_2510 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2511 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_2511 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_2511 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3777 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3789 = mem[_3777]
                require mem[_3777] == mem[_3777 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _3824 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_3824)
                require ext_code.size(address(_3789))
                staticcall address(_3789).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3824)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3842 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3848 = mem[_3842]
                require mem[_3842] == mem[_3842 + 12 len 20]
                if idx != _2511 / 2:
                    require ext_code.size(mem[_3842 + 12 len 20])
                    staticcall mem[_3842 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3884 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3884] == mem[_3884 + 12 len 20]
                    require idx - (_2511 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _3920 = mem[(32 * idx - (_2511 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2510]
                    if mem[_2510 + 44 len 20] == mem[_3884 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3980 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3980 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3980 + 36] = 0
                            mem[_3980 + 68] = _3920
                            mem[_3980 + 100] = this.address
                            mem[_3980 + 132] = 128
                            mem[_3980 + 164] = mem[_3980]
                            s = 0
                            while s < mem[_3980]:
                                mem[s + _3980 + 196] = mem[s + _3980 + 32]
                                _3680 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3980]) > mem[_3980]:
                                mem[mem[_3980] + _3980 + 196] = 0
                            require ext_code.size(address(_3848))
                            call address(_3848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3920, address(this.address), 128, mem[_3980], mem[_3980 + 196 len ceil32(mem[_3980])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3680 = mem[96]
                            idx = idx + 1
                            s = _3848
                            s = this.address
                            s = _3920
                            continue 
                        require idx + -(_2511 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4035 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4058 = mem[_4035]
                        require mem[_4035] == mem[_4035 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4190 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4190)
                        require ext_code.size(address(_4058))
                        staticcall address(_4058).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4190)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4298 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4334 = mem[_4298]
                        require mem[_4298] == mem[_4298 + 12 len 20]
                        _4430 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4430 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4430 + 36] = 0
                        mem[_4430 + 68] = _3920
                        mem[_4430 + 100] = address(_4334)
                        mem[_4430 + 132] = 128
                        mem[_4430 + 164] = mem[_4430]
                        s = 0
                        while s < mem[_4430]:
                            mem[s + _4430 + 196] = mem[s + _4430 + 32]
                            _3680 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4430]) > mem[_4430]:
                            mem[mem[_4430] + _4430 + 196] = 0
                        require ext_code.size(address(_3848))
                        call address(_3848).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4430]) + _4430 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3680 = mem[96]
                        idx = idx + 1
                        s = _3848
                        s = _4334
                        s = _3920
                        continue 
                    if idx + 2 >= mem[96]:
                        _3984 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3984 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3984 + 36] = _3920
                        mem[_3984 + 68] = 0
                        mem[_3984 + 100] = this.address
                        mem[_3984 + 132] = 128
                        mem[_3984 + 164] = mem[_3984]
                        s = 0
                        while s < mem[_3984]:
                            mem[s + _3984 + 196] = mem[s + _3984 + 32]
                            _3680 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3984]) > mem[_3984]:
                            mem[mem[_3984] + _3984 + 196] = 0
                        require ext_code.size(address(_3848))
                        call address(_3848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3920, 0, address(this.address), 128, mem[_3984], mem[_3984 + 196 len ceil32(mem[_3984])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3680 = mem[96]
                        idx = idx + 1
                        s = _3848
                        s = this.address
                        s = _3920
                        continue 
                    require idx + -(_2511 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4037 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4059 = mem[_4037]
                    require mem[_4037] == mem[_4037 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4192 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4192)
                    require ext_code.size(address(_4059))
                    staticcall address(_4059).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4192)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4299 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4335 = mem[_4299]
                    require mem[_4299] == mem[_4299 + 12 len 20]
                    _4431 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4431 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4431 + 36] = _3920
                    mem[_4431 + 68] = 0
                    mem[_4431 + 100] = address(_4335)
                    mem[_4431 + 132] = 128
                    mem[_4431 + 164] = mem[_4431]
                    s = 0
                    while s < mem[_4431]:
                        mem[s + _4431 + 196] = mem[s + _4431 + 32]
                        _3680 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4431]) > mem[_4431]:
                        mem[mem[_4431] + _4431 + 196] = 0
                    require ext_code.size(address(_3848))
                    call address(_3848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3920, 0, address(_4335), 128, mem[_4431], mem[_4431 + 196 len ceil32(mem[_4431])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3680 = mem[96]
                    idx = idx + 1
                    s = _3848
                    s = _4335
                    s = _3920
                    continue 
                require 0 < mem[_2510]
                _3872 = mem[_2510 + 32]
                mem[mem[64] + 4] = mem[_3842 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3872))
                call address(_3872).transfer(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3902 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3902] == bool(mem[_3902])
                require ext_code.size(address(_3848))
                staticcall address(_3848).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3952 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3952] == mem[_3952 + 12 len 20]
                require idx - (_2511 / 2) < mem[(32 * ('cd', 68).length) + 128]
                _4078 = mem[(32 * idx - (_2511 / 2)) + (32 * ('cd', 68).length) + 160]
                require 0 < mem[_2510]
                if mem[_2510 + 44 len 20] == mem[_3952 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _4194 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4194 + 36] = 0
                        mem[_4194 + 68] = _4078
                        mem[_4194 + 100] = this.address
                        mem[_4194 + 132] = 128
                        mem[_4194 + 164] = mem[_4194]
                        s = 0
                        while s < mem[_4194]:
                            mem[s + _4194 + 196] = mem[s + _4194 + 32]
                            _3680 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4194]) > mem[_4194]:
                            mem[mem[_4194] + _4194 + 196] = 0
                        require ext_code.size(address(_3848))
                        call address(_3848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _4078, address(this.address), 128, mem[_4194], mem[_4194 + 196 len ceil32(mem[_4194])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3680 = mem[96]
                        idx = idx + 1
                        s = _3848
                        s = this.address
                        s = _4078
                        continue 
                    require idx + -(_2511 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4265 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4300 = mem[_4265]
                    require mem[_4265] == mem[_4265 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4406 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4406)
                    require ext_code.size(address(_4300))
                    staticcall address(_4300).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4406)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4466 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4480 = mem[_4466]
                    require mem[_4466] == mem[_4466 + 12 len 20]
                    _4526 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4526 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4526 + 36] = 0
                    mem[_4526 + 68] = _4078
                    mem[_4526 + 100] = address(_4480)
                    mem[_4526 + 132] = 128
                    mem[_4526 + 164] = mem[_4526]
                    s = 0
                    while s < mem[_4526]:
                        mem[s + _4526 + 196] = mem[s + _4526 + 32]
                        _3680 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4526]) > mem[_4526]:
                        mem[mem[_4526] + _4526 + 196] = 0
                    require ext_code.size(address(_3848))
                    call address(_3848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args 0, _4078, address(_4480), 128, mem[_4526], mem[_4526 + 196 len ceil32(mem[_4526])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3680 = mem[96]
                    idx = idx + 1
                    s = _3848
                    s = _4480
                    s = _4078
                    continue 
                if idx + 2 >= mem[96]:
                    _4198 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4198 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4198 + 36] = _4078
                    mem[_4198 + 68] = 0
                    mem[_4198 + 100] = this.address
                    mem[_4198 + 132] = 128
                    mem[_4198 + 164] = mem[_4198]
                    s = 0
                    while s < mem[_4198]:
                        mem[s + _4198 + 196] = mem[s + _4198 + 32]
                        _3680 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4198]) > mem[_4198]:
                        mem[mem[_4198] + _4198 + 196] = 0
                    require ext_code.size(address(_3848))
                    call address(_3848).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4198]) + _4198 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3680 = mem[96]
                    idx = idx + 1
                    s = _3848
                    s = this.address
                    s = _4078
                    continue 
                require idx + -(_2511 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_2511 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4267 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4301 = mem[_4267]
                require mem[_4267] == mem[_4267 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _4408 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_4408)
                require ext_code.size(address(_4301))
                staticcall address(_4301).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_4408)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4467 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4481 = mem[_4467]
                require mem[_4467] == mem[_4467 + 12 len 20]
                _4527 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_4527 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_4527 + 36] = _4078
                mem[_4527 + 68] = 0
                mem[_4527 + 100] = address(_4481)
                mem[_4527 + 132] = 128
                mem[_4527 + 164] = mem[_4527]
                s = 0
                while s < mem[_4527]:
                    mem[s + _4527 + 196] = mem[s + _4527 + 32]
                    _3680 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_4527]) > mem[_4527]:
                    mem[mem[_4527] + _4527 + 196] = 0
                require ext_code.size(address(_3848))
                call address(_3848).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_4527]) + _4527 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3680 = mem[96]
                idx = idx + 1
                s = _3848
                s = _4481
                s = _4078
                continue 
            require _2511 / 2 < mem[96]
            _3698 = mem[(16 * Mask(251, 1, _2511)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3698))
            staticcall address(_3698).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3752 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3752] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2517 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2547 = mem[_2517]
                require mem[_2517] == mem[_2517 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2598 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2598)
                require ext_code.size(address(_2547))
                staticcall address(_2547).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2598)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2645 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2679 = mem[_2645]
                require mem[_2645] == mem[_2645 + 12 len 20]
                require ext_code.size(mem[_2645 + 12 len 20])
                staticcall mem[_2645 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2755 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2775 = mem[_2755]
                require mem[_2755] == mem[_2755 + 18 len 14]
                _2803 = mem[_2755 + 32]
                require mem[_2755 + 32] == mem[_2755 + 50 len 14]
                require mem[_2755 + 64] == mem[_2755 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2755 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2755 + 50 len 14] / (997 * s) + (1000 * mem[_2755 + 18 len 14])
                        idx = idx + 1
                        s = _2679
                        s = 997 * s * Mask(112, 0, _2803) / (997 * s) + (1000 * Mask(112, 0, _2775))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2755 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2755 + 50 len 14] / (997 * s) + (1000 * mem[_2755 + 18 len 14])
                        idx = idx + 1
                        s = _2679
                        s = 997 * s * Mask(112, 0, _2803) / (997 * s) + (1000 * Mask(112, 0, _2775))
                        continue 
                require (997 * s) + (1000 * mem[_2755 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2755 + 18 len 14] / (997 * s) + (1000 * mem[_2755 + 50 len 14])
                idx = idx + 1
                s = _2679
                s = 997 * s * Mask(112, 0, _2775) / (997 * s) + (1000 * Mask(112, 0, _2803))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2514 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2515 = mem[96]
            require mem[96] / 2 < mem[96]
            _2544 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2544))
            staticcall address(_2544).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3681 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3681 - 1:
                require idx < mem[96]
                require 0 < mem[_2514]
                mem[_2514 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2514]
                mem[_2514 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2515 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_2515 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_2515 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3779 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3791 = mem[_3779]
                require mem[_3779] == mem[_3779 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _3826 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_3826)
                require ext_code.size(address(_3791))
                staticcall address(_3791).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3826)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3843 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3849 = mem[_3843]
                require mem[_3843] == mem[_3843 + 12 len 20]
                if idx != _2515 / 2:
                    require ext_code.size(mem[_3843 + 12 len 20])
                    staticcall mem[_3843 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3885 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3885] == mem[_3885 + 12 len 20]
                    require idx - (_2515 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _3922 = mem[(32 * idx - (_2515 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2514]
                    if mem[_2514 + 44 len 20] == mem[_3885 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3989 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3989 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3989 + 36] = 0
                            mem[_3989 + 68] = _3922
                            mem[_3989 + 100] = this.address
                            mem[_3989 + 132] = 128
                            mem[_3989 + 164] = mem[_3989]
                            s = 0
                            while s < mem[_3989]:
                                mem[s + _3989 + 196] = mem[s + _3989 + 32]
                                _3681 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3989]) > mem[_3989]:
                                mem[mem[_3989] + _3989 + 196] = 0
                            require ext_code.size(address(_3849))
                            call address(_3849).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3989]) + _3989 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3681 = mem[96]
                            idx = idx + 1
                            s = _3849
                            s = this.address
                            s = _3922
                            continue 
                        require idx + -(_2515 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4039 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4061 = mem[_4039]
                        require mem[_4039] == mem[_4039 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4202 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4202)
                        require ext_code.size(address(_4061))
                        staticcall address(_4061).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4202)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4336 = mem[_4302]
                        require mem[_4302] == mem[_4302 + 12 len 20]
                        _4432 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4432 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4432 + 36] = 0
                        mem[_4432 + 68] = _3922
                        mem[_4432 + 100] = address(_4336)
                        mem[_4432 + 132] = 128
                        mem[_4432 + 164] = mem[_4432]
                        s = 0
                        while s < mem[_4432]:
                            mem[s + _4432 + 196] = mem[s + _4432 + 32]
                            _3681 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4432]) > mem[_4432]:
                            mem[mem[_4432] + _4432 + 196] = 0
                        require ext_code.size(address(_3849))
                        call address(_3849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _3922, address(_4336), 128, mem[_4432], mem[_4432 + 196 len ceil32(mem[_4432])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3681 = mem[96]
                        idx = idx + 1
                        s = _3849
                        s = _4336
                        s = _3922
                        continue 
                    if idx + 2 >= mem[96]:
                        _3993 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3993 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3993 + 36] = _3922
                        mem[_3993 + 68] = 0
                        mem[_3993 + 100] = this.address
                        mem[_3993 + 132] = 128
                        mem[_3993 + 164] = mem[_3993]
                        s = 0
                        while s < mem[_3993]:
                            mem[s + _3993 + 196] = mem[s + _3993 + 32]
                            _3681 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3993]) > mem[_3993]:
                            mem[mem[_3993] + _3993 + 196] = 0
                        require ext_code.size(address(_3849))
                        call address(_3849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3922, 0, address(this.address), 128, mem[_3993], mem[_3993 + 196 len ceil32(mem[_3993])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3681 = mem[96]
                        idx = idx + 1
                        s = _3849
                        s = this.address
                        s = _3922
                        continue 
                    require idx + -(_2515 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4041 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4062 = mem[_4041]
                    require mem[_4041] == mem[_4041 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4204 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4204)
                    require ext_code.size(address(_4062))
                    staticcall address(_4062).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4204)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4337 = mem[_4303]
                    require mem[_4303] == mem[_4303 + 12 len 20]
                    _4433 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4433 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4433 + 36] = _3922
                    mem[_4433 + 68] = 0
                    mem[_4433 + 100] = address(_4337)
                    mem[_4433 + 132] = 128
                    mem[_4433 + 164] = mem[_4433]
                    s = 0
                    while s < mem[_4433]:
                        mem[s + _4433 + 196] = mem[s + _4433 + 32]
                        _3681 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4433]) > mem[_4433]:
                        mem[mem[_4433] + _4433 + 196] = 0
                    require ext_code.size(address(_3849))
                    call address(_3849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _3922, 0, address(_4337), 128, mem[_4433], mem[_4433 + 196 len ceil32(mem[_4433])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3681 = mem[96]
                    idx = idx + 1
                    s = _3849
                    s = _4337
                    s = _3922
                    continue 
                require 0 < mem[_2514]
                _3874 = mem[_2514 + 32]
                mem[mem[64] + 4] = mem[_3843 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3874))
                call address(_3874).transfer(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3903 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3903] == bool(mem[_3903])
                require ext_code.size(address(_3849))
                staticcall address(_3849).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3955 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3955] == mem[_3955 + 12 len 20]
                require idx - (_2515 / 2) < mem[(32 * ('cd', 68).length) + 128]
                _4082 = mem[(32 * idx - (_2515 / 2)) + (32 * ('cd', 68).length) + 160]
                require 0 < mem[_2514]
                if mem[_2514 + 44 len 20] == mem[_3955 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _4206 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4206 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4206 + 36] = 0
                        mem[_4206 + 68] = _4082
                        mem[_4206 + 100] = this.address
                        mem[_4206 + 132] = 128
                        mem[_4206 + 164] = mem[_4206]
                        s = 0
                        while s < mem[_4206]:
                            mem[s + _4206 + 196] = mem[s + _4206 + 32]
                            _3681 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4206]) > mem[_4206]:
                            mem[mem[_4206] + _4206 + 196] = 0
                        require ext_code.size(address(_3849))
                        call address(_3849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _4082, address(this.address), 128, mem[_4206], mem[_4206 + 196 len ceil32(mem[_4206])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3681 = mem[96]
                        idx = idx + 1
                        s = _3849
                        s = this.address
                        s = _4082
                        continue 
                    require idx + -(_2515 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4271 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4304 = mem[_4271]
                    require mem[_4271] == mem[_4271 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4410 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4410)
                    require ext_code.size(address(_4304))
                    staticcall address(_4304).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4410)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4468 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4484 = mem[_4468]
                    require mem[_4468] == mem[_4468 + 12 len 20]
                    _4528 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4528 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4528 + 36] = 0
                    mem[_4528 + 68] = _4082
                    mem[_4528 + 100] = address(_4484)
                    mem[_4528 + 132] = 128
                    mem[_4528 + 164] = mem[_4528]
                    s = 0
                    while s < mem[_4528]:
                        mem[s + _4528 + 196] = mem[s + _4528 + 32]
                        _3681 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4528]) > mem[_4528]:
                        mem[mem[_4528] + _4528 + 196] = 0
                    require ext_code.size(address(_3849))
                    call address(_3849).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4528]) + _4528 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3681 = mem[96]
                    idx = idx + 1
                    s = _3849
                    s = _4484
                    s = _4082
                    continue 
                if idx + 2 >= mem[96]:
                    _4210 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4210 + 36] = _4082
                    mem[_4210 + 68] = 0
                    mem[_4210 + 100] = this.address
                    mem[_4210 + 132] = 128
                    mem[_4210 + 164] = mem[_4210]
                    s = 0
                    while s < mem[_4210]:
                        mem[s + _4210 + 196] = mem[s + _4210 + 32]
                        _3681 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4210]) > mem[_4210]:
                        mem[mem[_4210] + _4210 + 196] = 0
                    require ext_code.size(address(_3849))
                    call address(_3849).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4210]) + _4210 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3681 = mem[96]
                    idx = idx + 1
                    s = _3849
                    s = this.address
                    s = _4082
                    continue 
                require idx + -(_2515 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_2515 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4273 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4305 = mem[_4273]
                require mem[_4273] == mem[_4273 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _4412 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_4412)
                require ext_code.size(address(_4305))
                staticcall address(_4305).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_4412)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4469 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4485 = mem[_4469]
                require mem[_4469] == mem[_4469 + 12 len 20]
                _4529 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_4529 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_4529 + 36] = _4082
                mem[_4529 + 68] = 0
                mem[_4529 + 100] = address(_4485)
                mem[_4529 + 132] = 128
                mem[_4529 + 164] = mem[_4529]
                s = 0
                while s < mem[_4529]:
                    mem[s + _4529 + 196] = mem[s + _4529 + 32]
                    _3681 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_4529]) > mem[_4529]:
                    mem[mem[_4529] + _4529 + 196] = 0
                require ext_code.size(address(_3849))
                call address(_3849).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_4529]) + _4529 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3681 = mem[96]
                idx = idx + 1
                s = _3849
                s = _4485
                s = _4082
                continue 
            require _2515 / 2 < mem[96]
            _3702 = mem[(16 * Mask(251, 1, _2515)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3702))
            staticcall address(_3702).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3756 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3756] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2521 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2551 = mem[_2521]
                    require mem[_2521] == mem[_2521 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _2601 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_2601)
                    require ext_code.size(address(_2551))
                    staticcall address(_2551).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2601)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2650 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2683 = mem[_2650]
                    require mem[_2650] == mem[_2650 + 12 len 20]
                    require ext_code.size(mem[_2650 + 12 len 20])
                    staticcall mem[_2650 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2758 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2776 = mem[_2758]
                    require mem[_2758] == mem[_2758 + 18 len 14]
                    _2806 = mem[_2758 + 32]
                    require mem[_2758 + 32] == mem[_2758 + 50 len 14]
                    require mem[_2758 + 64] == mem[_2758 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2758 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2758 + 50 len 14] / (997 * s) + (1000 * mem[_2758 + 18 len 14])
                            idx = idx + 1
                            s = _2683
                            s = 997 * s * Mask(112, 0, _2806) / (997 * s) + (1000 * Mask(112, 0, _2776))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2758 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2758 + 50 len 14] / (997 * s) + (1000 * mem[_2758 + 18 len 14])
                            idx = idx + 1
                            s = _2683
                            s = 997 * s * Mask(112, 0, _2806) / (997 * s) + (1000 * Mask(112, 0, _2776))
                            continue 
                    require (997 * s) + (1000 * mem[_2758 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2758 + 18 len 14] / (997 * s) + (1000 * mem[_2758 + 50 len 14])
                    idx = idx + 1
                    s = _2683
                    s = 997 * s * Mask(112, 0, _2776) / (997 * s) + (1000 * Mask(112, 0, _2806))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2518 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2519 = mem[96]
                require mem[96] / 2 < mem[96]
                _2548 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2548))
                staticcall address(_2548).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3682 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3682 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2518]
                    mem[_2518 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2518]
                    mem[_2518 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2519 / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (_2519 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2519 / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3781 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3793 = mem[_3781]
                    require mem[_3781] == mem[_3781 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _3828 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_3828)
                    require ext_code.size(address(_3793))
                    staticcall address(_3793).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3828)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3844 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3850 = mem[_3844]
                    require mem[_3844] == mem[_3844 + 12 len 20]
                    if idx != _2519 / 2:
                        require ext_code.size(mem[_3844 + 12 len 20])
                        staticcall mem[_3844 + 12 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3886 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3886] == mem[_3886 + 12 len 20]
                        require idx - (_2519 / 2) < mem[(32 * ('cd', 68).length) + 128]
                        _3924 = mem[(32 * idx - (_2519 / 2)) + (32 * ('cd', 68).length) + 160]
                        require 0 < mem[_2518]
                        if mem[_2518 + 44 len 20] == mem[_3886 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _3998 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_3998 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3998 + 36] = 0
                                mem[_3998 + 68] = _3924
                                mem[_3998 + 100] = this.address
                                mem[_3998 + 132] = 128
                                mem[_3998 + 164] = mem[_3998]
                                s = 0
                                while s < mem[_3998]:
                                    mem[s + _3998 + 196] = mem[s + _3998 + 32]
                                    _3682 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_3998]) > mem[_3998]:
                                    mem[mem[_3998] + _3998 + 196] = 0
                                require ext_code.size(address(_3850))
                                call address(_3850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _3924, address(this.address), 128, mem[_3998], mem[_3998 + 196 len ceil32(mem[_3998])]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3682 = mem[96]
                                idx = idx + 1
                                s = _3850
                                s = this.address
                                s = _3924
                                continue 
                            require idx + -(_2519 / 2) + 1 < mem[96]
                            require ext_code.size(mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20])
                            staticcall mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20].factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4064 = mem[_4043]
                            require mem[_4043] == mem[_4043 + 12 len 20]
                            require idx + 1 < mem[96]
                            require idx + 2 < mem[96]
                            _4214 = mem[(32 * idx + 2) + 128]
                            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                            mem[mem[64] + 36] = address(_4214)
                            require ext_code.size(address(_4064))
                            staticcall address(_4064).getPair(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_4214)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4306 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4338 = mem[_4306]
                            require mem[_4306] == mem[_4306 + 12 len 20]
                            _4434 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4434 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4434 + 36] = 0
                            mem[_4434 + 68] = _3924
                            mem[_4434 + 100] = address(_4338)
                            mem[_4434 + 132] = 128
                            mem[_4434 + 164] = mem[_4434]
                            s = 0
                            while s < mem[_4434]:
                                mem[s + _4434 + 196] = mem[s + _4434 + 32]
                                _3682 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4434]) > mem[_4434]:
                                mem[mem[_4434] + _4434 + 196] = 0
                            require ext_code.size(address(_3850))
                            call address(_3850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3924, address(_4338), 128, mem[_4434], mem[_4434 + 196 len ceil32(mem[_4434])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3682 = mem[96]
                            idx = idx + 1
                            s = _3850
                            s = _4338
                            s = _3924
                            continue 
                        if idx + 2 >= mem[96]:
                            _4002 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4002 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4002 + 36] = _3924
                            mem[_4002 + 68] = 0
                            mem[_4002 + 100] = this.address
                            mem[_4002 + 132] = 128
                            mem[_4002 + 164] = mem[_4002]
                            s = 0
                            while s < mem[_4002]:
                                mem[s + _4002 + 196] = mem[s + _4002 + 32]
                                _3682 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4002]) > mem[_4002]:
                                mem[mem[_4002] + _4002 + 196] = 0
                            require ext_code.size(address(_3850))
                            call address(_3850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _3924, 0, address(this.address), 128, mem[_4002], mem[_4002 + 196 len ceil32(mem[_4002])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3682 = mem[96]
                            idx = idx + 1
                            s = _3850
                            s = this.address
                            s = _3924
                            continue 
                        require idx + -(_2519 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4045 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4065 = mem[_4045]
                        require mem[_4045] == mem[_4045 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4216 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4216)
                        require ext_code.size(address(_4065))
                        staticcall address(_4065).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4216)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4307 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4339 = mem[_4307]
                        require mem[_4307] == mem[_4307 + 12 len 20]
                        _4435 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4435 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4435 + 36] = _3924
                        mem[_4435 + 68] = 0
                        mem[_4435 + 100] = address(_4339)
                        mem[_4435 + 132] = 128
                        mem[_4435 + 164] = mem[_4435]
                        s = 0
                        while s < mem[_4435]:
                            mem[s + _4435 + 196] = mem[s + _4435 + 32]
                            _3682 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4435]) > mem[_4435]:
                            mem[mem[_4435] + _4435 + 196] = 0
                        require ext_code.size(address(_3850))
                        call address(_3850).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4435]) + _4435 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3682 = mem[96]
                        idx = idx + 1
                        s = _3850
                        s = _4339
                        s = _3924
                        continue 
                    require 0 < mem[_2518]
                    _3876 = mem[_2518 + 32]
                    mem[mem[64] + 4] = mem[_3844 + 12 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3876))
                    call address(_3876).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3904 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3904] == bool(mem[_3904])
                    require ext_code.size(address(_3850))
                    staticcall address(_3850).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3958 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3958] == mem[_3958 + 12 len 20]
                    require idx - (_2519 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _4086 = mem[(32 * idx - (_2519 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2518]
                    if mem[_2518 + 44 len 20] == mem[_3958 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _4218 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4218 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4218 + 36] = 0
                            mem[_4218 + 68] = _4086
                            mem[_4218 + 100] = this.address
                            mem[_4218 + 132] = 128
                            mem[_4218 + 164] = mem[_4218]
                            s = 0
                            while s < mem[_4218]:
                                mem[s + _4218 + 196] = mem[s + _4218 + 32]
                                _3682 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4218]) > mem[_4218]:
                                mem[mem[_4218] + _4218 + 196] = 0
                            require ext_code.size(address(_3850))
                            call address(_3850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _4086, address(this.address), 128, mem[_4218], mem[_4218 + 196 len ceil32(mem[_4218])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3682 = mem[96]
                            idx = idx + 1
                            s = _3850
                            s = this.address
                            s = _4086
                            continue 
                        require idx + -(_2519 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4277 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4308 = mem[_4277]
                        require mem[_4277] == mem[_4277 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4414 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4414)
                        require ext_code.size(address(_4308))
                        staticcall address(_4308).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4414)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4470 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4488 = mem[_4470]
                        require mem[_4470] == mem[_4470 + 12 len 20]
                        _4530 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4530 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4530 + 36] = 0
                        mem[_4530 + 68] = _4086
                        mem[_4530 + 100] = address(_4488)
                        mem[_4530 + 132] = 128
                        mem[_4530 + 164] = mem[_4530]
                        s = 0
                        while s < mem[_4530]:
                            mem[s + _4530 + 196] = mem[s + _4530 + 32]
                            _3682 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4530]) > mem[_4530]:
                            mem[mem[_4530] + _4530 + 196] = 0
                        require ext_code.size(address(_3850))
                        call address(_3850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _4086, address(_4488), 128, mem[_4530], mem[_4530 + 196 len ceil32(mem[_4530])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3682 = mem[96]
                        idx = idx + 1
                        s = _3850
                        s = _4488
                        s = _4086
                        continue 
                    if idx + 2 >= mem[96]:
                        _4222 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4222 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4222 + 36] = _4086
                        mem[_4222 + 68] = 0
                        mem[_4222 + 100] = this.address
                        mem[_4222 + 132] = 128
                        mem[_4222 + 164] = mem[_4222]
                        s = 0
                        while s < mem[_4222]:
                            mem[s + _4222 + 196] = mem[s + _4222 + 32]
                            _3682 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4222]) > mem[_4222]:
                            mem[mem[_4222] + _4222 + 196] = 0
                        require ext_code.size(address(_3850))
                        call address(_3850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _4086, 0, address(this.address), 128, mem[_4222], mem[_4222 + 196 len ceil32(mem[_4222])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3682 = mem[96]
                        idx = idx + 1
                        s = _3850
                        s = this.address
                        s = _4086
                        continue 
                    require idx + -(_2519 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2519 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4279 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4309 = mem[_4279]
                    require mem[_4279] == mem[_4279 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4416 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4416)
                    require ext_code.size(address(_4309))
                    staticcall address(_4309).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4416)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4471 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4489 = mem[_4471]
                    require mem[_4471] == mem[_4471 + 12 len 20]
                    _4531 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4531 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4531 + 36] = _4086
                    mem[_4531 + 68] = 0
                    mem[_4531 + 100] = address(_4489)
                    mem[_4531 + 132] = 128
                    mem[_4531 + 164] = mem[_4531]
                    s = 0
                    while s < mem[_4531]:
                        mem[s + _4531 + 196] = mem[s + _4531 + 32]
                        _3682 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4531]) > mem[_4531]:
                        mem[mem[_4531] + _4531 + 196] = 0
                    require ext_code.size(address(_3850))
                    call address(_3850).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4531]) + _4531 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3682 = mem[96]
                    idx = idx + 1
                    s = _3850
                    s = _4489
                    s = _4086
                    continue 
                require _2519 / 2 < mem[96]
                _3706 = mem[(16 * Mask(251, 1, _2519)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3706))
                staticcall address(_3706).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3760 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3760] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2525 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2555 = mem[_2525]
                    require mem[_2525] == mem[_2525 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _2604 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_2604)
                    require ext_code.size(address(_2555))
                    staticcall address(_2555).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2604)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2655 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2687 = mem[_2655]
                    require mem[_2655] == mem[_2655 + 12 len 20]
                    require ext_code.size(mem[_2655 + 12 len 20])
                    staticcall mem[_2655 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2761 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2777 = mem[_2761]
                    require mem[_2761] == mem[_2761 + 18 len 14]
                    _2809 = mem[_2761 + 32]
                    require mem[_2761 + 32] == mem[_2761 + 50 len 14]
                    require mem[_2761 + 64] == mem[_2761 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2761 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2761 + 50 len 14] / (997 * s) + (1000 * mem[_2761 + 18 len 14])
                            idx = idx + 1
                            s = _2687
                            s = 997 * s * Mask(112, 0, _2809) / (997 * s) + (1000 * Mask(112, 0, _2777))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2761 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2761 + 50 len 14] / (997 * s) + (1000 * mem[_2761 + 18 len 14])
                            idx = idx + 1
                            s = _2687
                            s = 997 * s * Mask(112, 0, _2809) / (997 * s) + (1000 * Mask(112, 0, _2777))
                            continue 
                    require (997 * s) + (1000 * mem[_2761 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2761 + 18 len 14] / (997 * s) + (1000 * mem[_2761 + 50 len 14])
                    idx = idx + 1
                    s = _2687
                    s = 997 * s * Mask(112, 0, _2777) / (997 * s) + (1000 * Mask(112, 0, _2809))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2522 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2523 = mem[96]
                require mem[96] / 2 < mem[96]
                _2552 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2552))
                staticcall address(_2552).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3683 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3683 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2522]
                    mem[_2522 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2522]
                    mem[_2522 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2523 / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (_2523 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2523 / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3783 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3795 = mem[_3783]
                    require mem[_3783] == mem[_3783 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _3830 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_3830)
                    require ext_code.size(address(_3795))
                    staticcall address(_3795).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3830)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3845 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3851 = mem[_3845]
                    require mem[_3845] == mem[_3845 + 12 len 20]
                    if idx != _2523 / 2:
                        require ext_code.size(mem[_3845 + 12 len 20])
                        staticcall mem[_3845 + 12 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3887 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3887] == mem[_3887 + 12 len 20]
                        require idx - (_2523 / 2) < mem[(32 * ('cd', 68).length) + 128]
                        _3926 = mem[(32 * idx - (_2523 / 2)) + (32 * ('cd', 68).length) + 160]
                        require 0 < mem[_2522]
                        if mem[_2522 + 44 len 20] == mem[_3887 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _4007 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_4007 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_4007 + 36] = 0
                                mem[_4007 + 68] = _3926
                                mem[_4007 + 100] = this.address
                                mem[_4007 + 132] = 128
                                mem[_4007 + 164] = mem[_4007]
                                s = 0
                                while s < mem[_4007]:
                                    mem[s + _4007 + 196] = mem[s + _4007 + 32]
                                    _3683 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_4007]) > mem[_4007]:
                                    mem[mem[_4007] + _4007 + 196] = 0
                                require ext_code.size(address(_3851))
                                call address(_3851).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_4007]) + _4007 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3683 = mem[96]
                                idx = idx + 1
                                s = _3851
                                s = this.address
                                s = _3926
                                continue 
                            require idx + -(_2523 / 2) + 1 < mem[96]
                            require ext_code.size(mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20])
                            staticcall mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20].factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4047 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4067 = mem[_4047]
                            require mem[_4047] == mem[_4047 + 12 len 20]
                            require idx + 1 < mem[96]
                            require idx + 2 < mem[96]
                            _4226 = mem[(32 * idx + 2) + 128]
                            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                            mem[mem[64] + 36] = address(_4226)
                            require ext_code.size(address(_4067))
                            staticcall address(_4067).getPair(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_4226)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4310 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4340 = mem[_4310]
                            require mem[_4310] == mem[_4310 + 12 len 20]
                            _4436 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4436 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4436 + 36] = 0
                            mem[_4436 + 68] = _3926
                            mem[_4436 + 100] = address(_4340)
                            mem[_4436 + 132] = 128
                            mem[_4436 + 164] = mem[_4436]
                            s = 0
                            while s < mem[_4436]:
                                mem[s + _4436 + 196] = mem[s + _4436 + 32]
                                _3683 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4436]) > mem[_4436]:
                                mem[mem[_4436] + _4436 + 196] = 0
                            require ext_code.size(address(_3851))
                            call address(_3851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3926, address(_4340), 128, mem[_4436], mem[_4436 + 196 len ceil32(mem[_4436])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3683 = mem[96]
                            idx = idx + 1
                            s = _3851
                            s = _4340
                            s = _3926
                            continue 
                        if idx + 2 >= mem[96]:
                            _4011 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4011 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4011 + 36] = _3926
                            mem[_4011 + 68] = 0
                            mem[_4011 + 100] = this.address
                            mem[_4011 + 132] = 128
                            mem[_4011 + 164] = mem[_4011]
                            s = 0
                            while s < mem[_4011]:
                                mem[s + _4011 + 196] = mem[s + _4011 + 32]
                                _3683 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4011]) > mem[_4011]:
                                mem[mem[_4011] + _4011 + 196] = 0
                            require ext_code.size(address(_3851))
                            call address(_3851).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4011]) + _4011 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3683 = mem[96]
                            idx = idx + 1
                            s = _3851
                            s = this.address
                            s = _3926
                            continue 
                        require idx + -(_2523 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4049 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4068 = mem[_4049]
                        require mem[_4049] == mem[_4049 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4228 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4228)
                        require ext_code.size(address(_4068))
                        staticcall address(_4068).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4228)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4341 = mem[_4311]
                        require mem[_4311] == mem[_4311 + 12 len 20]
                        _4437 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4437 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4437 + 36] = _3926
                        mem[_4437 + 68] = 0
                        mem[_4437 + 100] = address(_4341)
                        mem[_4437 + 132] = 128
                        mem[_4437 + 164] = mem[_4437]
                        s = 0
                        while s < mem[_4437]:
                            mem[s + _4437 + 196] = mem[s + _4437 + 32]
                            _3683 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4437]) > mem[_4437]:
                            mem[mem[_4437] + _4437 + 196] = 0
                        require ext_code.size(address(_3851))
                        call address(_3851).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4437]) + _4437 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3683 = mem[96]
                        idx = idx + 1
                        s = _3851
                        s = _4341
                        s = _3926
                        continue 
                    require 0 < mem[_2522]
                    _3878 = mem[_2522 + 32]
                    mem[mem[64] + 4] = mem[_3845 + 12 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3878))
                    call address(_3878).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3905 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3905] == bool(mem[_3905])
                    require ext_code.size(address(_3851))
                    staticcall address(_3851).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3961 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3961] == mem[_3961 + 12 len 20]
                    require idx - (_2523 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _4090 = mem[(32 * idx - (_2523 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2522]
                    if mem[_2522 + 44 len 20] == mem[_3961 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _4230 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4230 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4230 + 36] = 0
                            mem[_4230 + 68] = _4090
                            mem[_4230 + 100] = this.address
                            mem[_4230 + 132] = 128
                            mem[_4230 + 164] = mem[_4230]
                            s = 0
                            while s < mem[_4230]:
                                mem[s + _4230 + 196] = mem[s + _4230 + 32]
                                _3683 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4230]) > mem[_4230]:
                                mem[mem[_4230] + _4230 + 196] = 0
                            require ext_code.size(address(_3851))
                            call address(_3851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _4090, address(this.address), 128, mem[_4230], mem[_4230 + 196 len ceil32(mem[_4230])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3683 = mem[96]
                            idx = idx + 1
                            s = _3851
                            s = this.address
                            s = _4090
                            continue 
                        require idx + -(_2523 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4283 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4312 = mem[_4283]
                        require mem[_4283] == mem[_4283 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4418 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4418)
                        require ext_code.size(address(_4312))
                        staticcall address(_4312).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4418)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4472 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4492 = mem[_4472]
                        require mem[_4472] == mem[_4472 + 12 len 20]
                        _4532 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4532 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4532 + 36] = 0
                        mem[_4532 + 68] = _4090
                        mem[_4532 + 100] = address(_4492)
                        mem[_4532 + 132] = 128
                        mem[_4532 + 164] = mem[_4532]
                        s = 0
                        while s < mem[_4532]:
                            mem[s + _4532 + 196] = mem[s + _4532 + 32]
                            _3683 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4532]) > mem[_4532]:
                            mem[mem[_4532] + _4532 + 196] = 0
                        require ext_code.size(address(_3851))
                        call address(_3851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _4090, address(_4492), 128, mem[_4532], mem[_4532 + 196 len ceil32(mem[_4532])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3683 = mem[96]
                        idx = idx + 1
                        s = _3851
                        s = _4492
                        s = _4090
                        continue 
                    if idx + 2 >= mem[96]:
                        _4234 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4234 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4234 + 36] = _4090
                        mem[_4234 + 68] = 0
                        mem[_4234 + 100] = this.address
                        mem[_4234 + 132] = 128
                        mem[_4234 + 164] = mem[_4234]
                        s = 0
                        while s < mem[_4234]:
                            mem[s + _4234 + 196] = mem[s + _4234 + 32]
                            _3683 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4234]) > mem[_4234]:
                            mem[mem[_4234] + _4234 + 196] = 0
                        require ext_code.size(address(_3851))
                        call address(_3851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _4090, 0, address(this.address), 128, mem[_4234], mem[_4234 + 196 len ceil32(mem[_4234])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3683 = mem[96]
                        idx = idx + 1
                        s = _3851
                        s = this.address
                        s = _4090
                        continue 
                    require idx + -(_2523 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2523 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4285 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4313 = mem[_4285]
                    require mem[_4285] == mem[_4285 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4420 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4420)
                    require ext_code.size(address(_4313))
                    staticcall address(_4313).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4420)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4473 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4493 = mem[_4473]
                    require mem[_4473] == mem[_4473 + 12 len 20]
                    _4533 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4533 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4533 + 36] = _4090
                    mem[_4533 + 68] = 0
                    mem[_4533 + 100] = address(_4493)
                    mem[_4533 + 132] = 128
                    mem[_4533 + 164] = mem[_4533]
                    s = 0
                    while s < mem[_4533]:
                        mem[s + _4533 + 196] = mem[s + _4533 + 32]
                        _3683 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4533]) > mem[_4533]:
                        mem[mem[_4533] + _4533 + 196] = 0
                    require ext_code.size(address(_3851))
                    call address(_3851).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4533]) + _4533 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3683 = mem[96]
                    idx = idx + 1
                    s = _3851
                    s = _4493
                    s = _4090
                    continue 
                require _2523 / 2 < mem[96]
                _3710 = mem[(16 * Mask(251, 1, _2523)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3710))
                staticcall address(_3710).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3764 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3764] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2529 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2559 = mem[_2529]
                    require mem[_2529] == mem[_2529 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _2607 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_2607)
                    require ext_code.size(address(_2559))
                    staticcall address(_2559).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2607)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2660 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2691 = mem[_2660]
                    require mem[_2660] == mem[_2660 + 12 len 20]
                    require ext_code.size(mem[_2660 + 12 len 20])
                    staticcall mem[_2660 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2764 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2778 = mem[_2764]
                    require mem[_2764] == mem[_2764 + 18 len 14]
                    _2812 = mem[_2764 + 32]
                    require mem[_2764 + 32] == mem[_2764 + 50 len 14]
                    require mem[_2764 + 64] == mem[_2764 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2764 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2764 + 50 len 14] / (997 * s) + (1000 * mem[_2764 + 18 len 14])
                            idx = idx + 1
                            s = _2691
                            s = 997 * s * Mask(112, 0, _2812) / (997 * s) + (1000 * Mask(112, 0, _2778))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2764 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2764 + 50 len 14] / (997 * s) + (1000 * mem[_2764 + 18 len 14])
                            idx = idx + 1
                            s = _2691
                            s = 997 * s * Mask(112, 0, _2812) / (997 * s) + (1000 * Mask(112, 0, _2778))
                            continue 
                    require (997 * s) + (1000 * mem[_2764 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2764 + 18 len 14] / (997 * s) + (1000 * mem[_2764 + 50 len 14])
                    idx = idx + 1
                    s = _2691
                    s = 997 * s * Mask(112, 0, _2778) / (997 * s) + (1000 * Mask(112, 0, _2812))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2526 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2527 = mem[96]
                require mem[96] / 2 < mem[96]
                _2556 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2556))
                staticcall address(_2556).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3684 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3684 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2526]
                    mem[_2526 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2526]
                    mem[_2526 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2527 / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (_2527 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2527 / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3797 = mem[_3785]
                    require mem[_3785] == mem[_3785 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _3832 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_3832)
                    require ext_code.size(address(_3797))
                    staticcall address(_3797).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3832)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3846 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3852 = mem[_3846]
                    require mem[_3846] == mem[_3846 + 12 len 20]
                    if idx != _2527 / 2:
                        require ext_code.size(mem[_3846 + 12 len 20])
                        staticcall mem[_3846 + 12 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3888 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3888] == mem[_3888 + 12 len 20]
                        require idx - (_2527 / 2) < mem[(32 * ('cd', 68).length) + 128]
                        _3928 = mem[(32 * idx - (_2527 / 2)) + (32 * ('cd', 68).length) + 160]
                        require 0 < mem[_2526]
                        if mem[_2526 + 44 len 20] == mem[_3888 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _4016 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_4016 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_4016 + 36] = 0
                                mem[_4016 + 68] = _3928
                                mem[_4016 + 100] = this.address
                                mem[_4016 + 132] = 128
                                mem[_4016 + 164] = mem[_4016]
                                s = 0
                                while s < mem[_4016]:
                                    mem[s + _4016 + 196] = mem[s + _4016 + 32]
                                    _3684 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_4016]) > mem[_4016]:
                                    mem[mem[_4016] + _4016 + 196] = 0
                                require ext_code.size(address(_3852))
                                call address(_3852).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(mem[_4016]) + _4016 + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3684 = mem[96]
                                idx = idx + 1
                                s = _3852
                                s = this.address
                                s = _3928
                                continue 
                            require idx + -(_2527 / 2) + 1 < mem[96]
                            require ext_code.size(mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20])
                            staticcall mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20].factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4051 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4070 = mem[_4051]
                            require mem[_4051] == mem[_4051 + 12 len 20]
                            require idx + 1 < mem[96]
                            require idx + 2 < mem[96]
                            _4238 = mem[(32 * idx + 2) + 128]
                            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                            mem[mem[64] + 36] = address(_4238)
                            require ext_code.size(address(_4070))
                            staticcall address(_4070).getPair(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_4238)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4314 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4342 = mem[_4314]
                            require mem[_4314] == mem[_4314 + 12 len 20]
                            _4438 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4438 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4438 + 36] = 0
                            mem[_4438 + 68] = _3928
                            mem[_4438 + 100] = address(_4342)
                            mem[_4438 + 132] = 128
                            mem[_4438 + 164] = mem[_4438]
                            s = 0
                            while s < mem[_4438]:
                                mem[s + _4438 + 196] = mem[s + _4438 + 32]
                                _3684 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4438]) > mem[_4438]:
                                mem[mem[_4438] + _4438 + 196] = 0
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _3928, address(_4342), 128, mem[_4438], mem[_4438 + 196 len ceil32(mem[_4438])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3684 = mem[96]
                            idx = idx + 1
                            s = _3852
                            s = _4342
                            s = _3928
                            continue 
                        if idx + 2 >= mem[96]:
                            _4020 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4020 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4020 + 36] = _3928
                            mem[_4020 + 68] = 0
                            mem[_4020 + 100] = this.address
                            mem[_4020 + 132] = 128
                            mem[_4020 + 164] = mem[_4020]
                            s = 0
                            while s < mem[_4020]:
                                mem[s + _4020 + 196] = mem[s + _4020 + 32]
                                _3684 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4020]) > mem[_4020]:
                                mem[mem[_4020] + _4020 + 196] = 0
                            require ext_code.size(address(_3852))
                            call address(_3852).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4020]) + _4020 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3684 = mem[96]
                            idx = idx + 1
                            s = _3852
                            s = this.address
                            s = _3928
                            continue 
                        require idx + -(_2527 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4053 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4071 = mem[_4053]
                        require mem[_4053] == mem[_4053 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4240 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4240)
                        require ext_code.size(address(_4071))
                        staticcall address(_4071).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4240)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4315 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4343 = mem[_4315]
                        require mem[_4315] == mem[_4315 + 12 len 20]
                        _4439 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4439 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4439 + 36] = _3928
                        mem[_4439 + 68] = 0
                        mem[_4439 + 100] = address(_4343)
                        mem[_4439 + 132] = 128
                        mem[_4439 + 164] = mem[_4439]
                        s = 0
                        while s < mem[_4439]:
                            mem[s + _4439 + 196] = mem[s + _4439 + 32]
                            _3684 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4439]) > mem[_4439]:
                            mem[mem[_4439] + _4439 + 196] = 0
                        require ext_code.size(address(_3852))
                        call address(_3852).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4439]) + _4439 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3684 = mem[96]
                        idx = idx + 1
                        s = _3852
                        s = _4343
                        s = _3928
                        continue 
                    require 0 < mem[_2526]
                    _3880 = mem[_2526 + 32]
                    mem[mem[64] + 4] = mem[_3846 + 12 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3880))
                    call address(_3880).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3906 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3906] == bool(mem[_3906])
                    require ext_code.size(address(_3852))
                    staticcall address(_3852).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3964 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3964] == mem[_3964 + 12 len 20]
                    require idx - (_2527 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _4094 = mem[(32 * idx - (_2527 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2526]
                    if mem[_2526 + 44 len 20] == mem[_3964 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _4242 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4242 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4242 + 36] = 0
                            mem[_4242 + 68] = _4094
                            mem[_4242 + 100] = this.address
                            mem[_4242 + 132] = 128
                            mem[_4242 + 164] = mem[_4242]
                            s = 0
                            while s < mem[_4242]:
                                mem[s + _4242 + 196] = mem[s + _4242 + 32]
                                _3684 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4242]) > mem[_4242]:
                                mem[mem[_4242] + _4242 + 196] = 0
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _4094, address(this.address), 128, mem[_4242], mem[_4242 + 196 len ceil32(mem[_4242])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3684 = mem[96]
                            idx = idx + 1
                            s = _3852
                            s = this.address
                            s = _4094
                            continue 
                        require idx + -(_2527 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4289 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4316 = mem[_4289]
                        require mem[_4289] == mem[_4289 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4422 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4422)
                        require ext_code.size(address(_4316))
                        staticcall address(_4316).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4422)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4474 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4496 = mem[_4474]
                        require mem[_4474] == mem[_4474 + 12 len 20]
                        _4534 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4534 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4534 + 36] = 0
                        mem[_4534 + 68] = _4094
                        mem[_4534 + 100] = address(_4496)
                        mem[_4534 + 132] = 128
                        mem[_4534 + 164] = mem[_4534]
                        s = 0
                        while s < mem[_4534]:
                            mem[s + _4534 + 196] = mem[s + _4534 + 32]
                            _3684 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4534]) > mem[_4534]:
                            mem[mem[_4534] + _4534 + 196] = 0
                        require ext_code.size(address(_3852))
                        call address(_3852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _4094, address(_4496), 128, mem[_4534], mem[_4534 + 196 len ceil32(mem[_4534])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3684 = mem[96]
                        idx = idx + 1
                        s = _3852
                        s = _4496
                        s = _4094
                        continue 
                    if idx + 2 >= mem[96]:
                        _4246 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4246 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4246 + 36] = _4094
                        mem[_4246 + 68] = 0
                        mem[_4246 + 100] = this.address
                        mem[_4246 + 132] = 128
                        mem[_4246 + 164] = mem[_4246]
                        s = 0
                        while s < mem[_4246]:
                            mem[s + _4246 + 196] = mem[s + _4246 + 32]
                            _3684 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4246]) > mem[_4246]:
                            mem[mem[_4246] + _4246 + 196] = 0
                        require ext_code.size(address(_3852))
                        call address(_3852).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4246]) + _4246 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3684 = mem[96]
                        idx = idx + 1
                        s = _3852
                        s = this.address
                        s = _4094
                        continue 
                    require idx + -(_2527 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2527 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4291 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4317 = mem[_4291]
                    require mem[_4291] == mem[_4291 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4424 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4424)
                    require ext_code.size(address(_4317))
                    staticcall address(_4317).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4424)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4475 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4497 = mem[_4475]
                    require mem[_4475] == mem[_4475 + 12 len 20]
                    _4535 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4535 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4535 + 36] = _4094
                    mem[_4535 + 68] = 0
                    mem[_4535 + 100] = address(_4497)
                    mem[_4535 + 132] = 128
                    mem[_4535 + 164] = mem[_4535]
                    s = 0
                    while s < mem[_4535]:
                        mem[s + _4535 + 196] = mem[s + _4535 + 32]
                        _3684 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4535]) > mem[_4535]:
                        mem[mem[_4535] + _4535 + 196] = 0
                    require ext_code.size(address(_3852))
                    call address(_3852).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_4535]) + _4535 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3684 = mem[96]
                    idx = idx + 1
                    s = _3852
                    s = _4497
                    s = _4094
                    continue 
                require _2527 / 2 < mem[96]
                _3714 = mem[(16 * Mask(251, 1, _2527)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3714))
                staticcall address(_3714).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3768 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3768] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2533 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2563 = mem[_2533]
                    require mem[_2533] == mem[_2533 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _2610 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_2610)
                    require ext_code.size(address(_2563))
                    staticcall address(_2563).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2610)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2665 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2695 = mem[_2665]
                    require mem[_2665] == mem[_2665 + 12 len 20]
                    require ext_code.size(mem[_2665 + 12 len 20])
                    staticcall mem[_2665 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2767 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _2779 = mem[_2767]
                    require mem[_2767] == mem[_2767 + 18 len 14]
                    _2815 = mem[_2767 + 32]
                    require mem[_2767 + 32] == mem[_2767 + 50 len 14]
                    require mem[_2767 + 64] == mem[_2767 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2767 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2767 + 50 len 14] / (997 * s) + (1000 * mem[_2767 + 18 len 14])
                            idx = idx + 1
                            s = _2695
                            s = 997 * s * Mask(112, 0, _2815) / (997 * s) + (1000 * Mask(112, 0, _2779))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_2767 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2767 + 50 len 14] / (997 * s) + (1000 * mem[_2767 + 18 len 14])
                            idx = idx + 1
                            s = _2695
                            s = 997 * s * Mask(112, 0, _2815) / (997 * s) + (1000 * Mask(112, 0, _2779))
                            continue 
                    require (997 * s) + (1000 * mem[_2767 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_2767 + 18 len 14] / (997 * s) + (1000 * mem[_2767 + 50 len 14])
                    idx = idx + 1
                    s = _2695
                    s = 997 * s * Mask(112, 0, _2779) / (997 * s) + (1000 * Mask(112, 0, _2815))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _2530 = mem[64]
                mem[mem[64]] = 2
                mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
                _2531 = mem[96]
                require mem[96] / 2 < mem[96]
                _2560 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 100] = this.address
                require ext_code.size(address(_2560))
                staticcall address(_2560).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64] + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _3685 = mem[96]
                idx = mem[96] / 2
                s = 0
                s = 0
                s = cd[4]
                while idx < _3685 - 1:
                    require idx < mem[96]
                    require 0 < mem[_2530]
                    mem[_2530 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_2530]
                    mem[_2530 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx - (_2531 / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (_2531 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2531 / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3787 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3799 = mem[_3787]
                    require mem[_3787] == mem[_3787 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _3834 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_3834)
                    require ext_code.size(address(_3799))
                    staticcall address(_3799).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3834)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3847 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3853 = mem[_3847]
                    require mem[_3847] == mem[_3847 + 12 len 20]
                    if idx != _2531 / 2:
                        require ext_code.size(mem[_3847 + 12 len 20])
                        staticcall mem[_3847 + 12 len 20].token0() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3889 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_3889] == mem[_3889 + 12 len 20]
                        require idx - (_2531 / 2) < mem[(32 * ('cd', 68).length) + 128]
                        _3930 = mem[(32 * idx - (_2531 / 2)) + (32 * ('cd', 68).length) + 160]
                        require 0 < mem[_2530]
                        if mem[_2530 + 44 len 20] == mem[_3889 + 12 len 20]:
                            if idx + 2 >= mem[96]:
                                _4025 = mem[64]
                                mem[mem[64]] = 0
                                mem[64] = mem[64] + 32
                                mem[_4025 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_4025 + 36] = 0
                                mem[_4025 + 68] = _3930
                                mem[_4025 + 100] = this.address
                                mem[_4025 + 132] = 128
                                mem[_4025 + 164] = mem[_4025]
                                s = 0
                                while s < mem[_4025]:
                                    mem[s + _4025 + 196] = mem[s + _4025 + 32]
                                    _3685 = mem[96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_4025]) > mem[_4025]:
                                    mem[mem[_4025] + _4025 + 196] = 0
                                require ext_code.size(address(_3853))
                                call address(_3853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _3930, address(this.address), 128, mem[_4025], mem[_4025 + 196 len ceil32(mem[_4025])]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3685 = mem[96]
                                idx = idx + 1
                                s = _3853
                                s = this.address
                                s = _3930
                                continue 
                            require idx + -(_2531 / 2) + 1 < mem[96]
                            require ext_code.size(mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20])
                            staticcall mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20].factory() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4055 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4073 = mem[_4055]
                            require mem[_4055] == mem[_4055 + 12 len 20]
                            require idx + 1 < mem[96]
                            require idx + 2 < mem[96]
                            _4250 = mem[(32 * idx + 2) + 128]
                            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                            mem[mem[64] + 36] = address(_4250)
                            require ext_code.size(address(_4073))
                            staticcall address(_4073).getPair(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_4250)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4318 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4344 = mem[_4318]
                            require mem[_4318] == mem[_4318 + 12 len 20]
                            _4440 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4440 + 36] = 0
                            mem[_4440 + 68] = _3930
                            mem[_4440 + 100] = address(_4344)
                            mem[_4440 + 132] = 128
                            mem[_4440 + 164] = mem[_4440]
                            s = 0
                            while s < mem[_4440]:
                                mem[s + _4440 + 196] = mem[s + _4440 + 32]
                                _3685 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4440]) > mem[_4440]:
                                mem[mem[_4440] + _4440 + 196] = 0
                            require ext_code.size(address(_3853))
                            call address(_3853).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_4440]) + _4440 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3685 = mem[96]
                            idx = idx + 1
                            s = _3853
                            s = _4344
                            s = _3930
                            continue 
                        if idx + 2 >= mem[96]:
                            _4029 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4029 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4029 + 36] = _3930
                            mem[_4029 + 68] = 0
                            mem[_4029 + 100] = this.address
                            mem[_4029 + 132] = 128
                            mem[_4029 + 164] = mem[_4029]
                            s = 0
                            while s < mem[_4029]:
                                mem[s + _4029 + 196] = mem[s + _4029 + 32]
                                _3685 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4029]) > mem[_4029]:
                                mem[mem[_4029] + _4029 + 196] = 0
                            require ext_code.size(address(_3853))
                            call address(_3853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _3930, 0, address(this.address), 128, mem[_4029], mem[_4029 + 196 len ceil32(mem[_4029])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3685 = mem[96]
                            idx = idx + 1
                            s = _3853
                            s = this.address
                            s = _3930
                            continue 
                        require idx + -(_2531 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4057 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4074 = mem[_4057]
                        require mem[_4057] == mem[_4057 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4252 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4252)
                        require ext_code.size(address(_4074))
                        staticcall address(_4074).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4252)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4319 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4345 = mem[_4319]
                        require mem[_4319] == mem[_4319 + 12 len 20]
                        _4441 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4441 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4441 + 36] = _3930
                        mem[_4441 + 68] = 0
                        mem[_4441 + 100] = address(_4345)
                        mem[_4441 + 132] = 128
                        mem[_4441 + 164] = mem[_4441]
                        s = 0
                        while s < mem[_4441]:
                            mem[s + _4441 + 196] = mem[s + _4441 + 32]
                            _3685 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4441]) > mem[_4441]:
                            mem[mem[_4441] + _4441 + 196] = 0
                        require ext_code.size(address(_3853))
                        call address(_3853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _3930, 0, address(_4345), 128, mem[_4441], mem[_4441 + 196 len ceil32(mem[_4441])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3685 = mem[96]
                        idx = idx + 1
                        s = _3853
                        s = _4345
                        s = _3930
                        continue 
                    require 0 < mem[_2530]
                    _3882 = mem[_2530 + 32]
                    mem[mem[64] + 4] = mem[_3847 + 12 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(address(_3882))
                    call address(_3882).transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3907 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3907] == bool(mem[_3907])
                    require ext_code.size(address(_3853))
                    staticcall address(_3853).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3967 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3967] == mem[_3967 + 12 len 20]
                    require idx - (_2531 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _4098 = mem[(32 * idx - (_2531 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_2530]
                    if mem[_2530 + 44 len 20] == mem[_3967 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _4254 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_4254 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4254 + 36] = 0
                            mem[_4254 + 68] = _4098
                            mem[_4254 + 100] = this.address
                            mem[_4254 + 132] = 128
                            mem[_4254 + 164] = mem[_4254]
                            s = 0
                            while s < mem[_4254]:
                                mem[s + _4254 + 196] = mem[s + _4254 + 32]
                                _3685 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_4254]) > mem[_4254]:
                                mem[mem[_4254] + _4254 + 196] = 0
                            require ext_code.size(address(_3853))
                            call address(_3853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _4098, address(this.address), 128, mem[_4254], mem[_4254 + 196 len ceil32(mem[_4254])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3685 = mem[96]
                            idx = idx + 1
                            s = _3853
                            s = this.address
                            s = _4098
                            continue 
                        require idx + -(_2531 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4295 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4320 = mem[_4295]
                        require mem[_4295] == mem[_4295 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _4426 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_4426)
                        require ext_code.size(address(_4320))
                        staticcall address(_4320).getPair(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_4426)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4476 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _4500 = mem[_4476]
                        require mem[_4476] == mem[_4476 + 12 len 20]
                        _4536 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4536 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4536 + 36] = 0
                        mem[_4536 + 68] = _4098
                        mem[_4536 + 100] = address(_4500)
                        mem[_4536 + 132] = 128
                        mem[_4536 + 164] = mem[_4536]
                        s = 0
                        while s < mem[_4536]:
                            mem[s + _4536 + 196] = mem[s + _4536 + 32]
                            _3685 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4536]) > mem[_4536]:
                            mem[mem[_4536] + _4536 + 196] = 0
                        require ext_code.size(address(_3853))
                        call address(_3853).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4536]) + _4536 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3685 = mem[96]
                        idx = idx + 1
                        s = _3853
                        s = _4500
                        s = _4098
                        continue 
                    if idx + 2 >= mem[96]:
                        _4258 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_4258 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4258 + 36] = _4098
                        mem[_4258 + 68] = 0
                        mem[_4258 + 100] = this.address
                        mem[_4258 + 132] = 128
                        mem[_4258 + 164] = mem[_4258]
                        s = 0
                        while s < mem[_4258]:
                            mem[s + _4258 + 196] = mem[s + _4258 + 32]
                            _3685 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_4258]) > mem[_4258]:
                            mem[mem[_4258] + _4258 + 196] = 0
                        require ext_code.size(address(_3853))
                        call address(_3853).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_4258]) + _4258 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3685 = mem[96]
                        idx = idx + 1
                        s = _3853
                        s = this.address
                        s = _4098
                        continue 
                    require idx + -(_2531 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2531 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4297 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4321 = mem[_4297]
                    require mem[_4297] == mem[_4297 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _4428 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_4428)
                    require ext_code.size(address(_4321))
                    staticcall address(_4321).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_4428)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4477 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _4501 = mem[_4477]
                    require mem[_4477] == mem[_4477 + 12 len 20]
                    _4537 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_4537 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4537 + 36] = _4098
                    mem[_4537 + 68] = 0
                    mem[_4537 + 100] = address(_4501)
                    mem[_4537 + 132] = 128
                    mem[_4537 + 164] = mem[_4537]
                    s = 0
                    while s < mem[_4537]:
                        mem[s + _4537 + 196] = mem[s + _4537 + 32]
                        _3685 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_4537]) > mem[_4537]:
                        mem[mem[_4537] + _4537 + 196] = 0
                    require ext_code.size(address(_3853))
                    call address(_3853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args _4098, 0, address(_4501), 128, mem[_4537], mem[_4537 + 196 len ceil32(mem[_4537])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3685 = mem[96]
                    idx = idx + 1
                    s = _3853
                    s = _4501
                    s = _4098
                    continue 
                require _2531 / 2 < mem[96]
                _3718 = mem[(16 * Mask(251, 1, _2531)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3718))
                staticcall address(_3718).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3772 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_3772] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_324be8a3(?) {
    require calldata.size - 4 >= 96
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11248 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11273 = mem[_11248]
                require mem[_11248] == mem[_11248 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _11325 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_11325)
                require ext_code.size(address(_11273))
                staticcall address(_11273).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_11325)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11376 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11421 = mem[_11376]
                require mem[_11376] == mem[_11376 + 12 len 20]
                require ext_code.size(mem[_11376 + 12 len 20])
                staticcall mem[_11376 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11598 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11735 = mem[_11598]
                require mem[_11598] == mem[_11598 + 18 len 14]
                _11865 = mem[_11598 + 32]
                require mem[_11598 + 32] == mem[_11598 + 50 len 14]
                require mem[_11598 + 64] == mem[_11598 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11598 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11598 + 50 len 14] / (997 * s) + (1000 * mem[_11598 + 18 len 14])
                        idx = idx + 1
                        s = _11421
                        s = 997 * s * Mask(112, 0, _11865) / (997 * s) + (1000 * Mask(112, 0, _11735))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11598 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11598 + 50 len 14] / (997 * s) + (1000 * mem[_11598 + 18 len 14])
                        idx = idx + 1
                        s = _11421
                        s = 997 * s * Mask(112, 0, _11865) / (997 * s) + (1000 * Mask(112, 0, _11735))
                        continue 
                require (997 * s) + (1000 * mem[_11598 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11598 + 18 len 14] / (997 * s) + (1000 * mem[_11598 + 50 len 14])
                idx = idx + 1
                s = _11421
                s = 997 * s * Mask(112, 0, _11735) / (997 * s) + (1000 * Mask(112, 0, _11865))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _11246 = mem[96]
            require mem[96] / 2 < mem[96]
            _11270 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_11270))
            staticcall address(_11270).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11300 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11324 = mem[_11300]
            _16784 = mem[96]
            idx = _11246 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _16784 - 1:
                require idx + -(_11246 / 2) + 1 < mem[96]
                require idx - (_11246 / 2) < mem[96]
                require idx + -(_11246 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_11246 / 2)) + 140 len 20] != mem[(32 * idx + -(_11246 / 2) + 1) + 140 len 20]:
                    require idx - (_11246 / 2) < mem[96]
                    if mem[(32 * idx - (_11246 / 2)) + 140 len 20] != mem[(32 * idx + -(_11246 / 2) + 1) + 140 len 20]:
                        _16910 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16910 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16910]
                        mem[_16910 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16910]
                        mem[_16910 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16910] - 1 < mem[_16910]
                        mem[_16910 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16910] - 1) + _16910 + 44 len 20])
                        staticcall mem[(32 * mem[_16910] - 1) + _16910 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16910 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16910 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16910]
                        _17414 = mem[_16910 + 32]
                        require idx - (_11246 / 2) < mem[96]
                        _17438 = mem[(32 * idx - (_11246 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16910 + 44 len 20])
                            staticcall mem[_16910 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16910 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16910 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16910 + (2 * ceil32(return_data.size)) + 132] = address(_17438)
                            require ext_code.size(mem[_16910 + 44 len 20])
                            staticcall mem[_16910 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17438)
                            mem[_16910 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16910 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11246 / 2) < mem[96]
                                _18320 = mem[(32 * idx - (_11246 / 2)) + 128]
                                mem[_16910 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16910 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16910 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16910 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16910 + (4 * ceil32(return_data.size)) + 260] = mem[_16910]
                                t = 0
                                u = _16910 + 32
                                v = _16910 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16910]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16784 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16910 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16910 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18320))
                                call address(_18320).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16910 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16910]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16910 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16910 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22604 = mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16910 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22784 = mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16910 + (6 * ceil32(return_data.size)) + (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16910 + (6 * ceil32(return_data.size)) + (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16910 + (6 * ceil32(return_data.size)) + 96] = mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require return_data.size >= _22604 + (32 * _22784) + 32
                                t = _16910 + (4 * ceil32(return_data.size)) + _22604 + 128
                                u = _16910 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22784:
                                    mem[u] = mem[t]
                                    _16784 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16910] - 1 < mem[_16910]
                                _25124 = mem[(32 * mem[_16910] - 1) + _16910 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25124))
                                staticcall address(_25124).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25664 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16784 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16910
                                s = mem[_25664] - ext_call.return_data[0]
                                continue 
                            mem[_16910 + (4 * ceil32(return_data.size)) + 100] = address(_17438)
                            mem[_16910 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17414))
                            call address(_17414).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17438), -1
                            mem[_16910 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16910 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11246 / 2) < mem[96]
                            _18939 = mem[(32 * idx - (_11246 / 2)) + 128]
                            mem[_16910 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16910 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16910 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16910 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16910 + (6 * ceil32(return_data.size)) + 260] = mem[_16910]
                            t = 0
                            u = _16910 + 32
                            v = _16910 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16910]:
                                mem[v] = mem[u + 12 len 20]
                                _16784 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16910 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16910 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18939))
                            call address(_18939).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16910 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16910]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16910 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16910 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22605 = mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16910 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22785 = mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16910 + (7 * ceil32(return_data.size)) + (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16910 + (7 * ceil32(return_data.size)) + (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16910 + (7 * ceil32(return_data.size)) + 96] = _22785
                            require return_data.size >= _22605 + (32 * _22785) + 32
                            t = _16910 + (6 * ceil32(return_data.size)) + _22605 + 128
                            u = _16910 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22785:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16910] - 1 < mem[_16910]
                            _25126 = mem[(32 * mem[_16910] - 1) + _16910 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25126))
                            staticcall address(_25126).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25665 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16910
                            s = mem[_25665] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16910 + 44 len 20])
                            staticcall mem[_16910 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16910 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16910 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16910 + (2 * ceil32(return_data.size)) + 132] = address(_17438)
                            require ext_code.size(mem[_16910 + 44 len 20])
                            staticcall mem[_16910 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17438)
                            mem[_16910 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16910 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11246 / 2) < mem[96]
                                _18506 = mem[(32 * idx - (_11246 / 2)) + 128]
                                mem[_16910 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16910 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16910 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16910 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16910 + (4 * ceil32(return_data.size)) + 260] = mem[_16910]
                                t = 0
                                u = _16910 + 32
                                v = _16910 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16910]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16784 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16910 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16910 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18506))
                                call address(_18506).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16910 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16910]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16910 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16910 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22606 = mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16910 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22786 = mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16910 + (6 * ceil32(return_data.size)) + (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16910 + (6 * ceil32(return_data.size)) + (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16910 + (6 * ceil32(return_data.size)) + 96] = mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require return_data.size >= _22606 + (32 * _22786) + 32
                                t = _16910 + (4 * ceil32(return_data.size)) + _22606 + 128
                                u = _16910 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22786:
                                    mem[u] = mem[t]
                                    _16784 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16910] - 1 < mem[_16910]
                                _25128 = mem[(32 * mem[_16910] - 1) + _16910 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25128))
                                staticcall address(_25128).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25666 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16784 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16910
                                s = mem[_25666] - ext_call.return_data[0]
                                continue 
                            mem[_16910 + (4 * ceil32(return_data.size)) + 100] = address(_17438)
                            mem[_16910 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17414))
                            call address(_17414).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17438), -1
                            mem[_16910 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16910 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11246 / 2) < mem[96]
                            _19251 = mem[(32 * idx - (_11246 / 2)) + 128]
                            mem[_16910 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16910 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16910 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16910 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16910 + (6 * ceil32(return_data.size)) + 260] = mem[_16910]
                            t = 0
                            u = _16910 + 32
                            v = _16910 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16910]:
                                mem[v] = mem[u + 12 len 20]
                                _16784 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16910 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16910 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19251))
                            call address(_19251).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16910 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16910]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16910 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16910 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22607 = mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16910 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22787 = mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16910 + (7 * ceil32(return_data.size)) + (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16910 + (7 * ceil32(return_data.size)) + (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16910 + (7 * ceil32(return_data.size)) + 96] = _22787
                            require return_data.size >= _22607 + (32 * _22787) + 32
                            t = _16910 + (6 * ceil32(return_data.size)) + _22607 + 128
                            u = _16910 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22787:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16910] - 1 < mem[_16910]
                            _25130 = mem[(32 * mem[_16910] - 1) + _16910 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25130))
                            staticcall address(_25130).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25667 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16910
                            s = mem[_25667] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16910 + 44 len 20])
                        staticcall mem[_16910 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16910 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16910 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16910 + (2 * ceil32(return_data.size)) + 132] = address(_17438)
                        require ext_code.size(mem[_16910 + 44 len 20])
                        staticcall mem[_16910 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17438)
                        mem[_16910 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16910 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11246 / 2) < mem[96]
                            _18753 = mem[(32 * idx - (_11246 / 2)) + 128]
                            mem[_16910 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16910 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16910 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16910 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16910 + (4 * ceil32(return_data.size)) + 260] = mem[_16910]
                            t = 0
                            u = _16910 + 32
                            v = _16910 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16910]:
                                mem[v] = mem[u + 12 len 20]
                                _16784 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16910 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16910 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18753))
                            call address(_18753).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16910 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16910]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16910 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16910 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22608 = mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16910 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22788 = mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16910 + (6 * ceil32(return_data.size)) + (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16910 + (6 * ceil32(return_data.size)) + (32 * mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16910 + (6 * ceil32(return_data.size)) + 96] = mem[_16910 + (4 * ceil32(return_data.size)) + mem[_16910 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _22608 + (32 * _22788) + 32
                            t = _16910 + (4 * ceil32(return_data.size)) + _22608 + 128
                            u = _16910 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22788:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16910] - 1 < mem[_16910]
                            _25132 = mem[(32 * mem[_16910] - 1) + _16910 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25132))
                            staticcall address(_25132).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25668 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16910
                            s = mem[_25668] - ext_call.return_data[0]
                            continue 
                        mem[_16910 + (4 * ceil32(return_data.size)) + 100] = address(_17438)
                        mem[_16910 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17414))
                        call address(_17414).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17438), -1
                        mem[_16910 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16910 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11246 / 2) < mem[96]
                        _19552 = mem[(32 * idx - (_11246 / 2)) + 128]
                        mem[_16910 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16910 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16910 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16910 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16910 + (6 * ceil32(return_data.size)) + 260] = mem[_16910]
                        t = 0
                        u = _16910 + 32
                        v = _16910 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16910]:
                            mem[v] = mem[u + 12 len 20]
                            _16784 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16910 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16910 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19552))
                        call address(_19552).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16910 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16910]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16910 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16910 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22609 = mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16910 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22789 = mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16910 + (7 * ceil32(return_data.size)) + (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16910 + (7 * ceil32(return_data.size)) + (32 * mem[_16910 + (6 * ceil32(return_data.size)) + mem[_16910 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16910 + (7 * ceil32(return_data.size)) + 96] = _22789
                        require return_data.size >= _22609 + (32 * _22789) + 32
                        t = _16910 + (6 * ceil32(return_data.size)) + _22609 + 128
                        u = _16910 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22789:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16910] - 1 < mem[_16910]
                        _25134 = mem[(32 * mem[_16910] - 1) + _16910 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25134))
                        staticcall address(_25134).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25669 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16910
                        s = mem[_25669] - ext_call.return_data[0]
                        continue 
                    _16912 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16912 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16912]
                    mem[_16912 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16912]
                    mem[_16912 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16912]
                    mem[_16912 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16912] - 1 < mem[_16912]
                    mem[_16912 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16912] - 1) + _16912 + 44 len 20])
                    staticcall mem[(32 * mem[_16912] - 1) + _16912 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16912 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16912 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16912]
                    _17462 = mem[_16912 + 32]
                    require idx + -(_11246 / 2) + 1 < mem[96]
                    _17486 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16912 + 44 len 20])
                        staticcall mem[_16912 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16912 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16912 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16912 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                        require ext_code.size(mem[_16912 + 44 len 20])
                        staticcall mem[_16912 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17486)
                        mem[_16912 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16912 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11246 / 2) + 1 < mem[96]
                            _18432 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                            mem[_16912 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16912 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16912 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16912 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16912 + (4 * ceil32(return_data.size)) + 292] = mem[_16912]
                            s = 0
                            t = _16912 + 32
                            u = _16912 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16912]:
                                mem[u] = mem[t + 12 len 20]
                                _16784 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16912 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16912 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18432))
                            call address(_18432).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16912 + (4 * ceil32(return_data.size)) + (32 * mem[_16912]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22430 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22610 = mem[_22430]
                            require mem[_22430] <= test266151307()
                            require _22430 + return_data.size > _22430 + mem[_22430] + 31
                            _22790 = mem[_22430 + mem[_22430]]
                            require mem[_22430 + mem[_22430]] <= test266151307()
                            require (32 * mem[_22430 + mem[_22430]]) + 32 >= 0 and _22430 + ceil32(return_data.size) + (32 * mem[_22430 + mem[_22430]]) + 32 <= test266151307()
                            mem[64] = _22430 + ceil32(return_data.size) + (32 * mem[_22430 + mem[_22430]]) + 32
                            mem[_22430 + ceil32(return_data.size)] = _22790
                            require return_data.size >= _22610 + (32 * _22790) + 32
                            t = _22430 + _22610 + 32
                            u = _22430 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22790:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16912] - 1 < mem[_16912]
                            _25136 = mem[(32 * mem[_16912] - 1) + _16912 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25136))
                            staticcall address(_25136).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25670 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16912
                            s = mem[_25670] - ext_call.return_data[0]
                            continue 
                        mem[_16912 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                        mem[_16912 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17462))
                        call address(_17462).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17486), -1
                        mem[_16912 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16912 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11246 / 2) + 1 < mem[96]
                        _19136 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                        mem[_16912 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16912 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16912 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16912 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16912 + (6 * ceil32(return_data.size)) + 292] = mem[_16912]
                        s = 0
                        t = _16912 + 32
                        u = _16912 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16912]:
                            mem[u] = mem[t + 12 len 20]
                            _16784 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16912 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16912 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19136))
                        call address(_19136).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16912 + (6 * ceil32(return_data.size)) + (32 * mem[_16912]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22431 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22611 = mem[_22431]
                        require mem[_22431] <= test266151307()
                        require _22431 + return_data.size > _22431 + mem[_22431] + 31
                        _22791 = mem[_22431 + mem[_22431]]
                        require mem[_22431 + mem[_22431]] <= test266151307()
                        require (32 * mem[_22431 + mem[_22431]]) + 32 >= 0 and _22431 + ceil32(return_data.size) + (32 * mem[_22431 + mem[_22431]]) + 32 <= test266151307()
                        mem[64] = _22431 + ceil32(return_data.size) + (32 * mem[_22431 + mem[_22431]]) + 32
                        mem[_22431 + ceil32(return_data.size)] = _22791
                        require return_data.size >= _22611 + (32 * _22791) + 32
                        t = _22431 + _22611 + 32
                        u = _22431 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22791:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16912] - 1 < mem[_16912]
                        _25138 = mem[(32 * mem[_16912] - 1) + _16912 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25138))
                        staticcall address(_25138).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25671 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16912
                        s = mem[_25671] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16912 + 44 len 20])
                        staticcall mem[_16912 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16912 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16912 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16912 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                        require ext_code.size(mem[_16912 + 44 len 20])
                        staticcall mem[_16912 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17486)
                        mem[_16912 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16912 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11246 / 2) + 1 < mem[96]
                            _18665 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                            mem[_16912 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16912 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16912 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16912 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16912 + (4 * ceil32(return_data.size)) + 292] = mem[_16912]
                            s = 0
                            t = _16912 + 32
                            u = _16912 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16912]:
                                mem[u] = mem[t + 12 len 20]
                                _16784 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16912 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16912 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18665))
                            call address(_18665).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16912 + (4 * ceil32(return_data.size)) + (32 * mem[_16912]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22432 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22612 = mem[_22432]
                            require mem[_22432] <= test266151307()
                            require _22432 + return_data.size > _22432 + mem[_22432] + 31
                            _22792 = mem[_22432 + mem[_22432]]
                            require mem[_22432 + mem[_22432]] <= test266151307()
                            require (32 * mem[_22432 + mem[_22432]]) + 32 >= 0 and _22432 + ceil32(return_data.size) + (32 * mem[_22432 + mem[_22432]]) + 32 <= test266151307()
                            mem[64] = _22432 + ceil32(return_data.size) + (32 * mem[_22432 + mem[_22432]]) + 32
                            mem[_22432 + ceil32(return_data.size)] = _22792
                            require return_data.size >= _22612 + (32 * _22792) + 32
                            t = _22432 + _22612 + 32
                            u = _22432 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22792:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16912] - 1 < mem[_16912]
                            _25140 = mem[(32 * mem[_16912] - 1) + _16912 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25140))
                            staticcall address(_25140).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25672 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16912
                            s = mem[_25672] - ext_call.return_data[0]
                            continue 
                        mem[_16912 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                        mem[_16912 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17462))
                        call address(_17462).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17486), -1
                        mem[_16912 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16912 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11246 / 2) + 1 < mem[96]
                        _19452 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                        mem[_16912 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16912 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16912 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16912 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16912 + (6 * ceil32(return_data.size)) + 292] = mem[_16912]
                        s = 0
                        t = _16912 + 32
                        u = _16912 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16912]:
                            mem[u] = mem[t + 12 len 20]
                            _16784 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16912 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16912 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19452))
                        call address(_19452).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16912 + (6 * ceil32(return_data.size)) + (32 * mem[_16912]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22433 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22613 = mem[_22433]
                        require mem[_22433] <= test266151307()
                        require _22433 + return_data.size > _22433 + mem[_22433] + 31
                        _22793 = mem[_22433 + mem[_22433]]
                        require mem[_22433 + mem[_22433]] <= test266151307()
                        require (32 * mem[_22433 + mem[_22433]]) + 32 >= 0 and _22433 + ceil32(return_data.size) + (32 * mem[_22433 + mem[_22433]]) + 32 <= test266151307()
                        mem[64] = _22433 + ceil32(return_data.size) + (32 * mem[_22433 + mem[_22433]]) + 32
                        mem[_22433 + ceil32(return_data.size)] = _22793
                        require return_data.size >= _22613 + (32 * _22793) + 32
                        t = _22433 + _22613 + 32
                        u = _22433 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22793:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16912] - 1 < mem[_16912]
                        _25142 = mem[(32 * mem[_16912] - 1) + _16912 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25142))
                        staticcall address(_25142).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25673 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16912
                        s = mem[_25673] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16912 + 44 len 20])
                    staticcall mem[_16912 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16912 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16912 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16912 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                    require ext_code.size(mem[_16912 + 44 len 20])
                    staticcall mem[_16912 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17486)
                    mem[_16912 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16912 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11246 / 2) + 1 < mem[96]
                        _18944 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                        mem[_16912 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16912 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16912 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16912 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16912 + (4 * ceil32(return_data.size)) + 292] = mem[_16912]
                        s = 0
                        t = _16912 + 32
                        u = _16912 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16912]:
                            mem[u] = mem[t + 12 len 20]
                            _16784 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16912 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16912 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18944))
                        call address(_18944).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16912 + (4 * ceil32(return_data.size)) + (32 * mem[_16912]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22434 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22614 = mem[_22434]
                        require mem[_22434] <= test266151307()
                        require _22434 + return_data.size > _22434 + mem[_22434] + 31
                        _22794 = mem[_22434 + mem[_22434]]
                        require mem[_22434 + mem[_22434]] <= test266151307()
                        require (32 * mem[_22434 + mem[_22434]]) + 32 >= 0 and _22434 + ceil32(return_data.size) + (32 * mem[_22434 + mem[_22434]]) + 32 <= test266151307()
                        mem[64] = _22434 + ceil32(return_data.size) + (32 * mem[_22434 + mem[_22434]]) + 32
                        mem[_22434 + ceil32(return_data.size)] = _22794
                        require return_data.size >= _22614 + (32 * _22794) + 32
                        t = _22434 + _22614 + 32
                        u = _22434 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22794:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16912] - 1 < mem[_16912]
                        _25144 = mem[(32 * mem[_16912] - 1) + _16912 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25144))
                        staticcall address(_25144).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25674 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16912
                        s = mem[_25674] - ext_call.return_data[0]
                        continue 
                    mem[_16912 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                    mem[_16912 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17462))
                    call address(_17462).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17486), -1
                    mem[_16912 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16912 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11246 / 2) + 1 < mem[96]
                    _19748 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                    mem[_16912 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16912 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16912 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16912 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16912 + (6 * ceil32(return_data.size)) + 292] = mem[_16912]
                    s = 0
                    t = _16912 + 32
                    u = _16912 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16912]:
                        mem[u] = mem[t + 12 len 20]
                        _16784 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16912 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16912 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19748))
                    call address(_19748).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16912 + (6 * ceil32(return_data.size)) + (32 * mem[_16912]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22435 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22615 = mem[_22435]
                    require mem[_22435] <= test266151307()
                    require _22435 + return_data.size > _22435 + mem[_22435] + 31
                    _22795 = mem[_22435 + mem[_22435]]
                    require mem[_22435 + mem[_22435]] <= test266151307()
                    require (32 * mem[_22435 + mem[_22435]]) + 32 >= 0 and _22435 + ceil32(return_data.size) + (32 * mem[_22435 + mem[_22435]]) + 32 <= test266151307()
                    mem[64] = _22435 + ceil32(return_data.size) + (32 * mem[_22435 + mem[_22435]]) + 32
                    mem[_22435 + ceil32(return_data.size)] = _22795
                    require return_data.size >= _22615 + (32 * _22795) + 32
                    t = _22435 + _22615 + 32
                    u = _22435 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22795:
                        mem[u] = mem[t]
                        _16784 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16912] - 1 < mem[_16912]
                    _25146 = mem[(32 * mem[_16912] - 1) + _16912 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25146))
                    staticcall address(_25146).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25675 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16784 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16912
                    s = mem[_25675] - ext_call.return_data[0]
                    continue 
                require idx + -(_11246 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_11246 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11246 / 2) + 1) + 140 len 20]:
                    require idx + -(_11246 / 2) + 1 < mem[96]
                    require idx - (_11246 / 2) < mem[96]
                    if mem[(32 * idx - (_11246 / 2)) + 140 len 20] != mem[(32 * idx + -(_11246 / 2) + 1) + 140 len 20]:
                        _17035 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_17035 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_17035]
                        mem[_17035 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17035]
                        mem[_17035 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_17035] - 1 < mem[_17035]
                        mem[_17035 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_17035] - 1) + _17035 + 44 len 20])
                        staticcall mem[(32 * mem[_17035] - 1) + _17035 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17035 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17035 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_17035]
                        _17487 = mem[_17035 + 32]
                        require idx - (_11246 / 2) < mem[96]
                        _17516 = mem[(32 * idx - (_11246 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17035 + 44 len 20])
                            staticcall mem[_17035 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17035 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17035 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17035 + (2 * ceil32(return_data.size)) + 132] = address(_17516)
                            require ext_code.size(mem[_17035 + 44 len 20])
                            staticcall mem[_17035 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17516)
                            mem[_17035 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17035 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11246 / 2) < mem[96]
                                _18510 = mem[(32 * idx - (_11246 / 2)) + 128]
                                mem[_17035 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17035 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17035 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17035 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17035 + (4 * ceil32(return_data.size)) + 260] = mem[_17035]
                                t = 0
                                u = _17035 + 32
                                v = _17035 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_17035]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16784 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17035 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17035 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18510))
                                call address(_18510).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17035 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17035]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17035 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17035 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22616 = mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17035 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22796 = mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17035 + (6 * ceil32(return_data.size)) + (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17035 + (6 * ceil32(return_data.size)) + (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17035 + (6 * ceil32(return_data.size)) + 96] = _22796
                                require return_data.size >= _22616 + (32 * _22796) + 32
                                t = _17035 + (4 * ceil32(return_data.size)) + _22616 + 128
                                u = _17035 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22796:
                                    mem[u] = mem[t]
                                    _16784 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17035] - 1 < mem[_17035]
                                _25148 = mem[(32 * mem[_17035] - 1) + _17035 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25148))
                                staticcall address(_25148).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25676 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16784 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17035
                                s = mem[_25676] - ext_call.return_data[0]
                                continue 
                            mem[_17035 + (4 * ceil32(return_data.size)) + 100] = address(_17516)
                            mem[_17035 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17487))
                            call address(_17487).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17516), -1
                            mem[_17035 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17035 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11246 / 2) < mem[96]
                            _19255 = mem[(32 * idx - (_11246 / 2)) + 128]
                            mem[_17035 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17035 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17035 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17035 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17035 + (6 * ceil32(return_data.size)) + 260] = mem[_17035]
                            t = 0
                            u = _17035 + 32
                            v = _17035 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_17035]:
                                mem[v] = mem[u + 12 len 20]
                                _16784 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17035 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17035 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19255))
                            call address(_19255).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17035 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17035]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17035 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17035 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22617 = mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17035 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22797 = mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17035 + (7 * ceil32(return_data.size)) + (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _17035 + (7 * ceil32(return_data.size)) + (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_17035 + (7 * ceil32(return_data.size)) + 96] = _22797
                            require return_data.size >= _22617 + (32 * _22797) + 32
                            t = _17035 + (6 * ceil32(return_data.size)) + _22617 + 128
                            u = _17035 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22797:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17035] - 1 < mem[_17035]
                            _25150 = mem[(32 * mem[_17035] - 1) + _17035 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25150))
                            staticcall address(_25150).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25677 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17035
                            s = mem[_25677] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17035 + 44 len 20])
                            staticcall mem[_17035 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17035 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17035 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17035 + (2 * ceil32(return_data.size)) + 132] = address(_17516)
                            require ext_code.size(mem[_17035 + 44 len 20])
                            staticcall mem[_17035 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17516)
                            mem[_17035 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17035 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11246 / 2) < mem[96]
                                _18759 = mem[(32 * idx - (_11246 / 2)) + 128]
                                mem[_17035 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17035 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17035 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17035 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17035 + (4 * ceil32(return_data.size)) + 260] = mem[_17035]
                                t = 0
                                u = _17035 + 32
                                v = _17035 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_17035]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16784 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17035 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17035 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18759))
                                call address(_18759).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17035 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17035]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17035 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17035 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22618 = mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17035 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22798 = mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17035 + (6 * ceil32(return_data.size)) + (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17035 + (6 * ceil32(return_data.size)) + (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17035 + (6 * ceil32(return_data.size)) + 96] = _22798
                                require return_data.size >= _22618 + (32 * _22798) + 32
                                t = _17035 + (4 * ceil32(return_data.size)) + _22618 + 128
                                u = _17035 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22798:
                                    mem[u] = mem[t]
                                    _16784 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17035] - 1 < mem[_17035]
                                _25152 = mem[(32 * mem[_17035] - 1) + _17035 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25152))
                                staticcall address(_25152).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25678 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16784 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17035
                                s = mem[_25678] - ext_call.return_data[0]
                                continue 
                            mem[_17035 + (4 * ceil32(return_data.size)) + 100] = address(_17516)
                            mem[_17035 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17487))
                            call address(_17487).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17516), -1
                            mem[_17035 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17035 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11246 / 2) < mem[96]
                            _19558 = mem[(32 * idx - (_11246 / 2)) + 128]
                            mem[_17035 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17035 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17035 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17035 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17035 + (6 * ceil32(return_data.size)) + 260] = mem[_17035]
                            t = 0
                            u = _17035 + 32
                            v = _17035 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_17035]:
                                mem[v] = mem[u + 12 len 20]
                                _16784 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17035 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17035 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19558))
                            call address(_19558).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17035 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17035]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17035 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17035 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22619 = mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17035 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22799 = mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17035 + (7 * ceil32(return_data.size)) + (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _17035 + (7 * ceil32(return_data.size)) + (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_17035 + (7 * ceil32(return_data.size)) + 96] = _22799
                            require return_data.size >= _22619 + (32 * _22799) + 32
                            t = _17035 + (6 * ceil32(return_data.size)) + _22619 + 128
                            u = _17035 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22799:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17035] - 1 < mem[_17035]
                            _25154 = mem[(32 * mem[_17035] - 1) + _17035 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25154))
                            staticcall address(_25154).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25679 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17035
                            s = mem[_25679] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17035 + 44 len 20])
                        staticcall mem[_17035 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17035 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17035 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_17035 + (2 * ceil32(return_data.size)) + 132] = address(_17516)
                        require ext_code.size(mem[_17035 + 44 len 20])
                        staticcall mem[_17035 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17516)
                        mem[_17035 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17035 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11246 / 2) < mem[96]
                            _19051 = mem[(32 * idx - (_11246 / 2)) + 128]
                            mem[_17035 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17035 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_17035 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_17035 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_17035 + (4 * ceil32(return_data.size)) + 260] = mem[_17035]
                            t = 0
                            u = _17035 + 32
                            v = _17035 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_17035]:
                                mem[v] = mem[u + 12 len 20]
                                _16784 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17035 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17035 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19051))
                            call address(_19051).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17035 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17035]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17035 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17035 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22620 = mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17035 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22800 = mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17035 + (6 * ceil32(return_data.size)) + (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _17035 + (6 * ceil32(return_data.size)) + (32 * mem[_17035 + (4 * ceil32(return_data.size)) + mem[_17035 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_17035 + (6 * ceil32(return_data.size)) + 96] = _22800
                            require return_data.size >= _22620 + (32 * _22800) + 32
                            t = _17035 + (4 * ceil32(return_data.size)) + _22620 + 128
                            u = _17035 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22800:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17035] - 1 < mem[_17035]
                            _25156 = mem[(32 * mem[_17035] - 1) + _17035 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25156))
                            staticcall address(_25156).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25680 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17035
                            s = mem[_25680] - ext_call.return_data[0]
                            continue 
                        mem[_17035 + (4 * ceil32(return_data.size)) + 100] = address(_17516)
                        mem[_17035 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17487))
                        call address(_17487).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17516), -1
                        mem[_17035 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17035 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11246 / 2) < mem[96]
                        _19849 = mem[(32 * idx - (_11246 / 2)) + 128]
                        mem[_17035 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17035 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_17035 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_17035 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_17035 + (6 * ceil32(return_data.size)) + 260] = mem[_17035]
                        t = 0
                        u = _17035 + 32
                        v = _17035 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_17035]:
                            mem[v] = mem[u + 12 len 20]
                            _16784 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_17035 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_17035 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19849))
                        call address(_19849).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17035 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17035]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_17035 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _17035 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22621 = mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _17035 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22801 = mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17035 + (7 * ceil32(return_data.size)) + (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _17035 + (7 * ceil32(return_data.size)) + (32 * mem[_17035 + (6 * ceil32(return_data.size)) + mem[_17035 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_17035 + (7 * ceil32(return_data.size)) + 96] = _22801
                        require return_data.size >= _22621 + (32 * _22801) + 32
                        t = _17035 + (6 * ceil32(return_data.size)) + _22621 + 128
                        u = _17035 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22801:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17035] - 1 < mem[_17035]
                        _25158 = mem[(32 * mem[_17035] - 1) + _17035 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25158))
                        staticcall address(_25158).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25681 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _17035
                        s = mem[_25681] - ext_call.return_data[0]
                        continue 
                    _17037 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_17037 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_17037]
                    mem[_17037 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_17037]
                    mem[_17037 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_17037]
                    mem[_17037 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_17037] - 1 < mem[_17037]
                    mem[_17037 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_17037] - 1) + _17037 + 44 len 20])
                    staticcall mem[(32 * mem[_17037] - 1) + _17037 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_17037 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17037 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_17037]
                    _17540 = mem[_17037 + 32]
                    require idx + -(_11246 / 2) + 1 < mem[96]
                    _17558 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_17037 + 44 len 20])
                        staticcall mem[_17037 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17037 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17037 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17037 + (2 * ceil32(return_data.size)) + 164] = address(_17558)
                        require ext_code.size(mem[_17037 + 44 len 20])
                        staticcall mem[_17037 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17558)
                        mem[_17037 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17037 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11246 / 2) + 1 < mem[96]
                            _18672 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                            mem[_17037 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17037 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17037 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17037 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17037 + (4 * ceil32(return_data.size)) + 292] = mem[_17037]
                            t = 0
                            u = _17037 + 32
                            v = _17037 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_17037]:
                                mem[v] = mem[u + 12 len 20]
                                _16784 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17037 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17037 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18672))
                            call address(_18672).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17037 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17037]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17037 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17037 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22622 = mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17037 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22802 = mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17037 + (6 * ceil32(return_data.size)) + (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _17037 + (6 * ceil32(return_data.size)) + (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_17037 + (6 * ceil32(return_data.size)) + 128] = _22802
                            require return_data.size >= _22622 + (32 * _22802) + 32
                            t = _17037 + (4 * ceil32(return_data.size)) + _22622 + 160
                            u = _17037 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22802:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17037] - 1 < mem[_17037]
                            _25160 = mem[(32 * mem[_17037] - 1) + _17037 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25160))
                            staticcall address(_25160).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25682 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17037
                            s = mem[_25682] - ext_call.return_data[0]
                            continue 
                        mem[_17037 + (4 * ceil32(return_data.size)) + 132] = address(_17558)
                        mem[_17037 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17540))
                        call address(_17540).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17558), -1
                        mem[_17037 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17037 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11246 / 2) + 1 < mem[96]
                        _19460 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                        mem[_17037 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17037 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17037 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17037 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17037 + (6 * ceil32(return_data.size)) + 292] = mem[_17037]
                        t = 0
                        u = _17037 + 32
                        v = _17037 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_17037]:
                            mem[v] = mem[u + 12 len 20]
                            _16784 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_17037 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17037 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19460))
                        call address(_19460).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17037 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17037]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_17037 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _17037 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22623 = mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _17037 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22803 = mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17037 + (7 * ceil32(return_data.size)) + (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _17037 + (7 * ceil32(return_data.size)) + (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_17037 + (7 * ceil32(return_data.size)) + 128] = _22803
                        require return_data.size >= _22623 + (32 * _22803) + 32
                        t = _17037 + (6 * ceil32(return_data.size)) + _22623 + 160
                        u = _17037 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22803:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17037] - 1 < mem[_17037]
                        _25162 = mem[(32 * mem[_17037] - 1) + _17037 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25162))
                        staticcall address(_25162).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25683 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17037
                        s = mem[_25683] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_17037 + 44 len 20])
                        staticcall mem[_17037 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17037 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17037 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17037 + (2 * ceil32(return_data.size)) + 164] = address(_17558)
                        require ext_code.size(mem[_17037 + 44 len 20])
                        staticcall mem[_17037 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17558)
                        mem[_17037 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17037 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11246 / 2) + 1 < mem[96]
                            _18950 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                            mem[_17037 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17037 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17037 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17037 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17037 + (4 * ceil32(return_data.size)) + 292] = mem[_17037]
                            t = 0
                            u = _17037 + 32
                            v = _17037 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_17037]:
                                mem[v] = mem[u + 12 len 20]
                                _16784 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17037 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17037 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18950))
                            call address(_18950).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17037 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17037]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17037 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17037 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22624 = mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17037 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22804 = mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17037 + (6 * ceil32(return_data.size)) + (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _17037 + (6 * ceil32(return_data.size)) + (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_17037 + (6 * ceil32(return_data.size)) + 128] = _22804
                            require return_data.size >= _22624 + (32 * _22804) + 32
                            t = _17037 + (4 * ceil32(return_data.size)) + _22624 + 160
                            u = _17037 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22804:
                                mem[u] = mem[t]
                                _16784 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17037] - 1 < mem[_17037]
                            _25164 = mem[(32 * mem[_17037] - 1) + _17037 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25164))
                            staticcall address(_25164).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25684 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16784 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17037
                            s = mem[_25684] - ext_call.return_data[0]
                            continue 
                        mem[_17037 + (4 * ceil32(return_data.size)) + 132] = address(_17558)
                        mem[_17037 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17540))
                        call address(_17540).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17558), -1
                        mem[_17037 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17037 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11246 / 2) + 1 < mem[96]
                        _19754 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                        mem[_17037 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17037 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17037 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17037 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17037 + (6 * ceil32(return_data.size)) + 292] = mem[_17037]
                        t = 0
                        u = _17037 + 32
                        v = _17037 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_17037]:
                            mem[v] = mem[u + 12 len 20]
                            _16784 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_17037 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17037 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19754))
                        call address(_19754).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17037 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17037]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_17037 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _17037 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22625 = mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _17037 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22805 = mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17037 + (7 * ceil32(return_data.size)) + (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _17037 + (7 * ceil32(return_data.size)) + (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_17037 + (7 * ceil32(return_data.size)) + 128] = _22805
                        require return_data.size >= _22625 + (32 * _22805) + 32
                        t = _17037 + (6 * ceil32(return_data.size)) + _22625 + 160
                        u = _17037 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22805:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17037] - 1 < mem[_17037]
                        _25166 = mem[(32 * mem[_17037] - 1) + _17037 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25166))
                        staticcall address(_25166).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25685 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17037
                        s = mem[_25685] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_17037 + 44 len 20])
                    staticcall mem[_17037 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_17037 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_17037 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_17037 + (2 * ceil32(return_data.size)) + 164] = address(_17558)
                    require ext_code.size(mem[_17037 + 44 len 20])
                    staticcall mem[_17037 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17558)
                    mem[_17037 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17037 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11246 / 2) + 1 < mem[96]
                        _19260 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                        mem[_17037 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17037 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_17037 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_17037 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_17037 + (4 * ceil32(return_data.size)) + 292] = mem[_17037]
                        t = 0
                        u = _17037 + 32
                        v = _17037 + (4 * ceil32(return_data.size)) + 324
                        while t < mem[_17037]:
                            mem[v] = mem[u + 12 len 20]
                            _16784 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_17037 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17037 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19260))
                        call address(_19260).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17037 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17037]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_17037 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _17037 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22626 = mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _17037 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22806 = mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17037 + (6 * ceil32(return_data.size)) + (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _17037 + (6 * ceil32(return_data.size)) + (32 * mem[_17037 + (4 * ceil32(return_data.size)) + mem[_17037 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_17037 + (6 * ceil32(return_data.size)) + 128] = _22806
                        require return_data.size >= _22626 + (32 * _22806) + 32
                        t = _17037 + (4 * ceil32(return_data.size)) + _22626 + 160
                        u = _17037 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22806:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17037] - 1 < mem[_17037]
                        _25168 = mem[(32 * mem[_17037] - 1) + _17037 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25168))
                        staticcall address(_25168).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25686 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17037
                        s = mem[_25686] - ext_call.return_data[0]
                        continue 
                    mem[_17037 + (4 * ceil32(return_data.size)) + 132] = address(_17558)
                    mem[_17037 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17540))
                    call address(_17540).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17558), -1
                    mem[_17037 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17037 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11246 / 2) + 1 < mem[96]
                    _20027 = mem[(32 * idx + -(_11246 / 2) + 1) + 128]
                    mem[_17037 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_17037 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_17037 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_17037 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_17037 + (6 * ceil32(return_data.size)) + 292] = mem[_17037]
                    t = 0
                    u = _17037 + 32
                    v = _17037 + (6 * ceil32(return_data.size)) + 324
                    while t < mem[_17037]:
                        mem[v] = mem[u + 12 len 20]
                        _16784 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_17037 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_17037 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_20027))
                    call address(_20027).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17037 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17037]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_17037 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _17037 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _22627 = mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _17037 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _22807 = mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17037 + (7 * ceil32(return_data.size)) + (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _17037 + (7 * ceil32(return_data.size)) + (32 * mem[_17037 + (6 * ceil32(return_data.size)) + mem[_17037 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_17037 + (7 * ceil32(return_data.size)) + 128] = _22807
                    require return_data.size >= _22627 + (32 * _22807) + 32
                    t = _17037 + (6 * ceil32(return_data.size)) + _22627 + 160
                    u = _17037 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _22807:
                        mem[u] = mem[t]
                        _16784 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_17037] - 1 < mem[_17037]
                    _25170 = mem[(32 * mem[_17037] - 1) + _17037 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25170))
                    staticcall address(_25170).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25687 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16784 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _17037
                    s = mem[_25687] - ext_call.return_data[0]
                    continue 
                _16915 = mem[64]
                mem[mem[64]] = 4
                mem[64] = mem[64] + 160
                mem[_16915 + 32 len 128] = call.data[calldata.size len 128]
                require idx < mem[96]
                require 0 < mem[_16915]
                mem[_16915 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_16915]
                mem[_16915 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_16915]
                mem[_16915 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require idx + 3 < mem[96]
                require 3 < mem[_16915]
                mem[_16915 + 128] = mem[(32 * idx + 3) + 140 len 20]
                require mem[_16915] - 1 < mem[_16915]
                mem[_16915 + 164] = this.address
                require ext_code.size(mem[(32 * mem[_16915] - 1) + _16915 + 44 len 20])
                staticcall mem[(32 * mem[_16915] - 1) + _16915 + 44 len 20].balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[_16915 + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16915 + ceil32(return_data.size) + 160
                require return_data.size >= 32
                require 0 < mem[_16915]
                _17518 = mem[_16915 + 32]
                require idx + -(_11246 / 2) + 2 < mem[96]
                _17542 = mem[(32 * idx + -(_11246 / 2) + 2) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_16915 + 44 len 20])
                    staticcall mem[_16915 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16915 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16915 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16915 + (2 * ceil32(return_data.size)) + 196] = address(_17542)
                    require ext_code.size(mem[_16915 + 44 len 20])
                    staticcall mem[_16915 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17542)
                    mem[_16915 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16915 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11246 / 2) + 2 < mem[96]
                        _18588 = mem[(32 * idx + -(_11246 / 2) + 2) + 128]
                        mem[_16915 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16915 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16915 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16915 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16915 + (4 * ceil32(return_data.size)) + 324] = mem[_16915]
                        t = 0
                        u = _16915 + 32
                        v = _16915 + (4 * ceil32(return_data.size)) + 356
                        while t < mem[_16915]:
                            mem[v] = mem[u + 12 len 20]
                            _16784 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16915 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16915 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_18588))
                        call address(_18588).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16915 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16915]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16915 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16915 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22628 = mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16915 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22808 = mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16915 + (6 * ceil32(return_data.size)) + (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16915 + (6 * ceil32(return_data.size)) + (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16915 + (6 * ceil32(return_data.size)) + 160] = _22808
                        require return_data.size >= _22628 + (32 * _22808) + 32
                        t = _16915 + (4 * ceil32(return_data.size)) + _22628 + 192
                        u = _16915 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22808:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16915] - 1 < mem[_16915]
                        _25172 = mem[(32 * mem[_16915] - 1) + _16915 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25172))
                        staticcall address(_25172).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25688 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16915
                        s = mem[_25688] - ext_call.return_data[0]
                        continue 
                    mem[_16915 + (4 * ceil32(return_data.size)) + 164] = address(_17542)
                    mem[_16915 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17518))
                    call address(_17518).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17542), -1
                    mem[_16915 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16915 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11246 / 2) + 2 < mem[96]
                    _19359 = mem[(32 * idx + -(_11246 / 2) + 2) + 128]
                    mem[_16915 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16915 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16915 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16915 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16915 + (6 * ceil32(return_data.size)) + 324] = mem[_16915]
                    t = 0
                    u = _16915 + 32
                    v = _16915 + (6 * ceil32(return_data.size)) + 356
                    while t < mem[_16915]:
                        mem[v] = mem[u + 12 len 20]
                        _16784 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16915 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16915 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19359))
                    call address(_19359).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16915 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16915]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16915 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16915 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22629 = mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16915 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22809 = mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16915 + (7 * ceil32(return_data.size)) + (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16915 + (7 * ceil32(return_data.size)) + (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16915 + (7 * ceil32(return_data.size)) + 160] = _22809
                    require return_data.size >= _22629 + (32 * _22809) + 32
                    t = _16915 + (6 * ceil32(return_data.size)) + _22629 + 192
                    u = _16915 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22809:
                        mem[u] = mem[t]
                        _16784 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16915] - 1 < mem[_16915]
                    _25174 = mem[(32 * mem[_16915] - 1) + _16915 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25174))
                    staticcall address(_25174).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25689 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16784 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16915
                    s = mem[_25689] - ext_call.return_data[0]
                    continue 
                if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                    require ext_code.size(mem[_16915 + 44 len 20])
                    staticcall mem[_16915 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16915 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16915 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16915 + (2 * ceil32(return_data.size)) + 196] = address(_17542)
                    require ext_code.size(mem[_16915 + 44 len 20])
                    staticcall mem[_16915 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17542)
                    mem[_16915 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16915 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11246 / 2) + 2 < mem[96]
                        _18855 = mem[(32 * idx + -(_11246 / 2) + 2) + 128]
                        mem[_16915 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16915 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16915 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16915 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16915 + (4 * ceil32(return_data.size)) + 324] = mem[_16915]
                        t = 0
                        u = _16915 + 32
                        v = _16915 + (4 * ceil32(return_data.size)) + 356
                        while t < mem[_16915]:
                            mem[v] = mem[u + 12 len 20]
                            _16784 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16915 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16915 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_18855))
                        call address(_18855).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16915 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16915]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16915 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16915 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22630 = mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16915 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22810 = mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16915 + (6 * ceil32(return_data.size)) + (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16915 + (6 * ceil32(return_data.size)) + (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16915 + (6 * ceil32(return_data.size)) + 160] = _22810
                        require return_data.size >= _22630 + (32 * _22810) + 32
                        t = _16915 + (4 * ceil32(return_data.size)) + _22630 + 192
                        u = _16915 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22810:
                            mem[u] = mem[t]
                            _16784 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16915] - 1 < mem[_16915]
                        _25176 = mem[(32 * mem[_16915] - 1) + _16915 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25176))
                        staticcall address(_25176).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25690 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16784 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16915
                        s = mem[_25690] - ext_call.return_data[0]
                        continue 
                    mem[_16915 + (4 * ceil32(return_data.size)) + 164] = address(_17542)
                    mem[_16915 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17518))
                    call address(_17518).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17542), -1
                    mem[_16915 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16915 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11246 / 2) + 2 < mem[96]
                    _19660 = mem[(32 * idx + -(_11246 / 2) + 2) + 128]
                    mem[_16915 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16915 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16915 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16915 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16915 + (6 * ceil32(return_data.size)) + 324] = mem[_16915]
                    t = 0
                    u = _16915 + 32
                    v = _16915 + (6 * ceil32(return_data.size)) + 356
                    while t < mem[_16915]:
                        mem[v] = mem[u + 12 len 20]
                        _16784 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16915 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16915 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19660))
                    call address(_19660).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16915 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16915]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16915 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16915 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22631 = mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16915 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22811 = mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16915 + (7 * ceil32(return_data.size)) + (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16915 + (7 * ceil32(return_data.size)) + (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16915 + (7 * ceil32(return_data.size)) + 160] = _22811
                    require return_data.size >= _22631 + (32 * _22811) + 32
                    t = _16915 + (6 * ceil32(return_data.size)) + _22631 + 192
                    u = _16915 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22811:
                        mem[u] = mem[t]
                        _16784 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16915] - 1 < mem[_16915]
                    _25178 = mem[(32 * mem[_16915] - 1) + _16915 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25178))
                    staticcall address(_25178).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25691 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16784 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16915
                    s = mem[_25691] - ext_call.return_data[0]
                    continue 
                if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(mem[_16915 + 44 len 20])
                staticcall mem[_16915 + 44 len 20].decimals() with:
                        gas gas_remaining wei
                mem[_16915 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_16915 + (2 * ceil32(return_data.size)) + 164] = this.address
                mem[_16915 + (2 * ceil32(return_data.size)) + 196] = address(_17542)
                require ext_code.size(mem[_16915 + 44 len 20])
                staticcall mem[_16915 + 44 len 20].allowance(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_17542)
                mem[_16915 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16915 + (4 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_11246 / 2) + 2 < mem[96]
                    _19147 = mem[(32 * idx + -(_11246 / 2) + 2) + 128]
                    mem[_16915 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16915 + (4 * ceil32(return_data.size)) + 164] = s
                    mem[_16915 + (4 * ceil32(return_data.size)) + 196] = 0
                    mem[_16915 + (4 * ceil32(return_data.size)) + 228] = 160
                    mem[_16915 + (4 * ceil32(return_data.size)) + 324] = mem[_16915]
                    t = 0
                    u = _16915 + 32
                    v = _16915 + (4 * ceil32(return_data.size)) + 356
                    while t < mem[_16915]:
                        mem[v] = mem[u + 12 len 20]
                        _16784 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16915 + (4 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16915 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19147))
                    call address(_19147).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16915 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16915]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16915 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16915 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22632 = mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16915 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22812 = mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16915 + (6 * ceil32(return_data.size)) + (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16915 + (6 * ceil32(return_data.size)) + (32 * mem[_16915 + (4 * ceil32(return_data.size)) + mem[_16915 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16915 + (6 * ceil32(return_data.size)) + 160] = _22812
                    require return_data.size >= _22632 + (32 * _22812) + 32
                    t = _16915 + (4 * ceil32(return_data.size)) + _22632 + 192
                    u = _16915 + (6 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22812:
                        mem[u] = mem[t]
                        _16784 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16915] - 1 < mem[_16915]
                    _25180 = mem[(32 * mem[_16915] - 1) + _16915 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25180))
                    staticcall address(_25180).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25692 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16784 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16915
                    s = mem[_25692] - ext_call.return_data[0]
                    continue 
                mem[_16915 + (4 * ceil32(return_data.size)) + 164] = address(_17542)
                mem[_16915 + (4 * ceil32(return_data.size)) + 196] = -1
                require ext_code.size(address(_17518))
                call address(_17518).approve(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args address(_17542), -1
                mem[_16915 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16915 + (6 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_11246 / 2) + 2 < mem[96]
                _19936 = mem[(32 * idx + -(_11246 / 2) + 2) + 128]
                mem[_16915 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_16915 + (6 * ceil32(return_data.size)) + 164] = s
                mem[_16915 + (6 * ceil32(return_data.size)) + 196] = 0
                mem[_16915 + (6 * ceil32(return_data.size)) + 228] = 160
                mem[_16915 + (6 * ceil32(return_data.size)) + 324] = mem[_16915]
                t = 0
                u = _16915 + 32
                v = _16915 + (6 * ceil32(return_data.size)) + 356
                while t < mem[_16915]:
                    mem[v] = mem[u + 12 len 20]
                    _16784 = mem[96]
                    t = t + 1
                    u = u + 32
                    v = v + 32
                    continue 
                mem[_16915 + (6 * ceil32(return_data.size)) + 260] = this.address
                mem[_16915 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                require ext_code.size(address(_19936))
                call address(_19936).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                     gas gas_remaining wei
                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16915 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16915]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_16915 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _16915 + (7 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                _22633 = mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                require mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                require _16915 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                _22813 = mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                require mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                require (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16915 + (7 * ceil32(return_data.size)) + (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                mem[64] = _16915 + (7 * ceil32(return_data.size)) + (32 * mem[_16915 + (6 * ceil32(return_data.size)) + mem[_16915 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                mem[_16915 + (7 * ceil32(return_data.size)) + 160] = _22813
                require return_data.size >= _22633 + (32 * _22813) + 32
                t = _16915 + (6 * ceil32(return_data.size)) + _22633 + 192
                u = _16915 + (7 * ceil32(return_data.size)) + 192
                s = 0
                while s < _22813:
                    mem[u] = mem[t]
                    _16784 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_16915] - 1 < mem[_16915]
                _25182 = mem[(32 * mem[_16915] - 1) + _16915 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_25182))
                staticcall address(_25182).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25693 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _16784 = mem[96]
                idx = idx + 3
                s = ext_call.return_data[0]
                s = _16915
                s = mem[_25693] - ext_call.return_data[0]
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            _16808 = mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160]
            require _11246 / 2 < mem[96]
            _16832 = mem[(16 * Mask(251, 1, _11246)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_16832))
            staticcall address(_16832).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16898 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_16898] < _11324 - cd[4] + _16808:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11251 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11277 = mem[_11251]
                require mem[_11251] == mem[_11251 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _11328 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_11328)
                require ext_code.size(address(_11277))
                staticcall address(_11277).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_11328)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11381 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11423 = mem[_11381]
                require mem[_11381] == mem[_11381 + 12 len 20]
                require ext_code.size(mem[_11381 + 12 len 20])
                staticcall mem[_11381 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11603 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11745 = mem[_11603]
                require mem[_11603] == mem[_11603 + 18 len 14]
                _11873 = mem[_11603 + 32]
                require mem[_11603 + 32] == mem[_11603 + 50 len 14]
                require mem[_11603 + 64] == mem[_11603 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11603 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11603 + 50 len 14] / (997 * s) + (1000 * mem[_11603 + 18 len 14])
                        idx = idx + 1
                        s = _11423
                        s = 997 * s * Mask(112, 0, _11873) / (997 * s) + (1000 * Mask(112, 0, _11745))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11603 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11603 + 50 len 14] / (997 * s) + (1000 * mem[_11603 + 18 len 14])
                        idx = idx + 1
                        s = _11423
                        s = 997 * s * Mask(112, 0, _11873) / (997 * s) + (1000 * Mask(112, 0, _11745))
                        continue 
                require (997 * s) + (1000 * mem[_11603 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11603 + 18 len 14] / (997 * s) + (1000 * mem[_11603 + 50 len 14])
                idx = idx + 1
                s = _11423
                s = 997 * s * Mask(112, 0, _11745) / (997 * s) + (1000 * Mask(112, 0, _11873))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _11249 = mem[96]
            require mem[96] / 2 < mem[96]
            _11274 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_11274))
            staticcall address(_11274).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11302 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11327 = mem[_11302]
            _16785 = mem[96]
            idx = _11249 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _16785 - 1:
                require idx + -(_11249 / 2) + 1 < mem[96]
                require idx - (_11249 / 2) < mem[96]
                require idx + -(_11249 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_11249 / 2)) + 140 len 20] != mem[(32 * idx + -(_11249 / 2) + 1) + 140 len 20]:
                    require idx - (_11249 / 2) < mem[96]
                    if mem[(32 * idx - (_11249 / 2)) + 140 len 20] != mem[(32 * idx + -(_11249 / 2) + 1) + 140 len 20]:
                        _16917 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16917 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16917]
                        mem[_16917 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16917]
                        mem[_16917 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16917] - 1 < mem[_16917]
                        mem[_16917 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16917] - 1) + _16917 + 44 len 20])
                        staticcall mem[(32 * mem[_16917] - 1) + _16917 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16917 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16917 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16917]
                        _17418 = mem[_16917 + 32]
                        require idx - (_11249 / 2) < mem[96]
                        _17442 = mem[(32 * idx - (_11249 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16917 + 44 len 20])
                            staticcall mem[_16917 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16917 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16917 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16917 + (2 * ceil32(return_data.size)) + 132] = address(_17442)
                            require ext_code.size(mem[_16917 + 44 len 20])
                            staticcall mem[_16917 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17442)
                            mem[_16917 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16917 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11249 / 2) < mem[96]
                                _18330 = mem[(32 * idx - (_11249 / 2)) + 128]
                                mem[_16917 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16917 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16917 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16917 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16917 + (4 * ceil32(return_data.size)) + 260] = mem[_16917]
                                t = 0
                                u = _16917 + 32
                                v = _16917 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16917]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16785 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16917 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16917 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18330))
                                call address(_18330).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16917 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16917]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16917 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16917 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22634 = mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16917 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22814 = mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16917 + (6 * ceil32(return_data.size)) + (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16917 + (6 * ceil32(return_data.size)) + (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16917 + (6 * ceil32(return_data.size)) + 96] = _22814
                                require return_data.size >= _22634 + (32 * _22814) + 32
                                t = _16917 + (4 * ceil32(return_data.size)) + _22634 + 128
                                u = _16917 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22814:
                                    mem[u] = mem[t]
                                    _16785 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16917] - 1 < mem[_16917]
                                _25184 = mem[(32 * mem[_16917] - 1) + _16917 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25184))
                                staticcall address(_25184).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25694 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16785 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16917
                                s = mem[_25694] - ext_call.return_data[0]
                                continue 
                            mem[_16917 + (4 * ceil32(return_data.size)) + 100] = address(_17442)
                            mem[_16917 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17418))
                            call address(_17418).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17442), -1
                            mem[_16917 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16917 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11249 / 2) < mem[96]
                            _18957 = mem[(32 * idx - (_11249 / 2)) + 128]
                            mem[_16917 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16917 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16917 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16917 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16917 + (6 * ceil32(return_data.size)) + 260] = mem[_16917]
                            t = 0
                            u = _16917 + 32
                            v = _16917 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16917]:
                                mem[v] = mem[u + 12 len 20]
                                _16785 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16917 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16917 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18957))
                            call address(_18957).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16917 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16917]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16917 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16917 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22635 = mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16917 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22815 = mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16917 + (7 * ceil32(return_data.size)) + (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16917 + (7 * ceil32(return_data.size)) + (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16917 + (7 * ceil32(return_data.size)) + 96] = mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _22635 + (32 * _22815) + 32
                            t = _16917 + (6 * ceil32(return_data.size)) + _22635 + 128
                            u = _16917 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22815:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16917] - 1 < mem[_16917]
                            _25186 = mem[(32 * mem[_16917] - 1) + _16917 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25186))
                            staticcall address(_25186).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25695 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16917
                            s = mem[_25695] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16917 + 44 len 20])
                            staticcall mem[_16917 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16917 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16917 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16917 + (2 * ceil32(return_data.size)) + 132] = address(_17442)
                            require ext_code.size(mem[_16917 + 44 len 20])
                            staticcall mem[_16917 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17442)
                            mem[_16917 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16917 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11249 / 2) < mem[96]
                                _18518 = mem[(32 * idx - (_11249 / 2)) + 128]
                                mem[_16917 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16917 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16917 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16917 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16917 + (4 * ceil32(return_data.size)) + 260] = mem[_16917]
                                t = 0
                                u = _16917 + 32
                                v = _16917 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16917]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16785 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16917 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16917 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18518))
                                call address(_18518).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16917 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16917]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16917 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16917 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22636 = mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16917 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22816 = mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16917 + (6 * ceil32(return_data.size)) + (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16917 + (6 * ceil32(return_data.size)) + (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16917 + (6 * ceil32(return_data.size)) + 96] = _22816
                                require return_data.size >= _22636 + (32 * _22816) + 32
                                t = _16917 + (4 * ceil32(return_data.size)) + _22636 + 128
                                u = _16917 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22816:
                                    mem[u] = mem[t]
                                    _16785 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16917] - 1 < mem[_16917]
                                _25188 = mem[(32 * mem[_16917] - 1) + _16917 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25188))
                                staticcall address(_25188).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25696 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16785 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16917
                                s = mem[_25696] - ext_call.return_data[0]
                                continue 
                            mem[_16917 + (4 * ceil32(return_data.size)) + 100] = address(_17442)
                            mem[_16917 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17418))
                            call address(_17418).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17442), -1
                            mem[_16917 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16917 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11249 / 2) < mem[96]
                            _19267 = mem[(32 * idx - (_11249 / 2)) + 128]
                            mem[_16917 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16917 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16917 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16917 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16917 + (6 * ceil32(return_data.size)) + 260] = mem[_16917]
                            t = 0
                            u = _16917 + 32
                            v = _16917 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16917]:
                                mem[v] = mem[u + 12 len 20]
                                _16785 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16917 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16917 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19267))
                            call address(_19267).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16917 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16917]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16917 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16917 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22637 = mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16917 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22817 = mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16917 + (7 * ceil32(return_data.size)) + (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16917 + (7 * ceil32(return_data.size)) + (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16917 + (7 * ceil32(return_data.size)) + 96] = mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _22637 + (32 * _22817) + 32
                            t = _16917 + (6 * ceil32(return_data.size)) + _22637 + 128
                            u = _16917 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22817:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16917] - 1 < mem[_16917]
                            _25190 = mem[(32 * mem[_16917] - 1) + _16917 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25190))
                            staticcall address(_25190).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16917
                            s = mem[_25697] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16917 + 44 len 20])
                        staticcall mem[_16917 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16917 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16917 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16917 + (2 * ceil32(return_data.size)) + 132] = address(_17442)
                        require ext_code.size(mem[_16917 + 44 len 20])
                        staticcall mem[_16917 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17442)
                        mem[_16917 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16917 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11249 / 2) < mem[96]
                            _18768 = mem[(32 * idx - (_11249 / 2)) + 128]
                            mem[_16917 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16917 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16917 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16917 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16917 + (4 * ceil32(return_data.size)) + 260] = mem[_16917]
                            t = 0
                            u = _16917 + 32
                            v = _16917 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16917]:
                                mem[v] = mem[u + 12 len 20]
                                _16785 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16917 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16917 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18768))
                            call address(_18768).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16917 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16917]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16917 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16917 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22638 = mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16917 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22818 = mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16917 + (6 * ceil32(return_data.size)) + (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16917 + (6 * ceil32(return_data.size)) + (32 * mem[_16917 + (4 * ceil32(return_data.size)) + mem[_16917 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16917 + (6 * ceil32(return_data.size)) + 96] = _22818
                            require return_data.size >= _22638 + (32 * _22818) + 32
                            t = _16917 + (4 * ceil32(return_data.size)) + _22638 + 128
                            u = _16917 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22818:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16917] - 1 < mem[_16917]
                            _25192 = mem[(32 * mem[_16917] - 1) + _16917 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25192))
                            staticcall address(_25192).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16917
                            s = mem[_25698] - ext_call.return_data[0]
                            continue 
                        mem[_16917 + (4 * ceil32(return_data.size)) + 100] = address(_17442)
                        mem[_16917 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17418))
                        call address(_17418).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17442), -1
                        mem[_16917 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16917 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11249 / 2) < mem[96]
                        _19568 = mem[(32 * idx - (_11249 / 2)) + 128]
                        mem[_16917 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16917 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16917 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16917 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16917 + (6 * ceil32(return_data.size)) + 260] = mem[_16917]
                        t = 0
                        u = _16917 + 32
                        v = _16917 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16917]:
                            mem[v] = mem[u + 12 len 20]
                            _16785 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16917 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16917 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19568))
                        call address(_19568).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16917 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16917]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16917 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16917 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22639 = mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16917 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22819 = mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16917 + (7 * ceil32(return_data.size)) + (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16917 + (7 * ceil32(return_data.size)) + (32 * mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16917 + (7 * ceil32(return_data.size)) + 96] = mem[_16917 + (6 * ceil32(return_data.size)) + mem[_16917 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require return_data.size >= _22639 + (32 * _22819) + 32
                        t = _16917 + (6 * ceil32(return_data.size)) + _22639 + 128
                        u = _16917 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22819:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16917] - 1 < mem[_16917]
                        _25194 = mem[(32 * mem[_16917] - 1) + _16917 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25194))
                        staticcall address(_25194).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25699 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16917
                        s = mem[_25699] - ext_call.return_data[0]
                        continue 
                    _16919 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16919 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16919]
                    mem[_16919 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16919]
                    mem[_16919 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16919]
                    mem[_16919 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16919] - 1 < mem[_16919]
                    mem[_16919 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16919] - 1) + _16919 + 44 len 20])
                    staticcall mem[(32 * mem[_16919] - 1) + _16919 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16919 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16919 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16919]
                    _17466 = mem[_16919 + 32]
                    require idx + -(_11249 / 2) + 1 < mem[96]
                    _17491 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16919 + 44 len 20])
                        staticcall mem[_16919 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16919 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16919 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16919 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                        require ext_code.size(mem[_16919 + 44 len 20])
                        staticcall mem[_16919 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17491)
                        mem[_16919 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16919 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11249 / 2) + 1 < mem[96]
                            _18445 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                            mem[_16919 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16919 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16919 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16919 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16919 + (4 * ceil32(return_data.size)) + 292] = mem[_16919]
                            s = 0
                            t = _16919 + 32
                            u = _16919 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16919]:
                                mem[u] = mem[t + 12 len 20]
                                _16785 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16919 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16919 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18445))
                            call address(_18445).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16919 + (4 * ceil32(return_data.size)) + (32 * mem[_16919]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22460 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22640 = mem[_22460]
                            require mem[_22460] <= test266151307()
                            require _22460 + return_data.size > _22460 + mem[_22460] + 31
                            _22820 = mem[_22460 + mem[_22460]]
                            require mem[_22460 + mem[_22460]] <= test266151307()
                            require (32 * mem[_22460 + mem[_22460]]) + 32 >= 0 and _22460 + ceil32(return_data.size) + (32 * mem[_22460 + mem[_22460]]) + 32 <= test266151307()
                            mem[64] = _22460 + ceil32(return_data.size) + (32 * mem[_22460 + mem[_22460]]) + 32
                            mem[_22460 + ceil32(return_data.size)] = _22820
                            require return_data.size >= _22640 + (32 * _22820) + 32
                            t = _22460 + _22640 + 32
                            u = _22460 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22820:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16919] - 1 < mem[_16919]
                            _25196 = mem[(32 * mem[_16919] - 1) + _16919 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25196))
                            staticcall address(_25196).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25700 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16919
                            s = mem[_25700] - ext_call.return_data[0]
                            continue 
                        mem[_16919 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                        mem[_16919 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17466))
                        call address(_17466).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17491), -1
                        mem[_16919 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16919 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11249 / 2) + 1 < mem[96]
                        _19156 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                        mem[_16919 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16919 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16919 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16919 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16919 + (6 * ceil32(return_data.size)) + 292] = mem[_16919]
                        s = 0
                        t = _16919 + 32
                        u = _16919 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16919]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16919 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16919 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19156))
                        call address(_19156).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16919 + (6 * ceil32(return_data.size)) + (32 * mem[_16919]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22461 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22641 = mem[_22461]
                        require mem[_22461] <= test266151307()
                        require _22461 + return_data.size > _22461 + mem[_22461] + 31
                        _22821 = mem[_22461 + mem[_22461]]
                        require mem[_22461 + mem[_22461]] <= test266151307()
                        require (32 * mem[_22461 + mem[_22461]]) + 32 >= 0 and _22461 + ceil32(return_data.size) + (32 * mem[_22461 + mem[_22461]]) + 32 <= test266151307()
                        mem[64] = _22461 + ceil32(return_data.size) + (32 * mem[_22461 + mem[_22461]]) + 32
                        mem[_22461 + ceil32(return_data.size)] = _22821
                        require return_data.size >= _22641 + (32 * _22821) + 32
                        t = _22461 + _22641 + 32
                        u = _22461 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22821:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16919] - 1 < mem[_16919]
                        _25198 = mem[(32 * mem[_16919] - 1) + _16919 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25198))
                        staticcall address(_25198).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25701 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16919
                        s = mem[_25701] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16919 + 44 len 20])
                        staticcall mem[_16919 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16919 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16919 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16919 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                        require ext_code.size(mem[_16919 + 44 len 20])
                        staticcall mem[_16919 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17491)
                        mem[_16919 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16919 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11249 / 2) + 1 < mem[96]
                            _18680 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                            mem[_16919 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16919 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16919 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16919 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16919 + (4 * ceil32(return_data.size)) + 292] = mem[_16919]
                            s = 0
                            t = _16919 + 32
                            u = _16919 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16919]:
                                mem[u] = mem[t + 12 len 20]
                                _16785 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16919 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16919 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18680))
                            call address(_18680).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16919 + (4 * ceil32(return_data.size)) + (32 * mem[_16919]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22462 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22642 = mem[_22462]
                            require mem[_22462] <= test266151307()
                            require _22462 + return_data.size > _22462 + mem[_22462] + 31
                            _22822 = mem[_22462 + mem[_22462]]
                            require mem[_22462 + mem[_22462]] <= test266151307()
                            require (32 * mem[_22462 + mem[_22462]]) + 32 >= 0 and _22462 + ceil32(return_data.size) + (32 * mem[_22462 + mem[_22462]]) + 32 <= test266151307()
                            mem[64] = _22462 + ceil32(return_data.size) + (32 * mem[_22462 + mem[_22462]]) + 32
                            mem[_22462 + ceil32(return_data.size)] = _22822
                            require return_data.size >= _22642 + (32 * _22822) + 32
                            t = _22462 + _22642 + 32
                            u = _22462 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22822:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16919] - 1 < mem[_16919]
                            _25200 = mem[(32 * mem[_16919] - 1) + _16919 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25200))
                            staticcall address(_25200).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25702 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16919
                            s = mem[_25702] - ext_call.return_data[0]
                            continue 
                        mem[_16919 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                        mem[_16919 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17466))
                        call address(_17466).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17491), -1
                        mem[_16919 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16919 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11249 / 2) + 1 < mem[96]
                        _19469 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                        mem[_16919 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16919 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16919 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16919 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16919 + (6 * ceil32(return_data.size)) + 292] = mem[_16919]
                        s = 0
                        t = _16919 + 32
                        u = _16919 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16919]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16919 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16919 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19469))
                        call address(_19469).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16919 + (6 * ceil32(return_data.size)) + (32 * mem[_16919]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22463 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22643 = mem[_22463]
                        require mem[_22463] <= test266151307()
                        require _22463 + return_data.size > _22463 + mem[_22463] + 31
                        _22823 = mem[_22463 + mem[_22463]]
                        require mem[_22463 + mem[_22463]] <= test266151307()
                        require (32 * mem[_22463 + mem[_22463]]) + 32 >= 0 and _22463 + ceil32(return_data.size) + (32 * mem[_22463 + mem[_22463]]) + 32 <= test266151307()
                        mem[64] = _22463 + ceil32(return_data.size) + (32 * mem[_22463 + mem[_22463]]) + 32
                        mem[_22463 + ceil32(return_data.size)] = _22823
                        require return_data.size >= _22643 + (32 * _22823) + 32
                        t = _22463 + _22643 + 32
                        u = _22463 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22823:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16919] - 1 < mem[_16919]
                        _25202 = mem[(32 * mem[_16919] - 1) + _16919 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25202))
                        staticcall address(_25202).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25703 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16919
                        s = mem[_25703] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16919 + 44 len 20])
                    staticcall mem[_16919 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16919 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16919 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16919 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                    require ext_code.size(mem[_16919 + 44 len 20])
                    staticcall mem[_16919 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17491)
                    mem[_16919 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16919 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11249 / 2) + 1 < mem[96]
                        _18962 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                        mem[_16919 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16919 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16919 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16919 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16919 + (4 * ceil32(return_data.size)) + 292] = mem[_16919]
                        s = 0
                        t = _16919 + 32
                        u = _16919 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16919]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16919 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16919 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18962))
                        call address(_18962).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16919 + (4 * ceil32(return_data.size)) + (32 * mem[_16919]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22464 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22644 = mem[_22464]
                        require mem[_22464] <= test266151307()
                        require _22464 + return_data.size > _22464 + mem[_22464] + 31
                        _22824 = mem[_22464 + mem[_22464]]
                        require mem[_22464 + mem[_22464]] <= test266151307()
                        require (32 * mem[_22464 + mem[_22464]]) + 32 >= 0 and _22464 + ceil32(return_data.size) + (32 * mem[_22464 + mem[_22464]]) + 32 <= test266151307()
                        mem[64] = _22464 + ceil32(return_data.size) + (32 * mem[_22464 + mem[_22464]]) + 32
                        mem[_22464 + ceil32(return_data.size)] = _22824
                        require return_data.size >= _22644 + (32 * _22824) + 32
                        t = _22464 + _22644 + 32
                        u = _22464 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22824:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16919] - 1 < mem[_16919]
                        _25204 = mem[(32 * mem[_16919] - 1) + _16919 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25204))
                        staticcall address(_25204).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25704 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16919
                        s = mem[_25704] - ext_call.return_data[0]
                        continue 
                    mem[_16919 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                    mem[_16919 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17466))
                    call address(_17466).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17491), -1
                    mem[_16919 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16919 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11249 / 2) + 1 < mem[96]
                    _19765 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                    mem[_16919 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16919 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16919 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16919 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16919 + (6 * ceil32(return_data.size)) + 292] = mem[_16919]
                    s = 0
                    t = _16919 + 32
                    u = _16919 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16919]:
                        mem[u] = mem[t + 12 len 20]
                        _16785 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16919 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16919 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19765))
                    call address(_19765).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16919 + (6 * ceil32(return_data.size)) + (32 * mem[_16919]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22465 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22645 = mem[_22465]
                    require mem[_22465] <= test266151307()
                    require _22465 + return_data.size > _22465 + mem[_22465] + 31
                    _22825 = mem[_22465 + mem[_22465]]
                    require mem[_22465 + mem[_22465]] <= test266151307()
                    require (32 * mem[_22465 + mem[_22465]]) + 32 >= 0 and _22465 + ceil32(return_data.size) + (32 * mem[_22465 + mem[_22465]]) + 32 <= test266151307()
                    mem[64] = _22465 + ceil32(return_data.size) + (32 * mem[_22465 + mem[_22465]]) + 32
                    mem[_22465 + ceil32(return_data.size)] = _22825
                    require return_data.size >= _22645 + (32 * _22825) + 32
                    t = _22465 + _22645 + 32
                    u = _22465 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22825:
                        mem[u] = mem[t]
                        _16785 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16919] - 1 < mem[_16919]
                    _25206 = mem[(32 * mem[_16919] - 1) + _16919 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25206))
                    staticcall address(_25206).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25705 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16785 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16919
                    s = mem[_25705] - ext_call.return_data[0]
                    continue 
                require idx + -(_11249 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_11249 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11249 / 2) + 1) + 140 len 20]:
                    require idx + -(_11249 / 2) + 1 < mem[96]
                    require idx - (_11249 / 2) < mem[96]
                    if mem[(32 * idx - (_11249 / 2)) + 140 len 20] != mem[(32 * idx + -(_11249 / 2) + 1) + 140 len 20]:
                        _17046 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_17046 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_17046]
                        mem[_17046 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17046]
                        mem[_17046 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_17046] - 1 < mem[_17046]
                        mem[_17046 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_17046] - 1) + _17046 + 44 len 20])
                        staticcall mem[(32 * mem[_17046] - 1) + _17046 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17046 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17046 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_17046]
                        _17492 = mem[_17046 + 32]
                        require idx - (_11249 / 2) < mem[96]
                        _17520 = mem[(32 * idx - (_11249 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17046 + 44 len 20])
                            staticcall mem[_17046 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17046 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17046 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17046 + (2 * ceil32(return_data.size)) + 132] = address(_17520)
                            require ext_code.size(mem[_17046 + 44 len 20])
                            staticcall mem[_17046 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17520)
                            mem[_17046 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17046 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11249 / 2) < mem[96]
                                _18522 = mem[(32 * idx - (_11249 / 2)) + 128]
                                mem[_17046 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17046 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17046 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17046 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17046 + (4 * ceil32(return_data.size)) + 260] = mem[_17046]
                                s = 0
                                t = _17046 + 32
                                u = _17046 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_17046]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16785 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17046 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17046 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18522))
                                call address(_18522).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17046 + (4 * ceil32(return_data.size)) + (32 * mem[_17046]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22466 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22646 = mem[_22466]
                                require mem[_22466] <= test266151307()
                                require _22466 + return_data.size > _22466 + mem[_22466] + 31
                                _22826 = mem[_22466 + mem[_22466]]
                                require mem[_22466 + mem[_22466]] <= test266151307()
                                require (32 * mem[_22466 + mem[_22466]]) + 32 >= 0 and _22466 + ceil32(return_data.size) + (32 * mem[_22466 + mem[_22466]]) + 32 <= test266151307()
                                mem[64] = _22466 + ceil32(return_data.size) + (32 * mem[_22466 + mem[_22466]]) + 32
                                mem[_22466 + ceil32(return_data.size)] = _22826
                                require return_data.size >= _22646 + (32 * _22826) + 32
                                t = _22466 + _22646 + 32
                                u = _22466 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22826:
                                    mem[u] = mem[t]
                                    _16785 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17046] - 1 < mem[_17046]
                                _25208 = mem[(32 * mem[_17046] - 1) + _17046 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25208))
                                staticcall address(_25208).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25706 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16785 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17046
                                s = mem[_25706] - ext_call.return_data[0]
                                continue 
                            mem[_17046 + (4 * ceil32(return_data.size)) + 100] = address(_17520)
                            mem[_17046 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17492))
                            call address(_17492).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17520), -1
                            mem[_17046 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17046 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11249 / 2) < mem[96]
                            _19271 = mem[(32 * idx - (_11249 / 2)) + 128]
                            mem[_17046 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17046 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17046 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17046 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17046 + (6 * ceil32(return_data.size)) + 260] = mem[_17046]
                            s = 0
                            t = _17046 + 32
                            u = _17046 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_17046]:
                                mem[u] = mem[t + 12 len 20]
                                _16785 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17046 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17046 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19271))
                            call address(_19271).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17046 + (6 * ceil32(return_data.size)) + (32 * mem[_17046]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22467 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22647 = mem[_22467]
                            require mem[_22467] <= test266151307()
                            require _22467 + return_data.size > _22467 + mem[_22467] + 31
                            _22827 = mem[_22467 + mem[_22467]]
                            require mem[_22467 + mem[_22467]] <= test266151307()
                            require (32 * mem[_22467 + mem[_22467]]) + 32 >= 0 and _22467 + ceil32(return_data.size) + (32 * mem[_22467 + mem[_22467]]) + 32 <= test266151307()
                            mem[64] = _22467 + ceil32(return_data.size) + (32 * mem[_22467 + mem[_22467]]) + 32
                            mem[_22467 + ceil32(return_data.size)] = _22827
                            require return_data.size >= _22647 + (32 * _22827) + 32
                            t = _22467 + _22647 + 32
                            u = _22467 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22827:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17046] - 1 < mem[_17046]
                            _25210 = mem[(32 * mem[_17046] - 1) + _17046 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25210))
                            staticcall address(_25210).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25707 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17046
                            s = mem[_25707] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17046 + 44 len 20])
                            staticcall mem[_17046 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17046 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17046 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17046 + (2 * ceil32(return_data.size)) + 132] = address(_17520)
                            require ext_code.size(mem[_17046 + 44 len 20])
                            staticcall mem[_17046 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17520)
                            mem[_17046 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17046 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11249 / 2) < mem[96]
                                _18774 = mem[(32 * idx - (_11249 / 2)) + 128]
                                mem[_17046 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17046 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17046 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17046 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17046 + (4 * ceil32(return_data.size)) + 260] = mem[_17046]
                                s = 0
                                t = _17046 + 32
                                u = _17046 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_17046]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16785 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17046 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17046 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18774))
                                call address(_18774).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17046 + (4 * ceil32(return_data.size)) + (32 * mem[_17046]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22468 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22648 = mem[_22468]
                                require mem[_22468] <= test266151307()
                                require _22468 + return_data.size > _22468 + mem[_22468] + 31
                                _22828 = mem[_22468 + mem[_22468]]
                                require mem[_22468 + mem[_22468]] <= test266151307()
                                require (32 * mem[_22468 + mem[_22468]]) + 32 >= 0 and _22468 + ceil32(return_data.size) + (32 * mem[_22468 + mem[_22468]]) + 32 <= test266151307()
                                mem[64] = _22468 + ceil32(return_data.size) + (32 * mem[_22468 + mem[_22468]]) + 32
                                mem[_22468 + ceil32(return_data.size)] = _22828
                                require return_data.size >= _22648 + (32 * _22828) + 32
                                t = _22468 + _22648 + 32
                                u = _22468 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22828:
                                    mem[u] = mem[t]
                                    _16785 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17046] - 1 < mem[_17046]
                                _25212 = mem[(32 * mem[_17046] - 1) + _17046 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25212))
                                staticcall address(_25212).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25708 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16785 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17046
                                s = mem[_25708] - ext_call.return_data[0]
                                continue 
                            mem[_17046 + (4 * ceil32(return_data.size)) + 100] = address(_17520)
                            mem[_17046 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17492))
                            call address(_17492).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17520), -1
                            mem[_17046 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17046 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11249 / 2) < mem[96]
                            _19574 = mem[(32 * idx - (_11249 / 2)) + 128]
                            mem[_17046 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17046 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17046 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17046 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17046 + (6 * ceil32(return_data.size)) + 260] = mem[_17046]
                            s = 0
                            t = _17046 + 32
                            u = _17046 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_17046]:
                                mem[u] = mem[t + 12 len 20]
                                _16785 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17046 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17046 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19574))
                            call address(_19574).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17046 + (6 * ceil32(return_data.size)) + (32 * mem[_17046]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22469 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22649 = mem[_22469]
                            require mem[_22469] <= test266151307()
                            require _22469 + return_data.size > _22469 + mem[_22469] + 31
                            _22829 = mem[_22469 + mem[_22469]]
                            require mem[_22469 + mem[_22469]] <= test266151307()
                            require (32 * mem[_22469 + mem[_22469]]) + 32 >= 0 and _22469 + ceil32(return_data.size) + (32 * mem[_22469 + mem[_22469]]) + 32 <= test266151307()
                            mem[64] = _22469 + ceil32(return_data.size) + (32 * mem[_22469 + mem[_22469]]) + 32
                            mem[_22469 + ceil32(return_data.size)] = _22829
                            require return_data.size >= _22649 + (32 * _22829) + 32
                            t = _22469 + _22649 + 32
                            u = _22469 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22829:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17046] - 1 < mem[_17046]
                            _25214 = mem[(32 * mem[_17046] - 1) + _17046 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25214))
                            staticcall address(_25214).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25709 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17046
                            s = mem[_25709] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17046 + 44 len 20])
                        staticcall mem[_17046 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17046 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17046 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_17046 + (2 * ceil32(return_data.size)) + 132] = address(_17520)
                        require ext_code.size(mem[_17046 + 44 len 20])
                        staticcall mem[_17046 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17520)
                        mem[_17046 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17046 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11249 / 2) < mem[96]
                            _19065 = mem[(32 * idx - (_11249 / 2)) + 128]
                            mem[_17046 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17046 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_17046 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_17046 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_17046 + (4 * ceil32(return_data.size)) + 260] = mem[_17046]
                            s = 0
                            t = _17046 + 32
                            u = _17046 + (4 * ceil32(return_data.size)) + 292
                            while s < mem[_17046]:
                                mem[u] = mem[t + 12 len 20]
                                _16785 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17046 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17046 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19065))
                            call address(_19065).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17046 + (4 * ceil32(return_data.size)) + (32 * mem[_17046]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22470 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22650 = mem[_22470]
                            require mem[_22470] <= test266151307()
                            require _22470 + return_data.size > _22470 + mem[_22470] + 31
                            _22830 = mem[_22470 + mem[_22470]]
                            require mem[_22470 + mem[_22470]] <= test266151307()
                            require (32 * mem[_22470 + mem[_22470]]) + 32 >= 0 and _22470 + ceil32(return_data.size) + (32 * mem[_22470 + mem[_22470]]) + 32 <= test266151307()
                            mem[64] = _22470 + ceil32(return_data.size) + (32 * mem[_22470 + mem[_22470]]) + 32
                            mem[_22470 + ceil32(return_data.size)] = _22830
                            require return_data.size >= _22650 + (32 * _22830) + 32
                            t = _22470 + _22650 + 32
                            u = _22470 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22830:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17046] - 1 < mem[_17046]
                            _25216 = mem[(32 * mem[_17046] - 1) + _17046 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25216))
                            staticcall address(_25216).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25710 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17046
                            s = mem[_25710] - ext_call.return_data[0]
                            continue 
                        mem[_17046 + (4 * ceil32(return_data.size)) + 100] = address(_17520)
                        mem[_17046 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17492))
                        call address(_17492).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17520), -1
                        mem[_17046 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17046 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11249 / 2) < mem[96]
                        _19862 = mem[(32 * idx - (_11249 / 2)) + 128]
                        mem[_17046 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17046 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_17046 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_17046 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_17046 + (6 * ceil32(return_data.size)) + 260] = mem[_17046]
                        s = 0
                        t = _17046 + 32
                        u = _17046 + (6 * ceil32(return_data.size)) + 292
                        while s < mem[_17046]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17046 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_17046 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19862))
                        call address(_19862).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17046 + (6 * ceil32(return_data.size)) + (32 * mem[_17046]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22471 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22651 = mem[_22471]
                        require mem[_22471] <= test266151307()
                        require _22471 + return_data.size > _22471 + mem[_22471] + 31
                        _22831 = mem[_22471 + mem[_22471]]
                        require mem[_22471 + mem[_22471]] <= test266151307()
                        require (32 * mem[_22471 + mem[_22471]]) + 32 >= 0 and _22471 + ceil32(return_data.size) + (32 * mem[_22471 + mem[_22471]]) + 32 <= test266151307()
                        mem[64] = _22471 + ceil32(return_data.size) + (32 * mem[_22471 + mem[_22471]]) + 32
                        mem[_22471 + ceil32(return_data.size)] = _22831
                        require return_data.size >= _22651 + (32 * _22831) + 32
                        t = _22471 + _22651 + 32
                        u = _22471 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22831:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17046] - 1 < mem[_17046]
                        _25218 = mem[(32 * mem[_17046] - 1) + _17046 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25218))
                        staticcall address(_25218).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25711 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _17046
                        s = mem[_25711] - ext_call.return_data[0]
                        continue 
                    _17048 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_17048 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_17048]
                    mem[_17048 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_17048]
                    mem[_17048 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_17048]
                    mem[_17048 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_17048] - 1 < mem[_17048]
                    mem[_17048 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_17048] - 1) + _17048 + 44 len 20])
                    staticcall mem[(32 * mem[_17048] - 1) + _17048 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_17048 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17048 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_17048]
                    _17543 = mem[_17048 + 32]
                    require idx + -(_11249 / 2) + 1 < mem[96]
                    _17559 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_17048 + 44 len 20])
                        staticcall mem[_17048 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17048 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17048 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17048 + (2 * ceil32(return_data.size)) + 164] = address(_17559)
                        require ext_code.size(mem[_17048 + 44 len 20])
                        staticcall mem[_17048 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17559)
                        mem[_17048 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17048 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11249 / 2) + 1 < mem[96]
                            _18687 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                            mem[_17048 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17048 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17048 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17048 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17048 + (4 * ceil32(return_data.size)) + 292] = mem[_17048]
                            s = 0
                            t = _17048 + 32
                            u = _17048 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17048]:
                                mem[u] = mem[t + 12 len 20]
                                _16785 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17048 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17048 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18687))
                            call address(_18687).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17048 + (4 * ceil32(return_data.size)) + (32 * mem[_17048]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22472 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22652 = mem[_22472]
                            require mem[_22472] <= test266151307()
                            require _22472 + return_data.size > _22472 + mem[_22472] + 31
                            _22832 = mem[_22472 + mem[_22472]]
                            require mem[_22472 + mem[_22472]] <= test266151307()
                            require (32 * mem[_22472 + mem[_22472]]) + 32 >= 0 and _22472 + ceil32(return_data.size) + (32 * mem[_22472 + mem[_22472]]) + 32 <= test266151307()
                            mem[64] = _22472 + ceil32(return_data.size) + (32 * mem[_22472 + mem[_22472]]) + 32
                            mem[_22472 + ceil32(return_data.size)] = _22832
                            require return_data.size >= _22652 + (32 * _22832) + 32
                            t = _22472 + _22652 + 32
                            u = _22472 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22832:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17048] - 1 < mem[_17048]
                            _25220 = mem[(32 * mem[_17048] - 1) + _17048 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25220))
                            staticcall address(_25220).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25712 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17048
                            s = mem[_25712] - ext_call.return_data[0]
                            continue 
                        mem[_17048 + (4 * ceil32(return_data.size)) + 132] = address(_17559)
                        mem[_17048 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17543))
                        call address(_17543).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17559), -1
                        mem[_17048 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17048 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11249 / 2) + 1 < mem[96]
                        _19477 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                        mem[_17048 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17048 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17048 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17048 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17048 + (6 * ceil32(return_data.size)) + 292] = mem[_17048]
                        s = 0
                        t = _17048 + 32
                        u = _17048 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17048]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17048 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17048 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19477))
                        call address(_19477).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17048 + (6 * ceil32(return_data.size)) + (32 * mem[_17048]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22473 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22653 = mem[_22473]
                        require mem[_22473] <= test266151307()
                        require _22473 + return_data.size > _22473 + mem[_22473] + 31
                        _22833 = mem[_22473 + mem[_22473]]
                        require mem[_22473 + mem[_22473]] <= test266151307()
                        require (32 * mem[_22473 + mem[_22473]]) + 32 >= 0 and _22473 + ceil32(return_data.size) + (32 * mem[_22473 + mem[_22473]]) + 32 <= test266151307()
                        mem[64] = _22473 + ceil32(return_data.size) + (32 * mem[_22473 + mem[_22473]]) + 32
                        mem[_22473 + ceil32(return_data.size)] = _22833
                        require return_data.size >= _22653 + (32 * _22833) + 32
                        t = _22473 + _22653 + 32
                        u = _22473 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22833:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17048] - 1 < mem[_17048]
                        _25222 = mem[(32 * mem[_17048] - 1) + _17048 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25222))
                        staticcall address(_25222).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25713 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17048
                        s = mem[_25713] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_17048 + 44 len 20])
                        staticcall mem[_17048 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17048 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17048 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17048 + (2 * ceil32(return_data.size)) + 164] = address(_17559)
                        require ext_code.size(mem[_17048 + 44 len 20])
                        staticcall mem[_17048 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17559)
                        mem[_17048 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17048 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11249 / 2) + 1 < mem[96]
                            _18968 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                            mem[_17048 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17048 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17048 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17048 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17048 + (4 * ceil32(return_data.size)) + 292] = mem[_17048]
                            s = 0
                            t = _17048 + 32
                            u = _17048 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17048]:
                                mem[u] = mem[t + 12 len 20]
                                _16785 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17048 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17048 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18968))
                            call address(_18968).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17048 + (4 * ceil32(return_data.size)) + (32 * mem[_17048]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22474 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22654 = mem[_22474]
                            require mem[_22474] <= test266151307()
                            require _22474 + return_data.size > _22474 + mem[_22474] + 31
                            _22834 = mem[_22474 + mem[_22474]]
                            require mem[_22474 + mem[_22474]] <= test266151307()
                            require (32 * mem[_22474 + mem[_22474]]) + 32 >= 0 and _22474 + ceil32(return_data.size) + (32 * mem[_22474 + mem[_22474]]) + 32 <= test266151307()
                            mem[64] = _22474 + ceil32(return_data.size) + (32 * mem[_22474 + mem[_22474]]) + 32
                            mem[_22474 + ceil32(return_data.size)] = _22834
                            require return_data.size >= _22654 + (32 * _22834) + 32
                            t = _22474 + _22654 + 32
                            u = _22474 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22834:
                                mem[u] = mem[t]
                                _16785 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17048] - 1 < mem[_17048]
                            _25224 = mem[(32 * mem[_17048] - 1) + _17048 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25224))
                            staticcall address(_25224).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25714 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16785 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17048
                            s = mem[_25714] - ext_call.return_data[0]
                            continue 
                        mem[_17048 + (4 * ceil32(return_data.size)) + 132] = address(_17559)
                        mem[_17048 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17543))
                        call address(_17543).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17559), -1
                        mem[_17048 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17048 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11249 / 2) + 1 < mem[96]
                        _19771 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                        mem[_17048 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17048 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17048 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17048 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17048 + (6 * ceil32(return_data.size)) + 292] = mem[_17048]
                        s = 0
                        t = _17048 + 32
                        u = _17048 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17048]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17048 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17048 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19771))
                        call address(_19771).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17048 + (6 * ceil32(return_data.size)) + (32 * mem[_17048]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22475 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22655 = mem[_22475]
                        require mem[_22475] <= test266151307()
                        require _22475 + return_data.size > _22475 + mem[_22475] + 31
                        _22835 = mem[_22475 + mem[_22475]]
                        require mem[_22475 + mem[_22475]] <= test266151307()
                        require (32 * mem[_22475 + mem[_22475]]) + 32 >= 0 and _22475 + ceil32(return_data.size) + (32 * mem[_22475 + mem[_22475]]) + 32 <= test266151307()
                        mem[64] = _22475 + ceil32(return_data.size) + (32 * mem[_22475 + mem[_22475]]) + 32
                        mem[_22475 + ceil32(return_data.size)] = _22835
                        require return_data.size >= _22655 + (32 * _22835) + 32
                        t = _22475 + _22655 + 32
                        u = _22475 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22835:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17048] - 1 < mem[_17048]
                        _25226 = mem[(32 * mem[_17048] - 1) + _17048 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25226))
                        staticcall address(_25226).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25715 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17048
                        s = mem[_25715] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_17048 + 44 len 20])
                    staticcall mem[_17048 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_17048 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_17048 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_17048 + (2 * ceil32(return_data.size)) + 164] = address(_17559)
                    require ext_code.size(mem[_17048 + 44 len 20])
                    staticcall mem[_17048 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17559)
                    mem[_17048 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17048 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11249 / 2) + 1 < mem[96]
                        _19276 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                        mem[_17048 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17048 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_17048 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_17048 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_17048 + (4 * ceil32(return_data.size)) + 292] = mem[_17048]
                        s = 0
                        t = _17048 + 32
                        u = _17048 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_17048]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17048 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17048 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19276))
                        call address(_19276).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17048 + (4 * ceil32(return_data.size)) + (32 * mem[_17048]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22476 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22656 = mem[_22476]
                        require mem[_22476] <= test266151307()
                        require _22476 + return_data.size > _22476 + mem[_22476] + 31
                        _22836 = mem[_22476 + mem[_22476]]
                        require mem[_22476 + mem[_22476]] <= test266151307()
                        require (32 * mem[_22476 + mem[_22476]]) + 32 >= 0 and _22476 + ceil32(return_data.size) + (32 * mem[_22476 + mem[_22476]]) + 32 <= test266151307()
                        mem[64] = _22476 + ceil32(return_data.size) + (32 * mem[_22476 + mem[_22476]]) + 32
                        mem[_22476 + ceil32(return_data.size)] = _22836
                        require return_data.size >= _22656 + (32 * _22836) + 32
                        t = _22476 + _22656 + 32
                        u = _22476 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22836:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17048] - 1 < mem[_17048]
                        _25228 = mem[(32 * mem[_17048] - 1) + _17048 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25228))
                        staticcall address(_25228).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25716 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17048
                        s = mem[_25716] - ext_call.return_data[0]
                        continue 
                    mem[_17048 + (4 * ceil32(return_data.size)) + 132] = address(_17559)
                    mem[_17048 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17543))
                    call address(_17543).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17559), -1
                    mem[_17048 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17048 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11249 / 2) + 1 < mem[96]
                    _20040 = mem[(32 * idx + -(_11249 / 2) + 1) + 128]
                    mem[_17048 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_17048 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_17048 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_17048 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_17048 + (6 * ceil32(return_data.size)) + 292] = mem[_17048]
                    s = 0
                    t = _17048 + 32
                    u = _17048 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_17048]:
                        mem[u] = mem[t + 12 len 20]
                        _16785 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_17048 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_17048 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_20040))
                    call address(_20040).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _17048 + (6 * ceil32(return_data.size)) + (32 * mem[_17048]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22477 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22657 = mem[_22477]
                    require mem[_22477] <= test266151307()
                    require _22477 + return_data.size > _22477 + mem[_22477] + 31
                    _22837 = mem[_22477 + mem[_22477]]
                    require mem[_22477 + mem[_22477]] <= test266151307()
                    require (32 * mem[_22477 + mem[_22477]]) + 32 >= 0 and _22477 + ceil32(return_data.size) + (32 * mem[_22477 + mem[_22477]]) + 32 <= test266151307()
                    mem[64] = _22477 + ceil32(return_data.size) + (32 * mem[_22477 + mem[_22477]]) + 32
                    mem[_22477 + ceil32(return_data.size)] = _22837
                    require return_data.size >= _22657 + (32 * _22837) + 32
                    t = _22477 + _22657 + 32
                    u = _22477 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22837:
                        mem[u] = mem[t]
                        _16785 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_17048] - 1 < mem[_17048]
                    _25230 = mem[(32 * mem[_17048] - 1) + _17048 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25230))
                    staticcall address(_25230).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25717 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16785 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _17048
                    s = mem[_25717] - ext_call.return_data[0]
                    continue 
                _16922 = mem[64]
                mem[mem[64]] = 4
                mem[64] = mem[64] + 160
                mem[_16922 + 32 len 128] = call.data[calldata.size len 128]
                require idx < mem[96]
                require 0 < mem[_16922]
                mem[_16922 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_16922]
                mem[_16922 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_16922]
                mem[_16922 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require idx + 3 < mem[96]
                require 3 < mem[_16922]
                mem[_16922 + 128] = mem[(32 * idx + 3) + 140 len 20]
                require mem[_16922] - 1 < mem[_16922]
                mem[_16922 + 164] = this.address
                require ext_code.size(mem[(32 * mem[_16922] - 1) + _16922 + 44 len 20])
                staticcall mem[(32 * mem[_16922] - 1) + _16922 + 44 len 20].balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[_16922 + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16922 + ceil32(return_data.size) + 160
                require return_data.size >= 32
                require 0 < mem[_16922]
                _17522 = mem[_16922 + 32]
                require idx + -(_11249 / 2) + 2 < mem[96]
                _17545 = mem[(32 * idx + -(_11249 / 2) + 2) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_16922 + 44 len 20])
                    staticcall mem[_16922 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16922 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16922 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16922 + (2 * ceil32(return_data.size)) + 196] = address(_17545)
                    require ext_code.size(mem[_16922 + 44 len 20])
                    staticcall mem[_16922 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17545)
                    mem[_16922 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16922 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11249 / 2) + 2 < mem[96]
                        _18602 = mem[(32 * idx + -(_11249 / 2) + 2) + 128]
                        mem[_16922 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16922 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16922 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16922 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16922 + (4 * ceil32(return_data.size)) + 324] = mem[_16922]
                        s = 0
                        t = _16922 + 32
                        u = _16922 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16922]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16922 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16922 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_18602))
                        call address(_18602).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16922 + (4 * ceil32(return_data.size)) + (32 * mem[_16922]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22478 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22658 = mem[_22478]
                        require mem[_22478] <= test266151307()
                        require _22478 + return_data.size > _22478 + mem[_22478] + 31
                        _22838 = mem[_22478 + mem[_22478]]
                        require mem[_22478 + mem[_22478]] <= test266151307()
                        require (32 * mem[_22478 + mem[_22478]]) + 32 >= 0 and _22478 + ceil32(return_data.size) + (32 * mem[_22478 + mem[_22478]]) + 32 <= test266151307()
                        mem[64] = _22478 + ceil32(return_data.size) + (32 * mem[_22478 + mem[_22478]]) + 32
                        mem[_22478 + ceil32(return_data.size)] = _22838
                        require return_data.size >= _22658 + (32 * _22838) + 32
                        t = _22478 + _22658 + 32
                        u = _22478 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22838:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16922] - 1 < mem[_16922]
                        _25232 = mem[(32 * mem[_16922] - 1) + _16922 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25232))
                        staticcall address(_25232).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25718 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16922
                        s = mem[_25718] - ext_call.return_data[0]
                        continue 
                    mem[_16922 + (4 * ceil32(return_data.size)) + 164] = address(_17545)
                    mem[_16922 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17522))
                    call address(_17522).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17545), -1
                    mem[_16922 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16922 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11249 / 2) + 2 < mem[96]
                    _19376 = mem[(32 * idx + -(_11249 / 2) + 2) + 128]
                    mem[_16922 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16922 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16922 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16922 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16922 + (6 * ceil32(return_data.size)) + 324] = mem[_16922]
                    s = 0
                    t = _16922 + 32
                    u = _16922 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16922]:
                        mem[u] = mem[t + 12 len 20]
                        _16785 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16922 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16922 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19376))
                    call address(_19376).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16922 + (6 * ceil32(return_data.size)) + (32 * mem[_16922]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22479 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22659 = mem[_22479]
                    require mem[_22479] <= test266151307()
                    require _22479 + return_data.size > _22479 + mem[_22479] + 31
                    _22839 = mem[_22479 + mem[_22479]]
                    require mem[_22479 + mem[_22479]] <= test266151307()
                    require (32 * mem[_22479 + mem[_22479]]) + 32 >= 0 and _22479 + ceil32(return_data.size) + (32 * mem[_22479 + mem[_22479]]) + 32 <= test266151307()
                    mem[64] = _22479 + ceil32(return_data.size) + (32 * mem[_22479 + mem[_22479]]) + 32
                    mem[_22479 + ceil32(return_data.size)] = _22839
                    require return_data.size >= _22659 + (32 * _22839) + 32
                    t = _22479 + _22659 + 32
                    u = _22479 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22839:
                        mem[u] = mem[t]
                        _16785 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16922] - 1 < mem[_16922]
                    _25234 = mem[(32 * mem[_16922] - 1) + _16922 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25234))
                    staticcall address(_25234).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25719 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16785 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16922
                    s = mem[_25719] - ext_call.return_data[0]
                    continue 
                if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                    require ext_code.size(mem[_16922 + 44 len 20])
                    staticcall mem[_16922 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16922 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16922 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16922 + (2 * ceil32(return_data.size)) + 196] = address(_17545)
                    require ext_code.size(mem[_16922 + 44 len 20])
                    staticcall mem[_16922 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17545)
                    mem[_16922 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16922 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11249 / 2) + 2 < mem[96]
                        _18871 = mem[(32 * idx + -(_11249 / 2) + 2) + 128]
                        mem[_16922 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16922 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16922 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16922 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16922 + (4 * ceil32(return_data.size)) + 324] = mem[_16922]
                        s = 0
                        t = _16922 + 32
                        u = _16922 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16922]:
                            mem[u] = mem[t + 12 len 20]
                            _16785 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16922 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16922 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_18871))
                        call address(_18871).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16922 + (4 * ceil32(return_data.size)) + (32 * mem[_16922]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22480 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22660 = mem[_22480]
                        require mem[_22480] <= test266151307()
                        require _22480 + return_data.size > _22480 + mem[_22480] + 31
                        _22840 = mem[_22480 + mem[_22480]]
                        require mem[_22480 + mem[_22480]] <= test266151307()
                        require (32 * mem[_22480 + mem[_22480]]) + 32 >= 0 and _22480 + ceil32(return_data.size) + (32 * mem[_22480 + mem[_22480]]) + 32 <= test266151307()
                        mem[64] = _22480 + ceil32(return_data.size) + (32 * mem[_22480 + mem[_22480]]) + 32
                        mem[_22480 + ceil32(return_data.size)] = _22840
                        require return_data.size >= _22660 + (32 * _22840) + 32
                        t = _22480 + _22660 + 32
                        u = _22480 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22840:
                            mem[u] = mem[t]
                            _16785 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16922] - 1 < mem[_16922]
                        _25236 = mem[(32 * mem[_16922] - 1) + _16922 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25236))
                        staticcall address(_25236).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25720 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16785 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16922
                        s = mem[_25720] - ext_call.return_data[0]
                        continue 
                    mem[_16922 + (4 * ceil32(return_data.size)) + 164] = address(_17545)
                    mem[_16922 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17522))
                    call address(_17522).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17545), -1
                    mem[_16922 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16922 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11249 / 2) + 2 < mem[96]
                    _19676 = mem[(32 * idx + -(_11249 / 2) + 2) + 128]
                    mem[_16922 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16922 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16922 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16922 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16922 + (6 * ceil32(return_data.size)) + 324] = mem[_16922]
                    s = 0
                    t = _16922 + 32
                    u = _16922 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16922]:
                        mem[u] = mem[t + 12 len 20]
                        _16785 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16922 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16922 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19676))
                    call address(_19676).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16922 + (6 * ceil32(return_data.size)) + (32 * mem[_16922]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22481 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22661 = mem[_22481]
                    require mem[_22481] <= test266151307()
                    require _22481 + return_data.size > _22481 + mem[_22481] + 31
                    _22841 = mem[_22481 + mem[_22481]]
                    require mem[_22481 + mem[_22481]] <= test266151307()
                    require (32 * mem[_22481 + mem[_22481]]) + 32 >= 0 and _22481 + ceil32(return_data.size) + (32 * mem[_22481 + mem[_22481]]) + 32 <= test266151307()
                    mem[64] = _22481 + ceil32(return_data.size) + (32 * mem[_22481 + mem[_22481]]) + 32
                    mem[_22481 + ceil32(return_data.size)] = _22841
                    require return_data.size >= _22661 + (32 * _22841) + 32
                    t = _22481 + _22661 + 32
                    u = _22481 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22841:
                        mem[u] = mem[t]
                        _16785 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16922] - 1 < mem[_16922]
                    _25238 = mem[(32 * mem[_16922] - 1) + _16922 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25238))
                    staticcall address(_25238).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25721 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16785 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16922
                    s = mem[_25721] - ext_call.return_data[0]
                    continue 
                if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(mem[_16922 + 44 len 20])
                staticcall mem[_16922 + 44 len 20].decimals() with:
                        gas gas_remaining wei
                mem[_16922 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_16922 + (2 * ceil32(return_data.size)) + 164] = this.address
                mem[_16922 + (2 * ceil32(return_data.size)) + 196] = address(_17545)
                require ext_code.size(mem[_16922 + 44 len 20])
                staticcall mem[_16922 + 44 len 20].allowance(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_17545)
                mem[_16922 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16922 + (4 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_11249 / 2) + 2 < mem[96]
                    _19167 = mem[(32 * idx + -(_11249 / 2) + 2) + 128]
                    mem[_16922 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16922 + (4 * ceil32(return_data.size)) + 164] = s
                    mem[_16922 + (4 * ceil32(return_data.size)) + 196] = 0
                    mem[_16922 + (4 * ceil32(return_data.size)) + 228] = 160
                    mem[_16922 + (4 * ceil32(return_data.size)) + 324] = mem[_16922]
                    s = 0
                    t = _16922 + 32
                    u = _16922 + (4 * ceil32(return_data.size)) + 356
                    while s < mem[_16922]:
                        mem[u] = mem[t + 12 len 20]
                        _16785 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16922 + (4 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16922 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19167))
                    call address(_19167).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16922 + (4 * ceil32(return_data.size)) + (32 * mem[_16922]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22482 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22662 = mem[_22482]
                    require mem[_22482] <= test266151307()
                    require _22482 + return_data.size > _22482 + mem[_22482] + 31
                    _22842 = mem[_22482 + mem[_22482]]
                    require mem[_22482 + mem[_22482]] <= test266151307()
                    require (32 * mem[_22482 + mem[_22482]]) + 32 >= 0 and _22482 + ceil32(return_data.size) + (32 * mem[_22482 + mem[_22482]]) + 32 <= test266151307()
                    mem[64] = _22482 + ceil32(return_data.size) + (32 * mem[_22482 + mem[_22482]]) + 32
                    mem[_22482 + ceil32(return_data.size)] = _22842
                    require return_data.size >= _22662 + (32 * _22842) + 32
                    t = _22482 + _22662 + 32
                    u = _22482 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22842:
                        mem[u] = mem[t]
                        _16785 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16922] - 1 < mem[_16922]
                    _25240 = mem[(32 * mem[_16922] - 1) + _16922 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25240))
                    staticcall address(_25240).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25722 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16785 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16922
                    s = mem[_25722] - ext_call.return_data[0]
                    continue 
                mem[_16922 + (4 * ceil32(return_data.size)) + 164] = address(_17545)
                mem[_16922 + (4 * ceil32(return_data.size)) + 196] = -1
                require ext_code.size(address(_17522))
                call address(_17522).approve(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args address(_17545), -1
                mem[_16922 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16922 + (6 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_11249 / 2) + 2 < mem[96]
                _19952 = mem[(32 * idx + -(_11249 / 2) + 2) + 128]
                mem[_16922 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_16922 + (6 * ceil32(return_data.size)) + 164] = s
                mem[_16922 + (6 * ceil32(return_data.size)) + 196] = 0
                mem[_16922 + (6 * ceil32(return_data.size)) + 228] = 160
                mem[_16922 + (6 * ceil32(return_data.size)) + 324] = mem[_16922]
                s = 0
                t = _16922 + 32
                u = _16922 + (6 * ceil32(return_data.size)) + 356
                while s < mem[_16922]:
                    mem[u] = mem[t + 12 len 20]
                    _16785 = mem[96]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_16922 + (6 * ceil32(return_data.size)) + 260] = this.address
                mem[_16922 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                require ext_code.size(address(_19952))
                call address(_19952).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _16922 + (6 * ceil32(return_data.size)) + (32 * mem[_16922]) + -mem[64] + 352]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22483 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22663 = mem[_22483]
                require mem[_22483] <= test266151307()
                require _22483 + return_data.size > _22483 + mem[_22483] + 31
                _22843 = mem[_22483 + mem[_22483]]
                require mem[_22483 + mem[_22483]] <= test266151307()
                require (32 * mem[_22483 + mem[_22483]]) + 32 >= 0 and _22483 + ceil32(return_data.size) + (32 * mem[_22483 + mem[_22483]]) + 32 <= test266151307()
                mem[64] = _22483 + ceil32(return_data.size) + (32 * mem[_22483 + mem[_22483]]) + 32
                mem[_22483 + ceil32(return_data.size)] = _22843
                require return_data.size >= _22663 + (32 * _22843) + 32
                t = _22483 + _22663 + 32
                u = _22483 + ceil32(return_data.size) + 32
                s = 0
                while s < _22843:
                    mem[u] = mem[t]
                    _16785 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_16922] - 1 < mem[_16922]
                _25242 = mem[(32 * mem[_16922] - 1) + _16922 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_25242))
                staticcall address(_25242).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25723 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _16785 = mem[96]
                idx = idx + 3
                s = ext_call.return_data[0]
                s = _16922
                s = mem[_25723] - ext_call.return_data[0]
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            _16812 = mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160]
            require _11249 / 2 < mem[96]
            _16835 = mem[(16 * Mask(251, 1, _11249)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_16835))
            staticcall address(_16835).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16900 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_16900] < _11327 - cd[4] + _16812:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11254 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11281 = mem[_11254]
                    require mem[_11254] == mem[_11254 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11331 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11331)
                    require ext_code.size(address(_11281))
                    staticcall address(_11281).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11331)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11386 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11425 = mem[_11386]
                    require mem[_11386] == mem[_11386 + 12 len 20]
                    require ext_code.size(mem[_11386 + 12 len 20])
                    staticcall mem[_11386 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11608 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11755 = mem[_11608]
                    require mem[_11608] == mem[_11608 + 18 len 14]
                    _11881 = mem[_11608 + 32]
                    require mem[_11608 + 32] == mem[_11608 + 50 len 14]
                    require mem[_11608 + 64] == mem[_11608 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11608 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11608 + 50 len 14] / (997 * s) + (1000 * mem[_11608 + 18 len 14])
                            idx = idx + 1
                            s = _11425
                            s = 997 * s * Mask(112, 0, _11881) / (997 * s) + (1000 * Mask(112, 0, _11755))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11608 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11608 + 50 len 14] / (997 * s) + (1000 * mem[_11608 + 18 len 14])
                            idx = idx + 1
                            s = _11425
                            s = 997 * s * Mask(112, 0, _11881) / (997 * s) + (1000 * Mask(112, 0, _11755))
                            continue 
                    require (997 * s) + (1000 * mem[_11608 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11608 + 18 len 14] / (997 * s) + (1000 * mem[_11608 + 50 len 14])
                    idx = idx + 1
                    s = _11425
                    s = 997 * s * Mask(112, 0, _11755) / (997 * s) + (1000 * Mask(112, 0, _11881))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11252 = mem[96]
                require mem[96] / 2 < mem[96]
                _11278 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11278))
                staticcall address(_11278).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11304 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11330 = mem[_11304]
                _16786 = mem[96]
                idx = _11252 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16786 - 1:
                    require idx + -(_11252 / 2) + 1 < mem[96]
                    require idx - (_11252 / 2) < mem[96]
                    require idx + -(_11252 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11252 / 2)) + 140 len 20] != mem[(32 * idx + -(_11252 / 2) + 1) + 140 len 20]:
                        require idx - (_11252 / 2) < mem[96]
                        if mem[(32 * idx - (_11252 / 2)) + 140 len 20] != mem[(32 * idx + -(_11252 / 2) + 1) + 140 len 20]:
                            _16924 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16924 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16924]
                            mem[_16924 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16924]
                            mem[_16924 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16924] - 1 < mem[_16924]
                            mem[_16924 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16924] - 1) + _16924 + 44 len 20])
                            staticcall mem[(32 * mem[_16924] - 1) + _16924 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16924 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16924 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16924]
                            _17422 = mem[_16924 + 32]
                            require idx - (_11252 / 2) < mem[96]
                            _17446 = mem[(32 * idx - (_11252 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16924 + 44 len 20])
                                staticcall mem[_16924 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16924 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16924 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16924 + (2 * ceil32(return_data.size)) + 132] = address(_17446)
                                require ext_code.size(mem[_16924 + 44 len 20])
                                staticcall mem[_16924 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17446)
                                mem[_16924 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16924 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11252 / 2) < mem[96]
                                    _18340 = mem[(32 * idx - (_11252 / 2)) + 128]
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 260] = mem[_16924]
                                    s = 0
                                    t = _16924 + 32
                                    u = _16924 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16924]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16786 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18340))
                                    call address(_18340).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16924 + (4 * ceil32(return_data.size)) + (32 * mem[_16924]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22484 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22664 = mem[_22484]
                                    require mem[_22484] <= test266151307()
                                    require _22484 + return_data.size > _22484 + mem[_22484] + 31
                                    _22844 = mem[_22484 + mem[_22484]]
                                    require mem[_22484 + mem[_22484]] <= test266151307()
                                    require (32 * mem[_22484 + mem[_22484]]) + 32 >= 0 and _22484 + ceil32(return_data.size) + (32 * mem[_22484 + mem[_22484]]) + 32 <= test266151307()
                                    mem[64] = _22484 + ceil32(return_data.size) + (32 * mem[_22484 + mem[_22484]]) + 32
                                    mem[_22484 + ceil32(return_data.size)] = _22844
                                    require return_data.size >= _22664 + (32 * _22844) + 32
                                    t = _22484 + _22664 + 32
                                    u = _22484 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22844:
                                        mem[u] = mem[t]
                                        _16786 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16924] - 1 < mem[_16924]
                                    _25244 = mem[(32 * mem[_16924] - 1) + _16924 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25244))
                                    staticcall address(_25244).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25724 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16786 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16924
                                    s = mem[_25724] - ext_call.return_data[0]
                                    continue 
                                mem[_16924 + (4 * ceil32(return_data.size)) + 100] = address(_17446)
                                mem[_16924 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17422))
                                call address(_17422).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17446), -1
                                mem[_16924 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16924 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11252 / 2) < mem[96]
                                _18975 = mem[(32 * idx - (_11252 / 2)) + 128]
                                mem[_16924 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16924 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16924 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16924 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16924 + (6 * ceil32(return_data.size)) + 260] = mem[_16924]
                                s = 0
                                t = _16924 + 32
                                u = _16924 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16924]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16924 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16924 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18975))
                                call address(_18975).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16924 + (6 * ceil32(return_data.size)) + (32 * mem[_16924]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22485 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22665 = mem[_22485]
                                require mem[_22485] <= test266151307()
                                require _22485 + return_data.size > _22485 + mem[_22485] + 31
                                _22845 = mem[_22485 + mem[_22485]]
                                require mem[_22485 + mem[_22485]] <= test266151307()
                                require (32 * mem[_22485 + mem[_22485]]) + 32 >= 0 and _22485 + ceil32(return_data.size) + (32 * mem[_22485 + mem[_22485]]) + 32 <= test266151307()
                                mem[64] = _22485 + ceil32(return_data.size) + (32 * mem[_22485 + mem[_22485]]) + 32
                                mem[_22485 + ceil32(return_data.size)] = _22845
                                require return_data.size >= _22665 + (32 * _22845) + 32
                                t = _22485 + _22665 + 32
                                u = _22485 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22845:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16924] - 1 < mem[_16924]
                                _25246 = mem[(32 * mem[_16924] - 1) + _16924 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25246))
                                staticcall address(_25246).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25725 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16924
                                s = mem[_25725] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16924 + 44 len 20])
                                staticcall mem[_16924 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16924 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16924 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16924 + (2 * ceil32(return_data.size)) + 132] = address(_17446)
                                require ext_code.size(mem[_16924 + 44 len 20])
                                staticcall mem[_16924 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17446)
                                mem[_16924 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16924 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11252 / 2) < mem[96]
                                    _18530 = mem[(32 * idx - (_11252 / 2)) + 128]
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 260] = mem[_16924]
                                    s = 0
                                    t = _16924 + 32
                                    u = _16924 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16924]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16786 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16924 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18530))
                                    call address(_18530).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16924 + (4 * ceil32(return_data.size)) + (32 * mem[_16924]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22486 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22666 = mem[_22486]
                                    require mem[_22486] <= test266151307()
                                    require _22486 + return_data.size > _22486 + mem[_22486] + 31
                                    _22846 = mem[_22486 + mem[_22486]]
                                    require mem[_22486 + mem[_22486]] <= test266151307()
                                    require (32 * mem[_22486 + mem[_22486]]) + 32 >= 0 and _22486 + ceil32(return_data.size) + (32 * mem[_22486 + mem[_22486]]) + 32 <= test266151307()
                                    mem[64] = _22486 + ceil32(return_data.size) + (32 * mem[_22486 + mem[_22486]]) + 32
                                    mem[_22486 + ceil32(return_data.size)] = _22846
                                    require return_data.size >= _22666 + (32 * _22846) + 32
                                    t = _22486 + _22666 + 32
                                    u = _22486 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22846:
                                        mem[u] = mem[t]
                                        _16786 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16924] - 1 < mem[_16924]
                                    _25248 = mem[(32 * mem[_16924] - 1) + _16924 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25248))
                                    staticcall address(_25248).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25726 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16786 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16924
                                    s = mem[_25726] - ext_call.return_data[0]
                                    continue 
                                mem[_16924 + (4 * ceil32(return_data.size)) + 100] = address(_17446)
                                mem[_16924 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17422))
                                call address(_17422).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17446), -1
                                mem[_16924 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16924 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11252 / 2) < mem[96]
                                _19283 = mem[(32 * idx - (_11252 / 2)) + 128]
                                mem[_16924 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16924 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16924 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16924 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16924 + (6 * ceil32(return_data.size)) + 260] = mem[_16924]
                                s = 0
                                t = _16924 + 32
                                u = _16924 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16924]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16924 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16924 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19283))
                                call address(_19283).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16924 + (6 * ceil32(return_data.size)) + (32 * mem[_16924]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22487 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22667 = mem[_22487]
                                require mem[_22487] <= test266151307()
                                require _22487 + return_data.size > _22487 + mem[_22487] + 31
                                _22847 = mem[_22487 + mem[_22487]]
                                require mem[_22487 + mem[_22487]] <= test266151307()
                                require (32 * mem[_22487 + mem[_22487]]) + 32 >= 0 and _22487 + ceil32(return_data.size) + (32 * mem[_22487 + mem[_22487]]) + 32 <= test266151307()
                                mem[64] = _22487 + ceil32(return_data.size) + (32 * mem[_22487 + mem[_22487]]) + 32
                                mem[_22487 + ceil32(return_data.size)] = _22847
                                require return_data.size >= _22667 + (32 * _22847) + 32
                                t = _22487 + _22667 + 32
                                u = _22487 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22847:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16924] - 1 < mem[_16924]
                                _25250 = mem[(32 * mem[_16924] - 1) + _16924 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25250))
                                staticcall address(_25250).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25727 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16924
                                s = mem[_25727] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16924 + 44 len 20])
                            staticcall mem[_16924 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16924 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16924 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16924 + (2 * ceil32(return_data.size)) + 132] = address(_17446)
                            require ext_code.size(mem[_16924 + 44 len 20])
                            staticcall mem[_16924 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17446)
                            mem[_16924 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16924 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11252 / 2) < mem[96]
                                _18783 = mem[(32 * idx - (_11252 / 2)) + 128]
                                mem[_16924 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16924 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16924 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16924 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16924 + (4 * ceil32(return_data.size)) + 260] = mem[_16924]
                                s = 0
                                t = _16924 + 32
                                u = _16924 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16924]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16924 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16924 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18783))
                                call address(_18783).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16924 + (4 * ceil32(return_data.size)) + (32 * mem[_16924]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22488 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22668 = mem[_22488]
                                require mem[_22488] <= test266151307()
                                require _22488 + return_data.size > _22488 + mem[_22488] + 31
                                _22848 = mem[_22488 + mem[_22488]]
                                require mem[_22488 + mem[_22488]] <= test266151307()
                                require (32 * mem[_22488 + mem[_22488]]) + 32 >= 0 and _22488 + ceil32(return_data.size) + (32 * mem[_22488 + mem[_22488]]) + 32 <= test266151307()
                                mem[64] = _22488 + ceil32(return_data.size) + (32 * mem[_22488 + mem[_22488]]) + 32
                                mem[_22488 + ceil32(return_data.size)] = _22848
                                require return_data.size >= _22668 + (32 * _22848) + 32
                                t = _22488 + _22668 + 32
                                u = _22488 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22848:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16924] - 1 < mem[_16924]
                                _25252 = mem[(32 * mem[_16924] - 1) + _16924 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25252))
                                staticcall address(_25252).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25728 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16924
                                s = mem[_25728] - ext_call.return_data[0]
                                continue 
                            mem[_16924 + (4 * ceil32(return_data.size)) + 100] = address(_17446)
                            mem[_16924 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17422))
                            call address(_17422).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17446), -1
                            mem[_16924 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16924 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11252 / 2) < mem[96]
                            _19584 = mem[(32 * idx - (_11252 / 2)) + 128]
                            mem[_16924 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16924 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16924 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16924 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16924 + (6 * ceil32(return_data.size)) + 260] = mem[_16924]
                            s = 0
                            t = _16924 + 32
                            u = _16924 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16924]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16924 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16924 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19584))
                            call address(_19584).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16924 + (6 * ceil32(return_data.size)) + (32 * mem[_16924]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22489 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22669 = mem[_22489]
                            require mem[_22489] <= test266151307()
                            require _22489 + return_data.size > _22489 + mem[_22489] + 31
                            _22849 = mem[_22489 + mem[_22489]]
                            require mem[_22489 + mem[_22489]] <= test266151307()
                            require (32 * mem[_22489 + mem[_22489]]) + 32 >= 0 and _22489 + ceil32(return_data.size) + (32 * mem[_22489 + mem[_22489]]) + 32 <= test266151307()
                            mem[64] = _22489 + ceil32(return_data.size) + (32 * mem[_22489 + mem[_22489]]) + 32
                            mem[_22489 + ceil32(return_data.size)] = _22849
                            require return_data.size >= _22669 + (32 * _22849) + 32
                            t = _22489 + _22669 + 32
                            u = _22489 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22849:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16924] - 1 < mem[_16924]
                            _25254 = mem[(32 * mem[_16924] - 1) + _16924 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25254))
                            staticcall address(_25254).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25729 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16924
                            s = mem[_25729] - ext_call.return_data[0]
                            continue 
                        _16926 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16926 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16926]
                        mem[_16926 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16926]
                        mem[_16926 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16926]
                        mem[_16926 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16926] - 1 < mem[_16926]
                        mem[_16926 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16926] - 1) + _16926 + 44 len 20])
                        staticcall mem[(32 * mem[_16926] - 1) + _16926 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16926 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16926 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16926]
                        _17470 = mem[_16926 + 32]
                        require idx + -(_11252 / 2) + 1 < mem[96]
                        _17496 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16926 + 44 len 20])
                            staticcall mem[_16926 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16926 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16926 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16926 + (2 * ceil32(return_data.size)) + 164] = address(_17496)
                            require ext_code.size(mem[_16926 + 44 len 20])
                            staticcall mem[_16926 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17496)
                            mem[_16926 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16926 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11252 / 2) + 1 < mem[96]
                                _18458 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                                mem[_16926 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16926 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16926 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16926 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16926 + (4 * ceil32(return_data.size)) + 292] = mem[_16926]
                                s = 0
                                t = _16926 + 32
                                u = _16926 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16926]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16926 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16926 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18458))
                                call address(_18458).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16926 + (4 * ceil32(return_data.size)) + (32 * mem[_16926]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22490 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22670 = mem[_22490]
                                require mem[_22490] <= test266151307()
                                require _22490 + return_data.size > _22490 + mem[_22490] + 31
                                _22850 = mem[_22490 + mem[_22490]]
                                require mem[_22490 + mem[_22490]] <= test266151307()
                                require (32 * mem[_22490 + mem[_22490]]) + 32 >= 0 and _22490 + ceil32(return_data.size) + (32 * mem[_22490 + mem[_22490]]) + 32 <= test266151307()
                                mem[64] = _22490 + ceil32(return_data.size) + (32 * mem[_22490 + mem[_22490]]) + 32
                                mem[_22490 + ceil32(return_data.size)] = _22850
                                require return_data.size >= _22670 + (32 * _22850) + 32
                                t = _22490 + _22670 + 32
                                u = _22490 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22850:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16926] - 1 < mem[_16926]
                                _25256 = mem[(32 * mem[_16926] - 1) + _16926 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25256))
                                staticcall address(_25256).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25730 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16926
                                s = mem[_25730] - ext_call.return_data[0]
                                continue 
                            mem[_16926 + (4 * ceil32(return_data.size)) + 132] = address(_17496)
                            mem[_16926 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17470))
                            call address(_17470).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17496), -1
                            mem[_16926 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16926 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11252 / 2) + 1 < mem[96]
                            _19176 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                            mem[_16926 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16926 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16926 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16926 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16926 + (6 * ceil32(return_data.size)) + 292] = mem[_16926]
                            s = 0
                            t = _16926 + 32
                            u = _16926 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16926]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16926 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16926 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19176))
                            call address(_19176).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16926 + (6 * ceil32(return_data.size)) + (32 * mem[_16926]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22491 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22671 = mem[_22491]
                            require mem[_22491] <= test266151307()
                            require _22491 + return_data.size > _22491 + mem[_22491] + 31
                            _22851 = mem[_22491 + mem[_22491]]
                            require mem[_22491 + mem[_22491]] <= test266151307()
                            require (32 * mem[_22491 + mem[_22491]]) + 32 >= 0 and _22491 + ceil32(return_data.size) + (32 * mem[_22491 + mem[_22491]]) + 32 <= test266151307()
                            mem[64] = _22491 + ceil32(return_data.size) + (32 * mem[_22491 + mem[_22491]]) + 32
                            mem[_22491 + ceil32(return_data.size)] = _22851
                            require return_data.size >= _22671 + (32 * _22851) + 32
                            t = _22491 + _22671 + 32
                            u = _22491 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22851:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16926] - 1 < mem[_16926]
                            _25258 = mem[(32 * mem[_16926] - 1) + _16926 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25258))
                            staticcall address(_25258).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25731 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16926
                            s = mem[_25731] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16926 + 44 len 20])
                            staticcall mem[_16926 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16926 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16926 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16926 + (2 * ceil32(return_data.size)) + 164] = address(_17496)
                            require ext_code.size(mem[_16926 + 44 len 20])
                            staticcall mem[_16926 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17496)
                            mem[_16926 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16926 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11252 / 2) + 1 < mem[96]
                                _18695 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                                mem[_16926 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16926 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16926 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16926 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16926 + (4 * ceil32(return_data.size)) + 292] = mem[_16926]
                                s = 0
                                t = _16926 + 32
                                u = _16926 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16926]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16926 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16926 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18695))
                                call address(_18695).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16926 + (4 * ceil32(return_data.size)) + (32 * mem[_16926]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22492 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22672 = mem[_22492]
                                require mem[_22492] <= test266151307()
                                require _22492 + return_data.size > _22492 + mem[_22492] + 31
                                _22852 = mem[_22492 + mem[_22492]]
                                require mem[_22492 + mem[_22492]] <= test266151307()
                                require (32 * mem[_22492 + mem[_22492]]) + 32 >= 0 and _22492 + ceil32(return_data.size) + (32 * mem[_22492 + mem[_22492]]) + 32 <= test266151307()
                                mem[64] = _22492 + ceil32(return_data.size) + (32 * mem[_22492 + mem[_22492]]) + 32
                                mem[_22492 + ceil32(return_data.size)] = _22852
                                require return_data.size >= _22672 + (32 * _22852) + 32
                                t = _22492 + _22672 + 32
                                u = _22492 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22852:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16926] - 1 < mem[_16926]
                                _25260 = mem[(32 * mem[_16926] - 1) + _16926 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25260))
                                staticcall address(_25260).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25732 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16926
                                s = mem[_25732] - ext_call.return_data[0]
                                continue 
                            mem[_16926 + (4 * ceil32(return_data.size)) + 132] = address(_17496)
                            mem[_16926 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17470))
                            call address(_17470).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17496), -1
                            mem[_16926 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16926 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11252 / 2) + 1 < mem[96]
                            _19486 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                            mem[_16926 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16926 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16926 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16926 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16926 + (6 * ceil32(return_data.size)) + 292] = mem[_16926]
                            s = 0
                            t = _16926 + 32
                            u = _16926 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16926]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16926 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16926 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19486))
                            call address(_19486).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16926 + (6 * ceil32(return_data.size)) + (32 * mem[_16926]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22493 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22673 = mem[_22493]
                            require mem[_22493] <= test266151307()
                            require _22493 + return_data.size > _22493 + mem[_22493] + 31
                            _22853 = mem[_22493 + mem[_22493]]
                            require mem[_22493 + mem[_22493]] <= test266151307()
                            require (32 * mem[_22493 + mem[_22493]]) + 32 >= 0 and _22493 + ceil32(return_data.size) + (32 * mem[_22493 + mem[_22493]]) + 32 <= test266151307()
                            mem[64] = _22493 + ceil32(return_data.size) + (32 * mem[_22493 + mem[_22493]]) + 32
                            mem[_22493 + ceil32(return_data.size)] = _22853
                            require return_data.size >= _22673 + (32 * _22853) + 32
                            t = _22493 + _22673 + 32
                            u = _22493 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22853:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16926] - 1 < mem[_16926]
                            _25262 = mem[(32 * mem[_16926] - 1) + _16926 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25262))
                            staticcall address(_25262).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25733 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16926
                            s = mem[_25733] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16926 + 44 len 20])
                        staticcall mem[_16926 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16926 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16926 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16926 + (2 * ceil32(return_data.size)) + 164] = address(_17496)
                        require ext_code.size(mem[_16926 + 44 len 20])
                        staticcall mem[_16926 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17496)
                        mem[_16926 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16926 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11252 / 2) + 1 < mem[96]
                            _18980 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                            mem[_16926 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16926 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16926 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16926 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16926 + (4 * ceil32(return_data.size)) + 292] = mem[_16926]
                            s = 0
                            t = _16926 + 32
                            u = _16926 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16926]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16926 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16926 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18980))
                            call address(_18980).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16926 + (4 * ceil32(return_data.size)) + (32 * mem[_16926]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22494 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22674 = mem[_22494]
                            require mem[_22494] <= test266151307()
                            require _22494 + return_data.size > _22494 + mem[_22494] + 31
                            _22854 = mem[_22494 + mem[_22494]]
                            require mem[_22494 + mem[_22494]] <= test266151307()
                            require (32 * mem[_22494 + mem[_22494]]) + 32 >= 0 and _22494 + ceil32(return_data.size) + (32 * mem[_22494 + mem[_22494]]) + 32 <= test266151307()
                            mem[64] = _22494 + ceil32(return_data.size) + (32 * mem[_22494 + mem[_22494]]) + 32
                            mem[_22494 + ceil32(return_data.size)] = _22854
                            require return_data.size >= _22674 + (32 * _22854) + 32
                            t = _22494 + _22674 + 32
                            u = _22494 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22854:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16926] - 1 < mem[_16926]
                            _25264 = mem[(32 * mem[_16926] - 1) + _16926 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25264))
                            staticcall address(_25264).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25734 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16926
                            s = mem[_25734] - ext_call.return_data[0]
                            continue 
                        mem[_16926 + (4 * ceil32(return_data.size)) + 132] = address(_17496)
                        mem[_16926 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17470))
                        call address(_17470).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17496), -1
                        mem[_16926 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16926 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11252 / 2) + 1 < mem[96]
                        _19782 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                        mem[_16926 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16926 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16926 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16926 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16926 + (6 * ceil32(return_data.size)) + 292] = mem[_16926]
                        s = 0
                        t = _16926 + 32
                        u = _16926 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16926]:
                            mem[u] = mem[t + 12 len 20]
                            _16786 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16926 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16926 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19782))
                        call address(_19782).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16926 + (6 * ceil32(return_data.size)) + (32 * mem[_16926]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22495 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22675 = mem[_22495]
                        require mem[_22495] <= test266151307()
                        require _22495 + return_data.size > _22495 + mem[_22495] + 31
                        _22855 = mem[_22495 + mem[_22495]]
                        require mem[_22495 + mem[_22495]] <= test266151307()
                        require (32 * mem[_22495 + mem[_22495]]) + 32 >= 0 and _22495 + ceil32(return_data.size) + (32 * mem[_22495 + mem[_22495]]) + 32 <= test266151307()
                        mem[64] = _22495 + ceil32(return_data.size) + (32 * mem[_22495 + mem[_22495]]) + 32
                        mem[_22495 + ceil32(return_data.size)] = _22855
                        require return_data.size >= _22675 + (32 * _22855) + 32
                        t = _22495 + _22675 + 32
                        u = _22495 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22855:
                            mem[u] = mem[t]
                            _16786 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16926] - 1 < mem[_16926]
                        _25266 = mem[(32 * mem[_16926] - 1) + _16926 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25266))
                        staticcall address(_25266).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25735 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16786 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16926
                        s = mem[_25735] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11252 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11252 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11252 / 2) + 1) + 140 len 20]:
                        require idx + -(_11252 / 2) + 1 < mem[96]
                        require idx - (_11252 / 2) < mem[96]
                        if mem[(32 * idx - (_11252 / 2)) + 140 len 20] != mem[(32 * idx + -(_11252 / 2) + 1) + 140 len 20]:
                            _17057 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_17057 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_17057]
                            mem[_17057 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_17057]
                            mem[_17057 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_17057] - 1 < mem[_17057]
                            mem[_17057 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_17057] - 1) + _17057 + 44 len 20])
                            staticcall mem[(32 * mem[_17057] - 1) + _17057 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17057 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17057 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_17057]
                            _17497 = mem[_17057 + 32]
                            require idx - (_11252 / 2) < mem[96]
                            _17524 = mem[(32 * idx - (_11252 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_17057 + 44 len 20])
                                staticcall mem[_17057 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17057 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17057 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17057 + (2 * ceil32(return_data.size)) + 132] = address(_17524)
                                require ext_code.size(mem[_17057 + 44 len 20])
                                staticcall mem[_17057 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17524)
                                mem[_17057 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17057 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11252 / 2) < mem[96]
                                    _18534 = mem[(32 * idx - (_11252 / 2)) + 128]
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 260] = mem[_17057]
                                    s = 0
                                    t = _17057 + 32
                                    u = _17057 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_17057]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16786 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18534))
                                    call address(_18534).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17057 + (4 * ceil32(return_data.size)) + (32 * mem[_17057]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22496 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22676 = mem[_22496]
                                    require mem[_22496] <= test266151307()
                                    require _22496 + return_data.size > _22496 + mem[_22496] + 31
                                    _22856 = mem[_22496 + mem[_22496]]
                                    require mem[_22496 + mem[_22496]] <= test266151307()
                                    require (32 * mem[_22496 + mem[_22496]]) + 32 >= 0 and _22496 + ceil32(return_data.size) + (32 * mem[_22496 + mem[_22496]]) + 32 <= test266151307()
                                    mem[64] = _22496 + ceil32(return_data.size) + (32 * mem[_22496 + mem[_22496]]) + 32
                                    mem[_22496 + ceil32(return_data.size)] = _22856
                                    require return_data.size >= _22676 + (32 * _22856) + 32
                                    t = _22496 + _22676 + 32
                                    u = _22496 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22856:
                                        mem[u] = mem[t]
                                        _16786 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17057] - 1 < mem[_17057]
                                    _25268 = mem[(32 * mem[_17057] - 1) + _17057 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25268))
                                    staticcall address(_25268).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25736 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16786 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17057
                                    s = mem[_25736] - ext_call.return_data[0]
                                    continue 
                                mem[_17057 + (4 * ceil32(return_data.size)) + 100] = address(_17524)
                                mem[_17057 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17497))
                                call address(_17497).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17524), -1
                                mem[_17057 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17057 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11252 / 2) < mem[96]
                                _19287 = mem[(32 * idx - (_11252 / 2)) + 128]
                                mem[_17057 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17057 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17057 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17057 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17057 + (6 * ceil32(return_data.size)) + 260] = mem[_17057]
                                s = 0
                                t = _17057 + 32
                                u = _17057 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_17057]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17057 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17057 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19287))
                                call address(_19287).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17057 + (6 * ceil32(return_data.size)) + (32 * mem[_17057]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22497 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22677 = mem[_22497]
                                require mem[_22497] <= test266151307()
                                require _22497 + return_data.size > _22497 + mem[_22497] + 31
                                _22857 = mem[_22497 + mem[_22497]]
                                require mem[_22497 + mem[_22497]] <= test266151307()
                                require (32 * mem[_22497 + mem[_22497]]) + 32 >= 0 and _22497 + ceil32(return_data.size) + (32 * mem[_22497 + mem[_22497]]) + 32 <= test266151307()
                                mem[64] = _22497 + ceil32(return_data.size) + (32 * mem[_22497 + mem[_22497]]) + 32
                                mem[_22497 + ceil32(return_data.size)] = _22857
                                require return_data.size >= _22677 + (32 * _22857) + 32
                                t = _22497 + _22677 + 32
                                u = _22497 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22857:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17057] - 1 < mem[_17057]
                                _25270 = mem[(32 * mem[_17057] - 1) + _17057 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25270))
                                staticcall address(_25270).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25737 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17057
                                s = mem[_25737] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_17057 + 44 len 20])
                                staticcall mem[_17057 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17057 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17057 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17057 + (2 * ceil32(return_data.size)) + 132] = address(_17524)
                                require ext_code.size(mem[_17057 + 44 len 20])
                                staticcall mem[_17057 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17524)
                                mem[_17057 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17057 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11252 / 2) < mem[96]
                                    _18789 = mem[(32 * idx - (_11252 / 2)) + 128]
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 260] = mem[_17057]
                                    s = 0
                                    t = _17057 + 32
                                    u = _17057 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_17057]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16786 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17057 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18789))
                                    call address(_18789).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17057 + (4 * ceil32(return_data.size)) + (32 * mem[_17057]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22498 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22678 = mem[_22498]
                                    require mem[_22498] <= test266151307()
                                    require _22498 + return_data.size > _22498 + mem[_22498] + 31
                                    _22858 = mem[_22498 + mem[_22498]]
                                    require mem[_22498 + mem[_22498]] <= test266151307()
                                    require (32 * mem[_22498 + mem[_22498]]) + 32 >= 0 and _22498 + ceil32(return_data.size) + (32 * mem[_22498 + mem[_22498]]) + 32 <= test266151307()
                                    mem[64] = _22498 + ceil32(return_data.size) + (32 * mem[_22498 + mem[_22498]]) + 32
                                    mem[_22498 + ceil32(return_data.size)] = _22858
                                    require return_data.size >= _22678 + (32 * _22858) + 32
                                    t = _22498 + _22678 + 32
                                    u = _22498 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22858:
                                        mem[u] = mem[t]
                                        _16786 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17057] - 1 < mem[_17057]
                                    _25272 = mem[(32 * mem[_17057] - 1) + _17057 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25272))
                                    staticcall address(_25272).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25738 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16786 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17057
                                    s = mem[_25738] - ext_call.return_data[0]
                                    continue 
                                mem[_17057 + (4 * ceil32(return_data.size)) + 100] = address(_17524)
                                mem[_17057 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17497))
                                call address(_17497).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17524), -1
                                mem[_17057 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17057 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11252 / 2) < mem[96]
                                _19590 = mem[(32 * idx - (_11252 / 2)) + 128]
                                mem[_17057 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17057 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17057 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17057 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17057 + (6 * ceil32(return_data.size)) + 260] = mem[_17057]
                                s = 0
                                t = _17057 + 32
                                u = _17057 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_17057]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17057 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17057 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19590))
                                call address(_19590).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17057 + (6 * ceil32(return_data.size)) + (32 * mem[_17057]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22499 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22679 = mem[_22499]
                                require mem[_22499] <= test266151307()
                                require _22499 + return_data.size > _22499 + mem[_22499] + 31
                                _22859 = mem[_22499 + mem[_22499]]
                                require mem[_22499 + mem[_22499]] <= test266151307()
                                require (32 * mem[_22499 + mem[_22499]]) + 32 >= 0 and _22499 + ceil32(return_data.size) + (32 * mem[_22499 + mem[_22499]]) + 32 <= test266151307()
                                mem[64] = _22499 + ceil32(return_data.size) + (32 * mem[_22499 + mem[_22499]]) + 32
                                mem[_22499 + ceil32(return_data.size)] = _22859
                                require return_data.size >= _22679 + (32 * _22859) + 32
                                t = _22499 + _22679 + 32
                                u = _22499 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22859:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17057] - 1 < mem[_17057]
                                _25274 = mem[(32 * mem[_17057] - 1) + _17057 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25274))
                                staticcall address(_25274).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17057
                                s = mem[_25739] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_17057 + 44 len 20])
                            staticcall mem[_17057 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17057 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17057 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17057 + (2 * ceil32(return_data.size)) + 132] = address(_17524)
                            require ext_code.size(mem[_17057 + 44 len 20])
                            staticcall mem[_17057 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17524)
                            mem[_17057 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17057 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11252 / 2) < mem[96]
                                _19079 = mem[(32 * idx - (_11252 / 2)) + 128]
                                mem[_17057 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17057 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17057 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17057 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17057 + (4 * ceil32(return_data.size)) + 260] = mem[_17057]
                                s = 0
                                t = _17057 + 32
                                u = _17057 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_17057]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17057 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17057 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19079))
                                call address(_19079).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17057 + (4 * ceil32(return_data.size)) + (32 * mem[_17057]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22500 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22680 = mem[_22500]
                                require mem[_22500] <= test266151307()
                                require _22500 + return_data.size > _22500 + mem[_22500] + 31
                                _22860 = mem[_22500 + mem[_22500]]
                                require mem[_22500 + mem[_22500]] <= test266151307()
                                require (32 * mem[_22500 + mem[_22500]]) + 32 >= 0 and _22500 + ceil32(return_data.size) + (32 * mem[_22500 + mem[_22500]]) + 32 <= test266151307()
                                mem[64] = _22500 + ceil32(return_data.size) + (32 * mem[_22500 + mem[_22500]]) + 32
                                mem[_22500 + ceil32(return_data.size)] = _22860
                                require return_data.size >= _22680 + (32 * _22860) + 32
                                t = _22500 + _22680 + 32
                                u = _22500 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22860:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17057] - 1 < mem[_17057]
                                _25276 = mem[(32 * mem[_17057] - 1) + _17057 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25276))
                                staticcall address(_25276).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25740 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17057
                                s = mem[_25740] - ext_call.return_data[0]
                                continue 
                            mem[_17057 + (4 * ceil32(return_data.size)) + 100] = address(_17524)
                            mem[_17057 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17497))
                            call address(_17497).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17524), -1
                            mem[_17057 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17057 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11252 / 2) < mem[96]
                            _19875 = mem[(32 * idx - (_11252 / 2)) + 128]
                            mem[_17057 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17057 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17057 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17057 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17057 + (6 * ceil32(return_data.size)) + 260] = mem[_17057]
                            s = 0
                            t = _17057 + 32
                            u = _17057 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_17057]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17057 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17057 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19875))
                            call address(_19875).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17057 + (6 * ceil32(return_data.size)) + (32 * mem[_17057]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22501 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22681 = mem[_22501]
                            require mem[_22501] <= test266151307()
                            require _22501 + return_data.size > _22501 + mem[_22501] + 31
                            _22861 = mem[_22501 + mem[_22501]]
                            require mem[_22501 + mem[_22501]] <= test266151307()
                            require (32 * mem[_22501 + mem[_22501]]) + 32 >= 0 and _22501 + ceil32(return_data.size) + (32 * mem[_22501 + mem[_22501]]) + 32 <= test266151307()
                            mem[64] = _22501 + ceil32(return_data.size) + (32 * mem[_22501 + mem[_22501]]) + 32
                            mem[_22501 + ceil32(return_data.size)] = _22861
                            require return_data.size >= _22681 + (32 * _22861) + 32
                            t = _22501 + _22681 + 32
                            u = _22501 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22861:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17057] - 1 < mem[_17057]
                            _25278 = mem[(32 * mem[_17057] - 1) + _17057 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25278))
                            staticcall address(_25278).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25741 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17057
                            s = mem[_25741] - ext_call.return_data[0]
                            continue 
                        _17059 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_17059 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_17059]
                        mem[_17059 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17059]
                        mem[_17059 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_17059]
                        mem[_17059 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_17059] - 1 < mem[_17059]
                        mem[_17059 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_17059] - 1) + _17059 + 44 len 20])
                        staticcall mem[(32 * mem[_17059] - 1) + _17059 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17059 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17059 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_17059]
                        _17546 = mem[_17059 + 32]
                        require idx + -(_11252 / 2) + 1 < mem[96]
                        _17560 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17059 + 44 len 20])
                            staticcall mem[_17059 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17059 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17059 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17059 + (2 * ceil32(return_data.size)) + 164] = address(_17560)
                            require ext_code.size(mem[_17059 + 44 len 20])
                            staticcall mem[_17059 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17560)
                            mem[_17059 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17059 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11252 / 2) + 1 < mem[96]
                                _18702 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                                mem[_17059 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17059 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17059 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17059 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17059 + (4 * ceil32(return_data.size)) + 292] = mem[_17059]
                                s = 0
                                t = _17059 + 32
                                u = _17059 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17059]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17059 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17059 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18702))
                                call address(_18702).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17059 + (4 * ceil32(return_data.size)) + (32 * mem[_17059]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22502 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22682 = mem[_22502]
                                require mem[_22502] <= test266151307()
                                require _22502 + return_data.size > _22502 + mem[_22502] + 31
                                _22862 = mem[_22502 + mem[_22502]]
                                require mem[_22502 + mem[_22502]] <= test266151307()
                                require (32 * mem[_22502 + mem[_22502]]) + 32 >= 0 and _22502 + ceil32(return_data.size) + (32 * mem[_22502 + mem[_22502]]) + 32 <= test266151307()
                                mem[64] = _22502 + ceil32(return_data.size) + (32 * mem[_22502 + mem[_22502]]) + 32
                                mem[_22502 + ceil32(return_data.size)] = _22862
                                require return_data.size >= _22682 + (32 * _22862) + 32
                                t = _22502 + _22682 + 32
                                u = _22502 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22862:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17059] - 1 < mem[_17059]
                                _25280 = mem[(32 * mem[_17059] - 1) + _17059 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25280))
                                staticcall address(_25280).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25742 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17059
                                s = mem[_25742] - ext_call.return_data[0]
                                continue 
                            mem[_17059 + (4 * ceil32(return_data.size)) + 132] = address(_17560)
                            mem[_17059 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17546))
                            call address(_17546).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17560), -1
                            mem[_17059 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17059 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11252 / 2) + 1 < mem[96]
                            _19494 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                            mem[_17059 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17059 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17059 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17059 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17059 + (6 * ceil32(return_data.size)) + 292] = mem[_17059]
                            s = 0
                            t = _17059 + 32
                            u = _17059 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17059]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17059 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17059 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19494))
                            call address(_19494).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17059 + (6 * ceil32(return_data.size)) + (32 * mem[_17059]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22503 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22683 = mem[_22503]
                            require mem[_22503] <= test266151307()
                            require _22503 + return_data.size > _22503 + mem[_22503] + 31
                            _22863 = mem[_22503 + mem[_22503]]
                            require mem[_22503 + mem[_22503]] <= test266151307()
                            require (32 * mem[_22503 + mem[_22503]]) + 32 >= 0 and _22503 + ceil32(return_data.size) + (32 * mem[_22503 + mem[_22503]]) + 32 <= test266151307()
                            mem[64] = _22503 + ceil32(return_data.size) + (32 * mem[_22503 + mem[_22503]]) + 32
                            mem[_22503 + ceil32(return_data.size)] = _22863
                            require return_data.size >= _22683 + (32 * _22863) + 32
                            t = _22503 + _22683 + 32
                            u = _22503 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22863:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17059] - 1 < mem[_17059]
                            _25282 = mem[(32 * mem[_17059] - 1) + _17059 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25282))
                            staticcall address(_25282).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25743 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17059
                            s = mem[_25743] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17059 + 44 len 20])
                            staticcall mem[_17059 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17059 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17059 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17059 + (2 * ceil32(return_data.size)) + 164] = address(_17560)
                            require ext_code.size(mem[_17059 + 44 len 20])
                            staticcall mem[_17059 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17560)
                            mem[_17059 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17059 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11252 / 2) + 1 < mem[96]
                                _18986 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                                mem[_17059 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17059 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17059 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17059 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17059 + (4 * ceil32(return_data.size)) + 292] = mem[_17059]
                                s = 0
                                t = _17059 + 32
                                u = _17059 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17059]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16786 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17059 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17059 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18986))
                                call address(_18986).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17059 + (4 * ceil32(return_data.size)) + (32 * mem[_17059]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22504 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22684 = mem[_22504]
                                require mem[_22504] <= test266151307()
                                require _22504 + return_data.size > _22504 + mem[_22504] + 31
                                _22864 = mem[_22504 + mem[_22504]]
                                require mem[_22504 + mem[_22504]] <= test266151307()
                                require (32 * mem[_22504 + mem[_22504]]) + 32 >= 0 and _22504 + ceil32(return_data.size) + (32 * mem[_22504 + mem[_22504]]) + 32 <= test266151307()
                                mem[64] = _22504 + ceil32(return_data.size) + (32 * mem[_22504 + mem[_22504]]) + 32
                                mem[_22504 + ceil32(return_data.size)] = _22864
                                require return_data.size >= _22684 + (32 * _22864) + 32
                                t = _22504 + _22684 + 32
                                u = _22504 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22864:
                                    mem[u] = mem[t]
                                    _16786 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17059] - 1 < mem[_17059]
                                _25284 = mem[(32 * mem[_17059] - 1) + _17059 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25284))
                                staticcall address(_25284).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25744 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16786 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17059
                                s = mem[_25744] - ext_call.return_data[0]
                                continue 
                            mem[_17059 + (4 * ceil32(return_data.size)) + 132] = address(_17560)
                            mem[_17059 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17546))
                            call address(_17546).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17560), -1
                            mem[_17059 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17059 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11252 / 2) + 1 < mem[96]
                            _19788 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                            mem[_17059 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17059 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17059 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17059 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17059 + (6 * ceil32(return_data.size)) + 292] = mem[_17059]
                            s = 0
                            t = _17059 + 32
                            u = _17059 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17059]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17059 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17059 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19788))
                            call address(_19788).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17059 + (6 * ceil32(return_data.size)) + (32 * mem[_17059]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22505 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22685 = mem[_22505]
                            require mem[_22505] <= test266151307()
                            require _22505 + return_data.size > _22505 + mem[_22505] + 31
                            _22865 = mem[_22505 + mem[_22505]]
                            require mem[_22505 + mem[_22505]] <= test266151307()
                            require (32 * mem[_22505 + mem[_22505]]) + 32 >= 0 and _22505 + ceil32(return_data.size) + (32 * mem[_22505 + mem[_22505]]) + 32 <= test266151307()
                            mem[64] = _22505 + ceil32(return_data.size) + (32 * mem[_22505 + mem[_22505]]) + 32
                            mem[_22505 + ceil32(return_data.size)] = _22865
                            require return_data.size >= _22685 + (32 * _22865) + 32
                            t = _22505 + _22685 + 32
                            u = _22505 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22865:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17059] - 1 < mem[_17059]
                            _25286 = mem[(32 * mem[_17059] - 1) + _17059 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25286))
                            staticcall address(_25286).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25745 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17059
                            s = mem[_25745] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17059 + 44 len 20])
                        staticcall mem[_17059 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17059 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17059 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17059 + (2 * ceil32(return_data.size)) + 164] = address(_17560)
                        require ext_code.size(mem[_17059 + 44 len 20])
                        staticcall mem[_17059 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17560)
                        mem[_17059 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17059 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11252 / 2) + 1 < mem[96]
                            _19292 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                            mem[_17059 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17059 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17059 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17059 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17059 + (4 * ceil32(return_data.size)) + 292] = mem[_17059]
                            s = 0
                            t = _17059 + 32
                            u = _17059 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17059]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17059 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17059 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19292))
                            call address(_19292).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17059 + (4 * ceil32(return_data.size)) + (32 * mem[_17059]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22506 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22686 = mem[_22506]
                            require mem[_22506] <= test266151307()
                            require _22506 + return_data.size > _22506 + mem[_22506] + 31
                            _22866 = mem[_22506 + mem[_22506]]
                            require mem[_22506 + mem[_22506]] <= test266151307()
                            require (32 * mem[_22506 + mem[_22506]]) + 32 >= 0 and _22506 + ceil32(return_data.size) + (32 * mem[_22506 + mem[_22506]]) + 32 <= test266151307()
                            mem[64] = _22506 + ceil32(return_data.size) + (32 * mem[_22506 + mem[_22506]]) + 32
                            mem[_22506 + ceil32(return_data.size)] = _22866
                            require return_data.size >= _22686 + (32 * _22866) + 32
                            t = _22506 + _22686 + 32
                            u = _22506 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22866:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17059] - 1 < mem[_17059]
                            _25288 = mem[(32 * mem[_17059] - 1) + _17059 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25288))
                            staticcall address(_25288).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25746 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17059
                            s = mem[_25746] - ext_call.return_data[0]
                            continue 
                        mem[_17059 + (4 * ceil32(return_data.size)) + 132] = address(_17560)
                        mem[_17059 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17546))
                        call address(_17546).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17560), -1
                        mem[_17059 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17059 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11252 / 2) + 1 < mem[96]
                        _20053 = mem[(32 * idx + -(_11252 / 2) + 1) + 128]
                        mem[_17059 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17059 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17059 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17059 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17059 + (6 * ceil32(return_data.size)) + 292] = mem[_17059]
                        s = 0
                        t = _17059 + 32
                        u = _17059 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17059]:
                            mem[u] = mem[t + 12 len 20]
                            _16786 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17059 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17059 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_20053))
                        call address(_20053).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17059 + (6 * ceil32(return_data.size)) + (32 * mem[_17059]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22507 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22687 = mem[_22507]
                        require mem[_22507] <= test266151307()
                        require _22507 + return_data.size > _22507 + mem[_22507] + 31
                        _22867 = mem[_22507 + mem[_22507]]
                        require mem[_22507 + mem[_22507]] <= test266151307()
                        require (32 * mem[_22507 + mem[_22507]]) + 32 >= 0 and _22507 + ceil32(return_data.size) + (32 * mem[_22507 + mem[_22507]]) + 32 <= test266151307()
                        mem[64] = _22507 + ceil32(return_data.size) + (32 * mem[_22507 + mem[_22507]]) + 32
                        mem[_22507 + ceil32(return_data.size)] = _22867
                        require return_data.size >= _22687 + (32 * _22867) + 32
                        t = _22507 + _22687 + 32
                        u = _22507 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22867:
                            mem[u] = mem[t]
                            _16786 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17059] - 1 < mem[_17059]
                        _25290 = mem[(32 * mem[_17059] - 1) + _17059 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25290))
                        staticcall address(_25290).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25747 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16786 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17059
                        s = mem[_25747] - ext_call.return_data[0]
                        continue 
                    _16929 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16929 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16929]
                    mem[_16929 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16929]
                    mem[_16929 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16929]
                    mem[_16929 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16929]
                    mem[_16929 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16929] - 1 < mem[_16929]
                    mem[_16929 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16929] - 1) + _16929 + 44 len 20])
                    staticcall mem[(32 * mem[_16929] - 1) + _16929 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16929 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16929 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16929]
                    _17526 = mem[_16929 + 32]
                    require idx + -(_11252 / 2) + 2 < mem[96]
                    _17548 = mem[(32 * idx + -(_11252 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16929 + 44 len 20])
                        staticcall mem[_16929 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16929 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16929 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16929 + (2 * ceil32(return_data.size)) + 196] = address(_17548)
                        require ext_code.size(mem[_16929 + 44 len 20])
                        staticcall mem[_16929 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17548)
                        mem[_16929 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16929 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11252 / 2) + 2 < mem[96]
                            _18616 = mem[(32 * idx + -(_11252 / 2) + 2) + 128]
                            mem[_16929 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16929 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16929 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16929 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16929 + (4 * ceil32(return_data.size)) + 324] = mem[_16929]
                            s = 0
                            t = _16929 + 32
                            u = _16929 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16929]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16929 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16929 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18616))
                            call address(_18616).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16929 + (4 * ceil32(return_data.size)) + (32 * mem[_16929]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22508 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22688 = mem[_22508]
                            require mem[_22508] <= test266151307()
                            require _22508 + return_data.size > _22508 + mem[_22508] + 31
                            _22868 = mem[_22508 + mem[_22508]]
                            require mem[_22508 + mem[_22508]] <= test266151307()
                            require (32 * mem[_22508 + mem[_22508]]) + 32 >= 0 and _22508 + ceil32(return_data.size) + (32 * mem[_22508 + mem[_22508]]) + 32 <= test266151307()
                            mem[64] = _22508 + ceil32(return_data.size) + (32 * mem[_22508 + mem[_22508]]) + 32
                            mem[_22508 + ceil32(return_data.size)] = _22868
                            require return_data.size >= _22688 + (32 * _22868) + 32
                            t = _22508 + _22688 + 32
                            u = _22508 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22868:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16929] - 1 < mem[_16929]
                            _25292 = mem[(32 * mem[_16929] - 1) + _16929 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25292))
                            staticcall address(_25292).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25748 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16929
                            s = mem[_25748] - ext_call.return_data[0]
                            continue 
                        mem[_16929 + (4 * ceil32(return_data.size)) + 164] = address(_17548)
                        mem[_16929 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17526))
                        call address(_17526).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17548), -1
                        mem[_16929 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16929 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11252 / 2) + 2 < mem[96]
                        _19393 = mem[(32 * idx + -(_11252 / 2) + 2) + 128]
                        mem[_16929 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16929 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16929 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16929 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16929 + (6 * ceil32(return_data.size)) + 324] = mem[_16929]
                        s = 0
                        t = _16929 + 32
                        u = _16929 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16929]:
                            mem[u] = mem[t + 12 len 20]
                            _16786 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16929 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16929 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19393))
                        call address(_19393).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16929 + (6 * ceil32(return_data.size)) + (32 * mem[_16929]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22509 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22689 = mem[_22509]
                        require mem[_22509] <= test266151307()
                        require _22509 + return_data.size > _22509 + mem[_22509] + 31
                        _22869 = mem[_22509 + mem[_22509]]
                        require mem[_22509 + mem[_22509]] <= test266151307()
                        require (32 * mem[_22509 + mem[_22509]]) + 32 >= 0 and _22509 + ceil32(return_data.size) + (32 * mem[_22509 + mem[_22509]]) + 32 <= test266151307()
                        mem[64] = _22509 + ceil32(return_data.size) + (32 * mem[_22509 + mem[_22509]]) + 32
                        mem[_22509 + ceil32(return_data.size)] = _22869
                        require return_data.size >= _22689 + (32 * _22869) + 32
                        t = _22509 + _22689 + 32
                        u = _22509 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22869:
                            mem[u] = mem[t]
                            _16786 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16929] - 1 < mem[_16929]
                        _25294 = mem[(32 * mem[_16929] - 1) + _16929 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25294))
                        staticcall address(_25294).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25749 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16786 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16929
                        s = mem[_25749] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16929 + 44 len 20])
                        staticcall mem[_16929 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16929 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16929 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16929 + (2 * ceil32(return_data.size)) + 196] = address(_17548)
                        require ext_code.size(mem[_16929 + 44 len 20])
                        staticcall mem[_16929 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17548)
                        mem[_16929 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16929 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11252 / 2) + 2 < mem[96]
                            _18887 = mem[(32 * idx + -(_11252 / 2) + 2) + 128]
                            mem[_16929 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16929 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16929 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16929 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16929 + (4 * ceil32(return_data.size)) + 324] = mem[_16929]
                            s = 0
                            t = _16929 + 32
                            u = _16929 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16929]:
                                mem[u] = mem[t + 12 len 20]
                                _16786 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16929 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16929 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18887))
                            call address(_18887).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16929 + (4 * ceil32(return_data.size)) + (32 * mem[_16929]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22510 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22690 = mem[_22510]
                            require mem[_22510] <= test266151307()
                            require _22510 + return_data.size > _22510 + mem[_22510] + 31
                            _22870 = mem[_22510 + mem[_22510]]
                            require mem[_22510 + mem[_22510]] <= test266151307()
                            require (32 * mem[_22510 + mem[_22510]]) + 32 >= 0 and _22510 + ceil32(return_data.size) + (32 * mem[_22510 + mem[_22510]]) + 32 <= test266151307()
                            mem[64] = _22510 + ceil32(return_data.size) + (32 * mem[_22510 + mem[_22510]]) + 32
                            mem[_22510 + ceil32(return_data.size)] = _22870
                            require return_data.size >= _22690 + (32 * _22870) + 32
                            t = _22510 + _22690 + 32
                            u = _22510 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22870:
                                mem[u] = mem[t]
                                _16786 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16929] - 1 < mem[_16929]
                            _25296 = mem[(32 * mem[_16929] - 1) + _16929 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25296))
                            staticcall address(_25296).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25750 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16786 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16929
                            s = mem[_25750] - ext_call.return_data[0]
                            continue 
                        mem[_16929 + (4 * ceil32(return_data.size)) + 164] = address(_17548)
                        mem[_16929 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17526))
                        call address(_17526).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17548), -1
                        mem[_16929 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16929 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11252 / 2) + 2 < mem[96]
                        _19692 = mem[(32 * idx + -(_11252 / 2) + 2) + 128]
                        mem[_16929 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16929 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16929 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16929 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16929 + (6 * ceil32(return_data.size)) + 324] = mem[_16929]
                        s = 0
                        t = _16929 + 32
                        u = _16929 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16929]:
                            mem[u] = mem[t + 12 len 20]
                            _16786 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16929 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16929 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19692))
                        call address(_19692).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16929 + (6 * ceil32(return_data.size)) + (32 * mem[_16929]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22511 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22691 = mem[_22511]
                        require mem[_22511] <= test266151307()
                        require _22511 + return_data.size > _22511 + mem[_22511] + 31
                        _22871 = mem[_22511 + mem[_22511]]
                        require mem[_22511 + mem[_22511]] <= test266151307()
                        require (32 * mem[_22511 + mem[_22511]]) + 32 >= 0 and _22511 + ceil32(return_data.size) + (32 * mem[_22511 + mem[_22511]]) + 32 <= test266151307()
                        mem[64] = _22511 + ceil32(return_data.size) + (32 * mem[_22511 + mem[_22511]]) + 32
                        mem[_22511 + ceil32(return_data.size)] = _22871
                        require return_data.size >= _22691 + (32 * _22871) + 32
                        t = _22511 + _22691 + 32
                        u = _22511 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22871:
                            mem[u] = mem[t]
                            _16786 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16929] - 1 < mem[_16929]
                        _25298 = mem[(32 * mem[_16929] - 1) + _16929 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25298))
                        staticcall address(_25298).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25751 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16786 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16929
                        s = mem[_25751] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16929 + 44 len 20])
                    staticcall mem[_16929 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16929 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16929 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16929 + (2 * ceil32(return_data.size)) + 196] = address(_17548)
                    require ext_code.size(mem[_16929 + 44 len 20])
                    staticcall mem[_16929 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17548)
                    mem[_16929 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16929 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11252 / 2) + 2 < mem[96]
                        _19187 = mem[(32 * idx + -(_11252 / 2) + 2) + 128]
                        mem[_16929 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16929 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16929 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16929 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16929 + (4 * ceil32(return_data.size)) + 324] = mem[_16929]
                        s = 0
                        t = _16929 + 32
                        u = _16929 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16929]:
                            mem[u] = mem[t + 12 len 20]
                            _16786 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16929 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16929 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19187))
                        call address(_19187).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16929 + (4 * ceil32(return_data.size)) + (32 * mem[_16929]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22512 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22692 = mem[_22512]
                        require mem[_22512] <= test266151307()
                        require _22512 + return_data.size > _22512 + mem[_22512] + 31
                        _22872 = mem[_22512 + mem[_22512]]
                        require mem[_22512 + mem[_22512]] <= test266151307()
                        require (32 * mem[_22512 + mem[_22512]]) + 32 >= 0 and _22512 + ceil32(return_data.size) + (32 * mem[_22512 + mem[_22512]]) + 32 <= test266151307()
                        mem[64] = _22512 + ceil32(return_data.size) + (32 * mem[_22512 + mem[_22512]]) + 32
                        mem[_22512 + ceil32(return_data.size)] = _22872
                        require return_data.size >= _22692 + (32 * _22872) + 32
                        t = _22512 + _22692 + 32
                        u = _22512 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22872:
                            mem[u] = mem[t]
                            _16786 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16929] - 1 < mem[_16929]
                        _25300 = mem[(32 * mem[_16929] - 1) + _16929 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25300))
                        staticcall address(_25300).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16786 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16929
                        s = mem[_25752] - ext_call.return_data[0]
                        continue 
                    mem[_16929 + (4 * ceil32(return_data.size)) + 164] = address(_17548)
                    mem[_16929 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17526))
                    call address(_17526).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17548), -1
                    mem[_16929 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16929 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11252 / 2) + 2 < mem[96]
                    _19968 = mem[(32 * idx + -(_11252 / 2) + 2) + 128]
                    mem[_16929 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16929 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16929 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16929 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16929 + (6 * ceil32(return_data.size)) + 324] = mem[_16929]
                    s = 0
                    t = _16929 + 32
                    u = _16929 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16929]:
                        mem[u] = mem[t + 12 len 20]
                        _16786 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16929 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16929 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19968))
                    call address(_19968).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16929 + (6 * ceil32(return_data.size)) + (32 * mem[_16929]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22513 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22693 = mem[_22513]
                    require mem[_22513] <= test266151307()
                    require _22513 + return_data.size > _22513 + mem[_22513] + 31
                    _22873 = mem[_22513 + mem[_22513]]
                    require mem[_22513 + mem[_22513]] <= test266151307()
                    require (32 * mem[_22513 + mem[_22513]]) + 32 >= 0 and _22513 + ceil32(return_data.size) + (32 * mem[_22513 + mem[_22513]]) + 32 <= test266151307()
                    mem[64] = _22513 + ceil32(return_data.size) + (32 * mem[_22513 + mem[_22513]]) + 32
                    mem[_22513 + ceil32(return_data.size)] = _22873
                    require return_data.size >= _22693 + (32 * _22873) + 32
                    t = _22513 + _22693 + 32
                    u = _22513 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22873:
                        mem[u] = mem[t]
                        _16786 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16929] - 1 < mem[_16929]
                    _25302 = mem[(32 * mem[_16929] - 1) + _16929 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25302))
                    staticcall address(_25302).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25753 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16786 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16929
                    s = mem[_25753] - ext_call.return_data[0]
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                _16816 = mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160]
                require _11252 / 2 < mem[96]
                _16838 = mem[(16 * Mask(251, 1, _11252)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16838))
                staticcall address(_16838).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16902 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16902] < _11330 - cd[4] + _16816:
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11257 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11285 = mem[_11257]
                    require mem[_11257] == mem[_11257 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11334 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11334)
                    require ext_code.size(address(_11285))
                    staticcall address(_11285).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11334)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11391 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11427 = mem[_11391]
                    require mem[_11391] == mem[_11391 + 12 len 20]
                    require ext_code.size(mem[_11391 + 12 len 20])
                    staticcall mem[_11391 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11613 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11765 = mem[_11613]
                    require mem[_11613] == mem[_11613 + 18 len 14]
                    _11889 = mem[_11613 + 32]
                    require mem[_11613 + 32] == mem[_11613 + 50 len 14]
                    require mem[_11613 + 64] == mem[_11613 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11613 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11613 + 50 len 14] / (997 * s) + (1000 * mem[_11613 + 18 len 14])
                            idx = idx + 1
                            s = _11427
                            s = 997 * s * Mask(112, 0, _11889) / (997 * s) + (1000 * Mask(112, 0, _11765))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11613 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11613 + 50 len 14] / (997 * s) + (1000 * mem[_11613 + 18 len 14])
                            idx = idx + 1
                            s = _11427
                            s = 997 * s * Mask(112, 0, _11889) / (997 * s) + (1000 * Mask(112, 0, _11765))
                            continue 
                    require (997 * s) + (1000 * mem[_11613 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11613 + 18 len 14] / (997 * s) + (1000 * mem[_11613 + 50 len 14])
                    idx = idx + 1
                    s = _11427
                    s = 997 * s * Mask(112, 0, _11765) / (997 * s) + (1000 * Mask(112, 0, _11889))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11255 = mem[96]
                require mem[96] / 2 < mem[96]
                _11282 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11282))
                staticcall address(_11282).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11306 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11333 = mem[_11306]
                _16787 = mem[96]
                idx = _11255 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16787 - 1:
                    require idx + -(_11255 / 2) + 1 < mem[96]
                    require idx - (_11255 / 2) < mem[96]
                    require idx + -(_11255 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11255 / 2)) + 140 len 20] != mem[(32 * idx + -(_11255 / 2) + 1) + 140 len 20]:
                        require idx - (_11255 / 2) < mem[96]
                        if mem[(32 * idx - (_11255 / 2)) + 140 len 20] != mem[(32 * idx + -(_11255 / 2) + 1) + 140 len 20]:
                            _16931 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16931 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16931]
                            mem[_16931 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16931]
                            mem[_16931 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16931] - 1 < mem[_16931]
                            mem[_16931 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16931] - 1) + _16931 + 44 len 20])
                            staticcall mem[(32 * mem[_16931] - 1) + _16931 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16931 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16931 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16931]
                            _17426 = mem[_16931 + 32]
                            require idx - (_11255 / 2) < mem[96]
                            _17450 = mem[(32 * idx - (_11255 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16931 + 44 len 20])
                                staticcall mem[_16931 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16931 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16931 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16931 + (2 * ceil32(return_data.size)) + 132] = address(_17450)
                                require ext_code.size(mem[_16931 + 44 len 20])
                                staticcall mem[_16931 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17450)
                                mem[_16931 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16931 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11255 / 2) < mem[96]
                                    _18350 = mem[(32 * idx - (_11255 / 2)) + 128]
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 260] = mem[_16931]
                                    t = 0
                                    u = _16931 + 32
                                    v = _16931 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_16931]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16787 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18350))
                                    call address(_18350).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16931 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16931]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _16931 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22694 = mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _16931 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22874 = mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16931 + (6 * ceil32(return_data.size)) + (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _16931 + (6 * ceil32(return_data.size)) + (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_16931 + (6 * ceil32(return_data.size)) + 96] = _22874
                                    require return_data.size >= _22694 + (32 * _22874) + 32
                                    t = _16931 + (4 * ceil32(return_data.size)) + _22694 + 128
                                    u = _16931 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22874:
                                        mem[u] = mem[t]
                                        _16787 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16931] - 1 < mem[_16931]
                                    _25304 = mem[(32 * mem[_16931] - 1) + _16931 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25304))
                                    staticcall address(_25304).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25754 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16787 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16931
                                    s = mem[_25754] - ext_call.return_data[0]
                                    continue 
                                mem[_16931 + (4 * ceil32(return_data.size)) + 100] = address(_17450)
                                mem[_16931 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17426))
                                call address(_17426).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17450), -1
                                mem[_16931 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16931 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11255 / 2) < mem[96]
                                _18993 = mem[(32 * idx - (_11255 / 2)) + 128]
                                mem[_16931 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16931 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16931 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16931 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16931 + (6 * ceil32(return_data.size)) + 260] = mem[_16931]
                                t = 0
                                u = _16931 + 32
                                v = _16931 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_16931]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16787 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16931 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16931 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18993))
                                call address(_18993).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16931 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16931]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16931 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16931 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22695 = mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16931 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22875 = mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16931 + (7 * ceil32(return_data.size)) + (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16931 + (7 * ceil32(return_data.size)) + (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16931 + (7 * ceil32(return_data.size)) + 96] = _22875
                                require return_data.size >= _22695 + (32 * _22875) + 32
                                t = _16931 + (6 * ceil32(return_data.size)) + _22695 + 128
                                u = _16931 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22875:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16931] - 1 < mem[_16931]
                                _25306 = mem[(32 * mem[_16931] - 1) + _16931 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25306))
                                staticcall address(_25306).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25755 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16931
                                s = mem[_25755] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16931 + 44 len 20])
                                staticcall mem[_16931 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16931 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16931 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16931 + (2 * ceil32(return_data.size)) + 132] = address(_17450)
                                require ext_code.size(mem[_16931 + 44 len 20])
                                staticcall mem[_16931 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17450)
                                mem[_16931 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16931 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11255 / 2) < mem[96]
                                    _18542 = mem[(32 * idx - (_11255 / 2)) + 128]
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 260] = mem[_16931]
                                    t = 0
                                    u = _16931 + 32
                                    v = _16931 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_16931]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16787 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18542))
                                    call address(_18542).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16931 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16931]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_16931 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _16931 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22696 = mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _16931 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22876 = mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16931 + (6 * ceil32(return_data.size)) + (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _16931 + (6 * ceil32(return_data.size)) + (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_16931 + (6 * ceil32(return_data.size)) + 96] = _22876
                                    require return_data.size >= _22696 + (32 * _22876) + 32
                                    t = _16931 + (4 * ceil32(return_data.size)) + _22696 + 128
                                    u = _16931 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22876:
                                        mem[u] = mem[t]
                                        _16787 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16931] - 1 < mem[_16931]
                                    _25308 = mem[(32 * mem[_16931] - 1) + _16931 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25308))
                                    staticcall address(_25308).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25756 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16787 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16931
                                    s = mem[_25756] - ext_call.return_data[0]
                                    continue 
                                mem[_16931 + (4 * ceil32(return_data.size)) + 100] = address(_17450)
                                mem[_16931 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17426))
                                call address(_17426).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17450), -1
                                mem[_16931 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16931 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11255 / 2) < mem[96]
                                _19299 = mem[(32 * idx - (_11255 / 2)) + 128]
                                mem[_16931 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16931 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16931 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16931 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16931 + (6 * ceil32(return_data.size)) + 260] = mem[_16931]
                                t = 0
                                u = _16931 + 32
                                v = _16931 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_16931]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16787 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16931 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16931 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19299))
                                call address(_19299).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16931 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16931]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16931 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16931 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22697 = mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16931 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22877 = mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16931 + (7 * ceil32(return_data.size)) + (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16931 + (7 * ceil32(return_data.size)) + (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16931 + (7 * ceil32(return_data.size)) + 96] = _22877
                                require return_data.size >= _22697 + (32 * _22877) + 32
                                t = _16931 + (6 * ceil32(return_data.size)) + _22697 + 128
                                u = _16931 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22877:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16931] - 1 < mem[_16931]
                                _25310 = mem[(32 * mem[_16931] - 1) + _16931 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25310))
                                staticcall address(_25310).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25757 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16931
                                s = mem[_25757] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16931 + 44 len 20])
                            staticcall mem[_16931 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16931 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16931 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16931 + (2 * ceil32(return_data.size)) + 132] = address(_17450)
                            require ext_code.size(mem[_16931 + 44 len 20])
                            staticcall mem[_16931 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17450)
                            mem[_16931 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16931 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11255 / 2) < mem[96]
                                _18798 = mem[(32 * idx - (_11255 / 2)) + 128]
                                mem[_16931 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16931 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16931 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16931 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16931 + (4 * ceil32(return_data.size)) + 260] = mem[_16931]
                                t = 0
                                u = _16931 + 32
                                v = _16931 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16931]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16787 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16931 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16931 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18798))
                                call address(_18798).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16931 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16931]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16931 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16931 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22698 = mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16931 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22878 = mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16931 + (6 * ceil32(return_data.size)) + (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16931 + (6 * ceil32(return_data.size)) + (32 * mem[_16931 + (4 * ceil32(return_data.size)) + mem[_16931 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16931 + (6 * ceil32(return_data.size)) + 96] = _22878
                                require return_data.size >= _22698 + (32 * _22878) + 32
                                t = _16931 + (4 * ceil32(return_data.size)) + _22698 + 128
                                u = _16931 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22878:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16931] - 1 < mem[_16931]
                                _25312 = mem[(32 * mem[_16931] - 1) + _16931 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25312))
                                staticcall address(_25312).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25758 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16931
                                s = mem[_25758] - ext_call.return_data[0]
                                continue 
                            mem[_16931 + (4 * ceil32(return_data.size)) + 100] = address(_17450)
                            mem[_16931 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17426))
                            call address(_17426).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17450), -1
                            mem[_16931 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16931 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11255 / 2) < mem[96]
                            _19600 = mem[(32 * idx - (_11255 / 2)) + 128]
                            mem[_16931 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16931 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16931 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16931 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16931 + (6 * ceil32(return_data.size)) + 260] = mem[_16931]
                            t = 0
                            u = _16931 + 32
                            v = _16931 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16931]:
                                mem[v] = mem[u + 12 len 20]
                                _16787 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16931 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16931 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19600))
                            call address(_19600).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16931 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16931]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16931 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16931 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22699 = mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16931 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22879 = mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16931 + (7 * ceil32(return_data.size)) + (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16931 + (7 * ceil32(return_data.size)) + (32 * mem[_16931 + (6 * ceil32(return_data.size)) + mem[_16931 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16931 + (7 * ceil32(return_data.size)) + 96] = _22879
                            require return_data.size >= _22699 + (32 * _22879) + 32
                            t = _16931 + (6 * ceil32(return_data.size)) + _22699 + 128
                            u = _16931 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22879:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16931] - 1 < mem[_16931]
                            _25314 = mem[(32 * mem[_16931] - 1) + _16931 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25314))
                            staticcall address(_25314).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25759 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16931
                            s = mem[_25759] - ext_call.return_data[0]
                            continue 
                        _16933 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16933 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16933]
                        mem[_16933 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16933]
                        mem[_16933 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16933]
                        mem[_16933 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16933] - 1 < mem[_16933]
                        mem[_16933 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16933] - 1) + _16933 + 44 len 20])
                        staticcall mem[(32 * mem[_16933] - 1) + _16933 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16933 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16933 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16933]
                        _17474 = mem[_16933 + 32]
                        require idx + -(_11255 / 2) + 1 < mem[96]
                        _17501 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16933 + 44 len 20])
                            staticcall mem[_16933 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16933 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16933 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16933 + (2 * ceil32(return_data.size)) + 164] = address(_17501)
                            require ext_code.size(mem[_16933 + 44 len 20])
                            staticcall mem[_16933 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17501)
                            mem[_16933 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16933 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11255 / 2) + 1 < mem[96]
                                _18471 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                                mem[_16933 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16933 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16933 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16933 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16933 + (4 * ceil32(return_data.size)) + 292] = mem[_16933]
                                t = 0
                                u = _16933 + 32
                                v = _16933 + (4 * ceil32(return_data.size)) + 324
                                while t < mem[_16933]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16787 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16933 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16933 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18471))
                                call address(_18471).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16933 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16933]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16933 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16933 + (6 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _22700 = mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                                require mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16933 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                                _22880 = mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                                require (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16933 + (6 * ceil32(return_data.size)) + (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                                mem[64] = _16933 + (6 * ceil32(return_data.size)) + (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                                mem[_16933 + (6 * ceil32(return_data.size)) + 128] = mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require return_data.size >= _22700 + (32 * _22880) + 32
                                t = _16933 + (4 * ceil32(return_data.size)) + _22700 + 160
                                u = _16933 + (6 * ceil32(return_data.size)) + 160
                                s = 0
                                while s < _22880:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16933] - 1 < mem[_16933]
                                _25316 = mem[(32 * mem[_16933] - 1) + _16933 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25316))
                                staticcall address(_25316).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25760 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16933
                                s = mem[_25760] - ext_call.return_data[0]
                                continue 
                            mem[_16933 + (4 * ceil32(return_data.size)) + 132] = address(_17501)
                            mem[_16933 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17474))
                            call address(_17474).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17501), -1
                            mem[_16933 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16933 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11255 / 2) + 1 < mem[96]
                            _19196 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                            mem[_16933 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16933 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16933 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16933 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16933 + (6 * ceil32(return_data.size)) + 292] = mem[_16933]
                            t = 0
                            u = _16933 + 32
                            v = _16933 + (6 * ceil32(return_data.size)) + 324
                            while t < mem[_16933]:
                                mem[v] = mem[u + 12 len 20]
                                _16787 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16933 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16933 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19196))
                            call address(_19196).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16933 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16933]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16933 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16933 + (7 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22701 = mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16933 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22881 = mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16933 + (7 * ceil32(return_data.size)) + (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16933 + (7 * ceil32(return_data.size)) + (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16933 + (7 * ceil32(return_data.size)) + 128] = _22881
                            require return_data.size >= _22701 + (32 * _22881) + 32
                            t = _16933 + (6 * ceil32(return_data.size)) + _22701 + 160
                            u = _16933 + (7 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22881:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16933] - 1 < mem[_16933]
                            _25318 = mem[(32 * mem[_16933] - 1) + _16933 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25318))
                            staticcall address(_25318).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25761 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16933
                            s = mem[_25761] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16933 + 44 len 20])
                            staticcall mem[_16933 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16933 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16933 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16933 + (2 * ceil32(return_data.size)) + 164] = address(_17501)
                            require ext_code.size(mem[_16933 + 44 len 20])
                            staticcall mem[_16933 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17501)
                            mem[_16933 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16933 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11255 / 2) + 1 < mem[96]
                                _18710 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                                mem[_16933 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16933 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16933 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16933 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16933 + (4 * ceil32(return_data.size)) + 292] = mem[_16933]
                                t = 0
                                u = _16933 + 32
                                v = _16933 + (4 * ceil32(return_data.size)) + 324
                                while t < mem[_16933]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16787 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16933 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16933 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18710))
                                call address(_18710).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16933 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16933]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16933 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16933 + (6 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _22702 = mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                                require mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16933 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                                _22882 = mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                                require (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16933 + (6 * ceil32(return_data.size)) + (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                                mem[64] = _16933 + (6 * ceil32(return_data.size)) + (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                                mem[_16933 + (6 * ceil32(return_data.size)) + 128] = mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require return_data.size >= _22702 + (32 * _22882) + 32
                                t = _16933 + (4 * ceil32(return_data.size)) + _22702 + 160
                                u = _16933 + (6 * ceil32(return_data.size)) + 160
                                s = 0
                                while s < _22882:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16933] - 1 < mem[_16933]
                                _25320 = mem[(32 * mem[_16933] - 1) + _16933 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25320))
                                staticcall address(_25320).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25762 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16933
                                s = mem[_25762] - ext_call.return_data[0]
                                continue 
                            mem[_16933 + (4 * ceil32(return_data.size)) + 132] = address(_17501)
                            mem[_16933 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17474))
                            call address(_17474).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17501), -1
                            mem[_16933 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16933 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11255 / 2) + 1 < mem[96]
                            _19503 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                            mem[_16933 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16933 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16933 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16933 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16933 + (6 * ceil32(return_data.size)) + 292] = mem[_16933]
                            t = 0
                            u = _16933 + 32
                            v = _16933 + (6 * ceil32(return_data.size)) + 324
                            while t < mem[_16933]:
                                mem[v] = mem[u + 12 len 20]
                                _16787 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16933 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16933 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19503))
                            call address(_19503).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16933 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16933]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16933 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16933 + (7 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22703 = mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16933 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22883 = mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16933 + (7 * ceil32(return_data.size)) + (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16933 + (7 * ceil32(return_data.size)) + (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16933 + (7 * ceil32(return_data.size)) + 128] = _22883
                            require return_data.size >= _22703 + (32 * _22883) + 32
                            t = _16933 + (6 * ceil32(return_data.size)) + _22703 + 160
                            u = _16933 + (7 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22883:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16933] - 1 < mem[_16933]
                            _25322 = mem[(32 * mem[_16933] - 1) + _16933 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25322))
                            staticcall address(_25322).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25763 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16933
                            s = mem[_25763] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16933 + 44 len 20])
                        staticcall mem[_16933 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16933 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16933 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16933 + (2 * ceil32(return_data.size)) + 164] = address(_17501)
                        require ext_code.size(mem[_16933 + 44 len 20])
                        staticcall mem[_16933 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17501)
                        mem[_16933 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16933 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11255 / 2) + 1 < mem[96]
                            _18998 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                            mem[_16933 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16933 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16933 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16933 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16933 + (4 * ceil32(return_data.size)) + 292] = mem[_16933]
                            t = 0
                            u = _16933 + 32
                            v = _16933 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16933]:
                                mem[v] = mem[u + 12 len 20]
                                _16787 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16933 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16933 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18998))
                            call address(_18998).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16933 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16933]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16933 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16933 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22704 = mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16933 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22884 = mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16933 + (6 * ceil32(return_data.size)) + (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16933 + (6 * ceil32(return_data.size)) + (32 * mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16933 + (6 * ceil32(return_data.size)) + 128] = mem[_16933 + (4 * ceil32(return_data.size)) + mem[_16933 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _22704 + (32 * _22884) + 32
                            t = _16933 + (4 * ceil32(return_data.size)) + _22704 + 160
                            u = _16933 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22884:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16933] - 1 < mem[_16933]
                            _25324 = mem[(32 * mem[_16933] - 1) + _16933 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25324))
                            staticcall address(_25324).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25764 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16933
                            s = mem[_25764] - ext_call.return_data[0]
                            continue 
                        mem[_16933 + (4 * ceil32(return_data.size)) + 132] = address(_17501)
                        mem[_16933 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17474))
                        call address(_17474).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17501), -1
                        mem[_16933 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16933 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11255 / 2) + 1 < mem[96]
                        _19799 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                        mem[_16933 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16933 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16933 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16933 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16933 + (6 * ceil32(return_data.size)) + 292] = mem[_16933]
                        t = 0
                        u = _16933 + 32
                        v = _16933 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16933]:
                            mem[v] = mem[u + 12 len 20]
                            _16787 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16933 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16933 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19799))
                        call address(_19799).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16933 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16933]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16933 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16933 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22705 = mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16933 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22885 = mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16933 + (7 * ceil32(return_data.size)) + (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16933 + (7 * ceil32(return_data.size)) + (32 * mem[_16933 + (6 * ceil32(return_data.size)) + mem[_16933 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16933 + (7 * ceil32(return_data.size)) + 128] = _22885
                        require return_data.size >= _22705 + (32 * _22885) + 32
                        t = _16933 + (6 * ceil32(return_data.size)) + _22705 + 160
                        u = _16933 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22885:
                            mem[u] = mem[t]
                            _16787 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16933] - 1 < mem[_16933]
                        _25326 = mem[(32 * mem[_16933] - 1) + _16933 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25326))
                        staticcall address(_25326).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25765 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16787 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16933
                        s = mem[_25765] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11255 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11255 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11255 / 2) + 1) + 140 len 20]:
                        require idx + -(_11255 / 2) + 1 < mem[96]
                        require idx - (_11255 / 2) < mem[96]
                        if mem[(32 * idx - (_11255 / 2)) + 140 len 20] != mem[(32 * idx + -(_11255 / 2) + 1) + 140 len 20]:
                            _17068 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_17068 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_17068]
                            mem[_17068 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_17068]
                            mem[_17068 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_17068] - 1 < mem[_17068]
                            mem[_17068 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_17068] - 1) + _17068 + 44 len 20])
                            staticcall mem[(32 * mem[_17068] - 1) + _17068 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17068 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17068 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_17068]
                            _17502 = mem[_17068 + 32]
                            require idx - (_11255 / 2) < mem[96]
                            _17528 = mem[(32 * idx - (_11255 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_17068 + 44 len 20])
                                staticcall mem[_17068 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17068 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17068 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17068 + (2 * ceil32(return_data.size)) + 132] = address(_17528)
                                require ext_code.size(mem[_17068 + 44 len 20])
                                staticcall mem[_17068 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17528)
                                mem[_17068 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17068 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11255 / 2) < mem[96]
                                    _18546 = mem[(32 * idx - (_11255 / 2)) + 128]
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 260] = mem[_17068]
                                    t = 0
                                    u = _17068 + 32
                                    v = _17068 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_17068]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16787 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18546))
                                    call address(_18546).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17068 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17068]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _17068 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22706 = mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _17068 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22886 = mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17068 + (6 * ceil32(return_data.size)) + (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _17068 + (6 * ceil32(return_data.size)) + (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_17068 + (6 * ceil32(return_data.size)) + 96] = _22886
                                    require return_data.size >= _22706 + (32 * _22886) + 32
                                    t = _17068 + (4 * ceil32(return_data.size)) + _22706 + 128
                                    u = _17068 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22886:
                                        mem[u] = mem[t]
                                        _16787 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17068] - 1 < mem[_17068]
                                    _25328 = mem[(32 * mem[_17068] - 1) + _17068 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25328))
                                    staticcall address(_25328).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25766 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16787 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17068
                                    s = mem[_25766] - ext_call.return_data[0]
                                    continue 
                                mem[_17068 + (4 * ceil32(return_data.size)) + 100] = address(_17528)
                                mem[_17068 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17502))
                                call address(_17502).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17528), -1
                                mem[_17068 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17068 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11255 / 2) < mem[96]
                                _19303 = mem[(32 * idx - (_11255 / 2)) + 128]
                                mem[_17068 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17068 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17068 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17068 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17068 + (6 * ceil32(return_data.size)) + 260] = mem[_17068]
                                t = 0
                                u = _17068 + 32
                                v = _17068 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_17068]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16787 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17068 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17068 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19303))
                                call address(_19303).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17068 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17068]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17068 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17068 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22707 = mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17068 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22887 = mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17068 + (7 * ceil32(return_data.size)) + (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17068 + (7 * ceil32(return_data.size)) + (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17068 + (7 * ceil32(return_data.size)) + 96] = mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require return_data.size >= _22707 + (32 * _22887) + 32
                                t = _17068 + (6 * ceil32(return_data.size)) + _22707 + 128
                                u = _17068 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22887:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17068] - 1 < mem[_17068]
                                _25330 = mem[(32 * mem[_17068] - 1) + _17068 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25330))
                                staticcall address(_25330).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25767 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17068
                                s = mem[_25767] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_17068 + 44 len 20])
                                staticcall mem[_17068 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17068 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17068 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17068 + (2 * ceil32(return_data.size)) + 132] = address(_17528)
                                require ext_code.size(mem[_17068 + 44 len 20])
                                staticcall mem[_17068 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17528)
                                mem[_17068 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17068 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11255 / 2) < mem[96]
                                    _18804 = mem[(32 * idx - (_11255 / 2)) + 128]
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 260] = mem[_17068]
                                    t = 0
                                    u = _17068 + 32
                                    v = _17068 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_17068]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16787 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18804))
                                    call address(_18804).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17068 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17068]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_17068 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _17068 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22708 = mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _17068 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22888 = mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17068 + (6 * ceil32(return_data.size)) + (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _17068 + (6 * ceil32(return_data.size)) + (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_17068 + (6 * ceil32(return_data.size)) + 96] = _22888
                                    require return_data.size >= _22708 + (32 * _22888) + 32
                                    t = _17068 + (4 * ceil32(return_data.size)) + _22708 + 128
                                    u = _17068 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22888:
                                        mem[u] = mem[t]
                                        _16787 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17068] - 1 < mem[_17068]
                                    _25332 = mem[(32 * mem[_17068] - 1) + _17068 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25332))
                                    staticcall address(_25332).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25768 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16787 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17068
                                    s = mem[_25768] - ext_call.return_data[0]
                                    continue 
                                mem[_17068 + (4 * ceil32(return_data.size)) + 100] = address(_17528)
                                mem[_17068 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17502))
                                call address(_17502).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17528), -1
                                mem[_17068 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17068 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11255 / 2) < mem[96]
                                _19606 = mem[(32 * idx - (_11255 / 2)) + 128]
                                mem[_17068 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17068 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17068 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17068 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17068 + (6 * ceil32(return_data.size)) + 260] = mem[_17068]
                                t = 0
                                u = _17068 + 32
                                v = _17068 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_17068]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16787 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17068 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17068 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19606))
                                call address(_19606).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17068 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17068]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17068 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17068 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22709 = mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17068 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22889 = mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17068 + (7 * ceil32(return_data.size)) + (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17068 + (7 * ceil32(return_data.size)) + (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17068 + (7 * ceil32(return_data.size)) + 96] = mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require return_data.size >= _22709 + (32 * _22889) + 32
                                t = _17068 + (6 * ceil32(return_data.size)) + _22709 + 128
                                u = _17068 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22889:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17068] - 1 < mem[_17068]
                                _25334 = mem[(32 * mem[_17068] - 1) + _17068 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25334))
                                staticcall address(_25334).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25769 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17068
                                s = mem[_25769] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_17068 + 44 len 20])
                            staticcall mem[_17068 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17068 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17068 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17068 + (2 * ceil32(return_data.size)) + 132] = address(_17528)
                            require ext_code.size(mem[_17068 + 44 len 20])
                            staticcall mem[_17068 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17528)
                            mem[_17068 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17068 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11255 / 2) < mem[96]
                                _19093 = mem[(32 * idx - (_11255 / 2)) + 128]
                                mem[_17068 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17068 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17068 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17068 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17068 + (4 * ceil32(return_data.size)) + 260] = mem[_17068]
                                t = 0
                                u = _17068 + 32
                                v = _17068 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_17068]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16787 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17068 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17068 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19093))
                                call address(_19093).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17068 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17068]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17068 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17068 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22710 = mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17068 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22890 = mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17068 + (6 * ceil32(return_data.size)) + (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17068 + (6 * ceil32(return_data.size)) + (32 * mem[_17068 + (4 * ceil32(return_data.size)) + mem[_17068 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17068 + (6 * ceil32(return_data.size)) + 96] = _22890
                                require return_data.size >= _22710 + (32 * _22890) + 32
                                t = _17068 + (4 * ceil32(return_data.size)) + _22710 + 128
                                u = _17068 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22890:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17068] - 1 < mem[_17068]
                                _25336 = mem[(32 * mem[_17068] - 1) + _17068 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25336))
                                staticcall address(_25336).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25770 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17068
                                s = mem[_25770] - ext_call.return_data[0]
                                continue 
                            mem[_17068 + (4 * ceil32(return_data.size)) + 100] = address(_17528)
                            mem[_17068 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17502))
                            call address(_17502).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17528), -1
                            mem[_17068 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17068 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11255 / 2) < mem[96]
                            _19888 = mem[(32 * idx - (_11255 / 2)) + 128]
                            mem[_17068 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17068 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17068 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17068 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17068 + (6 * ceil32(return_data.size)) + 260] = mem[_17068]
                            t = 0
                            u = _17068 + 32
                            v = _17068 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_17068]:
                                mem[v] = mem[u + 12 len 20]
                                _16787 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17068 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17068 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19888))
                            call address(_19888).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17068 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17068]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17068 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17068 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22711 = mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17068 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22891 = mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17068 + (7 * ceil32(return_data.size)) + (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _17068 + (7 * ceil32(return_data.size)) + (32 * mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_17068 + (7 * ceil32(return_data.size)) + 96] = mem[_17068 + (6 * ceil32(return_data.size)) + mem[_17068 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _22711 + (32 * _22891) + 32
                            t = _17068 + (6 * ceil32(return_data.size)) + _22711 + 128
                            u = _17068 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22891:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17068] - 1 < mem[_17068]
                            _25338 = mem[(32 * mem[_17068] - 1) + _17068 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25338))
                            staticcall address(_25338).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25771 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17068
                            s = mem[_25771] - ext_call.return_data[0]
                            continue 
                        _17070 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_17070 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_17070]
                        mem[_17070 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17070]
                        mem[_17070 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_17070]
                        mem[_17070 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_17070] - 1 < mem[_17070]
                        mem[_17070 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_17070] - 1) + _17070 + 44 len 20])
                        staticcall mem[(32 * mem[_17070] - 1) + _17070 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17070 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17070 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_17070]
                        _17549 = mem[_17070 + 32]
                        require idx + -(_11255 / 2) + 1 < mem[96]
                        _17561 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17070 + 44 len 20])
                            staticcall mem[_17070 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17070 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17070 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17070 + (2 * ceil32(return_data.size)) + 164] = address(_17561)
                            require ext_code.size(mem[_17070 + 44 len 20])
                            staticcall mem[_17070 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17561)
                            mem[_17070 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17070 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11255 / 2) + 1 < mem[96]
                                _18717 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                                mem[_17070 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17070 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17070 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17070 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17070 + (4 * ceil32(return_data.size)) + 292] = mem[_17070]
                                s = 0
                                t = _17070 + 32
                                u = _17070 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17070]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16787 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17070 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17070 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18717))
                                call address(_18717).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17070 + (4 * ceil32(return_data.size)) + (32 * mem[_17070]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22532 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22712 = mem[_22532]
                                require mem[_22532] <= test266151307()
                                require _22532 + return_data.size > _22532 + mem[_22532] + 31
                                _22892 = mem[_22532 + mem[_22532]]
                                require mem[_22532 + mem[_22532]] <= test266151307()
                                require (32 * mem[_22532 + mem[_22532]]) + 32 >= 0 and _22532 + ceil32(return_data.size) + (32 * mem[_22532 + mem[_22532]]) + 32 <= test266151307()
                                mem[64] = _22532 + ceil32(return_data.size) + (32 * mem[_22532 + mem[_22532]]) + 32
                                mem[_22532 + ceil32(return_data.size)] = _22892
                                require return_data.size >= _22712 + (32 * _22892) + 32
                                t = _22532 + _22712 + 32
                                u = _22532 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22892:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17070] - 1 < mem[_17070]
                                _25340 = mem[(32 * mem[_17070] - 1) + _17070 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25340))
                                staticcall address(_25340).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25772 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17070
                                s = mem[_25772] - ext_call.return_data[0]
                                continue 
                            mem[_17070 + (4 * ceil32(return_data.size)) + 132] = address(_17561)
                            mem[_17070 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17549))
                            call address(_17549).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17561), -1
                            mem[_17070 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17070 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11255 / 2) + 1 < mem[96]
                            _19511 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                            mem[_17070 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17070 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17070 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17070 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17070 + (6 * ceil32(return_data.size)) + 292] = mem[_17070]
                            s = 0
                            t = _17070 + 32
                            u = _17070 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17070]:
                                mem[u] = mem[t + 12 len 20]
                                _16787 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17070 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17070 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19511))
                            call address(_19511).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17070 + (6 * ceil32(return_data.size)) + (32 * mem[_17070]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22533 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22713 = mem[_22533]
                            require mem[_22533] <= test266151307()
                            require _22533 + return_data.size > _22533 + mem[_22533] + 31
                            _22893 = mem[_22533 + mem[_22533]]
                            require mem[_22533 + mem[_22533]] <= test266151307()
                            require (32 * mem[_22533 + mem[_22533]]) + 32 >= 0 and _22533 + ceil32(return_data.size) + (32 * mem[_22533 + mem[_22533]]) + 32 <= test266151307()
                            mem[64] = _22533 + ceil32(return_data.size) + (32 * mem[_22533 + mem[_22533]]) + 32
                            mem[_22533 + ceil32(return_data.size)] = _22893
                            require return_data.size >= _22713 + (32 * _22893) + 32
                            t = _22533 + _22713 + 32
                            u = _22533 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22893:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17070] - 1 < mem[_17070]
                            _25342 = mem[(32 * mem[_17070] - 1) + _17070 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25342))
                            staticcall address(_25342).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25773 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17070
                            s = mem[_25773] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17070 + 44 len 20])
                            staticcall mem[_17070 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17070 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17070 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17070 + (2 * ceil32(return_data.size)) + 164] = address(_17561)
                            require ext_code.size(mem[_17070 + 44 len 20])
                            staticcall mem[_17070 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17561)
                            mem[_17070 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17070 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11255 / 2) + 1 < mem[96]
                                _19004 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                                mem[_17070 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17070 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17070 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17070 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17070 + (4 * ceil32(return_data.size)) + 292] = mem[_17070]
                                s = 0
                                t = _17070 + 32
                                u = _17070 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17070]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16787 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17070 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17070 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_19004))
                                call address(_19004).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17070 + (4 * ceil32(return_data.size)) + (32 * mem[_17070]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22534 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22714 = mem[_22534]
                                require mem[_22534] <= test266151307()
                                require _22534 + return_data.size > _22534 + mem[_22534] + 31
                                _22894 = mem[_22534 + mem[_22534]]
                                require mem[_22534 + mem[_22534]] <= test266151307()
                                require (32 * mem[_22534 + mem[_22534]]) + 32 >= 0 and _22534 + ceil32(return_data.size) + (32 * mem[_22534 + mem[_22534]]) + 32 <= test266151307()
                                mem[64] = _22534 + ceil32(return_data.size) + (32 * mem[_22534 + mem[_22534]]) + 32
                                mem[_22534 + ceil32(return_data.size)] = _22894
                                require return_data.size >= _22714 + (32 * _22894) + 32
                                t = _22534 + _22714 + 32
                                u = _22534 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22894:
                                    mem[u] = mem[t]
                                    _16787 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17070] - 1 < mem[_17070]
                                _25344 = mem[(32 * mem[_17070] - 1) + _17070 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25344))
                                staticcall address(_25344).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25774 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16787 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17070
                                s = mem[_25774] - ext_call.return_data[0]
                                continue 
                            mem[_17070 + (4 * ceil32(return_data.size)) + 132] = address(_17561)
                            mem[_17070 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17549))
                            call address(_17549).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17561), -1
                            mem[_17070 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17070 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11255 / 2) + 1 < mem[96]
                            _19805 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                            mem[_17070 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17070 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17070 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17070 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17070 + (6 * ceil32(return_data.size)) + 292] = mem[_17070]
                            s = 0
                            t = _17070 + 32
                            u = _17070 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17070]:
                                mem[u] = mem[t + 12 len 20]
                                _16787 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17070 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17070 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19805))
                            call address(_19805).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17070 + (6 * ceil32(return_data.size)) + (32 * mem[_17070]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22535 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22715 = mem[_22535]
                            require mem[_22535] <= test266151307()
                            require _22535 + return_data.size > _22535 + mem[_22535] + 31
                            _22895 = mem[_22535 + mem[_22535]]
                            require mem[_22535 + mem[_22535]] <= test266151307()
                            require (32 * mem[_22535 + mem[_22535]]) + 32 >= 0 and _22535 + ceil32(return_data.size) + (32 * mem[_22535 + mem[_22535]]) + 32 <= test266151307()
                            mem[64] = _22535 + ceil32(return_data.size) + (32 * mem[_22535 + mem[_22535]]) + 32
                            mem[_22535 + ceil32(return_data.size)] = _22895
                            require return_data.size >= _22715 + (32 * _22895) + 32
                            t = _22535 + _22715 + 32
                            u = _22535 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22895:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17070] - 1 < mem[_17070]
                            _25346 = mem[(32 * mem[_17070] - 1) + _17070 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25346))
                            staticcall address(_25346).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25775 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17070
                            s = mem[_25775] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17070 + 44 len 20])
                        staticcall mem[_17070 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17070 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17070 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17070 + (2 * ceil32(return_data.size)) + 164] = address(_17561)
                        require ext_code.size(mem[_17070 + 44 len 20])
                        staticcall mem[_17070 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17561)
                        mem[_17070 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17070 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11255 / 2) + 1 < mem[96]
                            _19308 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                            mem[_17070 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17070 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17070 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17070 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17070 + (4 * ceil32(return_data.size)) + 292] = mem[_17070]
                            s = 0
                            t = _17070 + 32
                            u = _17070 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17070]:
                                mem[u] = mem[t + 12 len 20]
                                _16787 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17070 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17070 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19308))
                            call address(_19308).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17070 + (4 * ceil32(return_data.size)) + (32 * mem[_17070]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22536 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22716 = mem[_22536]
                            require mem[_22536] <= test266151307()
                            require _22536 + return_data.size > _22536 + mem[_22536] + 31
                            _22896 = mem[_22536 + mem[_22536]]
                            require mem[_22536 + mem[_22536]] <= test266151307()
                            require (32 * mem[_22536 + mem[_22536]]) + 32 >= 0 and _22536 + ceil32(return_data.size) + (32 * mem[_22536 + mem[_22536]]) + 32 <= test266151307()
                            mem[64] = _22536 + ceil32(return_data.size) + (32 * mem[_22536 + mem[_22536]]) + 32
                            mem[_22536 + ceil32(return_data.size)] = _22896
                            require return_data.size >= _22716 + (32 * _22896) + 32
                            t = _22536 + _22716 + 32
                            u = _22536 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22896:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17070] - 1 < mem[_17070]
                            _25348 = mem[(32 * mem[_17070] - 1) + _17070 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25348))
                            staticcall address(_25348).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25776 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17070
                            s = mem[_25776] - ext_call.return_data[0]
                            continue 
                        mem[_17070 + (4 * ceil32(return_data.size)) + 132] = address(_17561)
                        mem[_17070 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17549))
                        call address(_17549).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17561), -1
                        mem[_17070 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17070 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11255 / 2) + 1 < mem[96]
                        _20066 = mem[(32 * idx + -(_11255 / 2) + 1) + 128]
                        mem[_17070 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17070 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17070 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17070 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17070 + (6 * ceil32(return_data.size)) + 292] = mem[_17070]
                        s = 0
                        t = _17070 + 32
                        u = _17070 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17070]:
                            mem[u] = mem[t + 12 len 20]
                            _16787 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17070 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17070 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_20066))
                        call address(_20066).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17070 + (6 * ceil32(return_data.size)) + (32 * mem[_17070]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22537 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22717 = mem[_22537]
                        require mem[_22537] <= test266151307()
                        require _22537 + return_data.size > _22537 + mem[_22537] + 31
                        _22897 = mem[_22537 + mem[_22537]]
                        require mem[_22537 + mem[_22537]] <= test266151307()
                        require (32 * mem[_22537 + mem[_22537]]) + 32 >= 0 and _22537 + ceil32(return_data.size) + (32 * mem[_22537 + mem[_22537]]) + 32 <= test266151307()
                        mem[64] = _22537 + ceil32(return_data.size) + (32 * mem[_22537 + mem[_22537]]) + 32
                        mem[_22537 + ceil32(return_data.size)] = _22897
                        require return_data.size >= _22717 + (32 * _22897) + 32
                        t = _22537 + _22717 + 32
                        u = _22537 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22897:
                            mem[u] = mem[t]
                            _16787 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17070] - 1 < mem[_17070]
                        _25350 = mem[(32 * mem[_17070] - 1) + _17070 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25350))
                        staticcall address(_25350).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25777 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16787 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17070
                        s = mem[_25777] - ext_call.return_data[0]
                        continue 
                    _16936 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16936 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16936]
                    mem[_16936 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16936]
                    mem[_16936 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16936]
                    mem[_16936 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16936]
                    mem[_16936 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16936] - 1 < mem[_16936]
                    mem[_16936 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16936] - 1) + _16936 + 44 len 20])
                    staticcall mem[(32 * mem[_16936] - 1) + _16936 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16936 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16936 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16936]
                    _17530 = mem[_16936 + 32]
                    require idx + -(_11255 / 2) + 2 < mem[96]
                    _17551 = mem[(32 * idx + -(_11255 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16936 + 44 len 20])
                        staticcall mem[_16936 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16936 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16936 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16936 + (2 * ceil32(return_data.size)) + 196] = address(_17551)
                        require ext_code.size(mem[_16936 + 44 len 20])
                        staticcall mem[_16936 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17551)
                        mem[_16936 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16936 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11255 / 2) + 2 < mem[96]
                            _18630 = mem[(32 * idx + -(_11255 / 2) + 2) + 128]
                            mem[_16936 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16936 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16936 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16936 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16936 + (4 * ceil32(return_data.size)) + 324] = mem[_16936]
                            s = 0
                            t = _16936 + 32
                            u = _16936 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16936]:
                                mem[u] = mem[t + 12 len 20]
                                _16787 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16936 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16936 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18630))
                            call address(_18630).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16936 + (4 * ceil32(return_data.size)) + (32 * mem[_16936]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22538 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22718 = mem[_22538]
                            require mem[_22538] <= test266151307()
                            require _22538 + return_data.size > _22538 + mem[_22538] + 31
                            _22898 = mem[_22538 + mem[_22538]]
                            require mem[_22538 + mem[_22538]] <= test266151307()
                            require (32 * mem[_22538 + mem[_22538]]) + 32 >= 0 and _22538 + ceil32(return_data.size) + (32 * mem[_22538 + mem[_22538]]) + 32 <= test266151307()
                            mem[64] = _22538 + ceil32(return_data.size) + (32 * mem[_22538 + mem[_22538]]) + 32
                            mem[_22538 + ceil32(return_data.size)] = _22898
                            require return_data.size >= _22718 + (32 * _22898) + 32
                            t = _22538 + _22718 + 32
                            u = _22538 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22898:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16936] - 1 < mem[_16936]
                            _25352 = mem[(32 * mem[_16936] - 1) + _16936 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25352))
                            staticcall address(_25352).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25778 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16936
                            s = mem[_25778] - ext_call.return_data[0]
                            continue 
                        mem[_16936 + (4 * ceil32(return_data.size)) + 164] = address(_17551)
                        mem[_16936 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17530))
                        call address(_17530).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17551), -1
                        mem[_16936 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16936 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11255 / 2) + 2 < mem[96]
                        _19410 = mem[(32 * idx + -(_11255 / 2) + 2) + 128]
                        mem[_16936 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16936 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16936 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16936 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16936 + (6 * ceil32(return_data.size)) + 324] = mem[_16936]
                        s = 0
                        t = _16936 + 32
                        u = _16936 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16936]:
                            mem[u] = mem[t + 12 len 20]
                            _16787 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16936 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16936 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19410))
                        call address(_19410).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16936 + (6 * ceil32(return_data.size)) + (32 * mem[_16936]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22539 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22719 = mem[_22539]
                        require mem[_22539] <= test266151307()
                        require _22539 + return_data.size > _22539 + mem[_22539] + 31
                        _22899 = mem[_22539 + mem[_22539]]
                        require mem[_22539 + mem[_22539]] <= test266151307()
                        require (32 * mem[_22539 + mem[_22539]]) + 32 >= 0 and _22539 + ceil32(return_data.size) + (32 * mem[_22539 + mem[_22539]]) + 32 <= test266151307()
                        mem[64] = _22539 + ceil32(return_data.size) + (32 * mem[_22539 + mem[_22539]]) + 32
                        mem[_22539 + ceil32(return_data.size)] = _22899
                        require return_data.size >= _22719 + (32 * _22899) + 32
                        t = _22539 + _22719 + 32
                        u = _22539 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22899:
                            mem[u] = mem[t]
                            _16787 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16936] - 1 < mem[_16936]
                        _25354 = mem[(32 * mem[_16936] - 1) + _16936 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25354))
                        staticcall address(_25354).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25779 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16787 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16936
                        s = mem[_25779] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16936 + 44 len 20])
                        staticcall mem[_16936 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16936 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16936 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16936 + (2 * ceil32(return_data.size)) + 196] = address(_17551)
                        require ext_code.size(mem[_16936 + 44 len 20])
                        staticcall mem[_16936 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17551)
                        mem[_16936 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16936 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11255 / 2) + 2 < mem[96]
                            _18903 = mem[(32 * idx + -(_11255 / 2) + 2) + 128]
                            mem[_16936 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16936 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16936 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16936 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16936 + (4 * ceil32(return_data.size)) + 324] = mem[_16936]
                            s = 0
                            t = _16936 + 32
                            u = _16936 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16936]:
                                mem[u] = mem[t + 12 len 20]
                                _16787 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16936 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16936 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18903))
                            call address(_18903).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16936 + (4 * ceil32(return_data.size)) + (32 * mem[_16936]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22540 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22720 = mem[_22540]
                            require mem[_22540] <= test266151307()
                            require _22540 + return_data.size > _22540 + mem[_22540] + 31
                            _22900 = mem[_22540 + mem[_22540]]
                            require mem[_22540 + mem[_22540]] <= test266151307()
                            require (32 * mem[_22540 + mem[_22540]]) + 32 >= 0 and _22540 + ceil32(return_data.size) + (32 * mem[_22540 + mem[_22540]]) + 32 <= test266151307()
                            mem[64] = _22540 + ceil32(return_data.size) + (32 * mem[_22540 + mem[_22540]]) + 32
                            mem[_22540 + ceil32(return_data.size)] = _22900
                            require return_data.size >= _22720 + (32 * _22900) + 32
                            t = _22540 + _22720 + 32
                            u = _22540 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22900:
                                mem[u] = mem[t]
                                _16787 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16936] - 1 < mem[_16936]
                            _25356 = mem[(32 * mem[_16936] - 1) + _16936 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25356))
                            staticcall address(_25356).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25780 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16787 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16936
                            s = mem[_25780] - ext_call.return_data[0]
                            continue 
                        mem[_16936 + (4 * ceil32(return_data.size)) + 164] = address(_17551)
                        mem[_16936 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17530))
                        call address(_17530).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17551), -1
                        mem[_16936 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16936 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11255 / 2) + 2 < mem[96]
                        _19708 = mem[(32 * idx + -(_11255 / 2) + 2) + 128]
                        mem[_16936 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16936 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16936 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16936 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16936 + (6 * ceil32(return_data.size)) + 324] = mem[_16936]
                        s = 0
                        t = _16936 + 32
                        u = _16936 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16936]:
                            mem[u] = mem[t + 12 len 20]
                            _16787 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16936 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16936 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19708))
                        call address(_19708).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16936 + (6 * ceil32(return_data.size)) + (32 * mem[_16936]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22541 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22721 = mem[_22541]
                        require mem[_22541] <= test266151307()
                        require _22541 + return_data.size > _22541 + mem[_22541] + 31
                        _22901 = mem[_22541 + mem[_22541]]
                        require mem[_22541 + mem[_22541]] <= test266151307()
                        require (32 * mem[_22541 + mem[_22541]]) + 32 >= 0 and _22541 + ceil32(return_data.size) + (32 * mem[_22541 + mem[_22541]]) + 32 <= test266151307()
                        mem[64] = _22541 + ceil32(return_data.size) + (32 * mem[_22541 + mem[_22541]]) + 32
                        mem[_22541 + ceil32(return_data.size)] = _22901
                        require return_data.size >= _22721 + (32 * _22901) + 32
                        t = _22541 + _22721 + 32
                        u = _22541 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22901:
                            mem[u] = mem[t]
                            _16787 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16936] - 1 < mem[_16936]
                        _25358 = mem[(32 * mem[_16936] - 1) + _16936 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25358))
                        staticcall address(_25358).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25781 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16787 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16936
                        s = mem[_25781] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16936 + 44 len 20])
                    staticcall mem[_16936 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16936 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16936 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16936 + (2 * ceil32(return_data.size)) + 196] = address(_17551)
                    require ext_code.size(mem[_16936 + 44 len 20])
                    staticcall mem[_16936 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17551)
                    mem[_16936 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16936 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11255 / 2) + 2 < mem[96]
                        _19207 = mem[(32 * idx + -(_11255 / 2) + 2) + 128]
                        mem[_16936 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16936 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16936 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16936 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16936 + (4 * ceil32(return_data.size)) + 324] = mem[_16936]
                        s = 0
                        t = _16936 + 32
                        u = _16936 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16936]:
                            mem[u] = mem[t + 12 len 20]
                            _16787 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16936 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16936 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19207))
                        call address(_19207).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16936 + (4 * ceil32(return_data.size)) + (32 * mem[_16936]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22542 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22722 = mem[_22542]
                        require mem[_22542] <= test266151307()
                        require _22542 + return_data.size > _22542 + mem[_22542] + 31
                        _22902 = mem[_22542 + mem[_22542]]
                        require mem[_22542 + mem[_22542]] <= test266151307()
                        require (32 * mem[_22542 + mem[_22542]]) + 32 >= 0 and _22542 + ceil32(return_data.size) + (32 * mem[_22542 + mem[_22542]]) + 32 <= test266151307()
                        mem[64] = _22542 + ceil32(return_data.size) + (32 * mem[_22542 + mem[_22542]]) + 32
                        mem[_22542 + ceil32(return_data.size)] = _22902
                        require return_data.size >= _22722 + (32 * _22902) + 32
                        t = _22542 + _22722 + 32
                        u = _22542 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22902:
                            mem[u] = mem[t]
                            _16787 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16936] - 1 < mem[_16936]
                        _25360 = mem[(32 * mem[_16936] - 1) + _16936 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25360))
                        staticcall address(_25360).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25782 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16787 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16936
                        s = mem[_25782] - ext_call.return_data[0]
                        continue 
                    mem[_16936 + (4 * ceil32(return_data.size)) + 164] = address(_17551)
                    mem[_16936 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17530))
                    call address(_17530).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17551), -1
                    mem[_16936 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16936 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11255 / 2) + 2 < mem[96]
                    _19984 = mem[(32 * idx + -(_11255 / 2) + 2) + 128]
                    mem[_16936 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16936 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16936 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16936 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16936 + (6 * ceil32(return_data.size)) + 324] = mem[_16936]
                    s = 0
                    t = _16936 + 32
                    u = _16936 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16936]:
                        mem[u] = mem[t + 12 len 20]
                        _16787 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16936 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16936 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19984))
                    call address(_19984).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16936 + (6 * ceil32(return_data.size)) + (32 * mem[_16936]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22543 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22723 = mem[_22543]
                    require mem[_22543] <= test266151307()
                    require _22543 + return_data.size > _22543 + mem[_22543] + 31
                    _22903 = mem[_22543 + mem[_22543]]
                    require mem[_22543 + mem[_22543]] <= test266151307()
                    require (32 * mem[_22543 + mem[_22543]]) + 32 >= 0 and _22543 + ceil32(return_data.size) + (32 * mem[_22543 + mem[_22543]]) + 32 <= test266151307()
                    mem[64] = _22543 + ceil32(return_data.size) + (32 * mem[_22543 + mem[_22543]]) + 32
                    mem[_22543 + ceil32(return_data.size)] = _22903
                    require return_data.size >= _22723 + (32 * _22903) + 32
                    t = _22543 + _22723 + 32
                    u = _22543 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22903:
                        mem[u] = mem[t]
                        _16787 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16936] - 1 < mem[_16936]
                    _25362 = mem[(32 * mem[_16936] - 1) + _16936 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25362))
                    staticcall address(_25362).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25783 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16787 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16936
                    s = mem[_25783] - ext_call.return_data[0]
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                _16820 = mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160]
                require _11255 / 2 < mem[96]
                _16841 = mem[(16 * Mask(251, 1, _11255)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16841))
                staticcall address(_16841).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16904 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16904] < _11333 - cd[4] + _16820:
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11260 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11289 = mem[_11260]
                    require mem[_11260] == mem[_11260 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11337 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11337)
                    require ext_code.size(address(_11289))
                    staticcall address(_11289).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11337)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11396 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11429 = mem[_11396]
                    require mem[_11396] == mem[_11396 + 12 len 20]
                    require ext_code.size(mem[_11396 + 12 len 20])
                    staticcall mem[_11396 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11618 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11775 = mem[_11618]
                    require mem[_11618] == mem[_11618 + 18 len 14]
                    _11897 = mem[_11618 + 32]
                    require mem[_11618 + 32] == mem[_11618 + 50 len 14]
                    require mem[_11618 + 64] == mem[_11618 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11618 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11618 + 50 len 14] / (997 * s) + (1000 * mem[_11618 + 18 len 14])
                            idx = idx + 1
                            s = _11429
                            s = 997 * s * Mask(112, 0, _11897) / (997 * s) + (1000 * Mask(112, 0, _11775))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11618 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11618 + 50 len 14] / (997 * s) + (1000 * mem[_11618 + 18 len 14])
                            idx = idx + 1
                            s = _11429
                            s = 997 * s * Mask(112, 0, _11897) / (997 * s) + (1000 * Mask(112, 0, _11775))
                            continue 
                    require (997 * s) + (1000 * mem[_11618 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11618 + 18 len 14] / (997 * s) + (1000 * mem[_11618 + 50 len 14])
                    idx = idx + 1
                    s = _11429
                    s = 997 * s * Mask(112, 0, _11775) / (997 * s) + (1000 * Mask(112, 0, _11897))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11258 = mem[96]
                require mem[96] / 2 < mem[96]
                _11286 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11286))
                staticcall address(_11286).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11308 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11336 = mem[_11308]
                _16788 = mem[96]
                idx = _11258 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16788 - 1:
                    require idx + -(_11258 / 2) + 1 < mem[96]
                    require idx - (_11258 / 2) < mem[96]
                    require idx + -(_11258 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11258 / 2)) + 140 len 20] != mem[(32 * idx + -(_11258 / 2) + 1) + 140 len 20]:
                        require idx - (_11258 / 2) < mem[96]
                        if mem[(32 * idx - (_11258 / 2)) + 140 len 20] != mem[(32 * idx + -(_11258 / 2) + 1) + 140 len 20]:
                            _16938 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16938 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16938]
                            mem[_16938 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16938]
                            mem[_16938 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16938] - 1 < mem[_16938]
                            mem[_16938 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16938] - 1) + _16938 + 44 len 20])
                            staticcall mem[(32 * mem[_16938] - 1) + _16938 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16938 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16938 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16938]
                            _17430 = mem[_16938 + 32]
                            require idx - (_11258 / 2) < mem[96]
                            _17454 = mem[(32 * idx - (_11258 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16938 + 44 len 20])
                                staticcall mem[_16938 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16938 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16938 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16938 + (2 * ceil32(return_data.size)) + 132] = address(_17454)
                                require ext_code.size(mem[_16938 + 44 len 20])
                                staticcall mem[_16938 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17454)
                                mem[_16938 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16938 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11258 / 2) < mem[96]
                                    _18360 = mem[(32 * idx - (_11258 / 2)) + 128]
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 260] = mem[_16938]
                                    s = 0
                                    t = _16938 + 32
                                    u = _16938 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16938]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16788 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18360))
                                    call address(_18360).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16938 + (4 * ceil32(return_data.size)) + (32 * mem[_16938]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22544 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22724 = mem[_22544]
                                    require mem[_22544] <= test266151307()
                                    require _22544 + return_data.size > _22544 + mem[_22544] + 31
                                    _22904 = mem[_22544 + mem[_22544]]
                                    require mem[_22544 + mem[_22544]] <= test266151307()
                                    require (32 * mem[_22544 + mem[_22544]]) + 32 >= 0 and _22544 + ceil32(return_data.size) + (32 * mem[_22544 + mem[_22544]]) + 32 <= test266151307()
                                    mem[64] = _22544 + ceil32(return_data.size) + (32 * mem[_22544 + mem[_22544]]) + 32
                                    mem[_22544 + ceil32(return_data.size)] = _22904
                                    require return_data.size >= _22724 + (32 * _22904) + 32
                                    t = _22544 + _22724 + 32
                                    u = _22544 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22904:
                                        mem[u] = mem[t]
                                        _16788 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16938] - 1 < mem[_16938]
                                    _25364 = mem[(32 * mem[_16938] - 1) + _16938 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25364))
                                    staticcall address(_25364).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25784 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16788 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16938
                                    s = mem[_25784] - ext_call.return_data[0]
                                    continue 
                                mem[_16938 + (4 * ceil32(return_data.size)) + 100] = address(_17454)
                                mem[_16938 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17430))
                                call address(_17430).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17454), -1
                                mem[_16938 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16938 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11258 / 2) < mem[96]
                                _19011 = mem[(32 * idx - (_11258 / 2)) + 128]
                                mem[_16938 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16938 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16938 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16938 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16938 + (6 * ceil32(return_data.size)) + 260] = mem[_16938]
                                s = 0
                                t = _16938 + 32
                                u = _16938 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16938]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16938 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16938 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19011))
                                call address(_19011).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16938 + (6 * ceil32(return_data.size)) + (32 * mem[_16938]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22545 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22725 = mem[_22545]
                                require mem[_22545] <= test266151307()
                                require _22545 + return_data.size > _22545 + mem[_22545] + 31
                                _22905 = mem[_22545 + mem[_22545]]
                                require mem[_22545 + mem[_22545]] <= test266151307()
                                require (32 * mem[_22545 + mem[_22545]]) + 32 >= 0 and _22545 + ceil32(return_data.size) + (32 * mem[_22545 + mem[_22545]]) + 32 <= test266151307()
                                mem[64] = _22545 + ceil32(return_data.size) + (32 * mem[_22545 + mem[_22545]]) + 32
                                mem[_22545 + ceil32(return_data.size)] = _22905
                                require return_data.size >= _22725 + (32 * _22905) + 32
                                t = _22545 + _22725 + 32
                                u = _22545 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22905:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16938] - 1 < mem[_16938]
                                _25366 = mem[(32 * mem[_16938] - 1) + _16938 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25366))
                                staticcall address(_25366).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25785 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16938
                                s = mem[_25785] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16938 + 44 len 20])
                                staticcall mem[_16938 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16938 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16938 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16938 + (2 * ceil32(return_data.size)) + 132] = address(_17454)
                                require ext_code.size(mem[_16938 + 44 len 20])
                                staticcall mem[_16938 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17454)
                                mem[_16938 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16938 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11258 / 2) < mem[96]
                                    _18554 = mem[(32 * idx - (_11258 / 2)) + 128]
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 260] = mem[_16938]
                                    s = 0
                                    t = _16938 + 32
                                    u = _16938 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16938]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16788 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16938 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18554))
                                    call address(_18554).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16938 + (4 * ceil32(return_data.size)) + (32 * mem[_16938]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22546 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22726 = mem[_22546]
                                    require mem[_22546] <= test266151307()
                                    require _22546 + return_data.size > _22546 + mem[_22546] + 31
                                    _22906 = mem[_22546 + mem[_22546]]
                                    require mem[_22546 + mem[_22546]] <= test266151307()
                                    require (32 * mem[_22546 + mem[_22546]]) + 32 >= 0 and _22546 + ceil32(return_data.size) + (32 * mem[_22546 + mem[_22546]]) + 32 <= test266151307()
                                    mem[64] = _22546 + ceil32(return_data.size) + (32 * mem[_22546 + mem[_22546]]) + 32
                                    mem[_22546 + ceil32(return_data.size)] = _22906
                                    require return_data.size >= _22726 + (32 * _22906) + 32
                                    t = _22546 + _22726 + 32
                                    u = _22546 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22906:
                                        mem[u] = mem[t]
                                        _16788 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16938] - 1 < mem[_16938]
                                    _25368 = mem[(32 * mem[_16938] - 1) + _16938 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25368))
                                    staticcall address(_25368).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25786 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16788 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16938
                                    s = mem[_25786] - ext_call.return_data[0]
                                    continue 
                                mem[_16938 + (4 * ceil32(return_data.size)) + 100] = address(_17454)
                                mem[_16938 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17430))
                                call address(_17430).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17454), -1
                                mem[_16938 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16938 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11258 / 2) < mem[96]
                                _19315 = mem[(32 * idx - (_11258 / 2)) + 128]
                                mem[_16938 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16938 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16938 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16938 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16938 + (6 * ceil32(return_data.size)) + 260] = mem[_16938]
                                s = 0
                                t = _16938 + 32
                                u = _16938 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16938]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16938 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16938 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19315))
                                call address(_19315).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16938 + (6 * ceil32(return_data.size)) + (32 * mem[_16938]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22547 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22727 = mem[_22547]
                                require mem[_22547] <= test266151307()
                                require _22547 + return_data.size > _22547 + mem[_22547] + 31
                                _22907 = mem[_22547 + mem[_22547]]
                                require mem[_22547 + mem[_22547]] <= test266151307()
                                require (32 * mem[_22547 + mem[_22547]]) + 32 >= 0 and _22547 + ceil32(return_data.size) + (32 * mem[_22547 + mem[_22547]]) + 32 <= test266151307()
                                mem[64] = _22547 + ceil32(return_data.size) + (32 * mem[_22547 + mem[_22547]]) + 32
                                mem[_22547 + ceil32(return_data.size)] = _22907
                                require return_data.size >= _22727 + (32 * _22907) + 32
                                t = _22547 + _22727 + 32
                                u = _22547 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22907:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16938] - 1 < mem[_16938]
                                _25370 = mem[(32 * mem[_16938] - 1) + _16938 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25370))
                                staticcall address(_25370).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25787 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16938
                                s = mem[_25787] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16938 + 44 len 20])
                            staticcall mem[_16938 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16938 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16938 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16938 + (2 * ceil32(return_data.size)) + 132] = address(_17454)
                            require ext_code.size(mem[_16938 + 44 len 20])
                            staticcall mem[_16938 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17454)
                            mem[_16938 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16938 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11258 / 2) < mem[96]
                                _18813 = mem[(32 * idx - (_11258 / 2)) + 128]
                                mem[_16938 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16938 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16938 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16938 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16938 + (4 * ceil32(return_data.size)) + 260] = mem[_16938]
                                s = 0
                                t = _16938 + 32
                                u = _16938 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16938]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16938 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16938 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18813))
                                call address(_18813).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16938 + (4 * ceil32(return_data.size)) + (32 * mem[_16938]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22548 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22728 = mem[_22548]
                                require mem[_22548] <= test266151307()
                                require _22548 + return_data.size > _22548 + mem[_22548] + 31
                                _22908 = mem[_22548 + mem[_22548]]
                                require mem[_22548 + mem[_22548]] <= test266151307()
                                require (32 * mem[_22548 + mem[_22548]]) + 32 >= 0 and _22548 + ceil32(return_data.size) + (32 * mem[_22548 + mem[_22548]]) + 32 <= test266151307()
                                mem[64] = _22548 + ceil32(return_data.size) + (32 * mem[_22548 + mem[_22548]]) + 32
                                mem[_22548 + ceil32(return_data.size)] = _22908
                                require return_data.size >= _22728 + (32 * _22908) + 32
                                t = _22548 + _22728 + 32
                                u = _22548 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22908:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16938] - 1 < mem[_16938]
                                _25372 = mem[(32 * mem[_16938] - 1) + _16938 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25372))
                                staticcall address(_25372).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25788 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16938
                                s = mem[_25788] - ext_call.return_data[0]
                                continue 
                            mem[_16938 + (4 * ceil32(return_data.size)) + 100] = address(_17454)
                            mem[_16938 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17430))
                            call address(_17430).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17454), -1
                            mem[_16938 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16938 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11258 / 2) < mem[96]
                            _19616 = mem[(32 * idx - (_11258 / 2)) + 128]
                            mem[_16938 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16938 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16938 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16938 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16938 + (6 * ceil32(return_data.size)) + 260] = mem[_16938]
                            s = 0
                            t = _16938 + 32
                            u = _16938 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16938]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16938 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16938 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19616))
                            call address(_19616).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16938 + (6 * ceil32(return_data.size)) + (32 * mem[_16938]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22549 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22729 = mem[_22549]
                            require mem[_22549] <= test266151307()
                            require _22549 + return_data.size > _22549 + mem[_22549] + 31
                            _22909 = mem[_22549 + mem[_22549]]
                            require mem[_22549 + mem[_22549]] <= test266151307()
                            require (32 * mem[_22549 + mem[_22549]]) + 32 >= 0 and _22549 + ceil32(return_data.size) + (32 * mem[_22549 + mem[_22549]]) + 32 <= test266151307()
                            mem[64] = _22549 + ceil32(return_data.size) + (32 * mem[_22549 + mem[_22549]]) + 32
                            mem[_22549 + ceil32(return_data.size)] = _22909
                            require return_data.size >= _22729 + (32 * _22909) + 32
                            t = _22549 + _22729 + 32
                            u = _22549 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22909:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16938] - 1 < mem[_16938]
                            _25374 = mem[(32 * mem[_16938] - 1) + _16938 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25374))
                            staticcall address(_25374).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25789 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16938
                            s = mem[_25789] - ext_call.return_data[0]
                            continue 
                        _16940 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16940 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16940]
                        mem[_16940 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16940]
                        mem[_16940 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16940]
                        mem[_16940 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16940] - 1 < mem[_16940]
                        mem[_16940 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16940] - 1) + _16940 + 44 len 20])
                        staticcall mem[(32 * mem[_16940] - 1) + _16940 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16940 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16940 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16940]
                        _17478 = mem[_16940 + 32]
                        require idx + -(_11258 / 2) + 1 < mem[96]
                        _17506 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16940 + 44 len 20])
                            staticcall mem[_16940 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16940 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16940 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16940 + (2 * ceil32(return_data.size)) + 164] = address(_17506)
                            require ext_code.size(mem[_16940 + 44 len 20])
                            staticcall mem[_16940 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17506)
                            mem[_16940 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16940 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11258 / 2) + 1 < mem[96]
                                _18484 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                                mem[_16940 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16940 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16940 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16940 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16940 + (4 * ceil32(return_data.size)) + 292] = mem[_16940]
                                s = 0
                                t = _16940 + 32
                                u = _16940 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16940]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16940 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16940 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18484))
                                call address(_18484).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16940 + (4 * ceil32(return_data.size)) + (32 * mem[_16940]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22550 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22730 = mem[_22550]
                                require mem[_22550] <= test266151307()
                                require _22550 + return_data.size > _22550 + mem[_22550] + 31
                                _22910 = mem[_22550 + mem[_22550]]
                                require mem[_22550 + mem[_22550]] <= test266151307()
                                require (32 * mem[_22550 + mem[_22550]]) + 32 >= 0 and _22550 + ceil32(return_data.size) + (32 * mem[_22550 + mem[_22550]]) + 32 <= test266151307()
                                mem[64] = _22550 + ceil32(return_data.size) + (32 * mem[_22550 + mem[_22550]]) + 32
                                mem[_22550 + ceil32(return_data.size)] = _22910
                                require return_data.size >= _22730 + (32 * _22910) + 32
                                t = _22550 + _22730 + 32
                                u = _22550 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22910:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16940] - 1 < mem[_16940]
                                _25376 = mem[(32 * mem[_16940] - 1) + _16940 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25376))
                                staticcall address(_25376).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25790 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16940
                                s = mem[_25790] - ext_call.return_data[0]
                                continue 
                            mem[_16940 + (4 * ceil32(return_data.size)) + 132] = address(_17506)
                            mem[_16940 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17478))
                            call address(_17478).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17506), -1
                            mem[_16940 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16940 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11258 / 2) + 1 < mem[96]
                            _19216 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                            mem[_16940 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16940 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16940 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16940 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16940 + (6 * ceil32(return_data.size)) + 292] = mem[_16940]
                            s = 0
                            t = _16940 + 32
                            u = _16940 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16940]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16940 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16940 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19216))
                            call address(_19216).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16940 + (6 * ceil32(return_data.size)) + (32 * mem[_16940]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22551 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22731 = mem[_22551]
                            require mem[_22551] <= test266151307()
                            require _22551 + return_data.size > _22551 + mem[_22551] + 31
                            _22911 = mem[_22551 + mem[_22551]]
                            require mem[_22551 + mem[_22551]] <= test266151307()
                            require (32 * mem[_22551 + mem[_22551]]) + 32 >= 0 and _22551 + ceil32(return_data.size) + (32 * mem[_22551 + mem[_22551]]) + 32 <= test266151307()
                            mem[64] = _22551 + ceil32(return_data.size) + (32 * mem[_22551 + mem[_22551]]) + 32
                            mem[_22551 + ceil32(return_data.size)] = _22911
                            require return_data.size >= _22731 + (32 * _22911) + 32
                            t = _22551 + _22731 + 32
                            u = _22551 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22911:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16940] - 1 < mem[_16940]
                            _25378 = mem[(32 * mem[_16940] - 1) + _16940 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25378))
                            staticcall address(_25378).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25791 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16940
                            s = mem[_25791] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16940 + 44 len 20])
                            staticcall mem[_16940 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16940 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16940 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16940 + (2 * ceil32(return_data.size)) + 164] = address(_17506)
                            require ext_code.size(mem[_16940 + 44 len 20])
                            staticcall mem[_16940 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17506)
                            mem[_16940 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16940 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11258 / 2) + 1 < mem[96]
                                _18725 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                                mem[_16940 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16940 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16940 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16940 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16940 + (4 * ceil32(return_data.size)) + 292] = mem[_16940]
                                s = 0
                                t = _16940 + 32
                                u = _16940 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16940]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16940 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16940 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18725))
                                call address(_18725).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16940 + (4 * ceil32(return_data.size)) + (32 * mem[_16940]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22552 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22732 = mem[_22552]
                                require mem[_22552] <= test266151307()
                                require _22552 + return_data.size > _22552 + mem[_22552] + 31
                                _22912 = mem[_22552 + mem[_22552]]
                                require mem[_22552 + mem[_22552]] <= test266151307()
                                require (32 * mem[_22552 + mem[_22552]]) + 32 >= 0 and _22552 + ceil32(return_data.size) + (32 * mem[_22552 + mem[_22552]]) + 32 <= test266151307()
                                mem[64] = _22552 + ceil32(return_data.size) + (32 * mem[_22552 + mem[_22552]]) + 32
                                mem[_22552 + ceil32(return_data.size)] = _22912
                                require return_data.size >= _22732 + (32 * _22912) + 32
                                t = _22552 + _22732 + 32
                                u = _22552 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22912:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16940] - 1 < mem[_16940]
                                _25380 = mem[(32 * mem[_16940] - 1) + _16940 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25380))
                                staticcall address(_25380).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25792 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16940
                                s = mem[_25792] - ext_call.return_data[0]
                                continue 
                            mem[_16940 + (4 * ceil32(return_data.size)) + 132] = address(_17506)
                            mem[_16940 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17478))
                            call address(_17478).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17506), -1
                            mem[_16940 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16940 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11258 / 2) + 1 < mem[96]
                            _19520 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                            mem[_16940 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16940 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16940 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16940 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16940 + (6 * ceil32(return_data.size)) + 292] = mem[_16940]
                            s = 0
                            t = _16940 + 32
                            u = _16940 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16940]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16940 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16940 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19520))
                            call address(_19520).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16940 + (6 * ceil32(return_data.size)) + (32 * mem[_16940]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22553 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22733 = mem[_22553]
                            require mem[_22553] <= test266151307()
                            require _22553 + return_data.size > _22553 + mem[_22553] + 31
                            _22913 = mem[_22553 + mem[_22553]]
                            require mem[_22553 + mem[_22553]] <= test266151307()
                            require (32 * mem[_22553 + mem[_22553]]) + 32 >= 0 and _22553 + ceil32(return_data.size) + (32 * mem[_22553 + mem[_22553]]) + 32 <= test266151307()
                            mem[64] = _22553 + ceil32(return_data.size) + (32 * mem[_22553 + mem[_22553]]) + 32
                            mem[_22553 + ceil32(return_data.size)] = _22913
                            require return_data.size >= _22733 + (32 * _22913) + 32
                            t = _22553 + _22733 + 32
                            u = _22553 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22913:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16940] - 1 < mem[_16940]
                            _25382 = mem[(32 * mem[_16940] - 1) + _16940 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25382))
                            staticcall address(_25382).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25793 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16940
                            s = mem[_25793] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16940 + 44 len 20])
                        staticcall mem[_16940 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16940 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16940 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16940 + (2 * ceil32(return_data.size)) + 164] = address(_17506)
                        require ext_code.size(mem[_16940 + 44 len 20])
                        staticcall mem[_16940 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17506)
                        mem[_16940 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16940 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11258 / 2) + 1 < mem[96]
                            _19016 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                            mem[_16940 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16940 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16940 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16940 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16940 + (4 * ceil32(return_data.size)) + 292] = mem[_16940]
                            s = 0
                            t = _16940 + 32
                            u = _16940 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16940]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16940 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16940 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19016))
                            call address(_19016).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16940 + (4 * ceil32(return_data.size)) + (32 * mem[_16940]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22554 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22734 = mem[_22554]
                            require mem[_22554] <= test266151307()
                            require _22554 + return_data.size > _22554 + mem[_22554] + 31
                            _22914 = mem[_22554 + mem[_22554]]
                            require mem[_22554 + mem[_22554]] <= test266151307()
                            require (32 * mem[_22554 + mem[_22554]]) + 32 >= 0 and _22554 + ceil32(return_data.size) + (32 * mem[_22554 + mem[_22554]]) + 32 <= test266151307()
                            mem[64] = _22554 + ceil32(return_data.size) + (32 * mem[_22554 + mem[_22554]]) + 32
                            mem[_22554 + ceil32(return_data.size)] = _22914
                            require return_data.size >= _22734 + (32 * _22914) + 32
                            t = _22554 + _22734 + 32
                            u = _22554 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22914:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16940] - 1 < mem[_16940]
                            _25384 = mem[(32 * mem[_16940] - 1) + _16940 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25384))
                            staticcall address(_25384).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25794 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16940
                            s = mem[_25794] - ext_call.return_data[0]
                            continue 
                        mem[_16940 + (4 * ceil32(return_data.size)) + 132] = address(_17506)
                        mem[_16940 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17478))
                        call address(_17478).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17506), -1
                        mem[_16940 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16940 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11258 / 2) + 1 < mem[96]
                        _19816 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                        mem[_16940 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16940 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16940 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16940 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16940 + (6 * ceil32(return_data.size)) + 292] = mem[_16940]
                        s = 0
                        t = _16940 + 32
                        u = _16940 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16940]:
                            mem[u] = mem[t + 12 len 20]
                            _16788 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16940 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16940 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19816))
                        call address(_19816).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16940 + (6 * ceil32(return_data.size)) + (32 * mem[_16940]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22555 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22735 = mem[_22555]
                        require mem[_22555] <= test266151307()
                        require _22555 + return_data.size > _22555 + mem[_22555] + 31
                        _22915 = mem[_22555 + mem[_22555]]
                        require mem[_22555 + mem[_22555]] <= test266151307()
                        require (32 * mem[_22555 + mem[_22555]]) + 32 >= 0 and _22555 + ceil32(return_data.size) + (32 * mem[_22555 + mem[_22555]]) + 32 <= test266151307()
                        mem[64] = _22555 + ceil32(return_data.size) + (32 * mem[_22555 + mem[_22555]]) + 32
                        mem[_22555 + ceil32(return_data.size)] = _22915
                        require return_data.size >= _22735 + (32 * _22915) + 32
                        t = _22555 + _22735 + 32
                        u = _22555 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22915:
                            mem[u] = mem[t]
                            _16788 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16940] - 1 < mem[_16940]
                        _25386 = mem[(32 * mem[_16940] - 1) + _16940 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25386))
                        staticcall address(_25386).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25795 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16788 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16940
                        s = mem[_25795] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11258 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11258 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11258 / 2) + 1) + 140 len 20]:
                        require idx + -(_11258 / 2) + 1 < mem[96]
                        require idx - (_11258 / 2) < mem[96]
                        if mem[(32 * idx - (_11258 / 2)) + 140 len 20] != mem[(32 * idx + -(_11258 / 2) + 1) + 140 len 20]:
                            _17079 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_17079 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_17079]
                            mem[_17079 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_17079]
                            mem[_17079 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_17079] - 1 < mem[_17079]
                            mem[_17079 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_17079] - 1) + _17079 + 44 len 20])
                            staticcall mem[(32 * mem[_17079] - 1) + _17079 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17079 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17079 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_17079]
                            _17507 = mem[_17079 + 32]
                            require idx - (_11258 / 2) < mem[96]
                            _17532 = mem[(32 * idx - (_11258 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_17079 + 44 len 20])
                                staticcall mem[_17079 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17079 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17079 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17079 + (2 * ceil32(return_data.size)) + 132] = address(_17532)
                                require ext_code.size(mem[_17079 + 44 len 20])
                                staticcall mem[_17079 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17532)
                                mem[_17079 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17079 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11258 / 2) < mem[96]
                                    _18558 = mem[(32 * idx - (_11258 / 2)) + 128]
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 260] = mem[_17079]
                                    s = 0
                                    t = _17079 + 32
                                    u = _17079 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_17079]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16788 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18558))
                                    call address(_18558).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17079 + (4 * ceil32(return_data.size)) + (32 * mem[_17079]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22556 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22736 = mem[_22556]
                                    require mem[_22556] <= test266151307()
                                    require _22556 + return_data.size > _22556 + mem[_22556] + 31
                                    _22916 = mem[_22556 + mem[_22556]]
                                    require mem[_22556 + mem[_22556]] <= test266151307()
                                    require (32 * mem[_22556 + mem[_22556]]) + 32 >= 0 and _22556 + ceil32(return_data.size) + (32 * mem[_22556 + mem[_22556]]) + 32 <= test266151307()
                                    mem[64] = _22556 + ceil32(return_data.size) + (32 * mem[_22556 + mem[_22556]]) + 32
                                    mem[_22556 + ceil32(return_data.size)] = _22916
                                    require return_data.size >= _22736 + (32 * _22916) + 32
                                    t = _22556 + _22736 + 32
                                    u = _22556 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22916:
                                        mem[u] = mem[t]
                                        _16788 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17079] - 1 < mem[_17079]
                                    _25388 = mem[(32 * mem[_17079] - 1) + _17079 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25388))
                                    staticcall address(_25388).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25796 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16788 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17079
                                    s = mem[_25796] - ext_call.return_data[0]
                                    continue 
                                mem[_17079 + (4 * ceil32(return_data.size)) + 100] = address(_17532)
                                mem[_17079 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17507))
                                call address(_17507).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17532), -1
                                mem[_17079 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17079 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11258 / 2) < mem[96]
                                _19319 = mem[(32 * idx - (_11258 / 2)) + 128]
                                mem[_17079 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17079 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17079 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17079 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17079 + (6 * ceil32(return_data.size)) + 260] = mem[_17079]
                                s = 0
                                t = _17079 + 32
                                u = _17079 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_17079]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17079 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17079 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19319))
                                call address(_19319).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17079 + (6 * ceil32(return_data.size)) + (32 * mem[_17079]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22557 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22737 = mem[_22557]
                                require mem[_22557] <= test266151307()
                                require _22557 + return_data.size > _22557 + mem[_22557] + 31
                                _22917 = mem[_22557 + mem[_22557]]
                                require mem[_22557 + mem[_22557]] <= test266151307()
                                require (32 * mem[_22557 + mem[_22557]]) + 32 >= 0 and _22557 + ceil32(return_data.size) + (32 * mem[_22557 + mem[_22557]]) + 32 <= test266151307()
                                mem[64] = _22557 + ceil32(return_data.size) + (32 * mem[_22557 + mem[_22557]]) + 32
                                mem[_22557 + ceil32(return_data.size)] = _22917
                                require return_data.size >= _22737 + (32 * _22917) + 32
                                t = _22557 + _22737 + 32
                                u = _22557 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22917:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17079] - 1 < mem[_17079]
                                _25390 = mem[(32 * mem[_17079] - 1) + _17079 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25390))
                                staticcall address(_25390).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25797 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17079
                                s = mem[_25797] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_17079 + 44 len 20])
                                staticcall mem[_17079 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17079 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17079 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17079 + (2 * ceil32(return_data.size)) + 132] = address(_17532)
                                require ext_code.size(mem[_17079 + 44 len 20])
                                staticcall mem[_17079 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17532)
                                mem[_17079 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17079 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11258 / 2) < mem[96]
                                    _18819 = mem[(32 * idx - (_11258 / 2)) + 128]
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 260] = mem[_17079]
                                    s = 0
                                    t = _17079 + 32
                                    u = _17079 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_17079]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16788 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17079 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18819))
                                    call address(_18819).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17079 + (4 * ceil32(return_data.size)) + (32 * mem[_17079]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22558 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22738 = mem[_22558]
                                    require mem[_22558] <= test266151307()
                                    require _22558 + return_data.size > _22558 + mem[_22558] + 31
                                    _22918 = mem[_22558 + mem[_22558]]
                                    require mem[_22558 + mem[_22558]] <= test266151307()
                                    require (32 * mem[_22558 + mem[_22558]]) + 32 >= 0 and _22558 + ceil32(return_data.size) + (32 * mem[_22558 + mem[_22558]]) + 32 <= test266151307()
                                    mem[64] = _22558 + ceil32(return_data.size) + (32 * mem[_22558 + mem[_22558]]) + 32
                                    mem[_22558 + ceil32(return_data.size)] = _22918
                                    require return_data.size >= _22738 + (32 * _22918) + 32
                                    t = _22558 + _22738 + 32
                                    u = _22558 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22918:
                                        mem[u] = mem[t]
                                        _16788 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17079] - 1 < mem[_17079]
                                    _25392 = mem[(32 * mem[_17079] - 1) + _17079 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25392))
                                    staticcall address(_25392).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25798 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16788 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17079
                                    s = mem[_25798] - ext_call.return_data[0]
                                    continue 
                                mem[_17079 + (4 * ceil32(return_data.size)) + 100] = address(_17532)
                                mem[_17079 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17507))
                                call address(_17507).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17532), -1
                                mem[_17079 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17079 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11258 / 2) < mem[96]
                                _19622 = mem[(32 * idx - (_11258 / 2)) + 128]
                                mem[_17079 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17079 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17079 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17079 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17079 + (6 * ceil32(return_data.size)) + 260] = mem[_17079]
                                s = 0
                                t = _17079 + 32
                                u = _17079 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_17079]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17079 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17079 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19622))
                                call address(_19622).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17079 + (6 * ceil32(return_data.size)) + (32 * mem[_17079]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22559 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22739 = mem[_22559]
                                require mem[_22559] <= test266151307()
                                require _22559 + return_data.size > _22559 + mem[_22559] + 31
                                _22919 = mem[_22559 + mem[_22559]]
                                require mem[_22559 + mem[_22559]] <= test266151307()
                                require (32 * mem[_22559 + mem[_22559]]) + 32 >= 0 and _22559 + ceil32(return_data.size) + (32 * mem[_22559 + mem[_22559]]) + 32 <= test266151307()
                                mem[64] = _22559 + ceil32(return_data.size) + (32 * mem[_22559 + mem[_22559]]) + 32
                                mem[_22559 + ceil32(return_data.size)] = _22919
                                require return_data.size >= _22739 + (32 * _22919) + 32
                                t = _22559 + _22739 + 32
                                u = _22559 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22919:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17079] - 1 < mem[_17079]
                                _25394 = mem[(32 * mem[_17079] - 1) + _17079 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25394))
                                staticcall address(_25394).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25799 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17079
                                s = mem[_25799] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_17079 + 44 len 20])
                            staticcall mem[_17079 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17079 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17079 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17079 + (2 * ceil32(return_data.size)) + 132] = address(_17532)
                            require ext_code.size(mem[_17079 + 44 len 20])
                            staticcall mem[_17079 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17532)
                            mem[_17079 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17079 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11258 / 2) < mem[96]
                                _19107 = mem[(32 * idx - (_11258 / 2)) + 128]
                                mem[_17079 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17079 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17079 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17079 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17079 + (4 * ceil32(return_data.size)) + 260] = mem[_17079]
                                s = 0
                                t = _17079 + 32
                                u = _17079 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_17079]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17079 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17079 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19107))
                                call address(_19107).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17079 + (4 * ceil32(return_data.size)) + (32 * mem[_17079]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22560 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22740 = mem[_22560]
                                require mem[_22560] <= test266151307()
                                require _22560 + return_data.size > _22560 + mem[_22560] + 31
                                _22920 = mem[_22560 + mem[_22560]]
                                require mem[_22560 + mem[_22560]] <= test266151307()
                                require (32 * mem[_22560 + mem[_22560]]) + 32 >= 0 and _22560 + ceil32(return_data.size) + (32 * mem[_22560 + mem[_22560]]) + 32 <= test266151307()
                                mem[64] = _22560 + ceil32(return_data.size) + (32 * mem[_22560 + mem[_22560]]) + 32
                                mem[_22560 + ceil32(return_data.size)] = _22920
                                require return_data.size >= _22740 + (32 * _22920) + 32
                                t = _22560 + _22740 + 32
                                u = _22560 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22920:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17079] - 1 < mem[_17079]
                                _25396 = mem[(32 * mem[_17079] - 1) + _17079 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25396))
                                staticcall address(_25396).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25800 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17079
                                s = mem[_25800] - ext_call.return_data[0]
                                continue 
                            mem[_17079 + (4 * ceil32(return_data.size)) + 100] = address(_17532)
                            mem[_17079 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17507))
                            call address(_17507).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17532), -1
                            mem[_17079 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17079 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11258 / 2) < mem[96]
                            _19901 = mem[(32 * idx - (_11258 / 2)) + 128]
                            mem[_17079 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17079 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17079 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17079 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17079 + (6 * ceil32(return_data.size)) + 260] = mem[_17079]
                            s = 0
                            t = _17079 + 32
                            u = _17079 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_17079]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17079 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17079 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19901))
                            call address(_19901).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17079 + (6 * ceil32(return_data.size)) + (32 * mem[_17079]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22561 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22741 = mem[_22561]
                            require mem[_22561] <= test266151307()
                            require _22561 + return_data.size > _22561 + mem[_22561] + 31
                            _22921 = mem[_22561 + mem[_22561]]
                            require mem[_22561 + mem[_22561]] <= test266151307()
                            require (32 * mem[_22561 + mem[_22561]]) + 32 >= 0 and _22561 + ceil32(return_data.size) + (32 * mem[_22561 + mem[_22561]]) + 32 <= test266151307()
                            mem[64] = _22561 + ceil32(return_data.size) + (32 * mem[_22561 + mem[_22561]]) + 32
                            mem[_22561 + ceil32(return_data.size)] = _22921
                            require return_data.size >= _22741 + (32 * _22921) + 32
                            t = _22561 + _22741 + 32
                            u = _22561 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22921:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17079] - 1 < mem[_17079]
                            _25398 = mem[(32 * mem[_17079] - 1) + _17079 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25398))
                            staticcall address(_25398).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25801 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17079
                            s = mem[_25801] - ext_call.return_data[0]
                            continue 
                        _17081 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_17081 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_17081]
                        mem[_17081 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17081]
                        mem[_17081 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_17081]
                        mem[_17081 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_17081] - 1 < mem[_17081]
                        mem[_17081 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_17081] - 1) + _17081 + 44 len 20])
                        staticcall mem[(32 * mem[_17081] - 1) + _17081 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17081 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17081 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_17081]
                        _17552 = mem[_17081 + 32]
                        require idx + -(_11258 / 2) + 1 < mem[96]
                        _17562 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17081 + 44 len 20])
                            staticcall mem[_17081 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17081 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17081 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17081 + (2 * ceil32(return_data.size)) + 164] = address(_17562)
                            require ext_code.size(mem[_17081 + 44 len 20])
                            staticcall mem[_17081 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17562)
                            mem[_17081 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17081 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11258 / 2) + 1 < mem[96]
                                _18732 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                                mem[_17081 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17081 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17081 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17081 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17081 + (4 * ceil32(return_data.size)) + 292] = mem[_17081]
                                s = 0
                                t = _17081 + 32
                                u = _17081 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17081]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17081 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17081 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18732))
                                call address(_18732).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17081 + (4 * ceil32(return_data.size)) + (32 * mem[_17081]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22562 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22742 = mem[_22562]
                                require mem[_22562] <= test266151307()
                                require _22562 + return_data.size > _22562 + mem[_22562] + 31
                                _22922 = mem[_22562 + mem[_22562]]
                                require mem[_22562 + mem[_22562]] <= test266151307()
                                require (32 * mem[_22562 + mem[_22562]]) + 32 >= 0 and _22562 + ceil32(return_data.size) + (32 * mem[_22562 + mem[_22562]]) + 32 <= test266151307()
                                mem[64] = _22562 + ceil32(return_data.size) + (32 * mem[_22562 + mem[_22562]]) + 32
                                mem[_22562 + ceil32(return_data.size)] = _22922
                                require return_data.size >= _22742 + (32 * _22922) + 32
                                t = _22562 + _22742 + 32
                                u = _22562 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22922:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17081] - 1 < mem[_17081]
                                _25400 = mem[(32 * mem[_17081] - 1) + _17081 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25400))
                                staticcall address(_25400).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25802 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17081
                                s = mem[_25802] - ext_call.return_data[0]
                                continue 
                            mem[_17081 + (4 * ceil32(return_data.size)) + 132] = address(_17562)
                            mem[_17081 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17552))
                            call address(_17552).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17562), -1
                            mem[_17081 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17081 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11258 / 2) + 1 < mem[96]
                            _19528 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                            mem[_17081 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17081 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17081 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17081 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17081 + (6 * ceil32(return_data.size)) + 292] = mem[_17081]
                            s = 0
                            t = _17081 + 32
                            u = _17081 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17081]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17081 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17081 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19528))
                            call address(_19528).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17081 + (6 * ceil32(return_data.size)) + (32 * mem[_17081]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22563 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22743 = mem[_22563]
                            require mem[_22563] <= test266151307()
                            require _22563 + return_data.size > _22563 + mem[_22563] + 31
                            _22923 = mem[_22563 + mem[_22563]]
                            require mem[_22563 + mem[_22563]] <= test266151307()
                            require (32 * mem[_22563 + mem[_22563]]) + 32 >= 0 and _22563 + ceil32(return_data.size) + (32 * mem[_22563 + mem[_22563]]) + 32 <= test266151307()
                            mem[64] = _22563 + ceil32(return_data.size) + (32 * mem[_22563 + mem[_22563]]) + 32
                            mem[_22563 + ceil32(return_data.size)] = _22923
                            require return_data.size >= _22743 + (32 * _22923) + 32
                            t = _22563 + _22743 + 32
                            u = _22563 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22923:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17081] - 1 < mem[_17081]
                            _25402 = mem[(32 * mem[_17081] - 1) + _17081 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25402))
                            staticcall address(_25402).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25803 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17081
                            s = mem[_25803] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17081 + 44 len 20])
                            staticcall mem[_17081 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17081 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17081 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17081 + (2 * ceil32(return_data.size)) + 164] = address(_17562)
                            require ext_code.size(mem[_17081 + 44 len 20])
                            staticcall mem[_17081 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17562)
                            mem[_17081 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17081 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11258 / 2) + 1 < mem[96]
                                _19022 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                                mem[_17081 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17081 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17081 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17081 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17081 + (4 * ceil32(return_data.size)) + 292] = mem[_17081]
                                s = 0
                                t = _17081 + 32
                                u = _17081 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17081]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16788 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17081 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17081 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_19022))
                                call address(_19022).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17081 + (4 * ceil32(return_data.size)) + (32 * mem[_17081]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22564 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22744 = mem[_22564]
                                require mem[_22564] <= test266151307()
                                require _22564 + return_data.size > _22564 + mem[_22564] + 31
                                _22924 = mem[_22564 + mem[_22564]]
                                require mem[_22564 + mem[_22564]] <= test266151307()
                                require (32 * mem[_22564 + mem[_22564]]) + 32 >= 0 and _22564 + ceil32(return_data.size) + (32 * mem[_22564 + mem[_22564]]) + 32 <= test266151307()
                                mem[64] = _22564 + ceil32(return_data.size) + (32 * mem[_22564 + mem[_22564]]) + 32
                                mem[_22564 + ceil32(return_data.size)] = _22924
                                require return_data.size >= _22744 + (32 * _22924) + 32
                                t = _22564 + _22744 + 32
                                u = _22564 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22924:
                                    mem[u] = mem[t]
                                    _16788 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17081] - 1 < mem[_17081]
                                _25404 = mem[(32 * mem[_17081] - 1) + _17081 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25404))
                                staticcall address(_25404).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25804 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16788 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17081
                                s = mem[_25804] - ext_call.return_data[0]
                                continue 
                            mem[_17081 + (4 * ceil32(return_data.size)) + 132] = address(_17562)
                            mem[_17081 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17552))
                            call address(_17552).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17562), -1
                            mem[_17081 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17081 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11258 / 2) + 1 < mem[96]
                            _19822 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                            mem[_17081 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17081 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17081 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17081 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17081 + (6 * ceil32(return_data.size)) + 292] = mem[_17081]
                            s = 0
                            t = _17081 + 32
                            u = _17081 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17081]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17081 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17081 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19822))
                            call address(_19822).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17081 + (6 * ceil32(return_data.size)) + (32 * mem[_17081]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22565 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22745 = mem[_22565]
                            require mem[_22565] <= test266151307()
                            require _22565 + return_data.size > _22565 + mem[_22565] + 31
                            _22925 = mem[_22565 + mem[_22565]]
                            require mem[_22565 + mem[_22565]] <= test266151307()
                            require (32 * mem[_22565 + mem[_22565]]) + 32 >= 0 and _22565 + ceil32(return_data.size) + (32 * mem[_22565 + mem[_22565]]) + 32 <= test266151307()
                            mem[64] = _22565 + ceil32(return_data.size) + (32 * mem[_22565 + mem[_22565]]) + 32
                            mem[_22565 + ceil32(return_data.size)] = _22925
                            require return_data.size >= _22745 + (32 * _22925) + 32
                            t = _22565 + _22745 + 32
                            u = _22565 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22925:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17081] - 1 < mem[_17081]
                            _25406 = mem[(32 * mem[_17081] - 1) + _17081 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25406))
                            staticcall address(_25406).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17081
                            s = mem[_25805] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17081 + 44 len 20])
                        staticcall mem[_17081 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17081 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17081 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17081 + (2 * ceil32(return_data.size)) + 164] = address(_17562)
                        require ext_code.size(mem[_17081 + 44 len 20])
                        staticcall mem[_17081 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17562)
                        mem[_17081 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17081 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11258 / 2) + 1 < mem[96]
                            _19324 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                            mem[_17081 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17081 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17081 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17081 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17081 + (4 * ceil32(return_data.size)) + 292] = mem[_17081]
                            s = 0
                            t = _17081 + 32
                            u = _17081 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17081]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17081 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17081 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19324))
                            call address(_19324).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17081 + (4 * ceil32(return_data.size)) + (32 * mem[_17081]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22566 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22746 = mem[_22566]
                            require mem[_22566] <= test266151307()
                            require _22566 + return_data.size > _22566 + mem[_22566] + 31
                            _22926 = mem[_22566 + mem[_22566]]
                            require mem[_22566 + mem[_22566]] <= test266151307()
                            require (32 * mem[_22566 + mem[_22566]]) + 32 >= 0 and _22566 + ceil32(return_data.size) + (32 * mem[_22566 + mem[_22566]]) + 32 <= test266151307()
                            mem[64] = _22566 + ceil32(return_data.size) + (32 * mem[_22566 + mem[_22566]]) + 32
                            mem[_22566 + ceil32(return_data.size)] = _22926
                            require return_data.size >= _22746 + (32 * _22926) + 32
                            t = _22566 + _22746 + 32
                            u = _22566 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22926:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17081] - 1 < mem[_17081]
                            _25408 = mem[(32 * mem[_17081] - 1) + _17081 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25408))
                            staticcall address(_25408).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25806 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17081
                            s = mem[_25806] - ext_call.return_data[0]
                            continue 
                        mem[_17081 + (4 * ceil32(return_data.size)) + 132] = address(_17562)
                        mem[_17081 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17552))
                        call address(_17552).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17562), -1
                        mem[_17081 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17081 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11258 / 2) + 1 < mem[96]
                        _20079 = mem[(32 * idx + -(_11258 / 2) + 1) + 128]
                        mem[_17081 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17081 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17081 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17081 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17081 + (6 * ceil32(return_data.size)) + 292] = mem[_17081]
                        s = 0
                        t = _17081 + 32
                        u = _17081 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17081]:
                            mem[u] = mem[t + 12 len 20]
                            _16788 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17081 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17081 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_20079))
                        call address(_20079).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17081 + (6 * ceil32(return_data.size)) + (32 * mem[_17081]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22567 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22747 = mem[_22567]
                        require mem[_22567] <= test266151307()
                        require _22567 + return_data.size > _22567 + mem[_22567] + 31
                        _22927 = mem[_22567 + mem[_22567]]
                        require mem[_22567 + mem[_22567]] <= test266151307()
                        require (32 * mem[_22567 + mem[_22567]]) + 32 >= 0 and _22567 + ceil32(return_data.size) + (32 * mem[_22567 + mem[_22567]]) + 32 <= test266151307()
                        mem[64] = _22567 + ceil32(return_data.size) + (32 * mem[_22567 + mem[_22567]]) + 32
                        mem[_22567 + ceil32(return_data.size)] = _22927
                        require return_data.size >= _22747 + (32 * _22927) + 32
                        t = _22567 + _22747 + 32
                        u = _22567 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22927:
                            mem[u] = mem[t]
                            _16788 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17081] - 1 < mem[_17081]
                        _25410 = mem[(32 * mem[_17081] - 1) + _17081 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25410))
                        staticcall address(_25410).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25807 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16788 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17081
                        s = mem[_25807] - ext_call.return_data[0]
                        continue 
                    _16943 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16943 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16943]
                    mem[_16943 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16943]
                    mem[_16943 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16943]
                    mem[_16943 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16943]
                    mem[_16943 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16943] - 1 < mem[_16943]
                    mem[_16943 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16943] - 1) + _16943 + 44 len 20])
                    staticcall mem[(32 * mem[_16943] - 1) + _16943 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16943 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16943 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16943]
                    _17534 = mem[_16943 + 32]
                    require idx + -(_11258 / 2) + 2 < mem[96]
                    _17554 = mem[(32 * idx + -(_11258 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16943 + 44 len 20])
                        staticcall mem[_16943 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16943 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16943 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16943 + (2 * ceil32(return_data.size)) + 196] = address(_17554)
                        require ext_code.size(mem[_16943 + 44 len 20])
                        staticcall mem[_16943 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17554)
                        mem[_16943 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16943 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11258 / 2) + 2 < mem[96]
                            _18644 = mem[(32 * idx + -(_11258 / 2) + 2) + 128]
                            mem[_16943 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16943 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16943 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16943 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16943 + (4 * ceil32(return_data.size)) + 324] = mem[_16943]
                            s = 0
                            t = _16943 + 32
                            u = _16943 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16943]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16943 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16943 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18644))
                            call address(_18644).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16943 + (4 * ceil32(return_data.size)) + (32 * mem[_16943]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22568 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22748 = mem[_22568]
                            require mem[_22568] <= test266151307()
                            require _22568 + return_data.size > _22568 + mem[_22568] + 31
                            _22928 = mem[_22568 + mem[_22568]]
                            require mem[_22568 + mem[_22568]] <= test266151307()
                            require (32 * mem[_22568 + mem[_22568]]) + 32 >= 0 and _22568 + ceil32(return_data.size) + (32 * mem[_22568 + mem[_22568]]) + 32 <= test266151307()
                            mem[64] = _22568 + ceil32(return_data.size) + (32 * mem[_22568 + mem[_22568]]) + 32
                            mem[_22568 + ceil32(return_data.size)] = _22928
                            require return_data.size >= _22748 + (32 * _22928) + 32
                            t = _22568 + _22748 + 32
                            u = _22568 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22928:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16943] - 1 < mem[_16943]
                            _25412 = mem[(32 * mem[_16943] - 1) + _16943 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25412))
                            staticcall address(_25412).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25808 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16943
                            s = mem[_25808] - ext_call.return_data[0]
                            continue 
                        mem[_16943 + (4 * ceil32(return_data.size)) + 164] = address(_17554)
                        mem[_16943 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17534))
                        call address(_17534).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17554), -1
                        mem[_16943 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16943 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11258 / 2) + 2 < mem[96]
                        _19427 = mem[(32 * idx + -(_11258 / 2) + 2) + 128]
                        mem[_16943 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16943 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16943 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16943 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16943 + (6 * ceil32(return_data.size)) + 324] = mem[_16943]
                        s = 0
                        t = _16943 + 32
                        u = _16943 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16943]:
                            mem[u] = mem[t + 12 len 20]
                            _16788 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16943 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16943 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19427))
                        call address(_19427).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16943 + (6 * ceil32(return_data.size)) + (32 * mem[_16943]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22569 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22749 = mem[_22569]
                        require mem[_22569] <= test266151307()
                        require _22569 + return_data.size > _22569 + mem[_22569] + 31
                        _22929 = mem[_22569 + mem[_22569]]
                        require mem[_22569 + mem[_22569]] <= test266151307()
                        require (32 * mem[_22569 + mem[_22569]]) + 32 >= 0 and _22569 + ceil32(return_data.size) + (32 * mem[_22569 + mem[_22569]]) + 32 <= test266151307()
                        mem[64] = _22569 + ceil32(return_data.size) + (32 * mem[_22569 + mem[_22569]]) + 32
                        mem[_22569 + ceil32(return_data.size)] = _22929
                        require return_data.size >= _22749 + (32 * _22929) + 32
                        t = _22569 + _22749 + 32
                        u = _22569 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22929:
                            mem[u] = mem[t]
                            _16788 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16943] - 1 < mem[_16943]
                        _25414 = mem[(32 * mem[_16943] - 1) + _16943 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25414))
                        staticcall address(_25414).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25809 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16788 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16943
                        s = mem[_25809] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16943 + 44 len 20])
                        staticcall mem[_16943 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16943 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16943 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16943 + (2 * ceil32(return_data.size)) + 196] = address(_17554)
                        require ext_code.size(mem[_16943 + 44 len 20])
                        staticcall mem[_16943 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17554)
                        mem[_16943 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16943 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11258 / 2) + 2 < mem[96]
                            _18919 = mem[(32 * idx + -(_11258 / 2) + 2) + 128]
                            mem[_16943 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16943 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16943 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16943 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16943 + (4 * ceil32(return_data.size)) + 324] = mem[_16943]
                            s = 0
                            t = _16943 + 32
                            u = _16943 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16943]:
                                mem[u] = mem[t + 12 len 20]
                                _16788 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16943 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16943 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18919))
                            call address(_18919).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16943 + (4 * ceil32(return_data.size)) + (32 * mem[_16943]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22570 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22750 = mem[_22570]
                            require mem[_22570] <= test266151307()
                            require _22570 + return_data.size > _22570 + mem[_22570] + 31
                            _22930 = mem[_22570 + mem[_22570]]
                            require mem[_22570 + mem[_22570]] <= test266151307()
                            require (32 * mem[_22570 + mem[_22570]]) + 32 >= 0 and _22570 + ceil32(return_data.size) + (32 * mem[_22570 + mem[_22570]]) + 32 <= test266151307()
                            mem[64] = _22570 + ceil32(return_data.size) + (32 * mem[_22570 + mem[_22570]]) + 32
                            mem[_22570 + ceil32(return_data.size)] = _22930
                            require return_data.size >= _22750 + (32 * _22930) + 32
                            t = _22570 + _22750 + 32
                            u = _22570 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22930:
                                mem[u] = mem[t]
                                _16788 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16943] - 1 < mem[_16943]
                            _25416 = mem[(32 * mem[_16943] - 1) + _16943 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25416))
                            staticcall address(_25416).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25810 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16788 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16943
                            s = mem[_25810] - ext_call.return_data[0]
                            continue 
                        mem[_16943 + (4 * ceil32(return_data.size)) + 164] = address(_17554)
                        mem[_16943 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17534))
                        call address(_17534).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17554), -1
                        mem[_16943 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16943 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11258 / 2) + 2 < mem[96]
                        _19724 = mem[(32 * idx + -(_11258 / 2) + 2) + 128]
                        mem[_16943 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16943 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16943 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16943 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16943 + (6 * ceil32(return_data.size)) + 324] = mem[_16943]
                        s = 0
                        t = _16943 + 32
                        u = _16943 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16943]:
                            mem[u] = mem[t + 12 len 20]
                            _16788 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16943 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16943 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19724))
                        call address(_19724).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16943 + (6 * ceil32(return_data.size)) + (32 * mem[_16943]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22571 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22751 = mem[_22571]
                        require mem[_22571] <= test266151307()
                        require _22571 + return_data.size > _22571 + mem[_22571] + 31
                        _22931 = mem[_22571 + mem[_22571]]
                        require mem[_22571 + mem[_22571]] <= test266151307()
                        require (32 * mem[_22571 + mem[_22571]]) + 32 >= 0 and _22571 + ceil32(return_data.size) + (32 * mem[_22571 + mem[_22571]]) + 32 <= test266151307()
                        mem[64] = _22571 + ceil32(return_data.size) + (32 * mem[_22571 + mem[_22571]]) + 32
                        mem[_22571 + ceil32(return_data.size)] = _22931
                        require return_data.size >= _22751 + (32 * _22931) + 32
                        t = _22571 + _22751 + 32
                        u = _22571 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22931:
                            mem[u] = mem[t]
                            _16788 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16943] - 1 < mem[_16943]
                        _25418 = mem[(32 * mem[_16943] - 1) + _16943 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25418))
                        staticcall address(_25418).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25811 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16788 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16943
                        s = mem[_25811] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16943 + 44 len 20])
                    staticcall mem[_16943 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16943 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16943 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16943 + (2 * ceil32(return_data.size)) + 196] = address(_17554)
                    require ext_code.size(mem[_16943 + 44 len 20])
                    staticcall mem[_16943 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17554)
                    mem[_16943 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16943 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11258 / 2) + 2 < mem[96]
                        _19227 = mem[(32 * idx + -(_11258 / 2) + 2) + 128]
                        mem[_16943 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16943 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16943 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16943 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16943 + (4 * ceil32(return_data.size)) + 324] = mem[_16943]
                        s = 0
                        t = _16943 + 32
                        u = _16943 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16943]:
                            mem[u] = mem[t + 12 len 20]
                            _16788 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16943 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16943 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19227))
                        call address(_19227).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16943 + (4 * ceil32(return_data.size)) + (32 * mem[_16943]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22572 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22752 = mem[_22572]
                        require mem[_22572] <= test266151307()
                        require _22572 + return_data.size > _22572 + mem[_22572] + 31
                        _22932 = mem[_22572 + mem[_22572]]
                        require mem[_22572 + mem[_22572]] <= test266151307()
                        require (32 * mem[_22572 + mem[_22572]]) + 32 >= 0 and _22572 + ceil32(return_data.size) + (32 * mem[_22572 + mem[_22572]]) + 32 <= test266151307()
                        mem[64] = _22572 + ceil32(return_data.size) + (32 * mem[_22572 + mem[_22572]]) + 32
                        mem[_22572 + ceil32(return_data.size)] = _22932
                        require return_data.size >= _22752 + (32 * _22932) + 32
                        t = _22572 + _22752 + 32
                        u = _22572 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22932:
                            mem[u] = mem[t]
                            _16788 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16943] - 1 < mem[_16943]
                        _25420 = mem[(32 * mem[_16943] - 1) + _16943 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25420))
                        staticcall address(_25420).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25812 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16788 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16943
                        s = mem[_25812] - ext_call.return_data[0]
                        continue 
                    mem[_16943 + (4 * ceil32(return_data.size)) + 164] = address(_17554)
                    mem[_16943 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17534))
                    call address(_17534).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17554), -1
                    mem[_16943 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16943 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11258 / 2) + 2 < mem[96]
                    _20000 = mem[(32 * idx + -(_11258 / 2) + 2) + 128]
                    mem[_16943 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16943 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16943 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16943 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16943 + (6 * ceil32(return_data.size)) + 324] = mem[_16943]
                    s = 0
                    t = _16943 + 32
                    u = _16943 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16943]:
                        mem[u] = mem[t + 12 len 20]
                        _16788 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16943 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16943 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_20000))
                    call address(_20000).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16943 + (6 * ceil32(return_data.size)) + (32 * mem[_16943]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22573 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22753 = mem[_22573]
                    require mem[_22573] <= test266151307()
                    require _22573 + return_data.size > _22573 + mem[_22573] + 31
                    _22933 = mem[_22573 + mem[_22573]]
                    require mem[_22573 + mem[_22573]] <= test266151307()
                    require (32 * mem[_22573 + mem[_22573]]) + 32 >= 0 and _22573 + ceil32(return_data.size) + (32 * mem[_22573 + mem[_22573]]) + 32 <= test266151307()
                    mem[64] = _22573 + ceil32(return_data.size) + (32 * mem[_22573 + mem[_22573]]) + 32
                    mem[_22573 + ceil32(return_data.size)] = _22933
                    require return_data.size >= _22753 + (32 * _22933) + 32
                    t = _22573 + _22753 + 32
                    u = _22573 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22933:
                        mem[u] = mem[t]
                        _16788 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16943] - 1 < mem[_16943]
                    _25422 = mem[(32 * mem[_16943] - 1) + _16943 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25422))
                    staticcall address(_25422).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25813 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16788 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16943
                    s = mem[_25813] - ext_call.return_data[0]
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                _16824 = mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160]
                require _11258 / 2 < mem[96]
                _16844 = mem[(16 * Mask(251, 1, _11258)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16844))
                staticcall address(_16844).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16906 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16906] < _11336 - cd[4] + _16824:
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11263 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11293 = mem[_11263]
                    require mem[_11263] == mem[_11263 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11340 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11340)
                    require ext_code.size(address(_11293))
                    staticcall address(_11293).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11340)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11401 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11431 = mem[_11401]
                    require mem[_11401] == mem[_11401 + 12 len 20]
                    require ext_code.size(mem[_11401 + 12 len 20])
                    staticcall mem[_11401 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11623 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11785 = mem[_11623]
                    require mem[_11623] == mem[_11623 + 18 len 14]
                    _11905 = mem[_11623 + 32]
                    require mem[_11623 + 32] == mem[_11623 + 50 len 14]
                    require mem[_11623 + 64] == mem[_11623 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11623 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11623 + 50 len 14] / (997 * s) + (1000 * mem[_11623 + 18 len 14])
                            idx = idx + 1
                            s = _11431
                            s = 997 * s * Mask(112, 0, _11905) / (997 * s) + (1000 * Mask(112, 0, _11785))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11623 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11623 + 50 len 14] / (997 * s) + (1000 * mem[_11623 + 18 len 14])
                            idx = idx + 1
                            s = _11431
                            s = 997 * s * Mask(112, 0, _11905) / (997 * s) + (1000 * Mask(112, 0, _11785))
                            continue 
                    require (997 * s) + (1000 * mem[_11623 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11623 + 18 len 14] / (997 * s) + (1000 * mem[_11623 + 50 len 14])
                    idx = idx + 1
                    s = _11431
                    s = 997 * s * Mask(112, 0, _11785) / (997 * s) + (1000 * Mask(112, 0, _11905))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11261 = mem[96]
                require mem[96] / 2 < mem[96]
                _11290 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11290))
                staticcall address(_11290).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11310 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11339 = mem[_11310]
                _16789 = mem[96]
                idx = _11261 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16789 - 1:
                    require idx + -(_11261 / 2) + 1 < mem[96]
                    require idx - (_11261 / 2) < mem[96]
                    require idx + -(_11261 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11261 / 2)) + 140 len 20] != mem[(32 * idx + -(_11261 / 2) + 1) + 140 len 20]:
                        require idx - (_11261 / 2) < mem[96]
                        if mem[(32 * idx - (_11261 / 2)) + 140 len 20] != mem[(32 * idx + -(_11261 / 2) + 1) + 140 len 20]:
                            _16945 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16945 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16945]
                            mem[_16945 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16945]
                            mem[_16945 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16945] - 1 < mem[_16945]
                            mem[_16945 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16945] - 1) + _16945 + 44 len 20])
                            staticcall mem[(32 * mem[_16945] - 1) + _16945 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16945 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16945 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16945]
                            _17434 = mem[_16945 + 32]
                            require idx - (_11261 / 2) < mem[96]
                            _17458 = mem[(32 * idx - (_11261 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16945 + 44 len 20])
                                staticcall mem[_16945 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16945 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16945 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16945 + (2 * ceil32(return_data.size)) + 132] = address(_17458)
                                require ext_code.size(mem[_16945 + 44 len 20])
                                staticcall mem[_16945 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17458)
                                mem[_16945 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16945 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11261 / 2) < mem[96]
                                    _18370 = mem[(32 * idx - (_11261 / 2)) + 128]
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 260] = mem[_16945]
                                    s = 0
                                    t = _16945 + 32
                                    u = _16945 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16945]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16789 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18370))
                                    call address(_18370).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16945 + (4 * ceil32(return_data.size)) + (32 * mem[_16945]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22574 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22754 = mem[_22574]
                                    require mem[_22574] <= test266151307()
                                    require _22574 + return_data.size > _22574 + mem[_22574] + 31
                                    _22934 = mem[_22574 + mem[_22574]]
                                    require mem[_22574 + mem[_22574]] <= test266151307()
                                    require (32 * mem[_22574 + mem[_22574]]) + 32 >= 0 and _22574 + ceil32(return_data.size) + (32 * mem[_22574 + mem[_22574]]) + 32 <= test266151307()
                                    mem[64] = _22574 + ceil32(return_data.size) + (32 * mem[_22574 + mem[_22574]]) + 32
                                    mem[_22574 + ceil32(return_data.size)] = _22934
                                    require return_data.size >= _22754 + (32 * _22934) + 32
                                    t = _22574 + _22754 + 32
                                    u = _22574 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22934:
                                        mem[u] = mem[t]
                                        _16789 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16945] - 1 < mem[_16945]
                                    _25424 = mem[(32 * mem[_16945] - 1) + _16945 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25424))
                                    staticcall address(_25424).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25814 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16789 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16945
                                    s = mem[_25814] - ext_call.return_data[0]
                                    continue 
                                mem[_16945 + (4 * ceil32(return_data.size)) + 100] = address(_17458)
                                mem[_16945 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17434))
                                call address(_17434).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17458), -1
                                mem[_16945 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16945 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11261 / 2) < mem[96]
                                _19029 = mem[(32 * idx - (_11261 / 2)) + 128]
                                mem[_16945 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16945 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16945 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16945 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16945 + (6 * ceil32(return_data.size)) + 260] = mem[_16945]
                                s = 0
                                t = _16945 + 32
                                u = _16945 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16945]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16789 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16945 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16945 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19029))
                                call address(_19029).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16945 + (6 * ceil32(return_data.size)) + (32 * mem[_16945]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22575 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22755 = mem[_22575]
                                require mem[_22575] <= test266151307()
                                require _22575 + return_data.size > _22575 + mem[_22575] + 31
                                _22935 = mem[_22575 + mem[_22575]]
                                require mem[_22575 + mem[_22575]] <= test266151307()
                                require (32 * mem[_22575 + mem[_22575]]) + 32 >= 0 and _22575 + ceil32(return_data.size) + (32 * mem[_22575 + mem[_22575]]) + 32 <= test266151307()
                                mem[64] = _22575 + ceil32(return_data.size) + (32 * mem[_22575 + mem[_22575]]) + 32
                                mem[_22575 + ceil32(return_data.size)] = _22935
                                require return_data.size >= _22755 + (32 * _22935) + 32
                                t = _22575 + _22755 + 32
                                u = _22575 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22935:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16945] - 1 < mem[_16945]
                                _25426 = mem[(32 * mem[_16945] - 1) + _16945 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25426))
                                staticcall address(_25426).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25815 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16945
                                s = mem[_25815] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16945 + 44 len 20])
                                staticcall mem[_16945 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16945 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16945 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16945 + (2 * ceil32(return_data.size)) + 132] = address(_17458)
                                require ext_code.size(mem[_16945 + 44 len 20])
                                staticcall mem[_16945 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17458)
                                mem[_16945 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16945 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11261 / 2) < mem[96]
                                    _18566 = mem[(32 * idx - (_11261 / 2)) + 128]
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 260] = mem[_16945]
                                    s = 0
                                    t = _16945 + 32
                                    u = _16945 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16945]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16789 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16945 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18566))
                                    call address(_18566).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16945 + (4 * ceil32(return_data.size)) + (32 * mem[_16945]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22576 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22756 = mem[_22576]
                                    require mem[_22576] <= test266151307()
                                    require _22576 + return_data.size > _22576 + mem[_22576] + 31
                                    _22936 = mem[_22576 + mem[_22576]]
                                    require mem[_22576 + mem[_22576]] <= test266151307()
                                    require (32 * mem[_22576 + mem[_22576]]) + 32 >= 0 and _22576 + ceil32(return_data.size) + (32 * mem[_22576 + mem[_22576]]) + 32 <= test266151307()
                                    mem[64] = _22576 + ceil32(return_data.size) + (32 * mem[_22576 + mem[_22576]]) + 32
                                    mem[_22576 + ceil32(return_data.size)] = _22936
                                    require return_data.size >= _22756 + (32 * _22936) + 32
                                    t = _22576 + _22756 + 32
                                    u = _22576 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22936:
                                        mem[u] = mem[t]
                                        _16789 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16945] - 1 < mem[_16945]
                                    _25428 = mem[(32 * mem[_16945] - 1) + _16945 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25428))
                                    staticcall address(_25428).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25816 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16789 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16945
                                    s = mem[_25816] - ext_call.return_data[0]
                                    continue 
                                mem[_16945 + (4 * ceil32(return_data.size)) + 100] = address(_17458)
                                mem[_16945 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17434))
                                call address(_17434).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17458), -1
                                mem[_16945 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16945 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11261 / 2) < mem[96]
                                _19331 = mem[(32 * idx - (_11261 / 2)) + 128]
                                mem[_16945 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16945 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16945 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16945 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16945 + (6 * ceil32(return_data.size)) + 260] = mem[_16945]
                                s = 0
                                t = _16945 + 32
                                u = _16945 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16945]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16789 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16945 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16945 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19331))
                                call address(_19331).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16945 + (6 * ceil32(return_data.size)) + (32 * mem[_16945]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22577 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22757 = mem[_22577]
                                require mem[_22577] <= test266151307()
                                require _22577 + return_data.size > _22577 + mem[_22577] + 31
                                _22937 = mem[_22577 + mem[_22577]]
                                require mem[_22577 + mem[_22577]] <= test266151307()
                                require (32 * mem[_22577 + mem[_22577]]) + 32 >= 0 and _22577 + ceil32(return_data.size) + (32 * mem[_22577 + mem[_22577]]) + 32 <= test266151307()
                                mem[64] = _22577 + ceil32(return_data.size) + (32 * mem[_22577 + mem[_22577]]) + 32
                                mem[_22577 + ceil32(return_data.size)] = _22937
                                require return_data.size >= _22757 + (32 * _22937) + 32
                                t = _22577 + _22757 + 32
                                u = _22577 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22937:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16945] - 1 < mem[_16945]
                                _25430 = mem[(32 * mem[_16945] - 1) + _16945 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25430))
                                staticcall address(_25430).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25817 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16945
                                s = mem[_25817] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16945 + 44 len 20])
                            staticcall mem[_16945 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16945 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16945 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16945 + (2 * ceil32(return_data.size)) + 132] = address(_17458)
                            require ext_code.size(mem[_16945 + 44 len 20])
                            staticcall mem[_16945 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17458)
                            mem[_16945 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16945 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11261 / 2) < mem[96]
                                _18828 = mem[(32 * idx - (_11261 / 2)) + 128]
                                mem[_16945 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16945 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16945 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16945 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16945 + (4 * ceil32(return_data.size)) + 260] = mem[_16945]
                                s = 0
                                t = _16945 + 32
                                u = _16945 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16945]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16789 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16945 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16945 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18828))
                                call address(_18828).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16945 + (4 * ceil32(return_data.size)) + (32 * mem[_16945]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22578 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22758 = mem[_22578]
                                require mem[_22578] <= test266151307()
                                require _22578 + return_data.size > _22578 + mem[_22578] + 31
                                _22938 = mem[_22578 + mem[_22578]]
                                require mem[_22578 + mem[_22578]] <= test266151307()
                                require (32 * mem[_22578 + mem[_22578]]) + 32 >= 0 and _22578 + ceil32(return_data.size) + (32 * mem[_22578 + mem[_22578]]) + 32 <= test266151307()
                                mem[64] = _22578 + ceil32(return_data.size) + (32 * mem[_22578 + mem[_22578]]) + 32
                                mem[_22578 + ceil32(return_data.size)] = _22938
                                require return_data.size >= _22758 + (32 * _22938) + 32
                                t = _22578 + _22758 + 32
                                u = _22578 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22938:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16945] - 1 < mem[_16945]
                                _25432 = mem[(32 * mem[_16945] - 1) + _16945 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25432))
                                staticcall address(_25432).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25818 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16945
                                s = mem[_25818] - ext_call.return_data[0]
                                continue 
                            mem[_16945 + (4 * ceil32(return_data.size)) + 100] = address(_17458)
                            mem[_16945 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17434))
                            call address(_17434).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17458), -1
                            mem[_16945 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16945 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11261 / 2) < mem[96]
                            _19632 = mem[(32 * idx - (_11261 / 2)) + 128]
                            mem[_16945 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16945 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16945 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16945 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16945 + (6 * ceil32(return_data.size)) + 260] = mem[_16945]
                            s = 0
                            t = _16945 + 32
                            u = _16945 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16945]:
                                mem[u] = mem[t + 12 len 20]
                                _16789 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16945 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16945 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19632))
                            call address(_19632).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16945 + (6 * ceil32(return_data.size)) + (32 * mem[_16945]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22579 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22759 = mem[_22579]
                            require mem[_22579] <= test266151307()
                            require _22579 + return_data.size > _22579 + mem[_22579] + 31
                            _22939 = mem[_22579 + mem[_22579]]
                            require mem[_22579 + mem[_22579]] <= test266151307()
                            require (32 * mem[_22579 + mem[_22579]]) + 32 >= 0 and _22579 + ceil32(return_data.size) + (32 * mem[_22579 + mem[_22579]]) + 32 <= test266151307()
                            mem[64] = _22579 + ceil32(return_data.size) + (32 * mem[_22579 + mem[_22579]]) + 32
                            mem[_22579 + ceil32(return_data.size)] = _22939
                            require return_data.size >= _22759 + (32 * _22939) + 32
                            t = _22579 + _22759 + 32
                            u = _22579 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22939:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16945] - 1 < mem[_16945]
                            _25434 = mem[(32 * mem[_16945] - 1) + _16945 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25434))
                            staticcall address(_25434).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25819 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16945
                            s = mem[_25819] - ext_call.return_data[0]
                            continue 
                        _16947 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16947 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16947]
                        mem[_16947 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16947]
                        mem[_16947 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16947]
                        mem[_16947 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16947] - 1 < mem[_16947]
                        mem[_16947 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16947] - 1) + _16947 + 44 len 20])
                        staticcall mem[(32 * mem[_16947] - 1) + _16947 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16947 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16947 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16947]
                        _17482 = mem[_16947 + 32]
                        require idx + -(_11261 / 2) + 1 < mem[96]
                        _17511 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16947 + 44 len 20])
                            staticcall mem[_16947 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16947 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16947 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16947 + (2 * ceil32(return_data.size)) + 164] = address(_17511)
                            require ext_code.size(mem[_16947 + 44 len 20])
                            staticcall mem[_16947 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17511)
                            mem[_16947 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16947 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11261 / 2) + 1 < mem[96]
                                _18497 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                                mem[_16947 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16947 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16947 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16947 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16947 + (4 * ceil32(return_data.size)) + 292] = mem[_16947]
                                s = 0
                                t = _16947 + 32
                                u = _16947 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16947]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16789 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16947 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16947 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18497))
                                call address(_18497).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16947 + (4 * ceil32(return_data.size)) + (32 * mem[_16947]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22580 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22760 = mem[_22580]
                                require mem[_22580] <= test266151307()
                                require _22580 + return_data.size > _22580 + mem[_22580] + 31
                                _22940 = mem[_22580 + mem[_22580]]
                                require mem[_22580 + mem[_22580]] <= test266151307()
                                require (32 * mem[_22580 + mem[_22580]]) + 32 >= 0 and _22580 + ceil32(return_data.size) + (32 * mem[_22580 + mem[_22580]]) + 32 <= test266151307()
                                mem[64] = _22580 + ceil32(return_data.size) + (32 * mem[_22580 + mem[_22580]]) + 32
                                mem[_22580 + ceil32(return_data.size)] = _22940
                                require return_data.size >= _22760 + (32 * _22940) + 32
                                t = _22580 + _22760 + 32
                                u = _22580 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22940:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16947] - 1 < mem[_16947]
                                _25436 = mem[(32 * mem[_16947] - 1) + _16947 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25436))
                                staticcall address(_25436).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25820 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16947
                                s = mem[_25820] - ext_call.return_data[0]
                                continue 
                            mem[_16947 + (4 * ceil32(return_data.size)) + 132] = address(_17511)
                            mem[_16947 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17482))
                            call address(_17482).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17511), -1
                            mem[_16947 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16947 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11261 / 2) + 1 < mem[96]
                            _19236 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                            mem[_16947 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16947 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16947 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16947 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16947 + (6 * ceil32(return_data.size)) + 292] = mem[_16947]
                            s = 0
                            t = _16947 + 32
                            u = _16947 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16947]:
                                mem[u] = mem[t + 12 len 20]
                                _16789 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16947 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16947 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19236))
                            call address(_19236).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16947 + (6 * ceil32(return_data.size)) + (32 * mem[_16947]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22581 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22761 = mem[_22581]
                            require mem[_22581] <= test266151307()
                            require _22581 + return_data.size > _22581 + mem[_22581] + 31
                            _22941 = mem[_22581 + mem[_22581]]
                            require mem[_22581 + mem[_22581]] <= test266151307()
                            require (32 * mem[_22581 + mem[_22581]]) + 32 >= 0 and _22581 + ceil32(return_data.size) + (32 * mem[_22581 + mem[_22581]]) + 32 <= test266151307()
                            mem[64] = _22581 + ceil32(return_data.size) + (32 * mem[_22581 + mem[_22581]]) + 32
                            mem[_22581 + ceil32(return_data.size)] = _22941
                            require return_data.size >= _22761 + (32 * _22941) + 32
                            t = _22581 + _22761 + 32
                            u = _22581 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22941:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16947] - 1 < mem[_16947]
                            _25438 = mem[(32 * mem[_16947] - 1) + _16947 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25438))
                            staticcall address(_25438).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25821 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16947
                            s = mem[_25821] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16947 + 44 len 20])
                            staticcall mem[_16947 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16947 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16947 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16947 + (2 * ceil32(return_data.size)) + 164] = address(_17511)
                            require ext_code.size(mem[_16947 + 44 len 20])
                            staticcall mem[_16947 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17511)
                            mem[_16947 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16947 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11261 / 2) + 1 < mem[96]
                                _18740 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                                mem[_16947 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16947 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16947 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16947 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16947 + (4 * ceil32(return_data.size)) + 292] = mem[_16947]
                                s = 0
                                t = _16947 + 32
                                u = _16947 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16947]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16789 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16947 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16947 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18740))
                                call address(_18740).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16947 + (4 * ceil32(return_data.size)) + (32 * mem[_16947]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22582 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22762 = mem[_22582]
                                require mem[_22582] <= test266151307()
                                require _22582 + return_data.size > _22582 + mem[_22582] + 31
                                _22942 = mem[_22582 + mem[_22582]]
                                require mem[_22582 + mem[_22582]] <= test266151307()
                                require (32 * mem[_22582 + mem[_22582]]) + 32 >= 0 and _22582 + ceil32(return_data.size) + (32 * mem[_22582 + mem[_22582]]) + 32 <= test266151307()
                                mem[64] = _22582 + ceil32(return_data.size) + (32 * mem[_22582 + mem[_22582]]) + 32
                                mem[_22582 + ceil32(return_data.size)] = _22942
                                require return_data.size >= _22762 + (32 * _22942) + 32
                                t = _22582 + _22762 + 32
                                u = _22582 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22942:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16947] - 1 < mem[_16947]
                                _25440 = mem[(32 * mem[_16947] - 1) + _16947 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25440))
                                staticcall address(_25440).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25822 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16947
                                s = mem[_25822] - ext_call.return_data[0]
                                continue 
                            mem[_16947 + (4 * ceil32(return_data.size)) + 132] = address(_17511)
                            mem[_16947 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17482))
                            call address(_17482).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17511), -1
                            mem[_16947 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16947 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11261 / 2) + 1 < mem[96]
                            _19537 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                            mem[_16947 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16947 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16947 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16947 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16947 + (6 * ceil32(return_data.size)) + 292] = mem[_16947]
                            s = 0
                            t = _16947 + 32
                            u = _16947 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16947]:
                                mem[u] = mem[t + 12 len 20]
                                _16789 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16947 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16947 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19537))
                            call address(_19537).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16947 + (6 * ceil32(return_data.size)) + (32 * mem[_16947]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22583 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22763 = mem[_22583]
                            require mem[_22583] <= test266151307()
                            require _22583 + return_data.size > _22583 + mem[_22583] + 31
                            _22943 = mem[_22583 + mem[_22583]]
                            require mem[_22583 + mem[_22583]] <= test266151307()
                            require (32 * mem[_22583 + mem[_22583]]) + 32 >= 0 and _22583 + ceil32(return_data.size) + (32 * mem[_22583 + mem[_22583]]) + 32 <= test266151307()
                            mem[64] = _22583 + ceil32(return_data.size) + (32 * mem[_22583 + mem[_22583]]) + 32
                            mem[_22583 + ceil32(return_data.size)] = _22943
                            require return_data.size >= _22763 + (32 * _22943) + 32
                            t = _22583 + _22763 + 32
                            u = _22583 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22943:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16947] - 1 < mem[_16947]
                            _25442 = mem[(32 * mem[_16947] - 1) + _16947 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25442))
                            staticcall address(_25442).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25823 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16947
                            s = mem[_25823] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16947 + 44 len 20])
                        staticcall mem[_16947 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16947 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16947 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16947 + (2 * ceil32(return_data.size)) + 164] = address(_17511)
                        require ext_code.size(mem[_16947 + 44 len 20])
                        staticcall mem[_16947 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17511)
                        mem[_16947 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16947 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11261 / 2) + 1 < mem[96]
                            _19034 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                            mem[_16947 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16947 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16947 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16947 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16947 + (4 * ceil32(return_data.size)) + 292] = mem[_16947]
                            s = 0
                            t = _16947 + 32
                            u = _16947 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16947]:
                                mem[u] = mem[t + 12 len 20]
                                _16789 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16947 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16947 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19034))
                            call address(_19034).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16947 + (4 * ceil32(return_data.size)) + (32 * mem[_16947]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22584 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22764 = mem[_22584]
                            require mem[_22584] <= test266151307()
                            require _22584 + return_data.size > _22584 + mem[_22584] + 31
                            _22944 = mem[_22584 + mem[_22584]]
                            require mem[_22584 + mem[_22584]] <= test266151307()
                            require (32 * mem[_22584 + mem[_22584]]) + 32 >= 0 and _22584 + ceil32(return_data.size) + (32 * mem[_22584 + mem[_22584]]) + 32 <= test266151307()
                            mem[64] = _22584 + ceil32(return_data.size) + (32 * mem[_22584 + mem[_22584]]) + 32
                            mem[_22584 + ceil32(return_data.size)] = _22944
                            require return_data.size >= _22764 + (32 * _22944) + 32
                            t = _22584 + _22764 + 32
                            u = _22584 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22944:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16947] - 1 < mem[_16947]
                            _25444 = mem[(32 * mem[_16947] - 1) + _16947 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25444))
                            staticcall address(_25444).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25824 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16947
                            s = mem[_25824] - ext_call.return_data[0]
                            continue 
                        mem[_16947 + (4 * ceil32(return_data.size)) + 132] = address(_17511)
                        mem[_16947 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17482))
                        call address(_17482).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17511), -1
                        mem[_16947 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16947 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11261 / 2) + 1 < mem[96]
                        _19833 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                        mem[_16947 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16947 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16947 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16947 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16947 + (6 * ceil32(return_data.size)) + 292] = mem[_16947]
                        s = 0
                        t = _16947 + 32
                        u = _16947 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16947]:
                            mem[u] = mem[t + 12 len 20]
                            _16789 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16947 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16947 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19833))
                        call address(_19833).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16947 + (6 * ceil32(return_data.size)) + (32 * mem[_16947]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22585 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22765 = mem[_22585]
                        require mem[_22585] <= test266151307()
                        require _22585 + return_data.size > _22585 + mem[_22585] + 31
                        _22945 = mem[_22585 + mem[_22585]]
                        require mem[_22585 + mem[_22585]] <= test266151307()
                        require (32 * mem[_22585 + mem[_22585]]) + 32 >= 0 and _22585 + ceil32(return_data.size) + (32 * mem[_22585 + mem[_22585]]) + 32 <= test266151307()
                        mem[64] = _22585 + ceil32(return_data.size) + (32 * mem[_22585 + mem[_22585]]) + 32
                        mem[_22585 + ceil32(return_data.size)] = _22945
                        require return_data.size >= _22765 + (32 * _22945) + 32
                        t = _22585 + _22765 + 32
                        u = _22585 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22945:
                            mem[u] = mem[t]
                            _16789 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16947] - 1 < mem[_16947]
                        _25446 = mem[(32 * mem[_16947] - 1) + _16947 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25446))
                        staticcall address(_25446).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25825 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16789 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16947
                        s = mem[_25825] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11261 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11261 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11261 / 2) + 1) + 140 len 20]:
                        require idx + -(_11261 / 2) + 1 < mem[96]
                        require idx - (_11261 / 2) < mem[96]
                        if mem[(32 * idx - (_11261 / 2)) + 140 len 20] != mem[(32 * idx + -(_11261 / 2) + 1) + 140 len 20]:
                            _17090 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_17090 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_17090]
                            mem[_17090 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_17090]
                            mem[_17090 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_17090] - 1 < mem[_17090]
                            mem[_17090 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_17090] - 1) + _17090 + 44 len 20])
                            staticcall mem[(32 * mem[_17090] - 1) + _17090 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_17090 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17090 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_17090]
                            _17512 = mem[_17090 + 32]
                            require idx - (_11261 / 2) < mem[96]
                            _17536 = mem[(32 * idx - (_11261 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_17090 + 44 len 20])
                                staticcall mem[_17090 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17090 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17090 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17090 + (2 * ceil32(return_data.size)) + 132] = address(_17536)
                                require ext_code.size(mem[_17090 + 44 len 20])
                                staticcall mem[_17090 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17536)
                                mem[_17090 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17090 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11261 / 2) < mem[96]
                                    _18570 = mem[(32 * idx - (_11261 / 2)) + 128]
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 260] = mem[_17090]
                                    s = 0
                                    t = _17090 + 32
                                    u = _17090 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_17090]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16789 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18570))
                                    call address(_18570).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17090 + (4 * ceil32(return_data.size)) + (32 * mem[_17090]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22586 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22766 = mem[_22586]
                                    require mem[_22586] <= test266151307()
                                    require _22586 + return_data.size > _22586 + mem[_22586] + 31
                                    _22946 = mem[_22586 + mem[_22586]]
                                    require mem[_22586 + mem[_22586]] <= test266151307()
                                    require (32 * mem[_22586 + mem[_22586]]) + 32 >= 0 and _22586 + ceil32(return_data.size) + (32 * mem[_22586 + mem[_22586]]) + 32 <= test266151307()
                                    mem[64] = _22586 + ceil32(return_data.size) + (32 * mem[_22586 + mem[_22586]]) + 32
                                    mem[_22586 + ceil32(return_data.size)] = _22946
                                    require return_data.size >= _22766 + (32 * _22946) + 32
                                    t = _22586 + _22766 + 32
                                    u = _22586 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22946:
                                        mem[u] = mem[t]
                                        _16789 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17090] - 1 < mem[_17090]
                                    _25448 = mem[(32 * mem[_17090] - 1) + _17090 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25448))
                                    staticcall address(_25448).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25826 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16789 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17090
                                    s = mem[_25826] - ext_call.return_data[0]
                                    continue 
                                mem[_17090 + (4 * ceil32(return_data.size)) + 100] = address(_17536)
                                mem[_17090 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17512))
                                call address(_17512).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17536), -1
                                mem[_17090 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17090 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11261 / 2) < mem[96]
                                _19335 = mem[(32 * idx - (_11261 / 2)) + 128]
                                mem[_17090 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17090 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17090 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17090 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17090 + (6 * ceil32(return_data.size)) + 260] = mem[_17090]
                                s = 0
                                t = _17090 + 32
                                u = _17090 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_17090]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16789 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17090 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17090 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19335))
                                call address(_19335).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17090 + (6 * ceil32(return_data.size)) + (32 * mem[_17090]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22587 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22767 = mem[_22587]
                                require mem[_22587] <= test266151307()
                                require _22587 + return_data.size > _22587 + mem[_22587] + 31
                                _22947 = mem[_22587 + mem[_22587]]
                                require mem[_22587 + mem[_22587]] <= test266151307()
                                require (32 * mem[_22587 + mem[_22587]]) + 32 >= 0 and _22587 + ceil32(return_data.size) + (32 * mem[_22587 + mem[_22587]]) + 32 <= test266151307()
                                mem[64] = _22587 + ceil32(return_data.size) + (32 * mem[_22587 + mem[_22587]]) + 32
                                mem[_22587 + ceil32(return_data.size)] = _22947
                                require return_data.size >= _22767 + (32 * _22947) + 32
                                t = _22587 + _22767 + 32
                                u = _22587 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22947:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17090] - 1 < mem[_17090]
                                _25450 = mem[(32 * mem[_17090] - 1) + _17090 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25450))
                                staticcall address(_25450).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25827 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17090
                                s = mem[_25827] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_17090 + 44 len 20])
                                staticcall mem[_17090 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_17090 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_17090 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_17090 + (2 * ceil32(return_data.size)) + 132] = address(_17536)
                                require ext_code.size(mem[_17090 + 44 len 20])
                                staticcall mem[_17090 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17536)
                                mem[_17090 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17090 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11261 / 2) < mem[96]
                                    _18834 = mem[(32 * idx - (_11261 / 2)) + 128]
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 260] = mem[_17090]
                                    s = 0
                                    t = _17090 + 32
                                    u = _17090 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_17090]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16789 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_17090 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18834))
                                    call address(_18834).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17090 + (4 * ceil32(return_data.size)) + (32 * mem[_17090]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22588 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22768 = mem[_22588]
                                    require mem[_22588] <= test266151307()
                                    require _22588 + return_data.size > _22588 + mem[_22588] + 31
                                    _22948 = mem[_22588 + mem[_22588]]
                                    require mem[_22588 + mem[_22588]] <= test266151307()
                                    require (32 * mem[_22588 + mem[_22588]]) + 32 >= 0 and _22588 + ceil32(return_data.size) + (32 * mem[_22588 + mem[_22588]]) + 32 <= test266151307()
                                    mem[64] = _22588 + ceil32(return_data.size) + (32 * mem[_22588 + mem[_22588]]) + 32
                                    mem[_22588 + ceil32(return_data.size)] = _22948
                                    require return_data.size >= _22768 + (32 * _22948) + 32
                                    t = _22588 + _22768 + 32
                                    u = _22588 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22948:
                                        mem[u] = mem[t]
                                        _16789 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_17090] - 1 < mem[_17090]
                                    _25452 = mem[(32 * mem[_17090] - 1) + _17090 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25452))
                                    staticcall address(_25452).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25828 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16789 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _17090
                                    s = mem[_25828] - ext_call.return_data[0]
                                    continue 
                                mem[_17090 + (4 * ceil32(return_data.size)) + 100] = address(_17536)
                                mem[_17090 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17512))
                                call address(_17512).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17536), -1
                                mem[_17090 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _17090 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11261 / 2) < mem[96]
                                _19638 = mem[(32 * idx - (_11261 / 2)) + 128]
                                mem[_17090 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17090 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_17090 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_17090 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_17090 + (6 * ceil32(return_data.size)) + 260] = mem[_17090]
                                s = 0
                                t = _17090 + 32
                                u = _17090 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_17090]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16789 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17090 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17090 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19638))
                                call address(_19638).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17090 + (6 * ceil32(return_data.size)) + (32 * mem[_17090]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22589 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22769 = mem[_22589]
                                require mem[_22589] <= test266151307()
                                require _22589 + return_data.size > _22589 + mem[_22589] + 31
                                _22949 = mem[_22589 + mem[_22589]]
                                require mem[_22589 + mem[_22589]] <= test266151307()
                                require (32 * mem[_22589 + mem[_22589]]) + 32 >= 0 and _22589 + ceil32(return_data.size) + (32 * mem[_22589 + mem[_22589]]) + 32 <= test266151307()
                                mem[64] = _22589 + ceil32(return_data.size) + (32 * mem[_22589 + mem[_22589]]) + 32
                                mem[_22589 + ceil32(return_data.size)] = _22949
                                require return_data.size >= _22769 + (32 * _22949) + 32
                                t = _22589 + _22769 + 32
                                u = _22589 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22949:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17090] - 1 < mem[_17090]
                                _25454 = mem[(32 * mem[_17090] - 1) + _17090 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25454))
                                staticcall address(_25454).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25829 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17090
                                s = mem[_25829] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_17090 + 44 len 20])
                            staticcall mem[_17090 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17090 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17090 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17090 + (2 * ceil32(return_data.size)) + 132] = address(_17536)
                            require ext_code.size(mem[_17090 + 44 len 20])
                            staticcall mem[_17090 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17536)
                            mem[_17090 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17090 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11261 / 2) < mem[96]
                                _19121 = mem[(32 * idx - (_11261 / 2)) + 128]
                                mem[_17090 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17090 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17090 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17090 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17090 + (4 * ceil32(return_data.size)) + 260] = mem[_17090]
                                s = 0
                                t = _17090 + 32
                                u = _17090 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_17090]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16789 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17090 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17090 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19121))
                                call address(_19121).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17090 + (4 * ceil32(return_data.size)) + (32 * mem[_17090]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22590 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22770 = mem[_22590]
                                require mem[_22590] <= test266151307()
                                require _22590 + return_data.size > _22590 + mem[_22590] + 31
                                _22950 = mem[_22590 + mem[_22590]]
                                require mem[_22590 + mem[_22590]] <= test266151307()
                                require (32 * mem[_22590 + mem[_22590]]) + 32 >= 0 and _22590 + ceil32(return_data.size) + (32 * mem[_22590 + mem[_22590]]) + 32 <= test266151307()
                                mem[64] = _22590 + ceil32(return_data.size) + (32 * mem[_22590 + mem[_22590]]) + 32
                                mem[_22590 + ceil32(return_data.size)] = _22950
                                require return_data.size >= _22770 + (32 * _22950) + 32
                                t = _22590 + _22770 + 32
                                u = _22590 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22950:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17090] - 1 < mem[_17090]
                                _25456 = mem[(32 * mem[_17090] - 1) + _17090 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25456))
                                staticcall address(_25456).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25830 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17090
                                s = mem[_25830] - ext_call.return_data[0]
                                continue 
                            mem[_17090 + (4 * ceil32(return_data.size)) + 100] = address(_17536)
                            mem[_17090 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17512))
                            call address(_17512).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17536), -1
                            mem[_17090 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17090 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11261 / 2) < mem[96]
                            _19914 = mem[(32 * idx - (_11261 / 2)) + 128]
                            mem[_17090 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17090 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17090 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17090 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17090 + (6 * ceil32(return_data.size)) + 260] = mem[_17090]
                            s = 0
                            t = _17090 + 32
                            u = _17090 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_17090]:
                                mem[u] = mem[t + 12 len 20]
                                _16789 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17090 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17090 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19914))
                            call address(_19914).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17090 + (6 * ceil32(return_data.size)) + (32 * mem[_17090]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22591 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22771 = mem[_22591]
                            require mem[_22591] <= test266151307()
                            require _22591 + return_data.size > _22591 + mem[_22591] + 31
                            _22951 = mem[_22591 + mem[_22591]]
                            require mem[_22591 + mem[_22591]] <= test266151307()
                            require (32 * mem[_22591 + mem[_22591]]) + 32 >= 0 and _22591 + ceil32(return_data.size) + (32 * mem[_22591 + mem[_22591]]) + 32 <= test266151307()
                            mem[64] = _22591 + ceil32(return_data.size) + (32 * mem[_22591 + mem[_22591]]) + 32
                            mem[_22591 + ceil32(return_data.size)] = _22951
                            require return_data.size >= _22771 + (32 * _22951) + 32
                            t = _22591 + _22771 + 32
                            u = _22591 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22951:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17090] - 1 < mem[_17090]
                            _25458 = mem[(32 * mem[_17090] - 1) + _17090 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25458))
                            staticcall address(_25458).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25831 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17090
                            s = mem[_25831] - ext_call.return_data[0]
                            continue 
                        _17092 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_17092 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_17092]
                        mem[_17092 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17092]
                        mem[_17092 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_17092]
                        mem[_17092 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_17092] - 1 < mem[_17092]
                        mem[_17092 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_17092] - 1) + _17092 + 44 len 20])
                        staticcall mem[(32 * mem[_17092] - 1) + _17092 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17092 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17092 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_17092]
                        _17555 = mem[_17092 + 32]
                        require idx + -(_11261 / 2) + 1 < mem[96]
                        _17563 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17092 + 44 len 20])
                            staticcall mem[_17092 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17092 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17092 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17092 + (2 * ceil32(return_data.size)) + 164] = address(_17563)
                            require ext_code.size(mem[_17092 + 44 len 20])
                            staticcall mem[_17092 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17563)
                            mem[_17092 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17092 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11261 / 2) + 1 < mem[96]
                                _18747 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                                mem[_17092 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17092 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17092 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17092 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17092 + (4 * ceil32(return_data.size)) + 292] = mem[_17092]
                                t = 0
                                u = _17092 + 32
                                v = _17092 + (4 * ceil32(return_data.size)) + 324
                                while t < mem[_17092]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16789 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17092 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17092 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18747))
                                call address(_18747).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17092 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17092]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17092 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17092 + (6 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _22772 = mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                                require mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17092 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                                _22952 = mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                                require (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17092 + (6 * ceil32(return_data.size)) + (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                                mem[64] = _17092 + (6 * ceil32(return_data.size)) + (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                                mem[_17092 + (6 * ceil32(return_data.size)) + 128] = mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require return_data.size >= _22772 + (32 * _22952) + 32
                                t = _17092 + (4 * ceil32(return_data.size)) + _22772 + 160
                                u = _17092 + (6 * ceil32(return_data.size)) + 160
                                s = 0
                                while s < _22952:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17092] - 1 < mem[_17092]
                                _25460 = mem[(32 * mem[_17092] - 1) + _17092 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25460))
                                staticcall address(_25460).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25832 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17092
                                s = mem[_25832] - ext_call.return_data[0]
                                continue 
                            mem[_17092 + (4 * ceil32(return_data.size)) + 132] = address(_17563)
                            mem[_17092 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17555))
                            call address(_17555).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17563), -1
                            mem[_17092 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17092 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11261 / 2) + 1 < mem[96]
                            _19545 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                            mem[_17092 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17092 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17092 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17092 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17092 + (6 * ceil32(return_data.size)) + 292] = mem[_17092]
                            t = 0
                            u = _17092 + 32
                            v = _17092 + (6 * ceil32(return_data.size)) + 324
                            while t < mem[_17092]:
                                mem[v] = mem[u + 12 len 20]
                                _16789 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17092 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17092 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19545))
                            call address(_19545).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17092 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17092]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17092 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17092 + (7 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22773 = mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17092 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22953 = mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17092 + (7 * ceil32(return_data.size)) + (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _17092 + (7 * ceil32(return_data.size)) + (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_17092 + (7 * ceil32(return_data.size)) + 128] = _22953
                            require return_data.size >= _22773 + (32 * _22953) + 32
                            t = _17092 + (6 * ceil32(return_data.size)) + _22773 + 160
                            u = _17092 + (7 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22953:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17092] - 1 < mem[_17092]
                            _25462 = mem[(32 * mem[_17092] - 1) + _17092 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25462))
                            staticcall address(_25462).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25833 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17092
                            s = mem[_25833] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17092 + 44 len 20])
                            staticcall mem[_17092 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17092 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17092 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17092 + (2 * ceil32(return_data.size)) + 164] = address(_17563)
                            require ext_code.size(mem[_17092 + 44 len 20])
                            staticcall mem[_17092 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17563)
                            mem[_17092 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17092 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11261 / 2) + 1 < mem[96]
                                _19040 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                                mem[_17092 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17092 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17092 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17092 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17092 + (4 * ceil32(return_data.size)) + 292] = mem[_17092]
                                t = 0
                                u = _17092 + 32
                                v = _17092 + (4 * ceil32(return_data.size)) + 324
                                while t < mem[_17092]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16789 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17092 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17092 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_19040))
                                call address(_19040).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17092 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17092]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17092 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17092 + (6 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _22774 = mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                                require mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17092 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                                _22954 = mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                                require (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17092 + (6 * ceil32(return_data.size)) + (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                                mem[64] = _17092 + (6 * ceil32(return_data.size)) + (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                                mem[_17092 + (6 * ceil32(return_data.size)) + 128] = mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require return_data.size >= _22774 + (32 * _22954) + 32
                                t = _17092 + (4 * ceil32(return_data.size)) + _22774 + 160
                                u = _17092 + (6 * ceil32(return_data.size)) + 160
                                s = 0
                                while s < _22954:
                                    mem[u] = mem[t]
                                    _16789 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17092] - 1 < mem[_17092]
                                _25464 = mem[(32 * mem[_17092] - 1) + _17092 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25464))
                                staticcall address(_25464).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25834 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16789 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17092
                                s = mem[_25834] - ext_call.return_data[0]
                                continue 
                            mem[_17092 + (4 * ceil32(return_data.size)) + 132] = address(_17563)
                            mem[_17092 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17555))
                            call address(_17555).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17563), -1
                            mem[_17092 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17092 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11261 / 2) + 1 < mem[96]
                            _19839 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                            mem[_17092 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17092 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17092 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17092 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17092 + (6 * ceil32(return_data.size)) + 292] = mem[_17092]
                            t = 0
                            u = _17092 + 32
                            v = _17092 + (6 * ceil32(return_data.size)) + 324
                            while t < mem[_17092]:
                                mem[v] = mem[u + 12 len 20]
                                _16789 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17092 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17092 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19839))
                            call address(_19839).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17092 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17092]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17092 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17092 + (7 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22775 = mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17092 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22955 = mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17092 + (7 * ceil32(return_data.size)) + (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _17092 + (7 * ceil32(return_data.size)) + (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_17092 + (7 * ceil32(return_data.size)) + 128] = _22955
                            require return_data.size >= _22775 + (32 * _22955) + 32
                            t = _17092 + (6 * ceil32(return_data.size)) + _22775 + 160
                            u = _17092 + (7 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22955:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17092] - 1 < mem[_17092]
                            _25466 = mem[(32 * mem[_17092] - 1) + _17092 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25466))
                            staticcall address(_25466).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25835 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17092
                            s = mem[_25835] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17092 + 44 len 20])
                        staticcall mem[_17092 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17092 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17092 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17092 + (2 * ceil32(return_data.size)) + 164] = address(_17563)
                        require ext_code.size(mem[_17092 + 44 len 20])
                        staticcall mem[_17092 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17563)
                        mem[_17092 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17092 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11261 / 2) + 1 < mem[96]
                            _19340 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                            mem[_17092 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17092 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17092 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17092 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17092 + (4 * ceil32(return_data.size)) + 292] = mem[_17092]
                            t = 0
                            u = _17092 + 32
                            v = _17092 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_17092]:
                                mem[v] = mem[u + 12 len 20]
                                _16789 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17092 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17092 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19340))
                            call address(_19340).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17092 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_17092]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17092 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17092 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22776 = mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17092 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22956 = mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17092 + (6 * ceil32(return_data.size)) + (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _17092 + (6 * ceil32(return_data.size)) + (32 * mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_17092 + (6 * ceil32(return_data.size)) + 128] = mem[_17092 + (4 * ceil32(return_data.size)) + mem[_17092 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _22776 + (32 * _22956) + 32
                            t = _17092 + (4 * ceil32(return_data.size)) + _22776 + 160
                            u = _17092 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22956:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17092] - 1 < mem[_17092]
                            _25468 = mem[(32 * mem[_17092] - 1) + _17092 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25468))
                            staticcall address(_25468).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25836 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17092
                            s = mem[_25836] - ext_call.return_data[0]
                            continue 
                        mem[_17092 + (4 * ceil32(return_data.size)) + 132] = address(_17563)
                        mem[_17092 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17555))
                        call address(_17555).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17563), -1
                        mem[_17092 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17092 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11261 / 2) + 1 < mem[96]
                        _20092 = mem[(32 * idx + -(_11261 / 2) + 1) + 128]
                        mem[_17092 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17092 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17092 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17092 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17092 + (6 * ceil32(return_data.size)) + 292] = mem[_17092]
                        t = 0
                        u = _17092 + 32
                        v = _17092 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_17092]:
                            mem[v] = mem[u + 12 len 20]
                            _16789 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_17092 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17092 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_20092))
                        call address(_20092).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17092 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_17092]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_17092 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _17092 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22777 = mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _17092 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22957 = mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _17092 + (7 * ceil32(return_data.size)) + (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _17092 + (7 * ceil32(return_data.size)) + (32 * mem[_17092 + (6 * ceil32(return_data.size)) + mem[_17092 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_17092 + (7 * ceil32(return_data.size)) + 128] = _22957
                        require return_data.size >= _22777 + (32 * _22957) + 32
                        t = _17092 + (6 * ceil32(return_data.size)) + _22777 + 160
                        u = _17092 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22957:
                            mem[u] = mem[t]
                            _16789 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17092] - 1 < mem[_17092]
                        _25470 = mem[(32 * mem[_17092] - 1) + _17092 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25470))
                        staticcall address(_25470).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25837 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16789 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17092
                        s = mem[_25837] - ext_call.return_data[0]
                        continue 
                    _16950 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16950 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16950]
                    mem[_16950 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16950]
                    mem[_16950 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16950]
                    mem[_16950 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16950]
                    mem[_16950 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16950] - 1 < mem[_16950]
                    mem[_16950 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16950] - 1) + _16950 + 44 len 20])
                    staticcall mem[(32 * mem[_16950] - 1) + _16950 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16950 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16950 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16950]
                    _17538 = mem[_16950 + 32]
                    require idx + -(_11261 / 2) + 2 < mem[96]
                    _17557 = mem[(32 * idx + -(_11261 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16950 + 44 len 20])
                        staticcall mem[_16950 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16950 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16950 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16950 + (2 * ceil32(return_data.size)) + 196] = address(_17557)
                        require ext_code.size(mem[_16950 + 44 len 20])
                        staticcall mem[_16950 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17557)
                        mem[_16950 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16950 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11261 / 2) + 2 < mem[96]
                            _18658 = mem[(32 * idx + -(_11261 / 2) + 2) + 128]
                            mem[_16950 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16950 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16950 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16950 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16950 + (4 * ceil32(return_data.size)) + 324] = mem[_16950]
                            s = 0
                            t = _16950 + 32
                            u = _16950 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16950]:
                                mem[u] = mem[t + 12 len 20]
                                _16789 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16950 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16950 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18658))
                            call address(_18658).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16950 + (4 * ceil32(return_data.size)) + (32 * mem[_16950]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22598 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22778 = mem[_22598]
                            require mem[_22598] <= test266151307()
                            require _22598 + return_data.size > _22598 + mem[_22598] + 31
                            _22958 = mem[_22598 + mem[_22598]]
                            require mem[_22598 + mem[_22598]] <= test266151307()
                            require (32 * mem[_22598 + mem[_22598]]) + 32 >= 0 and _22598 + ceil32(return_data.size) + (32 * mem[_22598 + mem[_22598]]) + 32 <= test266151307()
                            mem[64] = _22598 + ceil32(return_data.size) + (32 * mem[_22598 + mem[_22598]]) + 32
                            mem[_22598 + ceil32(return_data.size)] = _22958
                            require return_data.size >= _22778 + (32 * _22958) + 32
                            t = _22598 + _22778 + 32
                            u = _22598 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22958:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16950] - 1 < mem[_16950]
                            _25472 = mem[(32 * mem[_16950] - 1) + _16950 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25472))
                            staticcall address(_25472).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25838 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16950
                            s = mem[_25838] - ext_call.return_data[0]
                            continue 
                        mem[_16950 + (4 * ceil32(return_data.size)) + 164] = address(_17557)
                        mem[_16950 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17538))
                        call address(_17538).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17557), -1
                        mem[_16950 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16950 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11261 / 2) + 2 < mem[96]
                        _19444 = mem[(32 * idx + -(_11261 / 2) + 2) + 128]
                        mem[_16950 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16950 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16950 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16950 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16950 + (6 * ceil32(return_data.size)) + 324] = mem[_16950]
                        s = 0
                        t = _16950 + 32
                        u = _16950 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16950]:
                            mem[u] = mem[t + 12 len 20]
                            _16789 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16950 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16950 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19444))
                        call address(_19444).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16950 + (6 * ceil32(return_data.size)) + (32 * mem[_16950]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22599 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22779 = mem[_22599]
                        require mem[_22599] <= test266151307()
                        require _22599 + return_data.size > _22599 + mem[_22599] + 31
                        _22959 = mem[_22599 + mem[_22599]]
                        require mem[_22599 + mem[_22599]] <= test266151307()
                        require (32 * mem[_22599 + mem[_22599]]) + 32 >= 0 and _22599 + ceil32(return_data.size) + (32 * mem[_22599 + mem[_22599]]) + 32 <= test266151307()
                        mem[64] = _22599 + ceil32(return_data.size) + (32 * mem[_22599 + mem[_22599]]) + 32
                        mem[_22599 + ceil32(return_data.size)] = _22959
                        require return_data.size >= _22779 + (32 * _22959) + 32
                        t = _22599 + _22779 + 32
                        u = _22599 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22959:
                            mem[u] = mem[t]
                            _16789 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16950] - 1 < mem[_16950]
                        _25474 = mem[(32 * mem[_16950] - 1) + _16950 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25474))
                        staticcall address(_25474).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25839 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16789 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16950
                        s = mem[_25839] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16950 + 44 len 20])
                        staticcall mem[_16950 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16950 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16950 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16950 + (2 * ceil32(return_data.size)) + 196] = address(_17557)
                        require ext_code.size(mem[_16950 + 44 len 20])
                        staticcall mem[_16950 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17557)
                        mem[_16950 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16950 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11261 / 2) + 2 < mem[96]
                            _18935 = mem[(32 * idx + -(_11261 / 2) + 2) + 128]
                            mem[_16950 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16950 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16950 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16950 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16950 + (4 * ceil32(return_data.size)) + 324] = mem[_16950]
                            s = 0
                            t = _16950 + 32
                            u = _16950 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16950]:
                                mem[u] = mem[t + 12 len 20]
                                _16789 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16950 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16950 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18935))
                            call address(_18935).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16950 + (4 * ceil32(return_data.size)) + (32 * mem[_16950]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22600 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22780 = mem[_22600]
                            require mem[_22600] <= test266151307()
                            require _22600 + return_data.size > _22600 + mem[_22600] + 31
                            _22960 = mem[_22600 + mem[_22600]]
                            require mem[_22600 + mem[_22600]] <= test266151307()
                            require (32 * mem[_22600 + mem[_22600]]) + 32 >= 0 and _22600 + ceil32(return_data.size) + (32 * mem[_22600 + mem[_22600]]) + 32 <= test266151307()
                            mem[64] = _22600 + ceil32(return_data.size) + (32 * mem[_22600 + mem[_22600]]) + 32
                            mem[_22600 + ceil32(return_data.size)] = _22960
                            require return_data.size >= _22780 + (32 * _22960) + 32
                            t = _22600 + _22780 + 32
                            u = _22600 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22960:
                                mem[u] = mem[t]
                                _16789 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16950] - 1 < mem[_16950]
                            _25476 = mem[(32 * mem[_16950] - 1) + _16950 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25476))
                            staticcall address(_25476).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25840 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16789 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16950
                            s = mem[_25840] - ext_call.return_data[0]
                            continue 
                        mem[_16950 + (4 * ceil32(return_data.size)) + 164] = address(_17557)
                        mem[_16950 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17538))
                        call address(_17538).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17557), -1
                        mem[_16950 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16950 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11261 / 2) + 2 < mem[96]
                        _19740 = mem[(32 * idx + -(_11261 / 2) + 2) + 128]
                        mem[_16950 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16950 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16950 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16950 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16950 + (6 * ceil32(return_data.size)) + 324] = mem[_16950]
                        s = 0
                        t = _16950 + 32
                        u = _16950 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16950]:
                            mem[u] = mem[t + 12 len 20]
                            _16789 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16950 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16950 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19740))
                        call address(_19740).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16950 + (6 * ceil32(return_data.size)) + (32 * mem[_16950]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22601 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22781 = mem[_22601]
                        require mem[_22601] <= test266151307()
                        require _22601 + return_data.size > _22601 + mem[_22601] + 31
                        _22961 = mem[_22601 + mem[_22601]]
                        require mem[_22601 + mem[_22601]] <= test266151307()
                        require (32 * mem[_22601 + mem[_22601]]) + 32 >= 0 and _22601 + ceil32(return_data.size) + (32 * mem[_22601 + mem[_22601]]) + 32 <= test266151307()
                        mem[64] = _22601 + ceil32(return_data.size) + (32 * mem[_22601 + mem[_22601]]) + 32
                        mem[_22601 + ceil32(return_data.size)] = _22961
                        require return_data.size >= _22781 + (32 * _22961) + 32
                        t = _22601 + _22781 + 32
                        u = _22601 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22961:
                            mem[u] = mem[t]
                            _16789 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16950] - 1 < mem[_16950]
                        _25478 = mem[(32 * mem[_16950] - 1) + _16950 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25478))
                        staticcall address(_25478).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16789 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16950
                        s = mem[_25841] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16950 + 44 len 20])
                    staticcall mem[_16950 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16950 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16950 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16950 + (2 * ceil32(return_data.size)) + 196] = address(_17557)
                    require ext_code.size(mem[_16950 + 44 len 20])
                    staticcall mem[_16950 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17557)
                    mem[_16950 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16950 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11261 / 2) + 2 < mem[96]
                        _19247 = mem[(32 * idx + -(_11261 / 2) + 2) + 128]
                        mem[_16950 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16950 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16950 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16950 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16950 + (4 * ceil32(return_data.size)) + 324] = mem[_16950]
                        s = 0
                        t = _16950 + 32
                        u = _16950 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16950]:
                            mem[u] = mem[t + 12 len 20]
                            _16789 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16950 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16950 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19247))
                        call address(_19247).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16950 + (4 * ceil32(return_data.size)) + (32 * mem[_16950]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22602 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22782 = mem[_22602]
                        require mem[_22602] <= test266151307()
                        require _22602 + return_data.size > _22602 + mem[_22602] + 31
                        _22962 = mem[_22602 + mem[_22602]]
                        require mem[_22602 + mem[_22602]] <= test266151307()
                        require (32 * mem[_22602 + mem[_22602]]) + 32 >= 0 and _22602 + ceil32(return_data.size) + (32 * mem[_22602 + mem[_22602]]) + 32 <= test266151307()
                        mem[64] = _22602 + ceil32(return_data.size) + (32 * mem[_22602 + mem[_22602]]) + 32
                        mem[_22602 + ceil32(return_data.size)] = _22962
                        require return_data.size >= _22782 + (32 * _22962) + 32
                        t = _22602 + _22782 + 32
                        u = _22602 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22962:
                            mem[u] = mem[t]
                            _16789 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16950] - 1 < mem[_16950]
                        _25480 = mem[(32 * mem[_16950] - 1) + _16950 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25480))
                        staticcall address(_25480).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25842 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16789 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16950
                        s = mem[_25842] - ext_call.return_data[0]
                        continue 
                    mem[_16950 + (4 * ceil32(return_data.size)) + 164] = address(_17557)
                    mem[_16950 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17538))
                    call address(_17538).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17557), -1
                    mem[_16950 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16950 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11261 / 2) + 2 < mem[96]
                    _20016 = mem[(32 * idx + -(_11261 / 2) + 2) + 128]
                    mem[_16950 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16950 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16950 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16950 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16950 + (6 * ceil32(return_data.size)) + 324] = mem[_16950]
                    s = 0
                    t = _16950 + 32
                    u = _16950 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16950]:
                        mem[u] = mem[t + 12 len 20]
                        _16789 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16950 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16950 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_20016))
                    call address(_20016).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16950 + (6 * ceil32(return_data.size)) + (32 * mem[_16950]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22603 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22783 = mem[_22603]
                    require mem[_22603] <= test266151307()
                    require _22603 + return_data.size > _22603 + mem[_22603] + 31
                    _22963 = mem[_22603 + mem[_22603]]
                    require mem[_22603 + mem[_22603]] <= test266151307()
                    require (32 * mem[_22603 + mem[_22603]]) + 32 >= 0 and _22603 + ceil32(return_data.size) + (32 * mem[_22603 + mem[_22603]]) + 32 <= test266151307()
                    mem[64] = _22603 + ceil32(return_data.size) + (32 * mem[_22603 + mem[_22603]]) + 32
                    mem[_22603 + ceil32(return_data.size)] = _22963
                    require return_data.size >= _22783 + (32 * _22963) + 32
                    t = _22603 + _22783 + 32
                    u = _22603 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22963:
                        mem[u] = mem[t]
                        _16789 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16950] - 1 < mem[_16950]
                    _25482 = mem[(32 * mem[_16950] - 1) + _16950 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25482))
                    staticcall address(_25482).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25843 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16789 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16950
                    s = mem[_25843] - ext_call.return_data[0]
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                _16828 = mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160]
                require _11261 / 2 < mem[96]
                _16847 = mem[(16 * Mask(251, 1, _11261)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16847))
                staticcall address(_16847).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16908 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16908] < _11339 - cd[4] + _16828:
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_fc146f04(?) {
    require calldata.size - 4 >= 96
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11212 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11237 = mem[_11212]
                require mem[_11212] == mem[_11212 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _11289 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_11289)
                require ext_code.size(address(_11237))
                staticcall address(_11237).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_11289)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11334 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11368 = mem[_11334]
                require mem[_11334] == mem[_11334 + 12 len 20]
                require ext_code.size(mem[_11334 + 12 len 20])
                staticcall mem[_11334 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11545 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11686 = mem[_11545]
                require mem[_11545] == mem[_11545 + 18 len 14]
                _11811 = mem[_11545 + 32]
                require mem[_11545 + 32] == mem[_11545 + 50 len 14]
                require mem[_11545 + 64] == mem[_11545 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11545 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11545 + 50 len 14] / (997 * s) + (1000 * mem[_11545 + 18 len 14])
                        idx = idx + 1
                        s = _11368
                        s = 997 * s * Mask(112, 0, _11811) / (997 * s) + (1000 * Mask(112, 0, _11686))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11545 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11545 + 50 len 14] / (997 * s) + (1000 * mem[_11545 + 18 len 14])
                        idx = idx + 1
                        s = _11368
                        s = 997 * s * Mask(112, 0, _11811) / (997 * s) + (1000 * Mask(112, 0, _11686))
                        continue 
                require (997 * s) + (1000 * mem[_11545 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11545 + 18 len 14] / (997 * s) + (1000 * mem[_11545 + 50 len 14])
                idx = idx + 1
                s = _11368
                s = 997 * s * Mask(112, 0, _11686) / (997 * s) + (1000 * Mask(112, 0, _11811))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _11210 = mem[96]
            require mem[96] / 2 < mem[96]
            _11234 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_11234))
            staticcall address(_11234).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11264 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11288 = mem[_11264]
            _16730 = mem[96]
            idx = _11210 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _16730 - 1:
                require idx + -(_11210 / 2) + 1 < mem[96]
                require idx - (_11210 / 2) < mem[96]
                require idx + -(_11210 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_11210 / 2)) + 140 len 20] != mem[(32 * idx + -(_11210 / 2) + 1) + 140 len 20]:
                    require idx - (_11210 / 2) < mem[96]
                    if mem[(32 * idx - (_11210 / 2)) + 140 len 20] != mem[(32 * idx + -(_11210 / 2) + 1) + 140 len 20]:
                        _16839 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16839 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16839]
                        mem[_16839 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16839]
                        mem[_16839 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16839] - 1 < mem[_16839]
                        mem[_16839 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16839] - 1) + _16839 + 44 len 20])
                        staticcall mem[(32 * mem[_16839] - 1) + _16839 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16839 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16839 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16839]
                        _17342 = mem[_16839 + 32]
                        require idx - (_11210 / 2) < mem[96]
                        _17366 = mem[(32 * idx - (_11210 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16839 + 44 len 20])
                            staticcall mem[_16839 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16839 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16839 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16839 + (2 * ceil32(return_data.size)) + 132] = address(_17366)
                            require ext_code.size(mem[_16839 + 44 len 20])
                            staticcall mem[_16839 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17366)
                            mem[_16839 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11210 / 2) < mem[96]
                                _18248 = mem[(32 * idx - (_11210 / 2)) + 128]
                                mem[_16839 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16839 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16839 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16839 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16839 + (4 * ceil32(return_data.size)) + 260] = mem[_16839]
                                t = 0
                                u = _16839 + 32
                                v = _16839 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16839]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16730 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16839 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16839 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18248))
                                call address(_18248).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16839 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22532 = mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16839 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22712 = mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16839 + (6 * ceil32(return_data.size)) + 96] = _22712
                                require return_data.size >= _22532 + (32 * _22712) + 32
                                t = _16839 + (4 * ceil32(return_data.size)) + _22532 + 128
                                u = _16839 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22712:
                                    mem[u] = mem[t]
                                    _16730 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16839] - 1 < mem[_16839]
                                _25052 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25052))
                                staticcall address(_25052).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25592 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16730 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16839
                                s = mem[_25592] - ext_call.return_data[0]
                                continue 
                            mem[_16839 + (4 * ceil32(return_data.size)) + 100] = address(_17366)
                            mem[_16839 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17342))
                            call address(_17342).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17366), -1
                            mem[_16839 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11210 / 2) < mem[96]
                            _18867 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16839 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16839 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16839 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16839 + (6 * ceil32(return_data.size)) + 260] = mem[_16839]
                            t = 0
                            u = _16839 + 32
                            v = _16839 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16839]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16839 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16839 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18867))
                            call address(_18867).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22533 = mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16839 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22713 = mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16839 + (7 * ceil32(return_data.size)) + 96] = _22713
                            require return_data.size >= _22533 + (32 * _22713) + 32
                            t = _16839 + (6 * ceil32(return_data.size)) + _22533 + 128
                            u = _16839 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22713:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16839] - 1 < mem[_16839]
                            _25054 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25054))
                            staticcall address(_25054).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25593 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16839
                            s = mem[_25593] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16839 + 44 len 20])
                            staticcall mem[_16839 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16839 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16839 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16839 + (2 * ceil32(return_data.size)) + 132] = address(_17366)
                            require ext_code.size(mem[_16839 + 44 len 20])
                            staticcall mem[_16839 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17366)
                            mem[_16839 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11210 / 2) < mem[96]
                                _18434 = mem[(32 * idx - (_11210 / 2)) + 128]
                                mem[_16839 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16839 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16839 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16839 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16839 + (4 * ceil32(return_data.size)) + 260] = mem[_16839]
                                t = 0
                                u = _16839 + 32
                                v = _16839 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16839]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16730 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16839 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16839 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18434))
                                call address(_18434).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16839 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22534 = mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16839 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22714 = mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16839 + (6 * ceil32(return_data.size)) + 96] = _22714
                                require return_data.size >= _22534 + (32 * _22714) + 32
                                t = _16839 + (4 * ceil32(return_data.size)) + _22534 + 128
                                u = _16839 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22714:
                                    mem[u] = mem[t]
                                    _16730 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16839] - 1 < mem[_16839]
                                _25056 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25056))
                                staticcall address(_25056).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25594 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16730 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16839
                                s = mem[_25594] - ext_call.return_data[0]
                                continue 
                            mem[_16839 + (4 * ceil32(return_data.size)) + 100] = address(_17366)
                            mem[_16839 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17342))
                            call address(_17342).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17366), -1
                            mem[_16839 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11210 / 2) < mem[96]
                            _19179 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16839 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16839 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16839 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16839 + (6 * ceil32(return_data.size)) + 260] = mem[_16839]
                            t = 0
                            u = _16839 + 32
                            v = _16839 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16839]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16839 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16839 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19179))
                            call address(_19179).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22535 = mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16839 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22715 = mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16839 + (7 * ceil32(return_data.size)) + 96] = _22715
                            require return_data.size >= _22535 + (32 * _22715) + 32
                            t = _16839 + (6 * ceil32(return_data.size)) + _22535 + 128
                            u = _16839 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22715:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16839] - 1 < mem[_16839]
                            _25058 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25058))
                            staticcall address(_25058).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25595 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16839
                            s = mem[_25595] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16839 + 44 len 20])
                        staticcall mem[_16839 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16839 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16839 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16839 + (2 * ceil32(return_data.size)) + 132] = address(_17366)
                        require ext_code.size(mem[_16839 + 44 len 20])
                        staticcall mem[_16839 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17366)
                        mem[_16839 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16839 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11210 / 2) < mem[96]
                            _18681 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16839 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16839 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16839 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16839 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16839 + (4 * ceil32(return_data.size)) + 260] = mem[_16839]
                            t = 0
                            u = _16839 + 32
                            v = _16839 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16839]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16839 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16839 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18681))
                            call address(_18681).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16839 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22536 = mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16839 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22716 = mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16839 + (6 * ceil32(return_data.size)) + (32 * mem[_16839 + (4 * ceil32(return_data.size)) + mem[_16839 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16839 + (6 * ceil32(return_data.size)) + 96] = _22716
                            require return_data.size >= _22536 + (32 * _22716) + 32
                            t = _16839 + (4 * ceil32(return_data.size)) + _22536 + 128
                            u = _16839 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22716:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16839] - 1 < mem[_16839]
                            _25060 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25060))
                            staticcall address(_25060).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25596 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16839
                            s = mem[_25596] - ext_call.return_data[0]
                            continue 
                        mem[_16839 + (4 * ceil32(return_data.size)) + 100] = address(_17366)
                        mem[_16839 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17342))
                        call address(_17342).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17366), -1
                        mem[_16839 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16839 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11210 / 2) < mem[96]
                        _19480 = mem[(32 * idx - (_11210 / 2)) + 128]
                        mem[_16839 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16839 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16839 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16839 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16839 + (6 * ceil32(return_data.size)) + 260] = mem[_16839]
                        t = 0
                        u = _16839 + 32
                        v = _16839 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16839]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16839 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16839 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19480))
                        call address(_19480).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16839 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16839]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16839 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16839 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22537 = mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16839 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22717 = mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16839 + (7 * ceil32(return_data.size)) + (32 * mem[_16839 + (6 * ceil32(return_data.size)) + mem[_16839 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16839 + (7 * ceil32(return_data.size)) + 96] = _22717
                        require return_data.size >= _22537 + (32 * _22717) + 32
                        t = _16839 + (6 * ceil32(return_data.size)) + _22537 + 128
                        u = _16839 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22717:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16839] - 1 < mem[_16839]
                        _25062 = mem[(32 * mem[_16839] - 1) + _16839 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25062))
                        staticcall address(_25062).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25597 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16839
                        s = mem[_25597] - ext_call.return_data[0]
                        continue 
                    _16841 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16841 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16841]
                    mem[_16841 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16841]
                    mem[_16841 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16841]
                    mem[_16841 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16841] - 1 < mem[_16841]
                    mem[_16841 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16841] - 1) + _16841 + 44 len 20])
                    staticcall mem[(32 * mem[_16841] - 1) + _16841 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16841 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16841 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16841]
                    _17390 = mem[_16841 + 32]
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _17414 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16841 + 44 len 20])
                        staticcall mem[_16841 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16841 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16841 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16841 + (2 * ceil32(return_data.size)) + 164] = address(_17414)
                        require ext_code.size(mem[_16841 + 44 len 20])
                        staticcall mem[_16841 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17414)
                        mem[_16841 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11210 / 2) + 1 < mem[96]
                            _18360 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                            mem[_16841 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16841 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16841 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16841 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16841 + (4 * ceil32(return_data.size)) + 292] = mem[_16841]
                            t = 0
                            u = _16841 + 32
                            v = _16841 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16841]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16841 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16841 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18360))
                            call address(_18360).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16841 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22538 = mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16841 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22718 = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16841 + (6 * ceil32(return_data.size)) + 128] = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _22538 + (32 * _22718) + 32
                            t = _16841 + (4 * ceil32(return_data.size)) + _22538 + 160
                            u = _16841 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22718:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16841] - 1 < mem[_16841]
                            _25064 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25064))
                            staticcall address(_25064).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25598 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16841
                            s = mem[_25598] - ext_call.return_data[0]
                            continue 
                        mem[_16841 + (4 * ceil32(return_data.size)) + 132] = address(_17414)
                        mem[_16841 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17390))
                        call address(_17390).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17414), -1
                        mem[_16841 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _19064 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16841 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16841 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16841 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16841 + (6 * ceil32(return_data.size)) + 292] = mem[_16841]
                        t = 0
                        u = _16841 + 32
                        v = _16841 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16841]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16841 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16841 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19064))
                        call address(_19064).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22539 = mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16841 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22719 = mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16841 + (7 * ceil32(return_data.size)) + 128] = _22719
                        require return_data.size >= _22539 + (32 * _22719) + 32
                        t = _16841 + (6 * ceil32(return_data.size)) + _22539 + 160
                        u = _16841 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22719:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16841] - 1 < mem[_16841]
                        _25066 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25066))
                        staticcall address(_25066).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25599 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16841
                        s = mem[_25599] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16841 + 44 len 20])
                        staticcall mem[_16841 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16841 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16841 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16841 + (2 * ceil32(return_data.size)) + 164] = address(_17414)
                        require ext_code.size(mem[_16841 + 44 len 20])
                        staticcall mem[_16841 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17414)
                        mem[_16841 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11210 / 2) + 1 < mem[96]
                            _18593 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                            mem[_16841 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16841 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16841 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16841 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16841 + (4 * ceil32(return_data.size)) + 292] = mem[_16841]
                            t = 0
                            u = _16841 + 32
                            v = _16841 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16841]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16841 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16841 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18593))
                            call address(_18593).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16841 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22540 = mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16841 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22720 = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16841 + (6 * ceil32(return_data.size)) + 128] = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _22540 + (32 * _22720) + 32
                            t = _16841 + (4 * ceil32(return_data.size)) + _22540 + 160
                            u = _16841 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22720:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16841] - 1 < mem[_16841]
                            _25068 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25068))
                            staticcall address(_25068).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25600 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16841
                            s = mem[_25600] - ext_call.return_data[0]
                            continue 
                        mem[_16841 + (4 * ceil32(return_data.size)) + 132] = address(_17414)
                        mem[_16841 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17390))
                        call address(_17390).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17414), -1
                        mem[_16841 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _19380 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16841 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16841 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16841 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16841 + (6 * ceil32(return_data.size)) + 292] = mem[_16841]
                        t = 0
                        u = _16841 + 32
                        v = _16841 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16841]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16841 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16841 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19380))
                        call address(_19380).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22541 = mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16841 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22721 = mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16841 + (7 * ceil32(return_data.size)) + 128] = _22721
                        require return_data.size >= _22541 + (32 * _22721) + 32
                        t = _16841 + (6 * ceil32(return_data.size)) + _22541 + 160
                        u = _16841 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22721:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16841] - 1 < mem[_16841]
                        _25070 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25070))
                        staticcall address(_25070).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25601 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16841
                        s = mem[_25601] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16841 + 44 len 20])
                    staticcall mem[_16841 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16841 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16841 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16841 + (2 * ceil32(return_data.size)) + 164] = address(_17414)
                    require ext_code.size(mem[_16841 + 44 len 20])
                    staticcall mem[_16841 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17414)
                    mem[_16841 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16841 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _18872 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16841 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16841 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16841 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16841 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16841 + (4 * ceil32(return_data.size)) + 292] = mem[_16841]
                        t = 0
                        u = _16841 + 32
                        v = _16841 + (4 * ceil32(return_data.size)) + 324
                        while t < mem[_16841]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16841 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16841 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18872))
                        call address(_18872).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16841 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22542 = mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16841 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22722 = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16841 + (6 * ceil32(return_data.size)) + (32 * mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16841 + (6 * ceil32(return_data.size)) + 128] = mem[_16841 + (4 * ceil32(return_data.size)) + mem[_16841 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _22542 + (32 * _22722) + 32
                        t = _16841 + (4 * ceil32(return_data.size)) + _22542 + 160
                        u = _16841 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22722:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16841] - 1 < mem[_16841]
                        _25072 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25072))
                        staticcall address(_25072).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25602 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16841
                        s = mem[_25602] - ext_call.return_data[0]
                        continue 
                    mem[_16841 + (4 * ceil32(return_data.size)) + 132] = address(_17414)
                    mem[_16841 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17390))
                    call address(_17390).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17414), -1
                    mem[_16841 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16841 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _19676 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    mem[_16841 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16841 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16841 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16841 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16841 + (6 * ceil32(return_data.size)) + 292] = mem[_16841]
                    t = 0
                    u = _16841 + 32
                    v = _16841 + (6 * ceil32(return_data.size)) + 324
                    while t < mem[_16841]:
                        mem[v] = mem[u + 12 len 20]
                        _16730 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16841 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16841 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19676))
                    call address(_19676).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16841 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16841]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16841 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16841 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _22543 = mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16841 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _22723 = mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _16841 + (7 * ceil32(return_data.size)) + (32 * mem[_16841 + (6 * ceil32(return_data.size)) + mem[_16841 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_16841 + (7 * ceil32(return_data.size)) + 128] = _22723
                    require return_data.size >= _22543 + (32 * _22723) + 32
                    t = _16841 + (6 * ceil32(return_data.size)) + _22543 + 160
                    u = _16841 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _22723:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16841] - 1 < mem[_16841]
                    _25074 = mem[(32 * mem[_16841] - 1) + _16841 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25074))
                    staticcall address(_25074).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25603 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16841
                    s = mem[_25603] - ext_call.return_data[0]
                    continue 
                require idx + -(_11210 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_11210 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11210 / 2) + 1) + 140 len 20]:
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    require idx - (_11210 / 2) < mem[96]
                    if mem[(32 * idx - (_11210 / 2)) + 140 len 20] != mem[(32 * idx + -(_11210 / 2) + 1) + 140 len 20]:
                        _16968 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16968 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16968]
                        mem[_16968 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16968]
                        mem[_16968 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16968] - 1 < mem[_16968]
                        mem[_16968 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16968] - 1) + _16968 + 44 len 20])
                        staticcall mem[(32 * mem[_16968] - 1) + _16968 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16968 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16968]
                        _17415 = mem[_16968 + 32]
                        require idx - (_11210 / 2) < mem[96]
                        _17444 = mem[(32 * idx - (_11210 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16968 + 44 len 20])
                            staticcall mem[_16968 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16968 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16968 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16968 + (2 * ceil32(return_data.size)) + 132] = address(_17444)
                            require ext_code.size(mem[_16968 + 44 len 20])
                            staticcall mem[_16968 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17444)
                            mem[_16968 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11210 / 2) < mem[96]
                                _18438 = mem[(32 * idx - (_11210 / 2)) + 128]
                                mem[_16968 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16968 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16968 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16968 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16968 + (4 * ceil32(return_data.size)) + 260] = mem[_16968]
                                t = 0
                                u = _16968 + 32
                                v = _16968 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16968]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16730 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16968 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16968 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18438))
                                call address(_18438).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16968 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22544 = mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16968 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22724 = mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16968 + (6 * ceil32(return_data.size)) + 96] = _22724
                                require return_data.size >= _22544 + (32 * _22724) + 32
                                t = _16968 + (4 * ceil32(return_data.size)) + _22544 + 128
                                u = _16968 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22724:
                                    mem[u] = mem[t]
                                    _16730 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16968] - 1 < mem[_16968]
                                _25076 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25076))
                                staticcall address(_25076).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25604 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16730 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16968
                                s = mem[_25604] - ext_call.return_data[0]
                                continue 
                            mem[_16968 + (4 * ceil32(return_data.size)) + 100] = address(_17444)
                            mem[_16968 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17415))
                            call address(_17415).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17444), -1
                            mem[_16968 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11210 / 2) < mem[96]
                            _19183 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16968 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16968 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16968 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16968 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16968 + (6 * ceil32(return_data.size)) + 260] = mem[_16968]
                            t = 0
                            u = _16968 + 32
                            v = _16968 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16968]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16968 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16968 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19183))
                            call address(_19183).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16968 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22545 = mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16968 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22725 = mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16968 + (7 * ceil32(return_data.size)) + 96] = _22725
                            require return_data.size >= _22545 + (32 * _22725) + 32
                            t = _16968 + (6 * ceil32(return_data.size)) + _22545 + 128
                            u = _16968 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22725:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16968] - 1 < mem[_16968]
                            _25078 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25078))
                            staticcall address(_25078).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25605 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16968
                            s = mem[_25605] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16968 + 44 len 20])
                            staticcall mem[_16968 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16968 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16968 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16968 + (2 * ceil32(return_data.size)) + 132] = address(_17444)
                            require ext_code.size(mem[_16968 + 44 len 20])
                            staticcall mem[_16968 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17444)
                            mem[_16968 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11210 / 2) < mem[96]
                                _18687 = mem[(32 * idx - (_11210 / 2)) + 128]
                                mem[_16968 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16968 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16968 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16968 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16968 + (4 * ceil32(return_data.size)) + 260] = mem[_16968]
                                t = 0
                                u = _16968 + 32
                                v = _16968 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16968]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16730 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16968 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16968 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18687))
                                call address(_18687).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16968 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22546 = mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16968 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22726 = mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16968 + (6 * ceil32(return_data.size)) + 96] = _22726
                                require return_data.size >= _22546 + (32 * _22726) + 32
                                t = _16968 + (4 * ceil32(return_data.size)) + _22546 + 128
                                u = _16968 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22726:
                                    mem[u] = mem[t]
                                    _16730 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16968] - 1 < mem[_16968]
                                _25080 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25080))
                                staticcall address(_25080).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25606 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16730 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16968
                                s = mem[_25606] - ext_call.return_data[0]
                                continue 
                            mem[_16968 + (4 * ceil32(return_data.size)) + 100] = address(_17444)
                            mem[_16968 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17415))
                            call address(_17415).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17444), -1
                            mem[_16968 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11210 / 2) < mem[96]
                            _19486 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16968 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16968 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16968 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16968 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16968 + (6 * ceil32(return_data.size)) + 260] = mem[_16968]
                            t = 0
                            u = _16968 + 32
                            v = _16968 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16968]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16968 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16968 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19486))
                            call address(_19486).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16968 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22547 = mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16968 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22727 = mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16968 + (7 * ceil32(return_data.size)) + 96] = _22727
                            require return_data.size >= _22547 + (32 * _22727) + 32
                            t = _16968 + (6 * ceil32(return_data.size)) + _22547 + 128
                            u = _16968 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22727:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16968] - 1 < mem[_16968]
                            _25082 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25082))
                            staticcall address(_25082).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25607 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16968
                            s = mem[_25607] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16968 + 44 len 20])
                        staticcall mem[_16968 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16968 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16968 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16968 + (2 * ceil32(return_data.size)) + 132] = address(_17444)
                        require ext_code.size(mem[_16968 + 44 len 20])
                        staticcall mem[_16968 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17444)
                        mem[_16968 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11210 / 2) < mem[96]
                            _18979 = mem[(32 * idx - (_11210 / 2)) + 128]
                            mem[_16968 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16968 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16968 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16968 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16968 + (4 * ceil32(return_data.size)) + 260] = mem[_16968]
                            t = 0
                            u = _16968 + 32
                            v = _16968 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16968]:
                                mem[v] = mem[u + 12 len 20]
                                _16730 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16968 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16968 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18979))
                            call address(_18979).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16968 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22548 = mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16968 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22728 = mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16968 + (6 * ceil32(return_data.size)) + (32 * mem[_16968 + (4 * ceil32(return_data.size)) + mem[_16968 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16968 + (6 * ceil32(return_data.size)) + 96] = _22728
                            require return_data.size >= _22548 + (32 * _22728) + 32
                            t = _16968 + (4 * ceil32(return_data.size)) + _22548 + 128
                            u = _16968 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22728:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16968] - 1 < mem[_16968]
                            _25084 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25084))
                            staticcall address(_25084).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25608 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16968
                            s = mem[_25608] - ext_call.return_data[0]
                            continue 
                        mem[_16968 + (4 * ceil32(return_data.size)) + 100] = address(_17444)
                        mem[_16968 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17415))
                        call address(_17415).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17444), -1
                        mem[_16968 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11210 / 2) < mem[96]
                        _19777 = mem[(32 * idx - (_11210 / 2)) + 128]
                        mem[_16968 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16968 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16968 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16968 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16968 + (6 * ceil32(return_data.size)) + 260] = mem[_16968]
                        t = 0
                        u = _16968 + 32
                        v = _16968 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16968]:
                            mem[v] = mem[u + 12 len 20]
                            _16730 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16968 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16968 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19777))
                        call address(_19777).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16968 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16968]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16968 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16968 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22549 = mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16968 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22729 = mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16968 + (7 * ceil32(return_data.size)) + (32 * mem[_16968 + (6 * ceil32(return_data.size)) + mem[_16968 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16968 + (7 * ceil32(return_data.size)) + 96] = _22729
                        require return_data.size >= _22549 + (32 * _22729) + 32
                        t = _16968 + (6 * ceil32(return_data.size)) + _22549 + 128
                        u = _16968 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22729:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16968] - 1 < mem[_16968]
                        _25086 = mem[(32 * mem[_16968] - 1) + _16968 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25086))
                        staticcall address(_25086).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25609 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16968
                        s = mem[_25609] - ext_call.return_data[0]
                        continue 
                    _16970 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16970 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16970]
                    mem[_16970 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16970]
                    mem[_16970 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16970]
                    mem[_16970 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16970] - 1 < mem[_16970]
                    mem[_16970 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16970] - 1) + _16970 + 44 len 20])
                    staticcall mem[(32 * mem[_16970] - 1) + _16970 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16970 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16970 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16970]
                    _17468 = mem[_16970 + 32]
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _17486 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16970 + 44 len 20])
                        staticcall mem[_16970 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16970 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16970 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16970 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                        require ext_code.size(mem[_16970 + 44 len 20])
                        staticcall mem[_16970 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17486)
                        mem[_16970 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16970 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11210 / 2) + 1 < mem[96]
                            _18600 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                            mem[_16970 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16970 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16970 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16970 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16970 + (4 * ceil32(return_data.size)) + 292] = mem[_16970]
                            s = 0
                            t = _16970 + 32
                            u = _16970 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16970]:
                                mem[u] = mem[t + 12 len 20]
                                _16730 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16970 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16970 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18600))
                            call address(_18600).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16970 + (4 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22370 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22550 = mem[_22370]
                            require mem[_22370] <= test266151307()
                            require _22370 + return_data.size > _22370 + mem[_22370] + 31
                            _22730 = mem[_22370 + mem[_22370]]
                            require mem[_22370 + mem[_22370]] <= test266151307()
                            require (32 * mem[_22370 + mem[_22370]]) + 32 >= 0 and _22370 + ceil32(return_data.size) + (32 * mem[_22370 + mem[_22370]]) + 32 <= test266151307()
                            mem[64] = _22370 + ceil32(return_data.size) + (32 * mem[_22370 + mem[_22370]]) + 32
                            mem[_22370 + ceil32(return_data.size)] = _22730
                            require return_data.size >= _22550 + (32 * _22730) + 32
                            t = _22370 + _22550 + 32
                            u = _22370 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22730:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16970] - 1 < mem[_16970]
                            _25088 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25088))
                            staticcall address(_25088).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25610 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16970
                            s = mem[_25610] - ext_call.return_data[0]
                            continue 
                        mem[_16970 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                        mem[_16970 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17468))
                        call address(_17468).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17486), -1
                        mem[_16970 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16970 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _19388 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16970 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16970 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16970 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16970 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16970 + (6 * ceil32(return_data.size)) + 292] = mem[_16970]
                        s = 0
                        t = _16970 + 32
                        u = _16970 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16970]:
                            mem[u] = mem[t + 12 len 20]
                            _16730 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16970 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16970 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19388))
                        call address(_19388).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16970 + (6 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22371 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22551 = mem[_22371]
                        require mem[_22371] <= test266151307()
                        require _22371 + return_data.size > _22371 + mem[_22371] + 31
                        _22731 = mem[_22371 + mem[_22371]]
                        require mem[_22371 + mem[_22371]] <= test266151307()
                        require (32 * mem[_22371 + mem[_22371]]) + 32 >= 0 and _22371 + ceil32(return_data.size) + (32 * mem[_22371 + mem[_22371]]) + 32 <= test266151307()
                        mem[64] = _22371 + ceil32(return_data.size) + (32 * mem[_22371 + mem[_22371]]) + 32
                        mem[_22371 + ceil32(return_data.size)] = _22731
                        require return_data.size >= _22551 + (32 * _22731) + 32
                        t = _22371 + _22551 + 32
                        u = _22371 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22731:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16970] - 1 < mem[_16970]
                        _25090 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25090))
                        staticcall address(_25090).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25611 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16970
                        s = mem[_25611] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16970 + 44 len 20])
                        staticcall mem[_16970 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16970 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16970 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16970 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                        require ext_code.size(mem[_16970 + 44 len 20])
                        staticcall mem[_16970 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17486)
                        mem[_16970 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16970 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11210 / 2) + 1 < mem[96]
                            _18878 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                            mem[_16970 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16970 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16970 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16970 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16970 + (4 * ceil32(return_data.size)) + 292] = mem[_16970]
                            s = 0
                            t = _16970 + 32
                            u = _16970 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16970]:
                                mem[u] = mem[t + 12 len 20]
                                _16730 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16970 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16970 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18878))
                            call address(_18878).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16970 + (4 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22372 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22552 = mem[_22372]
                            require mem[_22372] <= test266151307()
                            require _22372 + return_data.size > _22372 + mem[_22372] + 31
                            _22732 = mem[_22372 + mem[_22372]]
                            require mem[_22372 + mem[_22372]] <= test266151307()
                            require (32 * mem[_22372 + mem[_22372]]) + 32 >= 0 and _22372 + ceil32(return_data.size) + (32 * mem[_22372 + mem[_22372]]) + 32 <= test266151307()
                            mem[64] = _22372 + ceil32(return_data.size) + (32 * mem[_22372 + mem[_22372]]) + 32
                            mem[_22372 + ceil32(return_data.size)] = _22732
                            require return_data.size >= _22552 + (32 * _22732) + 32
                            t = _22372 + _22552 + 32
                            u = _22372 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22732:
                                mem[u] = mem[t]
                                _16730 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16970] - 1 < mem[_16970]
                            _25092 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25092))
                            staticcall address(_25092).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25612 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16730 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16970
                            s = mem[_25612] - ext_call.return_data[0]
                            continue 
                        mem[_16970 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                        mem[_16970 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17468))
                        call address(_17468).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17486), -1
                        mem[_16970 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16970 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _19682 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16970 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16970 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16970 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16970 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16970 + (6 * ceil32(return_data.size)) + 292] = mem[_16970]
                        s = 0
                        t = _16970 + 32
                        u = _16970 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16970]:
                            mem[u] = mem[t + 12 len 20]
                            _16730 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16970 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16970 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19682))
                        call address(_19682).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16970 + (6 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22373 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22553 = mem[_22373]
                        require mem[_22373] <= test266151307()
                        require _22373 + return_data.size > _22373 + mem[_22373] + 31
                        _22733 = mem[_22373 + mem[_22373]]
                        require mem[_22373 + mem[_22373]] <= test266151307()
                        require (32 * mem[_22373 + mem[_22373]]) + 32 >= 0 and _22373 + ceil32(return_data.size) + (32 * mem[_22373 + mem[_22373]]) + 32 <= test266151307()
                        mem[64] = _22373 + ceil32(return_data.size) + (32 * mem[_22373 + mem[_22373]]) + 32
                        mem[_22373 + ceil32(return_data.size)] = _22733
                        require return_data.size >= _22553 + (32 * _22733) + 32
                        t = _22373 + _22553 + 32
                        u = _22373 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22733:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16970] - 1 < mem[_16970]
                        _25094 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25094))
                        staticcall address(_25094).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25613 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16970
                        s = mem[_25613] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16970 + 44 len 20])
                    staticcall mem[_16970 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16970 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16970 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16970 + (2 * ceil32(return_data.size)) + 164] = address(_17486)
                    require ext_code.size(mem[_16970 + 44 len 20])
                    staticcall mem[_16970 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17486)
                    mem[_16970 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16970 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11210 / 2) + 1 < mem[96]
                        _19188 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                        mem[_16970 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16970 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16970 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16970 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16970 + (4 * ceil32(return_data.size)) + 292] = mem[_16970]
                        s = 0
                        t = _16970 + 32
                        u = _16970 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16970]:
                            mem[u] = mem[t + 12 len 20]
                            _16730 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16970 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16970 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19188))
                        call address(_19188).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16970 + (4 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22374 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22554 = mem[_22374]
                        require mem[_22374] <= test266151307()
                        require _22374 + return_data.size > _22374 + mem[_22374] + 31
                        _22734 = mem[_22374 + mem[_22374]]
                        require mem[_22374 + mem[_22374]] <= test266151307()
                        require (32 * mem[_22374 + mem[_22374]]) + 32 >= 0 and _22374 + ceil32(return_data.size) + (32 * mem[_22374 + mem[_22374]]) + 32 <= test266151307()
                        mem[64] = _22374 + ceil32(return_data.size) + (32 * mem[_22374 + mem[_22374]]) + 32
                        mem[_22374 + ceil32(return_data.size)] = _22734
                        require return_data.size >= _22554 + (32 * _22734) + 32
                        t = _22374 + _22554 + 32
                        u = _22374 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22734:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16970] - 1 < mem[_16970]
                        _25096 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25096))
                        staticcall address(_25096).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25614 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16970
                        s = mem[_25614] - ext_call.return_data[0]
                        continue 
                    mem[_16970 + (4 * ceil32(return_data.size)) + 132] = address(_17486)
                    mem[_16970 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17468))
                    call address(_17468).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17486), -1
                    mem[_16970 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16970 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11210 / 2) + 1 < mem[96]
                    _19955 = mem[(32 * idx + -(_11210 / 2) + 1) + 128]
                    mem[_16970 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16970 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16970 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16970 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16970 + (6 * ceil32(return_data.size)) + 292] = mem[_16970]
                    s = 0
                    t = _16970 + 32
                    u = _16970 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16970]:
                        mem[u] = mem[t + 12 len 20]
                        _16730 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16970 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16970 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19955))
                    call address(_19955).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16970 + (6 * ceil32(return_data.size)) + (32 * mem[_16970]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22375 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22555 = mem[_22375]
                    require mem[_22375] <= test266151307()
                    require _22375 + return_data.size > _22375 + mem[_22375] + 31
                    _22735 = mem[_22375 + mem[_22375]]
                    require mem[_22375 + mem[_22375]] <= test266151307()
                    require (32 * mem[_22375 + mem[_22375]]) + 32 >= 0 and _22375 + ceil32(return_data.size) + (32 * mem[_22375 + mem[_22375]]) + 32 <= test266151307()
                    mem[64] = _22375 + ceil32(return_data.size) + (32 * mem[_22375 + mem[_22375]]) + 32
                    mem[_22375 + ceil32(return_data.size)] = _22735
                    require return_data.size >= _22555 + (32 * _22735) + 32
                    t = _22375 + _22555 + 32
                    u = _22375 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22735:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16970] - 1 < mem[_16970]
                    _25098 = mem[(32 * mem[_16970] - 1) + _16970 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25098))
                    staticcall address(_25098).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25615 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16970
                    s = mem[_25615] - ext_call.return_data[0]
                    continue 
                _16844 = mem[64]
                mem[mem[64]] = 4
                mem[64] = mem[64] + 160
                mem[_16844 + 32 len 128] = call.data[calldata.size len 128]
                require idx < mem[96]
                require 0 < mem[_16844]
                mem[_16844 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_16844]
                mem[_16844 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_16844]
                mem[_16844 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require idx + 3 < mem[96]
                require 3 < mem[_16844]
                mem[_16844 + 128] = mem[(32 * idx + 3) + 140 len 20]
                require mem[_16844] - 1 < mem[_16844]
                mem[_16844 + 164] = this.address
                require ext_code.size(mem[(32 * mem[_16844] - 1) + _16844 + 44 len 20])
                staticcall mem[(32 * mem[_16844] - 1) + _16844 + 44 len 20].balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[_16844 + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16844 + ceil32(return_data.size) + 160
                require return_data.size >= 32
                require 0 < mem[_16844]
                _17446 = mem[_16844 + 32]
                require idx + -(_11210 / 2) + 2 < mem[96]
                _17470 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_16844 + 44 len 20])
                    staticcall mem[_16844 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16844 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16844 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16844 + (2 * ceil32(return_data.size)) + 196] = address(_17470)
                    require ext_code.size(mem[_16844 + 44 len 20])
                    staticcall mem[_16844 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17470)
                    mem[_16844 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16844 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11210 / 2) + 2 < mem[96]
                        _18516 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                        mem[_16844 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16844 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16844 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16844 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16844 + (4 * ceil32(return_data.size)) + 324] = mem[_16844]
                        s = 0
                        t = _16844 + 32
                        u = _16844 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16844]:
                            mem[u] = mem[t + 12 len 20]
                            _16730 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16844 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16844 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_18516))
                        call address(_18516).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16844 + (4 * ceil32(return_data.size)) + (32 * mem[_16844]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22376 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22556 = mem[_22376]
                        require mem[_22376] <= test266151307()
                        require _22376 + return_data.size > _22376 + mem[_22376] + 31
                        _22736 = mem[_22376 + mem[_22376]]
                        require mem[_22376 + mem[_22376]] <= test266151307()
                        require (32 * mem[_22376 + mem[_22376]]) + 32 >= 0 and _22376 + ceil32(return_data.size) + (32 * mem[_22376 + mem[_22376]]) + 32 <= test266151307()
                        mem[64] = _22376 + ceil32(return_data.size) + (32 * mem[_22376 + mem[_22376]]) + 32
                        mem[_22376 + ceil32(return_data.size)] = _22736
                        require return_data.size >= _22556 + (32 * _22736) + 32
                        t = _22376 + _22556 + 32
                        u = _22376 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22736:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16844] - 1 < mem[_16844]
                        _25100 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25100))
                        staticcall address(_25100).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25616 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16844
                        s = mem[_25616] - ext_call.return_data[0]
                        continue 
                    mem[_16844 + (4 * ceil32(return_data.size)) + 164] = address(_17470)
                    mem[_16844 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17446))
                    call address(_17446).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17470), -1
                    mem[_16844 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11210 / 2) + 2 < mem[96]
                    _19287 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                    mem[_16844 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16844 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16844 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16844 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16844 + (6 * ceil32(return_data.size)) + 324] = mem[_16844]
                    s = 0
                    t = _16844 + 32
                    u = _16844 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16844]:
                        mem[u] = mem[t + 12 len 20]
                        _16730 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16844 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16844 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19287))
                    call address(_19287).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22377 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22557 = mem[_22377]
                    require mem[_22377] <= test266151307()
                    require _22377 + return_data.size > _22377 + mem[_22377] + 31
                    _22737 = mem[_22377 + mem[_22377]]
                    require mem[_22377 + mem[_22377]] <= test266151307()
                    require (32 * mem[_22377 + mem[_22377]]) + 32 >= 0 and _22377 + ceil32(return_data.size) + (32 * mem[_22377 + mem[_22377]]) + 32 <= test266151307()
                    mem[64] = _22377 + ceil32(return_data.size) + (32 * mem[_22377 + mem[_22377]]) + 32
                    mem[_22377 + ceil32(return_data.size)] = _22737
                    require return_data.size >= _22557 + (32 * _22737) + 32
                    t = _22377 + _22557 + 32
                    u = _22377 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22737:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16844] - 1 < mem[_16844]
                    _25102 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25102))
                    staticcall address(_25102).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25617 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16844
                    s = mem[_25617] - ext_call.return_data[0]
                    continue 
                if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                    require ext_code.size(mem[_16844 + 44 len 20])
                    staticcall mem[_16844 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16844 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16844 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16844 + (2 * ceil32(return_data.size)) + 196] = address(_17470)
                    require ext_code.size(mem[_16844 + 44 len 20])
                    staticcall mem[_16844 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17470)
                    mem[_16844 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16844 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11210 / 2) + 2 < mem[96]
                        _18783 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                        mem[_16844 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16844 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16844 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16844 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16844 + (4 * ceil32(return_data.size)) + 324] = mem[_16844]
                        s = 0
                        t = _16844 + 32
                        u = _16844 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16844]:
                            mem[u] = mem[t + 12 len 20]
                            _16730 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16844 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16844 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_18783))
                        call address(_18783).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16844 + (4 * ceil32(return_data.size)) + (32 * mem[_16844]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22378 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22558 = mem[_22378]
                        require mem[_22378] <= test266151307()
                        require _22378 + return_data.size > _22378 + mem[_22378] + 31
                        _22738 = mem[_22378 + mem[_22378]]
                        require mem[_22378 + mem[_22378]] <= test266151307()
                        require (32 * mem[_22378 + mem[_22378]]) + 32 >= 0 and _22378 + ceil32(return_data.size) + (32 * mem[_22378 + mem[_22378]]) + 32 <= test266151307()
                        mem[64] = _22378 + ceil32(return_data.size) + (32 * mem[_22378 + mem[_22378]]) + 32
                        mem[_22378 + ceil32(return_data.size)] = _22738
                        require return_data.size >= _22558 + (32 * _22738) + 32
                        t = _22378 + _22558 + 32
                        u = _22378 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22738:
                            mem[u] = mem[t]
                            _16730 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16844] - 1 < mem[_16844]
                        _25104 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25104))
                        staticcall address(_25104).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25618 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16730 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16844
                        s = mem[_25618] - ext_call.return_data[0]
                        continue 
                    mem[_16844 + (4 * ceil32(return_data.size)) + 164] = address(_17470)
                    mem[_16844 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17446))
                    call address(_17446).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17470), -1
                    mem[_16844 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11210 / 2) + 2 < mem[96]
                    _19588 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                    mem[_16844 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16844 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16844 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16844 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16844 + (6 * ceil32(return_data.size)) + 324] = mem[_16844]
                    s = 0
                    t = _16844 + 32
                    u = _16844 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16844]:
                        mem[u] = mem[t + 12 len 20]
                        _16730 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16844 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16844 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19588))
                    call address(_19588).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22379 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22559 = mem[_22379]
                    require mem[_22379] <= test266151307()
                    require _22379 + return_data.size > _22379 + mem[_22379] + 31
                    _22739 = mem[_22379 + mem[_22379]]
                    require mem[_22379 + mem[_22379]] <= test266151307()
                    require (32 * mem[_22379 + mem[_22379]]) + 32 >= 0 and _22379 + ceil32(return_data.size) + (32 * mem[_22379 + mem[_22379]]) + 32 <= test266151307()
                    mem[64] = _22379 + ceil32(return_data.size) + (32 * mem[_22379 + mem[_22379]]) + 32
                    mem[_22379 + ceil32(return_data.size)] = _22739
                    require return_data.size >= _22559 + (32 * _22739) + 32
                    t = _22379 + _22559 + 32
                    u = _22379 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22739:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16844] - 1 < mem[_16844]
                    _25106 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25106))
                    staticcall address(_25106).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25619 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16844
                    s = mem[_25619] - ext_call.return_data[0]
                    continue 
                if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(mem[_16844 + 44 len 20])
                staticcall mem[_16844 + 44 len 20].decimals() with:
                        gas gas_remaining wei
                mem[_16844 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_16844 + (2 * ceil32(return_data.size)) + 164] = this.address
                mem[_16844 + (2 * ceil32(return_data.size)) + 196] = address(_17470)
                require ext_code.size(mem[_16844 + 44 len 20])
                staticcall mem[_16844 + 44 len 20].allowance(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_17470)
                mem[_16844 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16844 + (4 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_11210 / 2) + 2 < mem[96]
                    _19075 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                    mem[_16844 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16844 + (4 * ceil32(return_data.size)) + 164] = s
                    mem[_16844 + (4 * ceil32(return_data.size)) + 196] = 0
                    mem[_16844 + (4 * ceil32(return_data.size)) + 228] = 160
                    mem[_16844 + (4 * ceil32(return_data.size)) + 324] = mem[_16844]
                    s = 0
                    t = _16844 + 32
                    u = _16844 + (4 * ceil32(return_data.size)) + 356
                    while s < mem[_16844]:
                        mem[u] = mem[t + 12 len 20]
                        _16730 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16844 + (4 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16844 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19075))
                    call address(_19075).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16844 + (4 * ceil32(return_data.size)) + (32 * mem[_16844]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22380 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22560 = mem[_22380]
                    require mem[_22380] <= test266151307()
                    require _22380 + return_data.size > _22380 + mem[_22380] + 31
                    _22740 = mem[_22380 + mem[_22380]]
                    require mem[_22380 + mem[_22380]] <= test266151307()
                    require (32 * mem[_22380 + mem[_22380]]) + 32 >= 0 and _22380 + ceil32(return_data.size) + (32 * mem[_22380 + mem[_22380]]) + 32 <= test266151307()
                    mem[64] = _22380 + ceil32(return_data.size) + (32 * mem[_22380 + mem[_22380]]) + 32
                    mem[_22380 + ceil32(return_data.size)] = _22740
                    require return_data.size >= _22560 + (32 * _22740) + 32
                    t = _22380 + _22560 + 32
                    u = _22380 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22740:
                        mem[u] = mem[t]
                        _16730 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16844] - 1 < mem[_16844]
                    _25108 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25108))
                    staticcall address(_25108).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25620 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16730 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16844
                    s = mem[_25620] - ext_call.return_data[0]
                    continue 
                mem[_16844 + (4 * ceil32(return_data.size)) + 164] = address(_17470)
                mem[_16844 + (4 * ceil32(return_data.size)) + 196] = -1
                require ext_code.size(address(_17446))
                call address(_17446).approve(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args address(_17470), -1
                mem[_16844 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16844 + (6 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_11210 / 2) + 2 < mem[96]
                _19864 = mem[(32 * idx + -(_11210 / 2) + 2) + 128]
                mem[_16844 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_16844 + (6 * ceil32(return_data.size)) + 164] = s
                mem[_16844 + (6 * ceil32(return_data.size)) + 196] = 0
                mem[_16844 + (6 * ceil32(return_data.size)) + 228] = 160
                mem[_16844 + (6 * ceil32(return_data.size)) + 324] = mem[_16844]
                s = 0
                t = _16844 + 32
                u = _16844 + (6 * ceil32(return_data.size)) + 356
                while s < mem[_16844]:
                    mem[u] = mem[t + 12 len 20]
                    _16730 = mem[96]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_16844 + (6 * ceil32(return_data.size)) + 260] = this.address
                mem[_16844 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                require ext_code.size(address(_19864))
                call address(_19864).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _16844 + (6 * ceil32(return_data.size)) + (32 * mem[_16844]) + -mem[64] + 352]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22381 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22561 = mem[_22381]
                require mem[_22381] <= test266151307()
                require _22381 + return_data.size > _22381 + mem[_22381] + 31
                _22741 = mem[_22381 + mem[_22381]]
                require mem[_22381 + mem[_22381]] <= test266151307()
                require (32 * mem[_22381 + mem[_22381]]) + 32 >= 0 and _22381 + ceil32(return_data.size) + (32 * mem[_22381 + mem[_22381]]) + 32 <= test266151307()
                mem[64] = _22381 + ceil32(return_data.size) + (32 * mem[_22381 + mem[_22381]]) + 32
                mem[_22381 + ceil32(return_data.size)] = _22741
                require return_data.size >= _22561 + (32 * _22741) + 32
                t = _22381 + _22561 + 32
                u = _22381 + ceil32(return_data.size) + 32
                s = 0
                while s < _22741:
                    mem[u] = mem[t]
                    _16730 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_16844] - 1 < mem[_16844]
                _25110 = mem[(32 * mem[_16844] - 1) + _16844 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_25110))
                staticcall address(_25110).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25621 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _16730 = mem[96]
                idx = idx + 3
                s = ext_call.return_data[0]
                s = _16844
                s = mem[_25621] - ext_call.return_data[0]
                continue 
            require _11210 / 2 < mem[96]
            _16748 = mem[(16 * Mask(251, 1, _11210)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_16748))
            staticcall address(_16748).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16808 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_16808] < _11288 - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11215 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11241 = mem[_11215]
                require mem[_11215] == mem[_11215 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _11292 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_11292)
                require ext_code.size(address(_11241))
                staticcall address(_11241).getPair(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_11292)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11339 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11371 = mem[_11339]
                require mem[_11339] == mem[_11339 + 12 len 20]
                require ext_code.size(mem[_11339 + 12 len 20])
                staticcall mem[_11339 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11551 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11695 = mem[_11551]
                require mem[_11551] == mem[_11551 + 18 len 14]
                _11819 = mem[_11551 + 32]
                require mem[_11551 + 32] == mem[_11551 + 50 len 14]
                require mem[_11551 + 64] == mem[_11551 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11551 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11551 + 50 len 14] / (997 * s) + (1000 * mem[_11551 + 18 len 14])
                        idx = idx + 1
                        s = _11371
                        s = 997 * s * Mask(112, 0, _11819) / (997 * s) + (1000 * Mask(112, 0, _11695))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_11551 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11551 + 50 len 14] / (997 * s) + (1000 * mem[_11551 + 18 len 14])
                        idx = idx + 1
                        s = _11371
                        s = 997 * s * Mask(112, 0, _11819) / (997 * s) + (1000 * Mask(112, 0, _11695))
                        continue 
                require (997 * s) + (1000 * mem[_11551 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11551 + 18 len 14] / (997 * s) + (1000 * mem[_11551 + 50 len 14])
                idx = idx + 1
                s = _11371
                s = 997 * s * Mask(112, 0, _11695) / (997 * s) + (1000 * Mask(112, 0, _11819))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _11213 = mem[96]
            require mem[96] / 2 < mem[96]
            _11238 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_11238))
            staticcall address(_11238).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11266 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11291 = mem[_11266]
            _16731 = mem[96]
            idx = _11213 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _16731 - 1:
                require idx + -(_11213 / 2) + 1 < mem[96]
                require idx - (_11213 / 2) < mem[96]
                require idx + -(_11213 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_11213 / 2)) + 140 len 20] != mem[(32 * idx + -(_11213 / 2) + 1) + 140 len 20]:
                    require idx - (_11213 / 2) < mem[96]
                    if mem[(32 * idx - (_11213 / 2)) + 140 len 20] != mem[(32 * idx + -(_11213 / 2) + 1) + 140 len 20]:
                        _16847 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16847 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16847]
                        mem[_16847 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16847]
                        mem[_16847 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16847] - 1 < mem[_16847]
                        mem[_16847 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16847] - 1) + _16847 + 44 len 20])
                        staticcall mem[(32 * mem[_16847] - 1) + _16847 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16847 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16847 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16847]
                        _17346 = mem[_16847 + 32]
                        require idx - (_11213 / 2) < mem[96]
                        _17370 = mem[(32 * idx - (_11213 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16847 + 44 len 20])
                            staticcall mem[_16847 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16847 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16847 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16847 + (2 * ceil32(return_data.size)) + 132] = address(_17370)
                            require ext_code.size(mem[_16847 + 44 len 20])
                            staticcall mem[_16847 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17370)
                            mem[_16847 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16847 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11213 / 2) < mem[96]
                                _18258 = mem[(32 * idx - (_11213 / 2)) + 128]
                                mem[_16847 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16847 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16847 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16847 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16847 + (4 * ceil32(return_data.size)) + 260] = mem[_16847]
                                s = 0
                                t = _16847 + 32
                                u = _16847 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16847]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16731 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16847 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16847 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18258))
                                call address(_18258).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16847 + (4 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22382 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22562 = mem[_22382]
                                require mem[_22382] <= test266151307()
                                require _22382 + return_data.size > _22382 + mem[_22382] + 31
                                _22742 = mem[_22382 + mem[_22382]]
                                require mem[_22382 + mem[_22382]] <= test266151307()
                                require (32 * mem[_22382 + mem[_22382]]) + 32 >= 0 and _22382 + ceil32(return_data.size) + (32 * mem[_22382 + mem[_22382]]) + 32 <= test266151307()
                                mem[64] = _22382 + ceil32(return_data.size) + (32 * mem[_22382 + mem[_22382]]) + 32
                                mem[_22382 + ceil32(return_data.size)] = _22742
                                require return_data.size >= _22562 + (32 * _22742) + 32
                                t = _22382 + _22562 + 32
                                u = _22382 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22742:
                                    mem[u] = mem[t]
                                    _16731 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16847] - 1 < mem[_16847]
                                _25112 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25112))
                                staticcall address(_25112).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25622 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16731 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16847
                                s = mem[_25622] - ext_call.return_data[0]
                                continue 
                            mem[_16847 + (4 * ceil32(return_data.size)) + 100] = address(_17370)
                            mem[_16847 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17346))
                            call address(_17346).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17370), -1
                            mem[_16847 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16847 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11213 / 2) < mem[96]
                            _18885 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16847 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16847 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16847 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16847 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16847 + (6 * ceil32(return_data.size)) + 260] = mem[_16847]
                            s = 0
                            t = _16847 + 32
                            u = _16847 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16847]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16847 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16847 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18885))
                            call address(_18885).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16847 + (6 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22383 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22563 = mem[_22383]
                            require mem[_22383] <= test266151307()
                            require _22383 + return_data.size > _22383 + mem[_22383] + 31
                            _22743 = mem[_22383 + mem[_22383]]
                            require mem[_22383 + mem[_22383]] <= test266151307()
                            require (32 * mem[_22383 + mem[_22383]]) + 32 >= 0 and _22383 + ceil32(return_data.size) + (32 * mem[_22383 + mem[_22383]]) + 32 <= test266151307()
                            mem[64] = _22383 + ceil32(return_data.size) + (32 * mem[_22383 + mem[_22383]]) + 32
                            mem[_22383 + ceil32(return_data.size)] = _22743
                            require return_data.size >= _22563 + (32 * _22743) + 32
                            t = _22383 + _22563 + 32
                            u = _22383 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22743:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16847] - 1 < mem[_16847]
                            _25114 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25114))
                            staticcall address(_25114).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25623 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16847
                            s = mem[_25623] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16847 + 44 len 20])
                            staticcall mem[_16847 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16847 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16847 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16847 + (2 * ceil32(return_data.size)) + 132] = address(_17370)
                            require ext_code.size(mem[_16847 + 44 len 20])
                            staticcall mem[_16847 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17370)
                            mem[_16847 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16847 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11213 / 2) < mem[96]
                                _18446 = mem[(32 * idx - (_11213 / 2)) + 128]
                                mem[_16847 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16847 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16847 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16847 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16847 + (4 * ceil32(return_data.size)) + 260] = mem[_16847]
                                s = 0
                                t = _16847 + 32
                                u = _16847 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16847]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16731 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16847 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16847 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18446))
                                call address(_18446).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16847 + (4 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22384 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22564 = mem[_22384]
                                require mem[_22384] <= test266151307()
                                require _22384 + return_data.size > _22384 + mem[_22384] + 31
                                _22744 = mem[_22384 + mem[_22384]]
                                require mem[_22384 + mem[_22384]] <= test266151307()
                                require (32 * mem[_22384 + mem[_22384]]) + 32 >= 0 and _22384 + ceil32(return_data.size) + (32 * mem[_22384 + mem[_22384]]) + 32 <= test266151307()
                                mem[64] = _22384 + ceil32(return_data.size) + (32 * mem[_22384 + mem[_22384]]) + 32
                                mem[_22384 + ceil32(return_data.size)] = _22744
                                require return_data.size >= _22564 + (32 * _22744) + 32
                                t = _22384 + _22564 + 32
                                u = _22384 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22744:
                                    mem[u] = mem[t]
                                    _16731 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16847] - 1 < mem[_16847]
                                _25116 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25116))
                                staticcall address(_25116).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25624 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16731 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16847
                                s = mem[_25624] - ext_call.return_data[0]
                                continue 
                            mem[_16847 + (4 * ceil32(return_data.size)) + 100] = address(_17370)
                            mem[_16847 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17346))
                            call address(_17346).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17370), -1
                            mem[_16847 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16847 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11213 / 2) < mem[96]
                            _19195 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16847 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16847 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16847 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16847 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16847 + (6 * ceil32(return_data.size)) + 260] = mem[_16847]
                            s = 0
                            t = _16847 + 32
                            u = _16847 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16847]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16847 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16847 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19195))
                            call address(_19195).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16847 + (6 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22385 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22565 = mem[_22385]
                            require mem[_22385] <= test266151307()
                            require _22385 + return_data.size > _22385 + mem[_22385] + 31
                            _22745 = mem[_22385 + mem[_22385]]
                            require mem[_22385 + mem[_22385]] <= test266151307()
                            require (32 * mem[_22385 + mem[_22385]]) + 32 >= 0 and _22385 + ceil32(return_data.size) + (32 * mem[_22385 + mem[_22385]]) + 32 <= test266151307()
                            mem[64] = _22385 + ceil32(return_data.size) + (32 * mem[_22385 + mem[_22385]]) + 32
                            mem[_22385 + ceil32(return_data.size)] = _22745
                            require return_data.size >= _22565 + (32 * _22745) + 32
                            t = _22385 + _22565 + 32
                            u = _22385 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22745:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16847] - 1 < mem[_16847]
                            _25118 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25118))
                            staticcall address(_25118).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25625 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16847
                            s = mem[_25625] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16847 + 44 len 20])
                        staticcall mem[_16847 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16847 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16847 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16847 + (2 * ceil32(return_data.size)) + 132] = address(_17370)
                        require ext_code.size(mem[_16847 + 44 len 20])
                        staticcall mem[_16847 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17370)
                        mem[_16847 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16847 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11213 / 2) < mem[96]
                            _18696 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16847 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16847 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16847 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16847 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16847 + (4 * ceil32(return_data.size)) + 260] = mem[_16847]
                            s = 0
                            t = _16847 + 32
                            u = _16847 + (4 * ceil32(return_data.size)) + 292
                            while s < mem[_16847]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16847 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16847 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18696))
                            call address(_18696).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16847 + (4 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22386 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22566 = mem[_22386]
                            require mem[_22386] <= test266151307()
                            require _22386 + return_data.size > _22386 + mem[_22386] + 31
                            _22746 = mem[_22386 + mem[_22386]]
                            require mem[_22386 + mem[_22386]] <= test266151307()
                            require (32 * mem[_22386 + mem[_22386]]) + 32 >= 0 and _22386 + ceil32(return_data.size) + (32 * mem[_22386 + mem[_22386]]) + 32 <= test266151307()
                            mem[64] = _22386 + ceil32(return_data.size) + (32 * mem[_22386 + mem[_22386]]) + 32
                            mem[_22386 + ceil32(return_data.size)] = _22746
                            require return_data.size >= _22566 + (32 * _22746) + 32
                            t = _22386 + _22566 + 32
                            u = _22386 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22746:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16847] - 1 < mem[_16847]
                            _25120 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25120))
                            staticcall address(_25120).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25626 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16847
                            s = mem[_25626] - ext_call.return_data[0]
                            continue 
                        mem[_16847 + (4 * ceil32(return_data.size)) + 100] = address(_17370)
                        mem[_16847 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17346))
                        call address(_17346).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17370), -1
                        mem[_16847 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16847 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11213 / 2) < mem[96]
                        _19496 = mem[(32 * idx - (_11213 / 2)) + 128]
                        mem[_16847 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16847 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16847 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16847 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16847 + (6 * ceil32(return_data.size)) + 260] = mem[_16847]
                        s = 0
                        t = _16847 + 32
                        u = _16847 + (6 * ceil32(return_data.size)) + 292
                        while s < mem[_16847]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16847 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16847 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19496))
                        call address(_19496).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16847 + (6 * ceil32(return_data.size)) + (32 * mem[_16847]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22387 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22567 = mem[_22387]
                        require mem[_22387] <= test266151307()
                        require _22387 + return_data.size > _22387 + mem[_22387] + 31
                        _22747 = mem[_22387 + mem[_22387]]
                        require mem[_22387 + mem[_22387]] <= test266151307()
                        require (32 * mem[_22387 + mem[_22387]]) + 32 >= 0 and _22387 + ceil32(return_data.size) + (32 * mem[_22387 + mem[_22387]]) + 32 <= test266151307()
                        mem[64] = _22387 + ceil32(return_data.size) + (32 * mem[_22387 + mem[_22387]]) + 32
                        mem[_22387 + ceil32(return_data.size)] = _22747
                        require return_data.size >= _22567 + (32 * _22747) + 32
                        t = _22387 + _22567 + 32
                        u = _22387 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22747:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16847] - 1 < mem[_16847]
                        _25122 = mem[(32 * mem[_16847] - 1) + _16847 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25122))
                        staticcall address(_25122).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25627 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16847
                        s = mem[_25627] - ext_call.return_data[0]
                        continue 
                    _16849 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16849 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16849]
                    mem[_16849 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16849]
                    mem[_16849 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16849]
                    mem[_16849 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16849] - 1 < mem[_16849]
                    mem[_16849 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16849] - 1) + _16849 + 44 len 20])
                    staticcall mem[(32 * mem[_16849] - 1) + _16849 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16849 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16849 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16849]
                    _17394 = mem[_16849 + 32]
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _17419 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16849 + 44 len 20])
                        staticcall mem[_16849 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16849 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16849 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16849 + (2 * ceil32(return_data.size)) + 164] = address(_17419)
                        require ext_code.size(mem[_16849 + 44 len 20])
                        staticcall mem[_16849 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17419)
                        mem[_16849 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11213 / 2) + 1 < mem[96]
                            _18373 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                            mem[_16849 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16849 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16849 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16849 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16849 + (4 * ceil32(return_data.size)) + 292] = mem[_16849]
                            s = 0
                            t = _16849 + 32
                            u = _16849 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16849]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16849 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16849 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18373))
                            call address(_18373).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16849 + (4 * ceil32(return_data.size)) + (32 * mem[_16849]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22388 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22568 = mem[_22388]
                            require mem[_22388] <= test266151307()
                            require _22388 + return_data.size > _22388 + mem[_22388] + 31
                            _22748 = mem[_22388 + mem[_22388]]
                            require mem[_22388 + mem[_22388]] <= test266151307()
                            require (32 * mem[_22388 + mem[_22388]]) + 32 >= 0 and _22388 + ceil32(return_data.size) + (32 * mem[_22388 + mem[_22388]]) + 32 <= test266151307()
                            mem[64] = _22388 + ceil32(return_data.size) + (32 * mem[_22388 + mem[_22388]]) + 32
                            mem[_22388 + ceil32(return_data.size)] = _22748
                            require return_data.size >= _22568 + (32 * _22748) + 32
                            t = _22388 + _22568 + 32
                            u = _22388 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22748:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16849] - 1 < mem[_16849]
                            _25124 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25124))
                            staticcall address(_25124).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16849
                            s = mem[_25628] - ext_call.return_data[0]
                            continue 
                        mem[_16849 + (4 * ceil32(return_data.size)) + 132] = address(_17419)
                        mem[_16849 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17394))
                        call address(_17394).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17419), -1
                        mem[_16849 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _19084 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16849 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16849 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16849 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16849 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16849 + (6 * ceil32(return_data.size)) + 292] = mem[_16849]
                        s = 0
                        t = _16849 + 32
                        u = _16849 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16849]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16849 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16849 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19084))
                        call address(_19084).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22389 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22569 = mem[_22389]
                        require mem[_22389] <= test266151307()
                        require _22389 + return_data.size > _22389 + mem[_22389] + 31
                        _22749 = mem[_22389 + mem[_22389]]
                        require mem[_22389 + mem[_22389]] <= test266151307()
                        require (32 * mem[_22389 + mem[_22389]]) + 32 >= 0 and _22389 + ceil32(return_data.size) + (32 * mem[_22389 + mem[_22389]]) + 32 <= test266151307()
                        mem[64] = _22389 + ceil32(return_data.size) + (32 * mem[_22389 + mem[_22389]]) + 32
                        mem[_22389 + ceil32(return_data.size)] = _22749
                        require return_data.size >= _22569 + (32 * _22749) + 32
                        t = _22389 + _22569 + 32
                        u = _22389 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22749:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16849] - 1 < mem[_16849]
                        _25126 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25126))
                        staticcall address(_25126).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16849
                        s = mem[_25629] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16849 + 44 len 20])
                        staticcall mem[_16849 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16849 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16849 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16849 + (2 * ceil32(return_data.size)) + 164] = address(_17419)
                        require ext_code.size(mem[_16849 + 44 len 20])
                        staticcall mem[_16849 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17419)
                        mem[_16849 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11213 / 2) + 1 < mem[96]
                            _18608 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                            mem[_16849 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16849 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16849 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16849 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16849 + (4 * ceil32(return_data.size)) + 292] = mem[_16849]
                            s = 0
                            t = _16849 + 32
                            u = _16849 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16849]:
                                mem[u] = mem[t + 12 len 20]
                                _16731 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16849 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16849 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18608))
                            call address(_18608).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16849 + (4 * ceil32(return_data.size)) + (32 * mem[_16849]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22390 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22570 = mem[_22390]
                            require mem[_22390] <= test266151307()
                            require _22390 + return_data.size > _22390 + mem[_22390] + 31
                            _22750 = mem[_22390 + mem[_22390]]
                            require mem[_22390 + mem[_22390]] <= test266151307()
                            require (32 * mem[_22390 + mem[_22390]]) + 32 >= 0 and _22390 + ceil32(return_data.size) + (32 * mem[_22390 + mem[_22390]]) + 32 <= test266151307()
                            mem[64] = _22390 + ceil32(return_data.size) + (32 * mem[_22390 + mem[_22390]]) + 32
                            mem[_22390 + ceil32(return_data.size)] = _22750
                            require return_data.size >= _22570 + (32 * _22750) + 32
                            t = _22390 + _22570 + 32
                            u = _22390 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22750:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16849] - 1 < mem[_16849]
                            _25128 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25128))
                            staticcall address(_25128).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25630 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16849
                            s = mem[_25630] - ext_call.return_data[0]
                            continue 
                        mem[_16849 + (4 * ceil32(return_data.size)) + 132] = address(_17419)
                        mem[_16849 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17394))
                        call address(_17394).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17419), -1
                        mem[_16849 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _19397 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16849 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16849 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16849 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16849 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16849 + (6 * ceil32(return_data.size)) + 292] = mem[_16849]
                        s = 0
                        t = _16849 + 32
                        u = _16849 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16849]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16849 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16849 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19397))
                        call address(_19397).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22391 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22571 = mem[_22391]
                        require mem[_22391] <= test266151307()
                        require _22391 + return_data.size > _22391 + mem[_22391] + 31
                        _22751 = mem[_22391 + mem[_22391]]
                        require mem[_22391 + mem[_22391]] <= test266151307()
                        require (32 * mem[_22391 + mem[_22391]]) + 32 >= 0 and _22391 + ceil32(return_data.size) + (32 * mem[_22391 + mem[_22391]]) + 32 <= test266151307()
                        mem[64] = _22391 + ceil32(return_data.size) + (32 * mem[_22391 + mem[_22391]]) + 32
                        mem[_22391 + ceil32(return_data.size)] = _22751
                        require return_data.size >= _22571 + (32 * _22751) + 32
                        t = _22391 + _22571 + 32
                        u = _22391 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22751:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16849] - 1 < mem[_16849]
                        _25130 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25130))
                        staticcall address(_25130).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25631 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16849
                        s = mem[_25631] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16849 + 44 len 20])
                    staticcall mem[_16849 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16849 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16849 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16849 + (2 * ceil32(return_data.size)) + 164] = address(_17419)
                    require ext_code.size(mem[_16849 + 44 len 20])
                    staticcall mem[_16849 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17419)
                    mem[_16849 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16849 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _18890 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16849 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16849 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16849 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16849 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16849 + (4 * ceil32(return_data.size)) + 292] = mem[_16849]
                        s = 0
                        t = _16849 + 32
                        u = _16849 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16849]:
                            mem[u] = mem[t + 12 len 20]
                            _16731 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16849 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16849 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_18890))
                        call address(_18890).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16849 + (4 * ceil32(return_data.size)) + (32 * mem[_16849]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22392 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22572 = mem[_22392]
                        require mem[_22392] <= test266151307()
                        require _22392 + return_data.size > _22392 + mem[_22392] + 31
                        _22752 = mem[_22392 + mem[_22392]]
                        require mem[_22392 + mem[_22392]] <= test266151307()
                        require (32 * mem[_22392 + mem[_22392]]) + 32 >= 0 and _22392 + ceil32(return_data.size) + (32 * mem[_22392 + mem[_22392]]) + 32 <= test266151307()
                        mem[64] = _22392 + ceil32(return_data.size) + (32 * mem[_22392 + mem[_22392]]) + 32
                        mem[_22392 + ceil32(return_data.size)] = _22752
                        require return_data.size >= _22572 + (32 * _22752) + 32
                        t = _22392 + _22572 + 32
                        u = _22392 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22752:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16849] - 1 < mem[_16849]
                        _25132 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25132))
                        staticcall address(_25132).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25632 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16849
                        s = mem[_25632] - ext_call.return_data[0]
                        continue 
                    mem[_16849 + (4 * ceil32(return_data.size)) + 132] = address(_17419)
                    mem[_16849 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17394))
                    call address(_17394).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17419), -1
                    mem[_16849 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16849 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _19693 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    mem[_16849 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16849 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16849 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16849 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16849 + (6 * ceil32(return_data.size)) + 292] = mem[_16849]
                    s = 0
                    t = _16849 + 32
                    u = _16849 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16849]:
                        mem[u] = mem[t + 12 len 20]
                        _16731 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16849 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16849 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19693))
                    call address(_19693).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16849 + (6 * ceil32(return_data.size)) + (32 * mem[_16849]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22393 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22573 = mem[_22393]
                    require mem[_22393] <= test266151307()
                    require _22393 + return_data.size > _22393 + mem[_22393] + 31
                    _22753 = mem[_22393 + mem[_22393]]
                    require mem[_22393 + mem[_22393]] <= test266151307()
                    require (32 * mem[_22393 + mem[_22393]]) + 32 >= 0 and _22393 + ceil32(return_data.size) + (32 * mem[_22393 + mem[_22393]]) + 32 <= test266151307()
                    mem[64] = _22393 + ceil32(return_data.size) + (32 * mem[_22393 + mem[_22393]]) + 32
                    mem[_22393 + ceil32(return_data.size)] = _22753
                    require return_data.size >= _22573 + (32 * _22753) + 32
                    t = _22393 + _22573 + 32
                    u = _22393 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22753:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16849] - 1 < mem[_16849]
                    _25134 = mem[(32 * mem[_16849] - 1) + _16849 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25134))
                    staticcall address(_25134).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25633 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16849
                    s = mem[_25633] - ext_call.return_data[0]
                    continue 
                require idx + -(_11213 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_11213 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11213 / 2) + 1) + 140 len 20]:
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    require idx - (_11213 / 2) < mem[96]
                    if mem[(32 * idx - (_11213 / 2)) + 140 len 20] != mem[(32 * idx + -(_11213 / 2) + 1) + 140 len 20]:
                        _16978 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16978 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16978]
                        mem[_16978 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16978]
                        mem[_16978 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16978] - 1 < mem[_16978]
                        mem[_16978 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16978] - 1) + _16978 + 44 len 20])
                        staticcall mem[(32 * mem[_16978] - 1) + _16978 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16978 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16978 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16978]
                        _17420 = mem[_16978 + 32]
                        require idx - (_11213 / 2) < mem[96]
                        _17448 = mem[(32 * idx - (_11213 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16978 + 44 len 20])
                            staticcall mem[_16978 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16978 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16978 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16978 + (2 * ceil32(return_data.size)) + 132] = address(_17448)
                            require ext_code.size(mem[_16978 + 44 len 20])
                            staticcall mem[_16978 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17448)
                            mem[_16978 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16978 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11213 / 2) < mem[96]
                                _18450 = mem[(32 * idx - (_11213 / 2)) + 128]
                                mem[_16978 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16978 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16978 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16978 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16978 + (4 * ceil32(return_data.size)) + 260] = mem[_16978]
                                t = 0
                                u = _16978 + 32
                                v = _16978 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16978]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16731 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16978 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16978 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18450))
                                call address(_18450).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16978 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16978]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16978 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22574 = mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16978 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22754 = mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16978 + (6 * ceil32(return_data.size)) + 96] = _22754
                                require return_data.size >= _22574 + (32 * _22754) + 32
                                t = _16978 + (4 * ceil32(return_data.size)) + _22574 + 128
                                u = _16978 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22754:
                                    mem[u] = mem[t]
                                    _16731 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16978] - 1 < mem[_16978]
                                _25136 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25136))
                                staticcall address(_25136).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25634 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16731 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16978
                                s = mem[_25634] - ext_call.return_data[0]
                                continue 
                            mem[_16978 + (4 * ceil32(return_data.size)) + 100] = address(_17448)
                            mem[_16978 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17420))
                            call address(_17420).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17448), -1
                            mem[_16978 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11213 / 2) < mem[96]
                            _19199 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16978 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16978 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16978 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16978 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16978 + (6 * ceil32(return_data.size)) + 260] = mem[_16978]
                            t = 0
                            u = _16978 + 32
                            v = _16978 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16978]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16978 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16978 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19199))
                            call address(_19199).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16978 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16978]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16978 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16978 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22575 = mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16978 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22755 = mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16978 + (7 * ceil32(return_data.size)) + (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16978 + (7 * ceil32(return_data.size)) + (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16978 + (7 * ceil32(return_data.size)) + 96] = _22755
                            require return_data.size >= _22575 + (32 * _22755) + 32
                            t = _16978 + (6 * ceil32(return_data.size)) + _22575 + 128
                            u = _16978 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22755:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16978] - 1 < mem[_16978]
                            _25138 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25138))
                            staticcall address(_25138).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25635 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16978
                            s = mem[_25635] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16978 + 44 len 20])
                            staticcall mem[_16978 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16978 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16978 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16978 + (2 * ceil32(return_data.size)) + 132] = address(_17448)
                            require ext_code.size(mem[_16978 + 44 len 20])
                            staticcall mem[_16978 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17448)
                            mem[_16978 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16978 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11213 / 2) < mem[96]
                                _18702 = mem[(32 * idx - (_11213 / 2)) + 128]
                                mem[_16978 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16978 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16978 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16978 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16978 + (4 * ceil32(return_data.size)) + 260] = mem[_16978]
                                t = 0
                                u = _16978 + 32
                                v = _16978 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16978]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16731 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16978 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16978 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18702))
                                call address(_18702).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16978 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16978]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16978 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22576 = mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16978 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22756 = mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16978 + (6 * ceil32(return_data.size)) + 96] = _22756
                                require return_data.size >= _22576 + (32 * _22756) + 32
                                t = _16978 + (4 * ceil32(return_data.size)) + _22576 + 128
                                u = _16978 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22756:
                                    mem[u] = mem[t]
                                    _16731 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16978] - 1 < mem[_16978]
                                _25140 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25140))
                                staticcall address(_25140).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25636 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16731 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16978
                                s = mem[_25636] - ext_call.return_data[0]
                                continue 
                            mem[_16978 + (4 * ceil32(return_data.size)) + 100] = address(_17448)
                            mem[_16978 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17420))
                            call address(_17420).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17448), -1
                            mem[_16978 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11213 / 2) < mem[96]
                            _19502 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16978 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16978 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16978 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16978 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16978 + (6 * ceil32(return_data.size)) + 260] = mem[_16978]
                            t = 0
                            u = _16978 + 32
                            v = _16978 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16978]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16978 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16978 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19502))
                            call address(_19502).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16978 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16978]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16978 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16978 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22577 = mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16978 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22757 = mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16978 + (7 * ceil32(return_data.size)) + (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16978 + (7 * ceil32(return_data.size)) + (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16978 + (7 * ceil32(return_data.size)) + 96] = _22757
                            require return_data.size >= _22577 + (32 * _22757) + 32
                            t = _16978 + (6 * ceil32(return_data.size)) + _22577 + 128
                            u = _16978 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22757:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16978] - 1 < mem[_16978]
                            _25142 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25142))
                            staticcall address(_25142).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25637 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16978
                            s = mem[_25637] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16978 + 44 len 20])
                        staticcall mem[_16978 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16978 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16978 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16978 + (2 * ceil32(return_data.size)) + 132] = address(_17448)
                        require ext_code.size(mem[_16978 + 44 len 20])
                        staticcall mem[_16978 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17448)
                        mem[_16978 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16978 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11213 / 2) < mem[96]
                            _18993 = mem[(32 * idx - (_11213 / 2)) + 128]
                            mem[_16978 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16978 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16978 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16978 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16978 + (4 * ceil32(return_data.size)) + 260] = mem[_16978]
                            t = 0
                            u = _16978 + 32
                            v = _16978 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16978]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16978 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16978 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_18993))
                            call address(_18993).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16978 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16978]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16978 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22578 = mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16978 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22758 = mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16978 + (6 * ceil32(return_data.size)) + (32 * mem[_16978 + (4 * ceil32(return_data.size)) + mem[_16978 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16978 + (6 * ceil32(return_data.size)) + 96] = _22758
                            require return_data.size >= _22578 + (32 * _22758) + 32
                            t = _16978 + (4 * ceil32(return_data.size)) + _22578 + 128
                            u = _16978 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22758:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16978] - 1 < mem[_16978]
                            _25144 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25144))
                            staticcall address(_25144).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25638 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16978
                            s = mem[_25638] - ext_call.return_data[0]
                            continue 
                        mem[_16978 + (4 * ceil32(return_data.size)) + 100] = address(_17448)
                        mem[_16978 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17420))
                        call address(_17420).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17448), -1
                        mem[_16978 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16978 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11213 / 2) < mem[96]
                        _19790 = mem[(32 * idx - (_11213 / 2)) + 128]
                        mem[_16978 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16978 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16978 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16978 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16978 + (6 * ceil32(return_data.size)) + 260] = mem[_16978]
                        t = 0
                        u = _16978 + 32
                        v = _16978 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16978]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16978 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16978 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19790))
                        call address(_19790).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16978 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16978]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16978 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16978 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22579 = mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16978 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22759 = mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16978 + (7 * ceil32(return_data.size)) + (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16978 + (7 * ceil32(return_data.size)) + (32 * mem[_16978 + (6 * ceil32(return_data.size)) + mem[_16978 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16978 + (7 * ceil32(return_data.size)) + 96] = _22759
                        require return_data.size >= _22579 + (32 * _22759) + 32
                        t = _16978 + (6 * ceil32(return_data.size)) + _22579 + 128
                        u = _16978 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22759:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16978] - 1 < mem[_16978]
                        _25146 = mem[(32 * mem[_16978] - 1) + _16978 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25146))
                        staticcall address(_25146).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25639 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16978
                        s = mem[_25639] - ext_call.return_data[0]
                        continue 
                    _16980 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16980 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16980]
                    mem[_16980 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16980]
                    mem[_16980 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16980]
                    mem[_16980 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16980] - 1 < mem[_16980]
                    mem[_16980 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16980] - 1) + _16980 + 44 len 20])
                    staticcall mem[(32 * mem[_16980] - 1) + _16980 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16980 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16980 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16980]
                    _17471 = mem[_16980 + 32]
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _17487 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16980 + 44 len 20])
                        staticcall mem[_16980 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16980 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16980 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16980 + (2 * ceil32(return_data.size)) + 164] = address(_17487)
                        require ext_code.size(mem[_16980 + 44 len 20])
                        staticcall mem[_16980 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17487)
                        mem[_16980 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16980 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11213 / 2) + 1 < mem[96]
                            _18615 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                            mem[_16980 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16980 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16980 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16980 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16980 + (4 * ceil32(return_data.size)) + 292] = mem[_16980]
                            t = 0
                            u = _16980 + 32
                            v = _16980 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16980]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16980 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16980 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18615))
                            call address(_18615).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16980 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16980]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16980 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22580 = mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16980 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22760 = mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16980 + (6 * ceil32(return_data.size)) + 128] = mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _22580 + (32 * _22760) + 32
                            t = _16980 + (4 * ceil32(return_data.size)) + _22580 + 160
                            u = _16980 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22760:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16980] - 1 < mem[_16980]
                            _25148 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25148))
                            staticcall address(_25148).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25640 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16980
                            s = mem[_25640] - ext_call.return_data[0]
                            continue 
                        mem[_16980 + (4 * ceil32(return_data.size)) + 132] = address(_17487)
                        mem[_16980 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17471))
                        call address(_17471).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17487), -1
                        mem[_16980 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _19405 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16980 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16980 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16980 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16980 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16980 + (6 * ceil32(return_data.size)) + 292] = mem[_16980]
                        t = 0
                        u = _16980 + 32
                        v = _16980 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16980]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16980 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16980 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19405))
                        call address(_19405).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16980 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16980]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16980 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16980 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22581 = mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16980 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22761 = mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16980 + (7 * ceil32(return_data.size)) + (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16980 + (7 * ceil32(return_data.size)) + (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16980 + (7 * ceil32(return_data.size)) + 128] = _22761
                        require return_data.size >= _22581 + (32 * _22761) + 32
                        t = _16980 + (6 * ceil32(return_data.size)) + _22581 + 160
                        u = _16980 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22761:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16980] - 1 < mem[_16980]
                        _25150 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25150))
                        staticcall address(_25150).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25641 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16980
                        s = mem[_25641] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16980 + 44 len 20])
                        staticcall mem[_16980 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16980 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16980 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16980 + (2 * ceil32(return_data.size)) + 164] = address(_17487)
                        require ext_code.size(mem[_16980 + 44 len 20])
                        staticcall mem[_16980 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17487)
                        mem[_16980 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16980 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11213 / 2) + 1 < mem[96]
                            _18896 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                            mem[_16980 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16980 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16980 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16980 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16980 + (4 * ceil32(return_data.size)) + 292] = mem[_16980]
                            t = 0
                            u = _16980 + 32
                            v = _16980 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16980]:
                                mem[v] = mem[u + 12 len 20]
                                _16731 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16980 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16980 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18896))
                            call address(_18896).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16980 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16980]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16980 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22582 = mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16980 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22762 = mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16980 + (6 * ceil32(return_data.size)) + 128] = mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _22582 + (32 * _22762) + 32
                            t = _16980 + (4 * ceil32(return_data.size)) + _22582 + 160
                            u = _16980 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22762:
                                mem[u] = mem[t]
                                _16731 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16980] - 1 < mem[_16980]
                            _25152 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25152))
                            staticcall address(_25152).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16731 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16980
                            s = mem[_25642] - ext_call.return_data[0]
                            continue 
                        mem[_16980 + (4 * ceil32(return_data.size)) + 132] = address(_17487)
                        mem[_16980 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17471))
                        call address(_17471).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17487), -1
                        mem[_16980 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _19699 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16980 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16980 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16980 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16980 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16980 + (6 * ceil32(return_data.size)) + 292] = mem[_16980]
                        t = 0
                        u = _16980 + 32
                        v = _16980 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16980]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16980 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16980 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19699))
                        call address(_19699).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16980 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16980]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16980 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16980 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22583 = mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16980 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22763 = mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16980 + (7 * ceil32(return_data.size)) + (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16980 + (7 * ceil32(return_data.size)) + (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16980 + (7 * ceil32(return_data.size)) + 128] = _22763
                        require return_data.size >= _22583 + (32 * _22763) + 32
                        t = _16980 + (6 * ceil32(return_data.size)) + _22583 + 160
                        u = _16980 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22763:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16980] - 1 < mem[_16980]
                        _25154 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25154))
                        staticcall address(_25154).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25643 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16980
                        s = mem[_25643] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16980 + 44 len 20])
                    staticcall mem[_16980 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16980 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16980 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16980 + (2 * ceil32(return_data.size)) + 164] = address(_17487)
                    require ext_code.size(mem[_16980 + 44 len 20])
                    staticcall mem[_16980 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17487)
                    mem[_16980 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16980 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11213 / 2) + 1 < mem[96]
                        _19204 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                        mem[_16980 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16980 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16980 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16980 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16980 + (4 * ceil32(return_data.size)) + 292] = mem[_16980]
                        t = 0
                        u = _16980 + 32
                        v = _16980 + (4 * ceil32(return_data.size)) + 324
                        while t < mem[_16980]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16980 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16980 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19204))
                        call address(_19204).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16980 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16980]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16980 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22584 = mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16980 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22764 = mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16980 + (6 * ceil32(return_data.size)) + (32 * mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16980 + (6 * ceil32(return_data.size)) + 128] = mem[_16980 + (4 * ceil32(return_data.size)) + mem[_16980 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _22584 + (32 * _22764) + 32
                        t = _16980 + (4 * ceil32(return_data.size)) + _22584 + 160
                        u = _16980 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22764:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16980] - 1 < mem[_16980]
                        _25156 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25156))
                        staticcall address(_25156).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16980
                        s = mem[_25644] - ext_call.return_data[0]
                        continue 
                    mem[_16980 + (4 * ceil32(return_data.size)) + 132] = address(_17487)
                    mem[_16980 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17471))
                    call address(_17471).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17487), -1
                    mem[_16980 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16980 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11213 / 2) + 1 < mem[96]
                    _19968 = mem[(32 * idx + -(_11213 / 2) + 1) + 128]
                    mem[_16980 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16980 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16980 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16980 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16980 + (6 * ceil32(return_data.size)) + 292] = mem[_16980]
                    t = 0
                    u = _16980 + 32
                    v = _16980 + (6 * ceil32(return_data.size)) + 324
                    while t < mem[_16980]:
                        mem[v] = mem[u + 12 len 20]
                        _16731 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16980 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16980 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19968))
                    call address(_19968).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16980 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16980]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16980 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16980 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _22585 = mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16980 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _22765 = mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16980 + (7 * ceil32(return_data.size)) + (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _16980 + (7 * ceil32(return_data.size)) + (32 * mem[_16980 + (6 * ceil32(return_data.size)) + mem[_16980 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_16980 + (7 * ceil32(return_data.size)) + 128] = _22765
                    require return_data.size >= _22585 + (32 * _22765) + 32
                    t = _16980 + (6 * ceil32(return_data.size)) + _22585 + 160
                    u = _16980 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _22765:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16980] - 1 < mem[_16980]
                    _25158 = mem[(32 * mem[_16980] - 1) + _16980 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25158))
                    staticcall address(_25158).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25645 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16980
                    s = mem[_25645] - ext_call.return_data[0]
                    continue 
                _16852 = mem[64]
                mem[mem[64]] = 4
                mem[64] = mem[64] + 160
                mem[_16852 + 32 len 128] = call.data[calldata.size len 128]
                require idx < mem[96]
                require 0 < mem[_16852]
                mem[_16852 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_16852]
                mem[_16852 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_16852]
                mem[_16852 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require idx + 3 < mem[96]
                require 3 < mem[_16852]
                mem[_16852 + 128] = mem[(32 * idx + 3) + 140 len 20]
                require mem[_16852] - 1 < mem[_16852]
                mem[_16852 + 164] = this.address
                require ext_code.size(mem[(32 * mem[_16852] - 1) + _16852 + 44 len 20])
                staticcall mem[(32 * mem[_16852] - 1) + _16852 + 44 len 20].balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                mem[_16852 + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16852 + ceil32(return_data.size) + 160
                require return_data.size >= 32
                require 0 < mem[_16852]
                _17450 = mem[_16852 + 32]
                require idx + -(_11213 / 2) + 2 < mem[96]
                _17473 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_16852 + 44 len 20])
                    staticcall mem[_16852 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16852 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16852 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16852 + (2 * ceil32(return_data.size)) + 196] = address(_17473)
                    require ext_code.size(mem[_16852 + 44 len 20])
                    staticcall mem[_16852 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17473)
                    mem[_16852 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11213 / 2) + 2 < mem[96]
                        _18530 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                        mem[_16852 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16852 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16852 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16852 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16852 + (4 * ceil32(return_data.size)) + 324] = mem[_16852]
                        t = 0
                        u = _16852 + 32
                        v = _16852 + (4 * ceil32(return_data.size)) + 356
                        while t < mem[_16852]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16852 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16852 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_18530))
                        call address(_18530).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16852 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22586 = mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16852 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22766 = mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16852 + (6 * ceil32(return_data.size)) + 160] = _22766
                        require return_data.size >= _22586 + (32 * _22766) + 32
                        t = _16852 + (4 * ceil32(return_data.size)) + _22586 + 192
                        u = _16852 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22766:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16852] - 1 < mem[_16852]
                        _25160 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25160))
                        staticcall address(_25160).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25646 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16852
                        s = mem[_25646] - ext_call.return_data[0]
                        continue 
                    mem[_16852 + (4 * ceil32(return_data.size)) + 164] = address(_17473)
                    mem[_16852 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17450))
                    call address(_17450).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17473), -1
                    mem[_16852 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11213 / 2) + 2 < mem[96]
                    _19304 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                    mem[_16852 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16852 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16852 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16852 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16852 + (6 * ceil32(return_data.size)) + 324] = mem[_16852]
                    t = 0
                    u = _16852 + 32
                    v = _16852 + (6 * ceil32(return_data.size)) + 356
                    while t < mem[_16852]:
                        mem[v] = mem[u + 12 len 20]
                        _16731 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16852 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16852 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19304))
                    call address(_19304).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16852 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22587 = mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16852 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22767 = mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16852 + (7 * ceil32(return_data.size)) + 160] = _22767
                    require return_data.size >= _22587 + (32 * _22767) + 32
                    t = _16852 + (6 * ceil32(return_data.size)) + _22587 + 192
                    u = _16852 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22767:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16852] - 1 < mem[_16852]
                    _25162 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25162))
                    staticcall address(_25162).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25647 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16852
                    s = mem[_25647] - ext_call.return_data[0]
                    continue 
                if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                    require ext_code.size(mem[_16852 + 44 len 20])
                    staticcall mem[_16852 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16852 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16852 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16852 + (2 * ceil32(return_data.size)) + 196] = address(_17473)
                    require ext_code.size(mem[_16852 + 44 len 20])
                    staticcall mem[_16852 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17473)
                    mem[_16852 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11213 / 2) + 2 < mem[96]
                        _18799 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                        mem[_16852 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16852 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16852 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16852 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16852 + (4 * ceil32(return_data.size)) + 324] = mem[_16852]
                        t = 0
                        u = _16852 + 32
                        v = _16852 + (4 * ceil32(return_data.size)) + 356
                        while t < mem[_16852]:
                            mem[v] = mem[u + 12 len 20]
                            _16731 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16852 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16852 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_18799))
                        call address(_18799).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16852 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22588 = mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16852 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22768 = mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16852 + (6 * ceil32(return_data.size)) + 160] = _22768
                        require return_data.size >= _22588 + (32 * _22768) + 32
                        t = _16852 + (4 * ceil32(return_data.size)) + _22588 + 192
                        u = _16852 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22768:
                            mem[u] = mem[t]
                            _16731 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16852] - 1 < mem[_16852]
                        _25164 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25164))
                        staticcall address(_25164).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25648 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16731 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16852
                        s = mem[_25648] - ext_call.return_data[0]
                        continue 
                    mem[_16852 + (4 * ceil32(return_data.size)) + 164] = address(_17473)
                    mem[_16852 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17450))
                    call address(_17450).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17473), -1
                    mem[_16852 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11213 / 2) + 2 < mem[96]
                    _19604 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                    mem[_16852 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16852 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16852 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16852 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16852 + (6 * ceil32(return_data.size)) + 324] = mem[_16852]
                    t = 0
                    u = _16852 + 32
                    v = _16852 + (6 * ceil32(return_data.size)) + 356
                    while t < mem[_16852]:
                        mem[v] = mem[u + 12 len 20]
                        _16731 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16852 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16852 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19604))
                    call address(_19604).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16852 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22589 = mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16852 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22769 = mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16852 + (7 * ceil32(return_data.size)) + 160] = _22769
                    require return_data.size >= _22589 + (32 * _22769) + 32
                    t = _16852 + (6 * ceil32(return_data.size)) + _22589 + 192
                    u = _16852 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22769:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16852] - 1 < mem[_16852]
                    _25166 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25166))
                    staticcall address(_25166).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25649 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16852
                    s = mem[_25649] - ext_call.return_data[0]
                    continue 
                if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(mem[_16852 + 44 len 20])
                staticcall mem[_16852 + 44 len 20].decimals() with:
                        gas gas_remaining wei
                mem[_16852 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_16852 + (2 * ceil32(return_data.size)) + 164] = this.address
                mem[_16852 + (2 * ceil32(return_data.size)) + 196] = address(_17473)
                require ext_code.size(mem[_16852 + 44 len 20])
                staticcall mem[_16852 + 44 len 20].allowance(address rg1, address rg2) with:
                        gas gas_remaining wei
                       args address(this.address), address(_17473)
                mem[_16852 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16852 + (4 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_11213 / 2) + 2 < mem[96]
                    _19095 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                    mem[_16852 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16852 + (4 * ceil32(return_data.size)) + 164] = s
                    mem[_16852 + (4 * ceil32(return_data.size)) + 196] = 0
                    mem[_16852 + (4 * ceil32(return_data.size)) + 228] = 160
                    mem[_16852 + (4 * ceil32(return_data.size)) + 324] = mem[_16852]
                    t = 0
                    u = _16852 + 32
                    v = _16852 + (4 * ceil32(return_data.size)) + 356
                    while t < mem[_16852]:
                        mem[v] = mem[u + 12 len 20]
                        _16731 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_16852 + (4 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16852 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19095))
                    call address(_19095).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_16852 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _22590 = mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _16852 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _22770 = mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _16852 + (6 * ceil32(return_data.size)) + (32 * mem[_16852 + (4 * ceil32(return_data.size)) + mem[_16852 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_16852 + (6 * ceil32(return_data.size)) + 160] = _22770
                    require return_data.size >= _22590 + (32 * _22770) + 32
                    t = _16852 + (4 * ceil32(return_data.size)) + _22590 + 192
                    u = _16852 + (6 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _22770:
                        mem[u] = mem[t]
                        _16731 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16852] - 1 < mem[_16852]
                    _25168 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25168))
                    staticcall address(_25168).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25650 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16731 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16852
                    s = mem[_25650] - ext_call.return_data[0]
                    continue 
                mem[_16852 + (4 * ceil32(return_data.size)) + 164] = address(_17473)
                mem[_16852 + (4 * ceil32(return_data.size)) + 196] = -1
                require ext_code.size(address(_17450))
                call address(_17450).approve(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args address(_17473), -1
                mem[_16852 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _16852 + (6 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_11213 / 2) + 2 < mem[96]
                _19880 = mem[(32 * idx + -(_11213 / 2) + 2) + 128]
                mem[_16852 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_16852 + (6 * ceil32(return_data.size)) + 164] = s
                mem[_16852 + (6 * ceil32(return_data.size)) + 196] = 0
                mem[_16852 + (6 * ceil32(return_data.size)) + 228] = 160
                mem[_16852 + (6 * ceil32(return_data.size)) + 324] = mem[_16852]
                t = 0
                u = _16852 + 32
                v = _16852 + (6 * ceil32(return_data.size)) + 356
                while t < mem[_16852]:
                    mem[v] = mem[u + 12 len 20]
                    _16731 = mem[96]
                    t = t + 1
                    u = u + 32
                    v = v + 32
                    continue 
                mem[_16852 + (6 * ceil32(return_data.size)) + 260] = this.address
                mem[_16852 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                require ext_code.size(address(_19880))
                call address(_19880).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                     gas gas_remaining wei
                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16852 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16852]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_16852 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _16852 + (7 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                _22591 = mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                require mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                require _16852 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                _22771 = mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                require mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                require (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                mem[64] = _16852 + (7 * ceil32(return_data.size)) + (32 * mem[_16852 + (6 * ceil32(return_data.size)) + mem[_16852 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                mem[_16852 + (7 * ceil32(return_data.size)) + 160] = _22771
                require return_data.size >= _22591 + (32 * _22771) + 32
                t = _16852 + (6 * ceil32(return_data.size)) + _22591 + 192
                u = _16852 + (7 * ceil32(return_data.size)) + 192
                s = 0
                while s < _22771:
                    mem[u] = mem[t]
                    _16731 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_16852] - 1 < mem[_16852]
                _25170 = mem[(32 * mem[_16852] - 1) + _16852 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_25170))
                staticcall address(_25170).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25651 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _16731 = mem[96]
                idx = idx + 3
                s = ext_call.return_data[0]
                s = _16852
                s = mem[_25651] - ext_call.return_data[0]
                continue 
            require _11213 / 2 < mem[96]
            _16752 = mem[(16 * Mask(251, 1, _11213)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_16752))
            staticcall address(_16752).balanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16812 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_16812] < _11291 - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11218 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11245 = mem[_11218]
                    require mem[_11218] == mem[_11218 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11295 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11295)
                    require ext_code.size(address(_11245))
                    staticcall address(_11245).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11295)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11344 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11374 = mem[_11344]
                    require mem[_11344] == mem[_11344 + 12 len 20]
                    require ext_code.size(mem[_11344 + 12 len 20])
                    staticcall mem[_11344 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11557 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11704 = mem[_11557]
                    require mem[_11557] == mem[_11557 + 18 len 14]
                    _11827 = mem[_11557 + 32]
                    require mem[_11557 + 32] == mem[_11557 + 50 len 14]
                    require mem[_11557 + 64] == mem[_11557 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11557 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11557 + 50 len 14] / (997 * s) + (1000 * mem[_11557 + 18 len 14])
                            idx = idx + 1
                            s = _11374
                            s = 997 * s * Mask(112, 0, _11827) / (997 * s) + (1000 * Mask(112, 0, _11704))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11557 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11557 + 50 len 14] / (997 * s) + (1000 * mem[_11557 + 18 len 14])
                            idx = idx + 1
                            s = _11374
                            s = 997 * s * Mask(112, 0, _11827) / (997 * s) + (1000 * Mask(112, 0, _11704))
                            continue 
                    require (997 * s) + (1000 * mem[_11557 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11557 + 18 len 14] / (997 * s) + (1000 * mem[_11557 + 50 len 14])
                    idx = idx + 1
                    s = _11374
                    s = 997 * s * Mask(112, 0, _11704) / (997 * s) + (1000 * Mask(112, 0, _11827))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11216 = mem[96]
                require mem[96] / 2 < mem[96]
                _11242 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11242))
                staticcall address(_11242).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11268 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11294 = mem[_11268]
                _16732 = mem[96]
                idx = _11216 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16732 - 1:
                    require idx + -(_11216 / 2) + 1 < mem[96]
                    require idx - (_11216 / 2) < mem[96]
                    require idx + -(_11216 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11216 / 2)) + 140 len 20] != mem[(32 * idx + -(_11216 / 2) + 1) + 140 len 20]:
                        require idx - (_11216 / 2) < mem[96]
                        if mem[(32 * idx - (_11216 / 2)) + 140 len 20] != mem[(32 * idx + -(_11216 / 2) + 1) + 140 len 20]:
                            _16855 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16855 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16855]
                            mem[_16855 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16855]
                            mem[_16855 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16855] - 1 < mem[_16855]
                            mem[_16855 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16855] - 1) + _16855 + 44 len 20])
                            staticcall mem[(32 * mem[_16855] - 1) + _16855 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16855 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16855 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16855]
                            _17350 = mem[_16855 + 32]
                            require idx - (_11216 / 2) < mem[96]
                            _17374 = mem[(32 * idx - (_11216 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16855 + 44 len 20])
                                staticcall mem[_16855 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16855 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16855 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16855 + (2 * ceil32(return_data.size)) + 132] = address(_17374)
                                require ext_code.size(mem[_16855 + 44 len 20])
                                staticcall mem[_16855 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17374)
                                mem[_16855 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16855 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11216 / 2) < mem[96]
                                    _18268 = mem[(32 * idx - (_11216 / 2)) + 128]
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 260] = mem[_16855]
                                    s = 0
                                    t = _16855 + 32
                                    u = _16855 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16855]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16732 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18268))
                                    call address(_18268).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16855 + (4 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22412 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22592 = mem[_22412]
                                    require mem[_22412] <= test266151307()
                                    require _22412 + return_data.size > _22412 + mem[_22412] + 31
                                    _22772 = mem[_22412 + mem[_22412]]
                                    require mem[_22412 + mem[_22412]] <= test266151307()
                                    require (32 * mem[_22412 + mem[_22412]]) + 32 >= 0 and _22412 + ceil32(return_data.size) + (32 * mem[_22412 + mem[_22412]]) + 32 <= test266151307()
                                    mem[64] = _22412 + ceil32(return_data.size) + (32 * mem[_22412 + mem[_22412]]) + 32
                                    mem[_22412 + ceil32(return_data.size)] = _22772
                                    require return_data.size >= _22592 + (32 * _22772) + 32
                                    t = _22412 + _22592 + 32
                                    u = _22412 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22772:
                                        mem[u] = mem[t]
                                        _16732 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16855] - 1 < mem[_16855]
                                    _25172 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25172))
                                    staticcall address(_25172).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25652 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16732 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16855
                                    s = mem[_25652] - ext_call.return_data[0]
                                    continue 
                                mem[_16855 + (4 * ceil32(return_data.size)) + 100] = address(_17374)
                                mem[_16855 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17350))
                                call address(_17350).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17374), -1
                                mem[_16855 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16855 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11216 / 2) < mem[96]
                                _18903 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16855 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16855 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16855 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16855 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16855 + (6 * ceil32(return_data.size)) + 260] = mem[_16855]
                                s = 0
                                t = _16855 + 32
                                u = _16855 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16855]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16855 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16855 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18903))
                                call address(_18903).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16855 + (6 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22413 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22593 = mem[_22413]
                                require mem[_22413] <= test266151307()
                                require _22413 + return_data.size > _22413 + mem[_22413] + 31
                                _22773 = mem[_22413 + mem[_22413]]
                                require mem[_22413 + mem[_22413]] <= test266151307()
                                require (32 * mem[_22413 + mem[_22413]]) + 32 >= 0 and _22413 + ceil32(return_data.size) + (32 * mem[_22413 + mem[_22413]]) + 32 <= test266151307()
                                mem[64] = _22413 + ceil32(return_data.size) + (32 * mem[_22413 + mem[_22413]]) + 32
                                mem[_22413 + ceil32(return_data.size)] = _22773
                                require return_data.size >= _22593 + (32 * _22773) + 32
                                t = _22413 + _22593 + 32
                                u = _22413 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22773:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16855] - 1 < mem[_16855]
                                _25174 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25174))
                                staticcall address(_25174).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25653 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16855
                                s = mem[_25653] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16855 + 44 len 20])
                                staticcall mem[_16855 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16855 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16855 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16855 + (2 * ceil32(return_data.size)) + 132] = address(_17374)
                                require ext_code.size(mem[_16855 + 44 len 20])
                                staticcall mem[_16855 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17374)
                                mem[_16855 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16855 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11216 / 2) < mem[96]
                                    _18458 = mem[(32 * idx - (_11216 / 2)) + 128]
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 260] = mem[_16855]
                                    s = 0
                                    t = _16855 + 32
                                    u = _16855 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16855]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16732 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16855 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18458))
                                    call address(_18458).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16855 + (4 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22414 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22594 = mem[_22414]
                                    require mem[_22414] <= test266151307()
                                    require _22414 + return_data.size > _22414 + mem[_22414] + 31
                                    _22774 = mem[_22414 + mem[_22414]]
                                    require mem[_22414 + mem[_22414]] <= test266151307()
                                    require (32 * mem[_22414 + mem[_22414]]) + 32 >= 0 and _22414 + ceil32(return_data.size) + (32 * mem[_22414 + mem[_22414]]) + 32 <= test266151307()
                                    mem[64] = _22414 + ceil32(return_data.size) + (32 * mem[_22414 + mem[_22414]]) + 32
                                    mem[_22414 + ceil32(return_data.size)] = _22774
                                    require return_data.size >= _22594 + (32 * _22774) + 32
                                    t = _22414 + _22594 + 32
                                    u = _22414 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22774:
                                        mem[u] = mem[t]
                                        _16732 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16855] - 1 < mem[_16855]
                                    _25176 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25176))
                                    staticcall address(_25176).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25654 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16732 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16855
                                    s = mem[_25654] - ext_call.return_data[0]
                                    continue 
                                mem[_16855 + (4 * ceil32(return_data.size)) + 100] = address(_17374)
                                mem[_16855 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17350))
                                call address(_17350).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17374), -1
                                mem[_16855 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16855 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11216 / 2) < mem[96]
                                _19211 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16855 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16855 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16855 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16855 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16855 + (6 * ceil32(return_data.size)) + 260] = mem[_16855]
                                s = 0
                                t = _16855 + 32
                                u = _16855 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16855]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16855 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16855 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19211))
                                call address(_19211).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16855 + (6 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22415 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22595 = mem[_22415]
                                require mem[_22415] <= test266151307()
                                require _22415 + return_data.size > _22415 + mem[_22415] + 31
                                _22775 = mem[_22415 + mem[_22415]]
                                require mem[_22415 + mem[_22415]] <= test266151307()
                                require (32 * mem[_22415 + mem[_22415]]) + 32 >= 0 and _22415 + ceil32(return_data.size) + (32 * mem[_22415 + mem[_22415]]) + 32 <= test266151307()
                                mem[64] = _22415 + ceil32(return_data.size) + (32 * mem[_22415 + mem[_22415]]) + 32
                                mem[_22415 + ceil32(return_data.size)] = _22775
                                require return_data.size >= _22595 + (32 * _22775) + 32
                                t = _22415 + _22595 + 32
                                u = _22415 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22775:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16855] - 1 < mem[_16855]
                                _25178 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25178))
                                staticcall address(_25178).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25655 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16855
                                s = mem[_25655] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16855 + 44 len 20])
                            staticcall mem[_16855 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16855 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16855 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16855 + (2 * ceil32(return_data.size)) + 132] = address(_17374)
                            require ext_code.size(mem[_16855 + 44 len 20])
                            staticcall mem[_16855 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17374)
                            mem[_16855 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16855 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11216 / 2) < mem[96]
                                _18711 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16855 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16855 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16855 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16855 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16855 + (4 * ceil32(return_data.size)) + 260] = mem[_16855]
                                s = 0
                                t = _16855 + 32
                                u = _16855 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16855]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16855 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16855 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18711))
                                call address(_18711).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16855 + (4 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22416 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22596 = mem[_22416]
                                require mem[_22416] <= test266151307()
                                require _22416 + return_data.size > _22416 + mem[_22416] + 31
                                _22776 = mem[_22416 + mem[_22416]]
                                require mem[_22416 + mem[_22416]] <= test266151307()
                                require (32 * mem[_22416 + mem[_22416]]) + 32 >= 0 and _22416 + ceil32(return_data.size) + (32 * mem[_22416 + mem[_22416]]) + 32 <= test266151307()
                                mem[64] = _22416 + ceil32(return_data.size) + (32 * mem[_22416 + mem[_22416]]) + 32
                                mem[_22416 + ceil32(return_data.size)] = _22776
                                require return_data.size >= _22596 + (32 * _22776) + 32
                                t = _22416 + _22596 + 32
                                u = _22416 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22776:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16855] - 1 < mem[_16855]
                                _25180 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25180))
                                staticcall address(_25180).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25656 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16855
                                s = mem[_25656] - ext_call.return_data[0]
                                continue 
                            mem[_16855 + (4 * ceil32(return_data.size)) + 100] = address(_17374)
                            mem[_16855 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17350))
                            call address(_17350).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17374), -1
                            mem[_16855 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16855 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11216 / 2) < mem[96]
                            _19512 = mem[(32 * idx - (_11216 / 2)) + 128]
                            mem[_16855 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16855 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16855 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16855 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16855 + (6 * ceil32(return_data.size)) + 260] = mem[_16855]
                            s = 0
                            t = _16855 + 32
                            u = _16855 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16855]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16855 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16855 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19512))
                            call address(_19512).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16855 + (6 * ceil32(return_data.size)) + (32 * mem[_16855]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22417 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22597 = mem[_22417]
                            require mem[_22417] <= test266151307()
                            require _22417 + return_data.size > _22417 + mem[_22417] + 31
                            _22777 = mem[_22417 + mem[_22417]]
                            require mem[_22417 + mem[_22417]] <= test266151307()
                            require (32 * mem[_22417 + mem[_22417]]) + 32 >= 0 and _22417 + ceil32(return_data.size) + (32 * mem[_22417 + mem[_22417]]) + 32 <= test266151307()
                            mem[64] = _22417 + ceil32(return_data.size) + (32 * mem[_22417 + mem[_22417]]) + 32
                            mem[_22417 + ceil32(return_data.size)] = _22777
                            require return_data.size >= _22597 + (32 * _22777) + 32
                            t = _22417 + _22597 + 32
                            u = _22417 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22777:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16855] - 1 < mem[_16855]
                            _25182 = mem[(32 * mem[_16855] - 1) + _16855 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25182))
                            staticcall address(_25182).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16855
                            s = mem[_25657] - ext_call.return_data[0]
                            continue 
                        _16857 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16857 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16857]
                        mem[_16857 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16857]
                        mem[_16857 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16857]
                        mem[_16857 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16857] - 1 < mem[_16857]
                        mem[_16857 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16857] - 1) + _16857 + 44 len 20])
                        staticcall mem[(32 * mem[_16857] - 1) + _16857 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16857 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16857 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16857]
                        _17398 = mem[_16857 + 32]
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _17424 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16857 + 44 len 20])
                            staticcall mem[_16857 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16857 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16857 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16857 + (2 * ceil32(return_data.size)) + 164] = address(_17424)
                            require ext_code.size(mem[_16857 + 44 len 20])
                            staticcall mem[_16857 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17424)
                            mem[_16857 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16857 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11216 / 2) + 1 < mem[96]
                                _18386 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                                mem[_16857 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16857 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16857 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16857 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16857 + (4 * ceil32(return_data.size)) + 292] = mem[_16857]
                                s = 0
                                t = _16857 + 32
                                u = _16857 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16857]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16857 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16857 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18386))
                                call address(_18386).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16857 + (4 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22418 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22598 = mem[_22418]
                                require mem[_22418] <= test266151307()
                                require _22418 + return_data.size > _22418 + mem[_22418] + 31
                                _22778 = mem[_22418 + mem[_22418]]
                                require mem[_22418 + mem[_22418]] <= test266151307()
                                require (32 * mem[_22418 + mem[_22418]]) + 32 >= 0 and _22418 + ceil32(return_data.size) + (32 * mem[_22418 + mem[_22418]]) + 32 <= test266151307()
                                mem[64] = _22418 + ceil32(return_data.size) + (32 * mem[_22418 + mem[_22418]]) + 32
                                mem[_22418 + ceil32(return_data.size)] = _22778
                                require return_data.size >= _22598 + (32 * _22778) + 32
                                t = _22418 + _22598 + 32
                                u = _22418 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22778:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16857] - 1 < mem[_16857]
                                _25184 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25184))
                                staticcall address(_25184).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25658 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16857
                                s = mem[_25658] - ext_call.return_data[0]
                                continue 
                            mem[_16857 + (4 * ceil32(return_data.size)) + 132] = address(_17424)
                            mem[_16857 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17398))
                            call address(_17398).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17424), -1
                            mem[_16857 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16857 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _19104 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16857 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16857 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16857 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16857 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16857 + (6 * ceil32(return_data.size)) + 292] = mem[_16857]
                            s = 0
                            t = _16857 + 32
                            u = _16857 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16857]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16857 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16857 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19104))
                            call address(_19104).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16857 + (6 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22419 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22599 = mem[_22419]
                            require mem[_22419] <= test266151307()
                            require _22419 + return_data.size > _22419 + mem[_22419] + 31
                            _22779 = mem[_22419 + mem[_22419]]
                            require mem[_22419 + mem[_22419]] <= test266151307()
                            require (32 * mem[_22419 + mem[_22419]]) + 32 >= 0 and _22419 + ceil32(return_data.size) + (32 * mem[_22419 + mem[_22419]]) + 32 <= test266151307()
                            mem[64] = _22419 + ceil32(return_data.size) + (32 * mem[_22419 + mem[_22419]]) + 32
                            mem[_22419 + ceil32(return_data.size)] = _22779
                            require return_data.size >= _22599 + (32 * _22779) + 32
                            t = _22419 + _22599 + 32
                            u = _22419 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22779:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16857] - 1 < mem[_16857]
                            _25186 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25186))
                            staticcall address(_25186).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16857
                            s = mem[_25659] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16857 + 44 len 20])
                            staticcall mem[_16857 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16857 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16857 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16857 + (2 * ceil32(return_data.size)) + 164] = address(_17424)
                            require ext_code.size(mem[_16857 + 44 len 20])
                            staticcall mem[_16857 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17424)
                            mem[_16857 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16857 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11216 / 2) + 1 < mem[96]
                                _18623 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                                mem[_16857 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16857 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16857 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16857 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16857 + (4 * ceil32(return_data.size)) + 292] = mem[_16857]
                                s = 0
                                t = _16857 + 32
                                u = _16857 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16857]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16732 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16857 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16857 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18623))
                                call address(_18623).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16857 + (4 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22420 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22600 = mem[_22420]
                                require mem[_22420] <= test266151307()
                                require _22420 + return_data.size > _22420 + mem[_22420] + 31
                                _22780 = mem[_22420 + mem[_22420]]
                                require mem[_22420 + mem[_22420]] <= test266151307()
                                require (32 * mem[_22420 + mem[_22420]]) + 32 >= 0 and _22420 + ceil32(return_data.size) + (32 * mem[_22420 + mem[_22420]]) + 32 <= test266151307()
                                mem[64] = _22420 + ceil32(return_data.size) + (32 * mem[_22420 + mem[_22420]]) + 32
                                mem[_22420 + ceil32(return_data.size)] = _22780
                                require return_data.size >= _22600 + (32 * _22780) + 32
                                t = _22420 + _22600 + 32
                                u = _22420 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22780:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16857] - 1 < mem[_16857]
                                _25188 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25188))
                                staticcall address(_25188).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25660 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16857
                                s = mem[_25660] - ext_call.return_data[0]
                                continue 
                            mem[_16857 + (4 * ceil32(return_data.size)) + 132] = address(_17424)
                            mem[_16857 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17398))
                            call address(_17398).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17424), -1
                            mem[_16857 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16857 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _19414 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16857 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16857 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16857 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16857 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16857 + (6 * ceil32(return_data.size)) + 292] = mem[_16857]
                            s = 0
                            t = _16857 + 32
                            u = _16857 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16857]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16857 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16857 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19414))
                            call address(_19414).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16857 + (6 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22421 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22601 = mem[_22421]
                            require mem[_22421] <= test266151307()
                            require _22421 + return_data.size > _22421 + mem[_22421] + 31
                            _22781 = mem[_22421 + mem[_22421]]
                            require mem[_22421 + mem[_22421]] <= test266151307()
                            require (32 * mem[_22421 + mem[_22421]]) + 32 >= 0 and _22421 + ceil32(return_data.size) + (32 * mem[_22421 + mem[_22421]]) + 32 <= test266151307()
                            mem[64] = _22421 + ceil32(return_data.size) + (32 * mem[_22421 + mem[_22421]]) + 32
                            mem[_22421 + ceil32(return_data.size)] = _22781
                            require return_data.size >= _22601 + (32 * _22781) + 32
                            t = _22421 + _22601 + 32
                            u = _22421 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22781:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16857] - 1 < mem[_16857]
                            _25190 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25190))
                            staticcall address(_25190).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25661 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16857
                            s = mem[_25661] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16857 + 44 len 20])
                        staticcall mem[_16857 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16857 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16857 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16857 + (2 * ceil32(return_data.size)) + 164] = address(_17424)
                        require ext_code.size(mem[_16857 + 44 len 20])
                        staticcall mem[_16857 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17424)
                        mem[_16857 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16857 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _18908 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16857 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16857 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16857 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16857 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16857 + (4 * ceil32(return_data.size)) + 292] = mem[_16857]
                            s = 0
                            t = _16857 + 32
                            u = _16857 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16857]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16857 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16857 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18908))
                            call address(_18908).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16857 + (4 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22422 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22602 = mem[_22422]
                            require mem[_22422] <= test266151307()
                            require _22422 + return_data.size > _22422 + mem[_22422] + 31
                            _22782 = mem[_22422 + mem[_22422]]
                            require mem[_22422 + mem[_22422]] <= test266151307()
                            require (32 * mem[_22422 + mem[_22422]]) + 32 >= 0 and _22422 + ceil32(return_data.size) + (32 * mem[_22422 + mem[_22422]]) + 32 <= test266151307()
                            mem[64] = _22422 + ceil32(return_data.size) + (32 * mem[_22422 + mem[_22422]]) + 32
                            mem[_22422 + ceil32(return_data.size)] = _22782
                            require return_data.size >= _22602 + (32 * _22782) + 32
                            t = _22422 + _22602 + 32
                            u = _22422 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22782:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16857] - 1 < mem[_16857]
                            _25192 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25192))
                            staticcall address(_25192).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16857
                            s = mem[_25662] - ext_call.return_data[0]
                            continue 
                        mem[_16857 + (4 * ceil32(return_data.size)) + 132] = address(_17424)
                        mem[_16857 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17398))
                        call address(_17398).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17424), -1
                        mem[_16857 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16857 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _19710 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        mem[_16857 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16857 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16857 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16857 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16857 + (6 * ceil32(return_data.size)) + 292] = mem[_16857]
                        s = 0
                        t = _16857 + 32
                        u = _16857 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16857]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16857 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16857 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19710))
                        call address(_19710).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16857 + (6 * ceil32(return_data.size)) + (32 * mem[_16857]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22423 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22603 = mem[_22423]
                        require mem[_22423] <= test266151307()
                        require _22423 + return_data.size > _22423 + mem[_22423] + 31
                        _22783 = mem[_22423 + mem[_22423]]
                        require mem[_22423 + mem[_22423]] <= test266151307()
                        require (32 * mem[_22423 + mem[_22423]]) + 32 >= 0 and _22423 + ceil32(return_data.size) + (32 * mem[_22423 + mem[_22423]]) + 32 <= test266151307()
                        mem[64] = _22423 + ceil32(return_data.size) + (32 * mem[_22423 + mem[_22423]]) + 32
                        mem[_22423 + ceil32(return_data.size)] = _22783
                        require return_data.size >= _22603 + (32 * _22783) + 32
                        t = _22423 + _22603 + 32
                        u = _22423 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22783:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16857] - 1 < mem[_16857]
                        _25194 = mem[(32 * mem[_16857] - 1) + _16857 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25194))
                        staticcall address(_25194).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25663 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16857
                        s = mem[_25663] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11216 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11216 / 2) + 2) + 140 len 20] == mem[(32 * idx + -(_11216 / 2) + 1) + 140 len 20]:
                        _16860 = mem[64]
                        mem[mem[64]] = 4
                        mem[64] = mem[64] + 160
                        mem[_16860 + 32 len 128] = call.data[calldata.size len 128]
                        require idx < mem[96]
                        require 0 < mem[_16860]
                        mem[_16860 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16860]
                        mem[_16860 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16860]
                        mem[_16860 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require idx + 3 < mem[96]
                        require 3 < mem[_16860]
                        mem[_16860 + 128] = mem[(32 * idx + 3) + 140 len 20]
                        require mem[_16860] - 1 < mem[_16860]
                        mem[_16860 + 164] = this.address
                        require ext_code.size(mem[(32 * mem[_16860] - 1) + _16860 + 44 len 20])
                        staticcall mem[(32 * mem[_16860] - 1) + _16860 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16860 + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16860 + ceil32(return_data.size) + 160
                        require return_data.size >= 32
                        require 0 < mem[_16860]
                        _17454 = mem[_16860 + 32]
                        require idx + -(_11216 / 2) + 2 < mem[96]
                        _17476 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16860 + 44 len 20])
                            staticcall mem[_16860 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16860 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16860 + (2 * ceil32(return_data.size)) + 164] = this.address
                            mem[_16860 + (2 * ceil32(return_data.size)) + 196] = address(_17476)
                            require ext_code.size(mem[_16860 + 44 len 20])
                            staticcall mem[_16860 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17476)
                            mem[_16860 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16860 + (4 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11216 / 2) + 2 < mem[96]
                                _18544 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                                mem[_16860 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16860 + (4 * ceil32(return_data.size)) + 164] = s
                                mem[_16860 + (4 * ceil32(return_data.size)) + 196] = 0
                                mem[_16860 + (4 * ceil32(return_data.size)) + 228] = 160
                                mem[_16860 + (4 * ceil32(return_data.size)) + 324] = mem[_16860]
                                t = 0
                                u = _16860 + 32
                                v = _16860 + (4 * ceil32(return_data.size)) + 356
                                while t < mem[_16860]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16732 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16860 + (4 * ceil32(return_data.size)) + 260] = this.address
                                mem[_16860 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                                require ext_code.size(address(_18544))
                                call address(_18544).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16860 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16860]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16860 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _22616 = mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                                require mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16860 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                                _22796 = mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                                require (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                                mem[64] = _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                                mem[_16860 + (6 * ceil32(return_data.size)) + 160] = _22796
                                require return_data.size >= _22616 + (32 * _22796) + 32
                                t = _16860 + (4 * ceil32(return_data.size)) + _22616 + 192
                                u = _16860 + (6 * ceil32(return_data.size)) + 192
                                s = 0
                                while s < _22796:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16860] - 1 < mem[_16860]
                                _25220 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25220))
                                staticcall address(_25220).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25676 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 3
                                s = ext_call.return_data[0]
                                s = _16860
                                s = mem[_25676] - ext_call.return_data[0]
                                continue 
                            mem[_16860 + (4 * ceil32(return_data.size)) + 164] = address(_17476)
                            mem[_16860 + (4 * ceil32(return_data.size)) + 196] = -1
                            require ext_code.size(address(_17454))
                            call address(_17454).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17476), -1
                            mem[_16860 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11216 / 2) + 2 < mem[96]
                            _19321 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                            mem[_16860 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16860 + (6 * ceil32(return_data.size)) + 164] = s
                            mem[_16860 + (6 * ceil32(return_data.size)) + 196] = 0
                            mem[_16860 + (6 * ceil32(return_data.size)) + 228] = 160
                            mem[_16860 + (6 * ceil32(return_data.size)) + 324] = mem[_16860]
                            t = 0
                            u = _16860 + 32
                            v = _16860 + (6 * ceil32(return_data.size)) + 356
                            while t < mem[_16860]:
                                mem[v] = mem[u + 12 len 20]
                                _16732 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16860 + (6 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16860 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19321))
                            call address(_19321).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16860 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16860]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16860 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16860 + (7 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22617 = mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16860 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22797 = mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16860 + (7 * ceil32(return_data.size)) + (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16860 + (7 * ceil32(return_data.size)) + (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16860 + (7 * ceil32(return_data.size)) + 160] = _22797
                            require return_data.size >= _22617 + (32 * _22797) + 32
                            t = _16860 + (6 * ceil32(return_data.size)) + _22617 + 192
                            u = _16860 + (7 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22797:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16860] - 1 < mem[_16860]
                            _25222 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25222))
                            staticcall address(_25222).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25677 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16860
                            s = mem[_25677] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16860 + 44 len 20])
                            staticcall mem[_16860 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16860 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16860 + (2 * ceil32(return_data.size)) + 164] = this.address
                            mem[_16860 + (2 * ceil32(return_data.size)) + 196] = address(_17476)
                            require ext_code.size(mem[_16860 + 44 len 20])
                            staticcall mem[_16860 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17476)
                            mem[_16860 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16860 + (4 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11216 / 2) + 2 < mem[96]
                                _18815 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                                mem[_16860 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16860 + (4 * ceil32(return_data.size)) + 164] = s
                                mem[_16860 + (4 * ceil32(return_data.size)) + 196] = 0
                                mem[_16860 + (4 * ceil32(return_data.size)) + 228] = 160
                                mem[_16860 + (4 * ceil32(return_data.size)) + 324] = mem[_16860]
                                t = 0
                                u = _16860 + 32
                                v = _16860 + (4 * ceil32(return_data.size)) + 356
                                while t < mem[_16860]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16732 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16860 + (4 * ceil32(return_data.size)) + 260] = this.address
                                mem[_16860 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                                require ext_code.size(address(_18815))
                                call address(_18815).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16860 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16860]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16860 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _22618 = mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                                require mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16860 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                                _22798 = mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                                require (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                                mem[64] = _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                                mem[_16860 + (6 * ceil32(return_data.size)) + 160] = _22798
                                require return_data.size >= _22618 + (32 * _22798) + 32
                                t = _16860 + (4 * ceil32(return_data.size)) + _22618 + 192
                                u = _16860 + (6 * ceil32(return_data.size)) + 192
                                s = 0
                                while s < _22798:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16860] - 1 < mem[_16860]
                                _25224 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25224))
                                staticcall address(_25224).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25678 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 3
                                s = ext_call.return_data[0]
                                s = _16860
                                s = mem[_25678] - ext_call.return_data[0]
                                continue 
                            mem[_16860 + (4 * ceil32(return_data.size)) + 164] = address(_17476)
                            mem[_16860 + (4 * ceil32(return_data.size)) + 196] = -1
                            require ext_code.size(address(_17454))
                            call address(_17454).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17476), -1
                            mem[_16860 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11216 / 2) + 2 < mem[96]
                            _19620 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                            mem[_16860 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16860 + (6 * ceil32(return_data.size)) + 164] = s
                            mem[_16860 + (6 * ceil32(return_data.size)) + 196] = 0
                            mem[_16860 + (6 * ceil32(return_data.size)) + 228] = 160
                            mem[_16860 + (6 * ceil32(return_data.size)) + 324] = mem[_16860]
                            t = 0
                            u = _16860 + 32
                            v = _16860 + (6 * ceil32(return_data.size)) + 356
                            while t < mem[_16860]:
                                mem[v] = mem[u + 12 len 20]
                                _16732 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16860 + (6 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16860 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19620))
                            call address(_19620).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16860 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16860]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16860 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16860 + (7 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22619 = mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16860 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22799 = mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16860 + (7 * ceil32(return_data.size)) + (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16860 + (7 * ceil32(return_data.size)) + (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16860 + (7 * ceil32(return_data.size)) + 160] = _22799
                            require return_data.size >= _22619 + (32 * _22799) + 32
                            t = _16860 + (6 * ceil32(return_data.size)) + _22619 + 192
                            u = _16860 + (7 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22799:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16860] - 1 < mem[_16860]
                            _25226 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25226))
                            staticcall address(_25226).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25679 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16860
                            s = mem[_25679] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16860 + 44 len 20])
                        staticcall mem[_16860 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16860 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16860 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16860 + (2 * ceil32(return_data.size)) + 196] = address(_17476)
                        require ext_code.size(mem[_16860 + 44 len 20])
                        staticcall mem[_16860 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17476)
                        mem[_16860 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16860 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11216 / 2) + 2 < mem[96]
                            _19115 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                            mem[_16860 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16860 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16860 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16860 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16860 + (4 * ceil32(return_data.size)) + 324] = mem[_16860]
                            t = 0
                            u = _16860 + 32
                            v = _16860 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16860]:
                                mem[v] = mem[u + 12 len 20]
                                _16732 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16860 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16860 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19115))
                            call address(_19115).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16860 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16860]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16860 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22620 = mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16860 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22800 = mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16860 + (6 * ceil32(return_data.size)) + (32 * mem[_16860 + (4 * ceil32(return_data.size)) + mem[_16860 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16860 + (6 * ceil32(return_data.size)) + 160] = _22800
                            require return_data.size >= _22620 + (32 * _22800) + 32
                            t = _16860 + (4 * ceil32(return_data.size)) + _22620 + 192
                            u = _16860 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22800:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16860] - 1 < mem[_16860]
                            _25228 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25228))
                            staticcall address(_25228).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25680 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16860
                            s = mem[_25680] - ext_call.return_data[0]
                            continue 
                        mem[_16860 + (4 * ceil32(return_data.size)) + 164] = address(_17476)
                        mem[_16860 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17454))
                        call address(_17454).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17476), -1
                        mem[_16860 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16860 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11216 / 2) + 2 < mem[96]
                        _19896 = mem[(32 * idx + -(_11216 / 2) + 2) + 128]
                        mem[_16860 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16860 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16860 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16860 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16860 + (6 * ceil32(return_data.size)) + 324] = mem[_16860]
                        t = 0
                        u = _16860 + 32
                        v = _16860 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16860]:
                            mem[v] = mem[u + 12 len 20]
                            _16732 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16860 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16860 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19896))
                        call address(_19896).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16860 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16860]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16860 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16860 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22621 = mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16860 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22801 = mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16860 + (7 * ceil32(return_data.size)) + (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16860 + (7 * ceil32(return_data.size)) + (32 * mem[_16860 + (6 * ceil32(return_data.size)) + mem[_16860 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16860 + (7 * ceil32(return_data.size)) + 160] = _22801
                        require return_data.size >= _22621 + (32 * _22801) + 32
                        t = _16860 + (6 * ceil32(return_data.size)) + _22621 + 192
                        u = _16860 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22801:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16860] - 1 < mem[_16860]
                        _25230 = mem[(32 * mem[_16860] - 1) + _16860 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25230))
                        staticcall address(_25230).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25681 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16860
                        s = mem[_25681] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11216 / 2) + 1 < mem[96]
                    require idx - (_11216 / 2) < mem[96]
                    if mem[(32 * idx - (_11216 / 2)) + 140 len 20] != mem[(32 * idx + -(_11216 / 2) + 1) + 140 len 20]:
                        _16988 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_16988 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_16988]
                        mem[_16988 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16988]
                        mem[_16988 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_16988] - 1 < mem[_16988]
                        mem[_16988 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_16988] - 1) + _16988 + 44 len 20])
                        staticcall mem[(32 * mem[_16988] - 1) + _16988 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16988 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16988 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_16988]
                        _17425 = mem[_16988 + 32]
                        require idx - (_11216 / 2) < mem[96]
                        _17452 = mem[(32 * idx - (_11216 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16988 + 44 len 20])
                            staticcall mem[_16988 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16988 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16988 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16988 + (2 * ceil32(return_data.size)) + 132] = address(_17452)
                            require ext_code.size(mem[_16988 + 44 len 20])
                            staticcall mem[_16988 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17452)
                            mem[_16988 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11216 / 2) < mem[96]
                                _18462 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16988 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16988 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16988 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16988 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16988 + (4 * ceil32(return_data.size)) + 260] = mem[_16988]
                                t = 0
                                u = _16988 + 32
                                v = _16988 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16988]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16732 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16988 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16988 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18462))
                                call address(_18462).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16988 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16988]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16988 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22604 = mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16988 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22784 = mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16988 + (6 * ceil32(return_data.size)) + 96] = mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require return_data.size >= _22604 + (32 * _22784) + 32
                                t = _16988 + (4 * ceil32(return_data.size)) + _22604 + 128
                                u = _16988 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22784:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16988] - 1 < mem[_16988]
                                _25196 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25196))
                                staticcall address(_25196).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25664 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16988
                                s = mem[_25664] - ext_call.return_data[0]
                                continue 
                            mem[_16988 + (4 * ceil32(return_data.size)) + 100] = address(_17452)
                            mem[_16988 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17425))
                            call address(_17425).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17452), -1
                            mem[_16988 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11216 / 2) < mem[96]
                            _19215 = mem[(32 * idx - (_11216 / 2)) + 128]
                            mem[_16988 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16988 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16988 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16988 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16988 + (6 * ceil32(return_data.size)) + 260] = mem[_16988]
                            t = 0
                            u = _16988 + 32
                            v = _16988 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16988]:
                                mem[v] = mem[u + 12 len 20]
                                _16732 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16988 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16988 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19215))
                            call address(_19215).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16988 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16988]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16988 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22605 = mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16988 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22785 = mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16988 + (7 * ceil32(return_data.size)) + (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16988 + (7 * ceil32(return_data.size)) + (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16988 + (7 * ceil32(return_data.size)) + 96] = _22785
                            require return_data.size >= _22605 + (32 * _22785) + 32
                            t = _16988 + (6 * ceil32(return_data.size)) + _22605 + 128
                            u = _16988 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22785:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16988] - 1 < mem[_16988]
                            _25198 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25198))
                            staticcall address(_25198).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25665 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16988
                            s = mem[_25665] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16988 + 44 len 20])
                            staticcall mem[_16988 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16988 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16988 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16988 + (2 * ceil32(return_data.size)) + 132] = address(_17452)
                            require ext_code.size(mem[_16988 + 44 len 20])
                            staticcall mem[_16988 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17452)
                            mem[_16988 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11216 / 2) < mem[96]
                                _18717 = mem[(32 * idx - (_11216 / 2)) + 128]
                                mem[_16988 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16988 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16988 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16988 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16988 + (4 * ceil32(return_data.size)) + 260] = mem[_16988]
                                t = 0
                                u = _16988 + 32
                                v = _16988 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16988]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16732 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16988 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16988 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18717))
                                call address(_18717).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16988 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16988]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16988 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22606 = mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16988 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22786 = mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16988 + (6 * ceil32(return_data.size)) + 96] = mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require return_data.size >= _22606 + (32 * _22786) + 32
                                t = _16988 + (4 * ceil32(return_data.size)) + _22606 + 128
                                u = _16988 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22786:
                                    mem[u] = mem[t]
                                    _16732 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16988] - 1 < mem[_16988]
                                _25200 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25200))
                                staticcall address(_25200).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25666 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16732 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16988
                                s = mem[_25666] - ext_call.return_data[0]
                                continue 
                            mem[_16988 + (4 * ceil32(return_data.size)) + 100] = address(_17452)
                            mem[_16988 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17425))
                            call address(_17425).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17452), -1
                            mem[_16988 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11216 / 2) < mem[96]
                            _19518 = mem[(32 * idx - (_11216 / 2)) + 128]
                            mem[_16988 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16988 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16988 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16988 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16988 + (6 * ceil32(return_data.size)) + 260] = mem[_16988]
                            t = 0
                            u = _16988 + 32
                            v = _16988 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16988]:
                                mem[v] = mem[u + 12 len 20]
                                _16732 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16988 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16988 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19518))
                            call address(_19518).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16988 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16988]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16988 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22607 = mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16988 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22787 = mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16988 + (7 * ceil32(return_data.size)) + (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16988 + (7 * ceil32(return_data.size)) + (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16988 + (7 * ceil32(return_data.size)) + 96] = _22787
                            require return_data.size >= _22607 + (32 * _22787) + 32
                            t = _16988 + (6 * ceil32(return_data.size)) + _22607 + 128
                            u = _16988 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22787:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16988] - 1 < mem[_16988]
                            _25202 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25202))
                            staticcall address(_25202).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25667 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16988
                            s = mem[_25667] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16988 + 44 len 20])
                        staticcall mem[_16988 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16988 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16988 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_16988 + (2 * ceil32(return_data.size)) + 132] = address(_17452)
                        require ext_code.size(mem[_16988 + 44 len 20])
                        staticcall mem[_16988 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17452)
                        mem[_16988 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16988 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11216 / 2) < mem[96]
                            _19007 = mem[(32 * idx - (_11216 / 2)) + 128]
                            mem[_16988 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16988 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_16988 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_16988 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_16988 + (4 * ceil32(return_data.size)) + 260] = mem[_16988]
                            t = 0
                            u = _16988 + 32
                            v = _16988 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_16988]:
                                mem[v] = mem[u + 12 len 20]
                                _16732 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16988 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16988 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19007))
                            call address(_19007).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16988 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16988]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16988 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22608 = mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16988 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22788 = mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16988 + (6 * ceil32(return_data.size)) + (32 * mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16988 + (6 * ceil32(return_data.size)) + 96] = mem[_16988 + (4 * ceil32(return_data.size)) + mem[_16988 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _22608 + (32 * _22788) + 32
                            t = _16988 + (4 * ceil32(return_data.size)) + _22608 + 128
                            u = _16988 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22788:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16988] - 1 < mem[_16988]
                            _25204 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25204))
                            staticcall address(_25204).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25668 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16988
                            s = mem[_25668] - ext_call.return_data[0]
                            continue 
                        mem[_16988 + (4 * ceil32(return_data.size)) + 100] = address(_17452)
                        mem[_16988 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17425))
                        call address(_17425).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17452), -1
                        mem[_16988 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16988 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11216 / 2) < mem[96]
                        _19803 = mem[(32 * idx - (_11216 / 2)) + 128]
                        mem[_16988 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16988 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_16988 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_16988 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_16988 + (6 * ceil32(return_data.size)) + 260] = mem[_16988]
                        t = 0
                        u = _16988 + 32
                        v = _16988 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_16988]:
                            mem[v] = mem[u + 12 len 20]
                            _16732 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16988 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_16988 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19803))
                        call address(_19803).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16988 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16988]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16988 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16988 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22609 = mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16988 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22789 = mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16988 + (7 * ceil32(return_data.size)) + (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _16988 + (7 * ceil32(return_data.size)) + (32 * mem[_16988 + (6 * ceil32(return_data.size)) + mem[_16988 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_16988 + (7 * ceil32(return_data.size)) + 96] = _22789
                        require return_data.size >= _22609 + (32 * _22789) + 32
                        t = _16988 + (6 * ceil32(return_data.size)) + _22609 + 128
                        u = _16988 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22789:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16988] - 1 < mem[_16988]
                        _25206 = mem[(32 * mem[_16988] - 1) + _16988 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25206))
                        staticcall address(_25206).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25669 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _16988
                        s = mem[_25669] - ext_call.return_data[0]
                        continue 
                    _16990 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_16990 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_16990]
                    mem[_16990 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16990]
                    mem[_16990 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16990]
                    mem[_16990 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_16990] - 1 < mem[_16990]
                    mem[_16990 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_16990] - 1) + _16990 + 44 len 20])
                    staticcall mem[(32 * mem[_16990] - 1) + _16990 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16990 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16990 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_16990]
                    _17474 = mem[_16990 + 32]
                    require idx + -(_11216 / 2) + 1 < mem[96]
                    _17488 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16990 + 44 len 20])
                        staticcall mem[_16990 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16990 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16990 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16990 + (2 * ceil32(return_data.size)) + 164] = address(_17488)
                        require ext_code.size(mem[_16990 + 44 len 20])
                        staticcall mem[_16990 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17488)
                        mem[_16990 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16990 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _18630 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16990 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16990 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16990 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16990 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16990 + (4 * ceil32(return_data.size)) + 292] = mem[_16990]
                            s = 0
                            t = _16990 + 32
                            u = _16990 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16990]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16990 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16990 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18630))
                            call address(_18630).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16990 + (4 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22430 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22610 = mem[_22430]
                            require mem[_22430] <= test266151307()
                            require _22430 + return_data.size > _22430 + mem[_22430] + 31
                            _22790 = mem[_22430 + mem[_22430]]
                            require mem[_22430 + mem[_22430]] <= test266151307()
                            require (32 * mem[_22430 + mem[_22430]]) + 32 >= 0 and _22430 + ceil32(return_data.size) + (32 * mem[_22430 + mem[_22430]]) + 32 <= test266151307()
                            mem[64] = _22430 + ceil32(return_data.size) + (32 * mem[_22430 + mem[_22430]]) + 32
                            mem[_22430 + ceil32(return_data.size)] = _22790
                            require return_data.size >= _22610 + (32 * _22790) + 32
                            t = _22430 + _22610 + 32
                            u = _22430 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22790:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16990] - 1 < mem[_16990]
                            _25208 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25208))
                            staticcall address(_25208).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25670 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16990
                            s = mem[_25670] - ext_call.return_data[0]
                            continue 
                        mem[_16990 + (4 * ceil32(return_data.size)) + 132] = address(_17488)
                        mem[_16990 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17474))
                        call address(_17474).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17488), -1
                        mem[_16990 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16990 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _19422 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        mem[_16990 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16990 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16990 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16990 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16990 + (6 * ceil32(return_data.size)) + 292] = mem[_16990]
                        s = 0
                        t = _16990 + 32
                        u = _16990 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16990]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16990 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16990 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19422))
                        call address(_19422).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16990 + (6 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22431 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22611 = mem[_22431]
                        require mem[_22431] <= test266151307()
                        require _22431 + return_data.size > _22431 + mem[_22431] + 31
                        _22791 = mem[_22431 + mem[_22431]]
                        require mem[_22431 + mem[_22431]] <= test266151307()
                        require (32 * mem[_22431 + mem[_22431]]) + 32 >= 0 and _22431 + ceil32(return_data.size) + (32 * mem[_22431 + mem[_22431]]) + 32 <= test266151307()
                        mem[64] = _22431 + ceil32(return_data.size) + (32 * mem[_22431 + mem[_22431]]) + 32
                        mem[_22431 + ceil32(return_data.size)] = _22791
                        require return_data.size >= _22611 + (32 * _22791) + 32
                        t = _22431 + _22611 + 32
                        u = _22431 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22791:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16990] - 1 < mem[_16990]
                        _25210 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25210))
                        staticcall address(_25210).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25671 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16990
                        s = mem[_25671] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16990 + 44 len 20])
                        staticcall mem[_16990 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16990 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16990 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16990 + (2 * ceil32(return_data.size)) + 164] = address(_17488)
                        require ext_code.size(mem[_16990 + 44 len 20])
                        staticcall mem[_16990 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17488)
                        mem[_16990 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16990 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11216 / 2) + 1 < mem[96]
                            _18914 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                            mem[_16990 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16990 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16990 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16990 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16990 + (4 * ceil32(return_data.size)) + 292] = mem[_16990]
                            s = 0
                            t = _16990 + 32
                            u = _16990 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16990]:
                                mem[u] = mem[t + 12 len 20]
                                _16732 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16990 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16990 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18914))
                            call address(_18914).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16990 + (4 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22432 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22612 = mem[_22432]
                            require mem[_22432] <= test266151307()
                            require _22432 + return_data.size > _22432 + mem[_22432] + 31
                            _22792 = mem[_22432 + mem[_22432]]
                            require mem[_22432 + mem[_22432]] <= test266151307()
                            require (32 * mem[_22432 + mem[_22432]]) + 32 >= 0 and _22432 + ceil32(return_data.size) + (32 * mem[_22432 + mem[_22432]]) + 32 <= test266151307()
                            mem[64] = _22432 + ceil32(return_data.size) + (32 * mem[_22432 + mem[_22432]]) + 32
                            mem[_22432 + ceil32(return_data.size)] = _22792
                            require return_data.size >= _22612 + (32 * _22792) + 32
                            t = _22432 + _22612 + 32
                            u = _22432 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22792:
                                mem[u] = mem[t]
                                _16732 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16990] - 1 < mem[_16990]
                            _25212 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25212))
                            staticcall address(_25212).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25672 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16732 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16990
                            s = mem[_25672] - ext_call.return_data[0]
                            continue 
                        mem[_16990 + (4 * ceil32(return_data.size)) + 132] = address(_17488)
                        mem[_16990 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17474))
                        call address(_17474).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17488), -1
                        mem[_16990 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16990 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _19716 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        mem[_16990 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16990 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16990 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16990 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16990 + (6 * ceil32(return_data.size)) + 292] = mem[_16990]
                        s = 0
                        t = _16990 + 32
                        u = _16990 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16990]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16990 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16990 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19716))
                        call address(_19716).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16990 + (6 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22433 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22613 = mem[_22433]
                        require mem[_22433] <= test266151307()
                        require _22433 + return_data.size > _22433 + mem[_22433] + 31
                        _22793 = mem[_22433 + mem[_22433]]
                        require mem[_22433 + mem[_22433]] <= test266151307()
                        require (32 * mem[_22433 + mem[_22433]]) + 32 >= 0 and _22433 + ceil32(return_data.size) + (32 * mem[_22433 + mem[_22433]]) + 32 <= test266151307()
                        mem[64] = _22433 + ceil32(return_data.size) + (32 * mem[_22433 + mem[_22433]]) + 32
                        mem[_22433 + ceil32(return_data.size)] = _22793
                        require return_data.size >= _22613 + (32 * _22793) + 32
                        t = _22433 + _22613 + 32
                        u = _22433 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22793:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16990] - 1 < mem[_16990]
                        _25214 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25214))
                        staticcall address(_25214).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25673 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16990
                        s = mem[_25673] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16990 + 44 len 20])
                    staticcall mem[_16990 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16990 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16990 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_16990 + (2 * ceil32(return_data.size)) + 164] = address(_17488)
                    require ext_code.size(mem[_16990 + 44 len 20])
                    staticcall mem[_16990 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17488)
                    mem[_16990 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16990 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11216 / 2) + 1 < mem[96]
                        _19220 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                        mem[_16990 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16990 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_16990 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_16990 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_16990 + (4 * ceil32(return_data.size)) + 292] = mem[_16990]
                        s = 0
                        t = _16990 + 32
                        u = _16990 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_16990]:
                            mem[u] = mem[t + 12 len 20]
                            _16732 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16990 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16990 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19220))
                        call address(_19220).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16990 + (4 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22434 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22614 = mem[_22434]
                        require mem[_22434] <= test266151307()
                        require _22434 + return_data.size > _22434 + mem[_22434] + 31
                        _22794 = mem[_22434 + mem[_22434]]
                        require mem[_22434 + mem[_22434]] <= test266151307()
                        require (32 * mem[_22434 + mem[_22434]]) + 32 >= 0 and _22434 + ceil32(return_data.size) + (32 * mem[_22434 + mem[_22434]]) + 32 <= test266151307()
                        mem[64] = _22434 + ceil32(return_data.size) + (32 * mem[_22434 + mem[_22434]]) + 32
                        mem[_22434 + ceil32(return_data.size)] = _22794
                        require return_data.size >= _22614 + (32 * _22794) + 32
                        t = _22434 + _22614 + 32
                        u = _22434 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22794:
                            mem[u] = mem[t]
                            _16732 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16990] - 1 < mem[_16990]
                        _25216 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25216))
                        staticcall address(_25216).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25674 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16732 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16990
                        s = mem[_25674] - ext_call.return_data[0]
                        continue 
                    mem[_16990 + (4 * ceil32(return_data.size)) + 132] = address(_17488)
                    mem[_16990 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17474))
                    call address(_17474).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17488), -1
                    mem[_16990 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16990 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11216 / 2) + 1 < mem[96]
                    _19981 = mem[(32 * idx + -(_11216 / 2) + 1) + 128]
                    mem[_16990 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16990 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_16990 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_16990 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_16990 + (6 * ceil32(return_data.size)) + 292] = mem[_16990]
                    s = 0
                    t = _16990 + 32
                    u = _16990 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_16990]:
                        mem[u] = mem[t + 12 len 20]
                        _16732 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16990 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_16990 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_19981))
                    call address(_19981).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16990 + (6 * ceil32(return_data.size)) + (32 * mem[_16990]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22435 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22615 = mem[_22435]
                    require mem[_22435] <= test266151307()
                    require _22435 + return_data.size > _22435 + mem[_22435] + 31
                    _22795 = mem[_22435 + mem[_22435]]
                    require mem[_22435 + mem[_22435]] <= test266151307()
                    require (32 * mem[_22435 + mem[_22435]]) + 32 >= 0 and _22435 + ceil32(return_data.size) + (32 * mem[_22435 + mem[_22435]]) + 32 <= test266151307()
                    mem[64] = _22435 + ceil32(return_data.size) + (32 * mem[_22435 + mem[_22435]]) + 32
                    mem[_22435 + ceil32(return_data.size)] = _22795
                    require return_data.size >= _22615 + (32 * _22795) + 32
                    t = _22435 + _22615 + 32
                    u = _22435 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22795:
                        mem[u] = mem[t]
                        _16732 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16990] - 1 < mem[_16990]
                    _25218 = mem[(32 * mem[_16990] - 1) + _16990 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25218))
                    staticcall address(_25218).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25675 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16732 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _16990
                    s = mem[_25675] - ext_call.return_data[0]
                    continue 
                require _11216 / 2 < mem[96]
                _16756 = mem[(16 * Mask(251, 1, _11216)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16756))
                staticcall address(_16756).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16816 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16816] < _11294 - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11221 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11249 = mem[_11221]
                    require mem[_11221] == mem[_11221 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11298 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11298)
                    require ext_code.size(address(_11249))
                    staticcall address(_11249).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11298)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11349 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11377 = mem[_11349]
                    require mem[_11349] == mem[_11349 + 12 len 20]
                    require ext_code.size(mem[_11349 + 12 len 20])
                    staticcall mem[_11349 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11563 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11713 = mem[_11563]
                    require mem[_11563] == mem[_11563 + 18 len 14]
                    _11835 = mem[_11563 + 32]
                    require mem[_11563 + 32] == mem[_11563 + 50 len 14]
                    require mem[_11563 + 64] == mem[_11563 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11563 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11563 + 50 len 14] / (997 * s) + (1000 * mem[_11563 + 18 len 14])
                            idx = idx + 1
                            s = _11377
                            s = 997 * s * Mask(112, 0, _11835) / (997 * s) + (1000 * Mask(112, 0, _11713))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11563 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11563 + 50 len 14] / (997 * s) + (1000 * mem[_11563 + 18 len 14])
                            idx = idx + 1
                            s = _11377
                            s = 997 * s * Mask(112, 0, _11835) / (997 * s) + (1000 * Mask(112, 0, _11713))
                            continue 
                    require (997 * s) + (1000 * mem[_11563 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11563 + 18 len 14] / (997 * s) + (1000 * mem[_11563 + 50 len 14])
                    idx = idx + 1
                    s = _11377
                    s = 997 * s * Mask(112, 0, _11713) / (997 * s) + (1000 * Mask(112, 0, _11835))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11219 = mem[96]
                require mem[96] / 2 < mem[96]
                _11246 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11246))
                staticcall address(_11246).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11270 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11297 = mem[_11270]
                _16733 = mem[96]
                idx = _11219 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16733 - 1:
                    require idx + -(_11219 / 2) + 1 < mem[96]
                    require idx - (_11219 / 2) < mem[96]
                    require idx + -(_11219 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11219 / 2)) + 140 len 20] != mem[(32 * idx + -(_11219 / 2) + 1) + 140 len 20]:
                        require idx - (_11219 / 2) < mem[96]
                        if mem[(32 * idx - (_11219 / 2)) + 140 len 20] != mem[(32 * idx + -(_11219 / 2) + 1) + 140 len 20]:
                            _16863 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16863 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16863]
                            mem[_16863 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16863]
                            mem[_16863 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16863] - 1 < mem[_16863]
                            mem[_16863 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16863] - 1) + _16863 + 44 len 20])
                            staticcall mem[(32 * mem[_16863] - 1) + _16863 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16863 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16863 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16863]
                            _17354 = mem[_16863 + 32]
                            require idx - (_11219 / 2) < mem[96]
                            _17378 = mem[(32 * idx - (_11219 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16863 + 44 len 20])
                                staticcall mem[_16863 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16863 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16863 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16863 + (2 * ceil32(return_data.size)) + 132] = address(_17378)
                                require ext_code.size(mem[_16863 + 44 len 20])
                                staticcall mem[_16863 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17378)
                                mem[_16863 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16863 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11219 / 2) < mem[96]
                                    _18278 = mem[(32 * idx - (_11219 / 2)) + 128]
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 260] = mem[_16863]
                                    s = 0
                                    t = _16863 + 32
                                    u = _16863 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16863]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16733 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18278))
                                    call address(_18278).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16863 + (4 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22442 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22622 = mem[_22442]
                                    require mem[_22442] <= test266151307()
                                    require _22442 + return_data.size > _22442 + mem[_22442] + 31
                                    _22802 = mem[_22442 + mem[_22442]]
                                    require mem[_22442 + mem[_22442]] <= test266151307()
                                    require (32 * mem[_22442 + mem[_22442]]) + 32 >= 0 and _22442 + ceil32(return_data.size) + (32 * mem[_22442 + mem[_22442]]) + 32 <= test266151307()
                                    mem[64] = _22442 + ceil32(return_data.size) + (32 * mem[_22442 + mem[_22442]]) + 32
                                    mem[_22442 + ceil32(return_data.size)] = _22802
                                    require return_data.size >= _22622 + (32 * _22802) + 32
                                    t = _22442 + _22622 + 32
                                    u = _22442 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22802:
                                        mem[u] = mem[t]
                                        _16733 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16863] - 1 < mem[_16863]
                                    _25232 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25232))
                                    staticcall address(_25232).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25682 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16733 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16863
                                    s = mem[_25682] - ext_call.return_data[0]
                                    continue 
                                mem[_16863 + (4 * ceil32(return_data.size)) + 100] = address(_17378)
                                mem[_16863 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17354))
                                call address(_17354).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17378), -1
                                mem[_16863 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16863 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11219 / 2) < mem[96]
                                _18921 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16863 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16863 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16863 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16863 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16863 + (6 * ceil32(return_data.size)) + 260] = mem[_16863]
                                s = 0
                                t = _16863 + 32
                                u = _16863 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16863]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16863 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16863 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18921))
                                call address(_18921).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16863 + (6 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22443 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22623 = mem[_22443]
                                require mem[_22443] <= test266151307()
                                require _22443 + return_data.size > _22443 + mem[_22443] + 31
                                _22803 = mem[_22443 + mem[_22443]]
                                require mem[_22443 + mem[_22443]] <= test266151307()
                                require (32 * mem[_22443 + mem[_22443]]) + 32 >= 0 and _22443 + ceil32(return_data.size) + (32 * mem[_22443 + mem[_22443]]) + 32 <= test266151307()
                                mem[64] = _22443 + ceil32(return_data.size) + (32 * mem[_22443 + mem[_22443]]) + 32
                                mem[_22443 + ceil32(return_data.size)] = _22803
                                require return_data.size >= _22623 + (32 * _22803) + 32
                                t = _22443 + _22623 + 32
                                u = _22443 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22803:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16863] - 1 < mem[_16863]
                                _25234 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25234))
                                staticcall address(_25234).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25683 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16863
                                s = mem[_25683] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16863 + 44 len 20])
                                staticcall mem[_16863 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16863 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16863 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16863 + (2 * ceil32(return_data.size)) + 132] = address(_17378)
                                require ext_code.size(mem[_16863 + 44 len 20])
                                staticcall mem[_16863 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17378)
                                mem[_16863 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16863 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11219 / 2) < mem[96]
                                    _18470 = mem[(32 * idx - (_11219 / 2)) + 128]
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 260] = mem[_16863]
                                    s = 0
                                    t = _16863 + 32
                                    u = _16863 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16863]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16733 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16863 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18470))
                                    call address(_18470).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16863 + (4 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22444 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22624 = mem[_22444]
                                    require mem[_22444] <= test266151307()
                                    require _22444 + return_data.size > _22444 + mem[_22444] + 31
                                    _22804 = mem[_22444 + mem[_22444]]
                                    require mem[_22444 + mem[_22444]] <= test266151307()
                                    require (32 * mem[_22444 + mem[_22444]]) + 32 >= 0 and _22444 + ceil32(return_data.size) + (32 * mem[_22444 + mem[_22444]]) + 32 <= test266151307()
                                    mem[64] = _22444 + ceil32(return_data.size) + (32 * mem[_22444 + mem[_22444]]) + 32
                                    mem[_22444 + ceil32(return_data.size)] = _22804
                                    require return_data.size >= _22624 + (32 * _22804) + 32
                                    t = _22444 + _22624 + 32
                                    u = _22444 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22804:
                                        mem[u] = mem[t]
                                        _16733 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16863] - 1 < mem[_16863]
                                    _25236 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25236))
                                    staticcall address(_25236).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25684 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16733 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16863
                                    s = mem[_25684] - ext_call.return_data[0]
                                    continue 
                                mem[_16863 + (4 * ceil32(return_data.size)) + 100] = address(_17378)
                                mem[_16863 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17354))
                                call address(_17354).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17378), -1
                                mem[_16863 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16863 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11219 / 2) < mem[96]
                                _19227 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16863 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16863 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16863 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16863 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16863 + (6 * ceil32(return_data.size)) + 260] = mem[_16863]
                                s = 0
                                t = _16863 + 32
                                u = _16863 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16863]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16863 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16863 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19227))
                                call address(_19227).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16863 + (6 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22445 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22625 = mem[_22445]
                                require mem[_22445] <= test266151307()
                                require _22445 + return_data.size > _22445 + mem[_22445] + 31
                                _22805 = mem[_22445 + mem[_22445]]
                                require mem[_22445 + mem[_22445]] <= test266151307()
                                require (32 * mem[_22445 + mem[_22445]]) + 32 >= 0 and _22445 + ceil32(return_data.size) + (32 * mem[_22445 + mem[_22445]]) + 32 <= test266151307()
                                mem[64] = _22445 + ceil32(return_data.size) + (32 * mem[_22445 + mem[_22445]]) + 32
                                mem[_22445 + ceil32(return_data.size)] = _22805
                                require return_data.size >= _22625 + (32 * _22805) + 32
                                t = _22445 + _22625 + 32
                                u = _22445 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22805:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16863] - 1 < mem[_16863]
                                _25238 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25238))
                                staticcall address(_25238).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25685 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16863
                                s = mem[_25685] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16863 + 44 len 20])
                            staticcall mem[_16863 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16863 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16863 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16863 + (2 * ceil32(return_data.size)) + 132] = address(_17378)
                            require ext_code.size(mem[_16863 + 44 len 20])
                            staticcall mem[_16863 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17378)
                            mem[_16863 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16863 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11219 / 2) < mem[96]
                                _18726 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16863 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16863 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16863 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16863 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16863 + (4 * ceil32(return_data.size)) + 260] = mem[_16863]
                                s = 0
                                t = _16863 + 32
                                u = _16863 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16863]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16863 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16863 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18726))
                                call address(_18726).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16863 + (4 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22446 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22626 = mem[_22446]
                                require mem[_22446] <= test266151307()
                                require _22446 + return_data.size > _22446 + mem[_22446] + 31
                                _22806 = mem[_22446 + mem[_22446]]
                                require mem[_22446 + mem[_22446]] <= test266151307()
                                require (32 * mem[_22446 + mem[_22446]]) + 32 >= 0 and _22446 + ceil32(return_data.size) + (32 * mem[_22446 + mem[_22446]]) + 32 <= test266151307()
                                mem[64] = _22446 + ceil32(return_data.size) + (32 * mem[_22446 + mem[_22446]]) + 32
                                mem[_22446 + ceil32(return_data.size)] = _22806
                                require return_data.size >= _22626 + (32 * _22806) + 32
                                t = _22446 + _22626 + 32
                                u = _22446 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22806:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16863] - 1 < mem[_16863]
                                _25240 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25240))
                                staticcall address(_25240).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25686 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16863
                                s = mem[_25686] - ext_call.return_data[0]
                                continue 
                            mem[_16863 + (4 * ceil32(return_data.size)) + 100] = address(_17378)
                            mem[_16863 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17354))
                            call address(_17354).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17378), -1
                            mem[_16863 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16863 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11219 / 2) < mem[96]
                            _19528 = mem[(32 * idx - (_11219 / 2)) + 128]
                            mem[_16863 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16863 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16863 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16863 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16863 + (6 * ceil32(return_data.size)) + 260] = mem[_16863]
                            s = 0
                            t = _16863 + 32
                            u = _16863 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16863]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16863 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16863 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19528))
                            call address(_19528).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16863 + (6 * ceil32(return_data.size)) + (32 * mem[_16863]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22447 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22627 = mem[_22447]
                            require mem[_22447] <= test266151307()
                            require _22447 + return_data.size > _22447 + mem[_22447] + 31
                            _22807 = mem[_22447 + mem[_22447]]
                            require mem[_22447 + mem[_22447]] <= test266151307()
                            require (32 * mem[_22447 + mem[_22447]]) + 32 >= 0 and _22447 + ceil32(return_data.size) + (32 * mem[_22447 + mem[_22447]]) + 32 <= test266151307()
                            mem[64] = _22447 + ceil32(return_data.size) + (32 * mem[_22447 + mem[_22447]]) + 32
                            mem[_22447 + ceil32(return_data.size)] = _22807
                            require return_data.size >= _22627 + (32 * _22807) + 32
                            t = _22447 + _22627 + 32
                            u = _22447 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22807:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16863] - 1 < mem[_16863]
                            _25242 = mem[(32 * mem[_16863] - 1) + _16863 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25242))
                            staticcall address(_25242).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25687 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16863
                            s = mem[_25687] - ext_call.return_data[0]
                            continue 
                        _16865 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16865 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16865]
                        mem[_16865 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16865]
                        mem[_16865 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16865]
                        mem[_16865 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16865] - 1 < mem[_16865]
                        mem[_16865 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16865] - 1) + _16865 + 44 len 20])
                        staticcall mem[(32 * mem[_16865] - 1) + _16865 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16865 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16865 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16865]
                        _17402 = mem[_16865 + 32]
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _17429 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16865 + 44 len 20])
                            staticcall mem[_16865 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16865 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16865 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16865 + (2 * ceil32(return_data.size)) + 164] = address(_17429)
                            require ext_code.size(mem[_16865 + 44 len 20])
                            staticcall mem[_16865 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17429)
                            mem[_16865 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11219 / 2) + 1 < mem[96]
                                _18399 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                                mem[_16865 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16865 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16865 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16865 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16865 + (4 * ceil32(return_data.size)) + 292] = mem[_16865]
                                t = 0
                                u = _16865 + 32
                                v = _16865 + (4 * ceil32(return_data.size)) + 324
                                while t < mem[_16865]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16733 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16865 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16865 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18399))
                                call address(_18399).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16865 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16865]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16865 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _22628 = mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                                require mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16865 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                                _22808 = mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                                require (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                                mem[64] = _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                                mem[_16865 + (6 * ceil32(return_data.size)) + 128] = _22808
                                require return_data.size >= _22628 + (32 * _22808) + 32
                                t = _16865 + (4 * ceil32(return_data.size)) + _22628 + 160
                                u = _16865 + (6 * ceil32(return_data.size)) + 160
                                s = 0
                                while s < _22808:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16865] - 1 < mem[_16865]
                                _25244 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25244))
                                staticcall address(_25244).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25688 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16865
                                s = mem[_25688] - ext_call.return_data[0]
                                continue 
                            mem[_16865 + (4 * ceil32(return_data.size)) + 132] = address(_17429)
                            mem[_16865 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17402))
                            call address(_17402).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17429), -1
                            mem[_16865 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _19124 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_16865 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16865 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16865 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16865 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16865 + (6 * ceil32(return_data.size)) + 292] = mem[_16865]
                            t = 0
                            u = _16865 + 32
                            v = _16865 + (6 * ceil32(return_data.size)) + 324
                            while t < mem[_16865]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16865 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16865 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19124))
                            call address(_19124).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16865 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16865]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16865 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (7 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22629 = mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16865 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22809 = mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16865 + (7 * ceil32(return_data.size)) + (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16865 + (7 * ceil32(return_data.size)) + (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16865 + (7 * ceil32(return_data.size)) + 128] = _22809
                            require return_data.size >= _22629 + (32 * _22809) + 32
                            t = _16865 + (6 * ceil32(return_data.size)) + _22629 + 160
                            u = _16865 + (7 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22809:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16865] - 1 < mem[_16865]
                            _25246 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25246))
                            staticcall address(_25246).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25689 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16865
                            s = mem[_25689] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16865 + 44 len 20])
                            staticcall mem[_16865 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16865 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16865 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16865 + (2 * ceil32(return_data.size)) + 164] = address(_17429)
                            require ext_code.size(mem[_16865 + 44 len 20])
                            staticcall mem[_16865 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17429)
                            mem[_16865 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11219 / 2) + 1 < mem[96]
                                _18638 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                                mem[_16865 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16865 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16865 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16865 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16865 + (4 * ceil32(return_data.size)) + 292] = mem[_16865]
                                t = 0
                                u = _16865 + 32
                                v = _16865 + (4 * ceil32(return_data.size)) + 324
                                while t < mem[_16865]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16733 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16865 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16865 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18638))
                                call address(_18638).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16865 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16865]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16865 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                                require return_data.size >= 32
                                _22630 = mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                                require mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16865 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                                _22810 = mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                                require mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                                require (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                                mem[64] = _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                                mem[_16865 + (6 * ceil32(return_data.size)) + 128] = _22810
                                require return_data.size >= _22630 + (32 * _22810) + 32
                                t = _16865 + (4 * ceil32(return_data.size)) + _22630 + 160
                                u = _16865 + (6 * ceil32(return_data.size)) + 160
                                s = 0
                                while s < _22810:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16865] - 1 < mem[_16865]
                                _25248 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25248))
                                staticcall address(_25248).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25690 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16865
                                s = mem[_25690] - ext_call.return_data[0]
                                continue 
                            mem[_16865 + (4 * ceil32(return_data.size)) + 132] = address(_17429)
                            mem[_16865 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17402))
                            call address(_17402).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17429), -1
                            mem[_16865 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _19431 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_16865 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16865 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16865 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16865 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16865 + (6 * ceil32(return_data.size)) + 292] = mem[_16865]
                            t = 0
                            u = _16865 + 32
                            v = _16865 + (6 * ceil32(return_data.size)) + 324
                            while t < mem[_16865]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16865 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16865 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19431))
                            call address(_19431).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16865 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16865]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16865 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (7 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22631 = mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16865 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22811 = mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16865 + (7 * ceil32(return_data.size)) + (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16865 + (7 * ceil32(return_data.size)) + (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16865 + (7 * ceil32(return_data.size)) + 128] = _22811
                            require return_data.size >= _22631 + (32 * _22811) + 32
                            t = _16865 + (6 * ceil32(return_data.size)) + _22631 + 160
                            u = _16865 + (7 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22811:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16865] - 1 < mem[_16865]
                            _25250 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25250))
                            staticcall address(_25250).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16865
                            s = mem[_25691] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16865 + 44 len 20])
                        staticcall mem[_16865 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16865 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16865 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16865 + (2 * ceil32(return_data.size)) + 164] = address(_17429)
                        require ext_code.size(mem[_16865 + 44 len 20])
                        staticcall mem[_16865 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17429)
                        mem[_16865 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16865 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _18926 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_16865 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16865 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16865 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16865 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16865 + (4 * ceil32(return_data.size)) + 292] = mem[_16865]
                            t = 0
                            u = _16865 + 32
                            v = _16865 + (4 * ceil32(return_data.size)) + 324
                            while t < mem[_16865]:
                                mem[v] = mem[u + 12 len 20]
                                _16733 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16865 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16865 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18926))
                            call address(_18926).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16865 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_16865]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16865 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _22632 = mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16865 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _22812 = mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _16865 + (6 * ceil32(return_data.size)) + (32 * mem[_16865 + (4 * ceil32(return_data.size)) + mem[_16865 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_16865 + (6 * ceil32(return_data.size)) + 128] = _22812
                            require return_data.size >= _22632 + (32 * _22812) + 32
                            t = _16865 + (4 * ceil32(return_data.size)) + _22632 + 160
                            u = _16865 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _22812:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16865] - 1 < mem[_16865]
                            _25252 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25252))
                            staticcall address(_25252).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25692 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16865
                            s = mem[_25692] - ext_call.return_data[0]
                            continue 
                        mem[_16865 + (4 * ceil32(return_data.size)) + 132] = address(_17429)
                        mem[_16865 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17402))
                        call address(_17402).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17429), -1
                        mem[_16865 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16865 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _19727 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        mem[_16865 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16865 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16865 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16865 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16865 + (6 * ceil32(return_data.size)) + 292] = mem[_16865]
                        t = 0
                        u = _16865 + 32
                        v = _16865 + (6 * ceil32(return_data.size)) + 324
                        while t < mem[_16865]:
                            mem[v] = mem[u + 12 len 20]
                            _16733 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16865 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16865 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19727))
                        call address(_19727).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16865 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_16865]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16865 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16865 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _22633 = mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16865 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _22813 = mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _16865 + (7 * ceil32(return_data.size)) + (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _16865 + (7 * ceil32(return_data.size)) + (32 * mem[_16865 + (6 * ceil32(return_data.size)) + mem[_16865 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_16865 + (7 * ceil32(return_data.size)) + 128] = _22813
                        require return_data.size >= _22633 + (32 * _22813) + 32
                        t = _16865 + (6 * ceil32(return_data.size)) + _22633 + 160
                        u = _16865 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _22813:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16865] - 1 < mem[_16865]
                        _25254 = mem[(32 * mem[_16865] - 1) + _16865 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25254))
                        staticcall address(_25254).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25693 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16865
                        s = mem[_25693] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11219 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11219 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_11219 / 2) + 1) + 140 len 20]:
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        require idx - (_11219 / 2) < mem[96]
                        if mem[(32 * idx - (_11219 / 2)) + 140 len 20] != mem[(32 * idx + -(_11219 / 2) + 1) + 140 len 20]:
                            _16998 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16998 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16998]
                            mem[_16998 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16998]
                            mem[_16998 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16998] - 1 < mem[_16998]
                            mem[_16998 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16998] - 1) + _16998 + 44 len 20])
                            staticcall mem[(32 * mem[_16998] - 1) + _16998 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16998 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16998]
                            _17430 = mem[_16998 + 32]
                            require idx - (_11219 / 2) < mem[96]
                            _17456 = mem[(32 * idx - (_11219 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16998 + 44 len 20])
                                staticcall mem[_16998 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16998 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16998 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16998 + (2 * ceil32(return_data.size)) + 132] = address(_17456)
                                require ext_code.size(mem[_16998 + 44 len 20])
                                staticcall mem[_16998 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17456)
                                mem[_16998 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16998 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11219 / 2) < mem[96]
                                    _18474 = mem[(32 * idx - (_11219 / 2)) + 128]
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 260] = mem[_16998]
                                    s = 0
                                    t = _16998 + 32
                                    u = _16998 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16998]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16733 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18474))
                                    call address(_18474).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16998 + (4 * ceil32(return_data.size)) + (32 * mem[_16998]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22454 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22634 = mem[_22454]
                                    require mem[_22454] <= test266151307()
                                    require _22454 + return_data.size > _22454 + mem[_22454] + 31
                                    _22814 = mem[_22454 + mem[_22454]]
                                    require mem[_22454 + mem[_22454]] <= test266151307()
                                    require (32 * mem[_22454 + mem[_22454]]) + 32 >= 0 and _22454 + ceil32(return_data.size) + (32 * mem[_22454 + mem[_22454]]) + 32 <= test266151307()
                                    mem[64] = _22454 + ceil32(return_data.size) + (32 * mem[_22454 + mem[_22454]]) + 32
                                    mem[_22454 + ceil32(return_data.size)] = _22814
                                    require return_data.size >= _22634 + (32 * _22814) + 32
                                    t = _22454 + _22634 + 32
                                    u = _22454 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22814:
                                        mem[u] = mem[t]
                                        _16733 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16998] - 1 < mem[_16998]
                                    _25256 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25256))
                                    staticcall address(_25256).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25694 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16733 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16998
                                    s = mem[_25694] - ext_call.return_data[0]
                                    continue 
                                mem[_16998 + (4 * ceil32(return_data.size)) + 100] = address(_17456)
                                mem[_16998 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17430))
                                call address(_17430).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17456), -1
                                mem[_16998 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11219 / 2) < mem[96]
                                _19231 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16998 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16998 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16998 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16998 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16998 + (6 * ceil32(return_data.size)) + 260] = mem[_16998]
                                s = 0
                                t = _16998 + 32
                                u = _16998 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16998]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16998 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16998 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19231))
                                call address(_19231).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22455 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22635 = mem[_22455]
                                require mem[_22455] <= test266151307()
                                require _22455 + return_data.size > _22455 + mem[_22455] + 31
                                _22815 = mem[_22455 + mem[_22455]]
                                require mem[_22455 + mem[_22455]] <= test266151307()
                                require (32 * mem[_22455 + mem[_22455]]) + 32 >= 0 and _22455 + ceil32(return_data.size) + (32 * mem[_22455 + mem[_22455]]) + 32 <= test266151307()
                                mem[64] = _22455 + ceil32(return_data.size) + (32 * mem[_22455 + mem[_22455]]) + 32
                                mem[_22455 + ceil32(return_data.size)] = _22815
                                require return_data.size >= _22635 + (32 * _22815) + 32
                                t = _22455 + _22635 + 32
                                u = _22455 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22815:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16998] - 1 < mem[_16998]
                                _25258 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25258))
                                staticcall address(_25258).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25695 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16998
                                s = mem[_25695] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16998 + 44 len 20])
                                staticcall mem[_16998 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16998 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16998 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16998 + (2 * ceil32(return_data.size)) + 132] = address(_17456)
                                require ext_code.size(mem[_16998 + 44 len 20])
                                staticcall mem[_16998 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17456)
                                mem[_16998 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16998 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11219 / 2) < mem[96]
                                    _18732 = mem[(32 * idx - (_11219 / 2)) + 128]
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 260] = mem[_16998]
                                    s = 0
                                    t = _16998 + 32
                                    u = _16998 + (4 * ceil32(return_data.size)) + 292
                                    while s < mem[_16998]:
                                        mem[u] = mem[t + 12 len 20]
                                        _16733 = mem[96]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16998 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18732))
                                    call address(_18732).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _16998 + (4 * ceil32(return_data.size)) + (32 * mem[_16998]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22456 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22636 = mem[_22456]
                                    require mem[_22456] <= test266151307()
                                    require _22456 + return_data.size > _22456 + mem[_22456] + 31
                                    _22816 = mem[_22456 + mem[_22456]]
                                    require mem[_22456 + mem[_22456]] <= test266151307()
                                    require (32 * mem[_22456 + mem[_22456]]) + 32 >= 0 and _22456 + ceil32(return_data.size) + (32 * mem[_22456 + mem[_22456]]) + 32 <= test266151307()
                                    mem[64] = _22456 + ceil32(return_data.size) + (32 * mem[_22456 + mem[_22456]]) + 32
                                    mem[_22456 + ceil32(return_data.size)] = _22816
                                    require return_data.size >= _22636 + (32 * _22816) + 32
                                    t = _22456 + _22636 + 32
                                    u = _22456 + ceil32(return_data.size) + 32
                                    s = 0
                                    while s < _22816:
                                        mem[u] = mem[t]
                                        _16733 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16998] - 1 < mem[_16998]
                                    _25260 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25260))
                                    staticcall address(_25260).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25696 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16733 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16998
                                    s = mem[_25696] - ext_call.return_data[0]
                                    continue 
                                mem[_16998 + (4 * ceil32(return_data.size)) + 100] = address(_17456)
                                mem[_16998 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17430))
                                call address(_17430).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17456), -1
                                mem[_16998 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11219 / 2) < mem[96]
                                _19534 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16998 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16998 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16998 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16998 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16998 + (6 * ceil32(return_data.size)) + 260] = mem[_16998]
                                s = 0
                                t = _16998 + 32
                                u = _16998 + (6 * ceil32(return_data.size)) + 292
                                while s < mem[_16998]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16998 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16998 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19534))
                                call address(_19534).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22457 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22637 = mem[_22457]
                                require mem[_22457] <= test266151307()
                                require _22457 + return_data.size > _22457 + mem[_22457] + 31
                                _22817 = mem[_22457 + mem[_22457]]
                                require mem[_22457 + mem[_22457]] <= test266151307()
                                require (32 * mem[_22457 + mem[_22457]]) + 32 >= 0 and _22457 + ceil32(return_data.size) + (32 * mem[_22457 + mem[_22457]]) + 32 <= test266151307()
                                mem[64] = _22457 + ceil32(return_data.size) + (32 * mem[_22457 + mem[_22457]]) + 32
                                mem[_22457 + ceil32(return_data.size)] = _22817
                                require return_data.size >= _22637 + (32 * _22817) + 32
                                t = _22457 + _22637 + 32
                                u = _22457 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22817:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16998] - 1 < mem[_16998]
                                _25262 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25262))
                                staticcall address(_25262).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25697 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16998
                                s = mem[_25697] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16998 + 44 len 20])
                            staticcall mem[_16998 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16998 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16998 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16998 + (2 * ceil32(return_data.size)) + 132] = address(_17456)
                            require ext_code.size(mem[_16998 + 44 len 20])
                            staticcall mem[_16998 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17456)
                            mem[_16998 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11219 / 2) < mem[96]
                                _19021 = mem[(32 * idx - (_11219 / 2)) + 128]
                                mem[_16998 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16998 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16998 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16998 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16998 + (4 * ceil32(return_data.size)) + 260] = mem[_16998]
                                s = 0
                                t = _16998 + 32
                                u = _16998 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_16998]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16998 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16998 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19021))
                                call address(_19021).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16998 + (4 * ceil32(return_data.size)) + (32 * mem[_16998]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22458 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22638 = mem[_22458]
                                require mem[_22458] <= test266151307()
                                require _22458 + return_data.size > _22458 + mem[_22458] + 31
                                _22818 = mem[_22458 + mem[_22458]]
                                require mem[_22458 + mem[_22458]] <= test266151307()
                                require (32 * mem[_22458 + mem[_22458]]) + 32 >= 0 and _22458 + ceil32(return_data.size) + (32 * mem[_22458 + mem[_22458]]) + 32 <= test266151307()
                                mem[64] = _22458 + ceil32(return_data.size) + (32 * mem[_22458 + mem[_22458]]) + 32
                                mem[_22458 + ceil32(return_data.size)] = _22818
                                require return_data.size >= _22638 + (32 * _22818) + 32
                                t = _22458 + _22638 + 32
                                u = _22458 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22818:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16998] - 1 < mem[_16998]
                                _25264 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25264))
                                staticcall address(_25264).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25698 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16998
                                s = mem[_25698] - ext_call.return_data[0]
                                continue 
                            mem[_16998 + (4 * ceil32(return_data.size)) + 100] = address(_17456)
                            mem[_16998 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17430))
                            call address(_17430).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17456), -1
                            mem[_16998 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16998 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11219 / 2) < mem[96]
                            _19816 = mem[(32 * idx - (_11219 / 2)) + 128]
                            mem[_16998 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16998 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16998 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16998 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16998 + (6 * ceil32(return_data.size)) + 260] = mem[_16998]
                            s = 0
                            t = _16998 + 32
                            u = _16998 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_16998]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16998 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16998 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19816))
                            call address(_19816).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16998 + (6 * ceil32(return_data.size)) + (32 * mem[_16998]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22459 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22639 = mem[_22459]
                            require mem[_22459] <= test266151307()
                            require _22459 + return_data.size > _22459 + mem[_22459] + 31
                            _22819 = mem[_22459 + mem[_22459]]
                            require mem[_22459 + mem[_22459]] <= test266151307()
                            require (32 * mem[_22459 + mem[_22459]]) + 32 >= 0 and _22459 + ceil32(return_data.size) + (32 * mem[_22459 + mem[_22459]]) + 32 <= test266151307()
                            mem[64] = _22459 + ceil32(return_data.size) + (32 * mem[_22459 + mem[_22459]]) + 32
                            mem[_22459 + ceil32(return_data.size)] = _22819
                            require return_data.size >= _22639 + (32 * _22819) + 32
                            t = _22459 + _22639 + 32
                            u = _22459 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22819:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16998] - 1 < mem[_16998]
                            _25266 = mem[(32 * mem[_16998] - 1) + _16998 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25266))
                            staticcall address(_25266).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25699 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16998
                            s = mem[_25699] - ext_call.return_data[0]
                            continue 
                        _17000 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_17000 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_17000]
                        mem[_17000 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17000]
                        mem[_17000 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_17000]
                        mem[_17000 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_17000] - 1 < mem[_17000]
                        mem[_17000 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_17000] - 1) + _17000 + 44 len 20])
                        staticcall mem[(32 * mem[_17000] - 1) + _17000 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17000 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17000 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_17000]
                        _17477 = mem[_17000 + 32]
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _17489 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17000 + 44 len 20])
                            staticcall mem[_17000 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17000 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17000 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17000 + (2 * ceil32(return_data.size)) + 164] = address(_17489)
                            require ext_code.size(mem[_17000 + 44 len 20])
                            staticcall mem[_17000 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17489)
                            mem[_17000 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17000 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11219 / 2) + 1 < mem[96]
                                _18645 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                                mem[_17000 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17000 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17000 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17000 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17000 + (4 * ceil32(return_data.size)) + 292] = mem[_17000]
                                s = 0
                                t = _17000 + 32
                                u = _17000 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17000]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17000 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17000 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18645))
                                call address(_18645).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17000 + (4 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22460 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22640 = mem[_22460]
                                require mem[_22460] <= test266151307()
                                require _22460 + return_data.size > _22460 + mem[_22460] + 31
                                _22820 = mem[_22460 + mem[_22460]]
                                require mem[_22460 + mem[_22460]] <= test266151307()
                                require (32 * mem[_22460 + mem[_22460]]) + 32 >= 0 and _22460 + ceil32(return_data.size) + (32 * mem[_22460 + mem[_22460]]) + 32 <= test266151307()
                                mem[64] = _22460 + ceil32(return_data.size) + (32 * mem[_22460 + mem[_22460]]) + 32
                                mem[_22460 + ceil32(return_data.size)] = _22820
                                require return_data.size >= _22640 + (32 * _22820) + 32
                                t = _22460 + _22640 + 32
                                u = _22460 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22820:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17000] - 1 < mem[_17000]
                                _25268 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25268))
                                staticcall address(_25268).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25700 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17000
                                s = mem[_25700] - ext_call.return_data[0]
                                continue 
                            mem[_17000 + (4 * ceil32(return_data.size)) + 132] = address(_17489)
                            mem[_17000 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17477))
                            call address(_17477).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17489), -1
                            mem[_17000 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17000 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _19439 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_17000 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17000 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17000 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17000 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17000 + (6 * ceil32(return_data.size)) + 292] = mem[_17000]
                            s = 0
                            t = _17000 + 32
                            u = _17000 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17000]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17000 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17000 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19439))
                            call address(_19439).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17000 + (6 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22461 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22641 = mem[_22461]
                            require mem[_22461] <= test266151307()
                            require _22461 + return_data.size > _22461 + mem[_22461] + 31
                            _22821 = mem[_22461 + mem[_22461]]
                            require mem[_22461 + mem[_22461]] <= test266151307()
                            require (32 * mem[_22461 + mem[_22461]]) + 32 >= 0 and _22461 + ceil32(return_data.size) + (32 * mem[_22461 + mem[_22461]]) + 32 <= test266151307()
                            mem[64] = _22461 + ceil32(return_data.size) + (32 * mem[_22461 + mem[_22461]]) + 32
                            mem[_22461 + ceil32(return_data.size)] = _22821
                            require return_data.size >= _22641 + (32 * _22821) + 32
                            t = _22461 + _22641 + 32
                            u = _22461 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22821:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17000] - 1 < mem[_17000]
                            _25270 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25270))
                            staticcall address(_25270).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25701 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17000
                            s = mem[_25701] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17000 + 44 len 20])
                            staticcall mem[_17000 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17000 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17000 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_17000 + (2 * ceil32(return_data.size)) + 164] = address(_17489)
                            require ext_code.size(mem[_17000 + 44 len 20])
                            staticcall mem[_17000 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17489)
                            mem[_17000 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17000 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11219 / 2) + 1 < mem[96]
                                _18932 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                                mem[_17000 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17000 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_17000 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_17000 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_17000 + (4 * ceil32(return_data.size)) + 292] = mem[_17000]
                                s = 0
                                t = _17000 + 32
                                u = _17000 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_17000]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16733 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17000 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_17000 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18932))
                                call address(_18932).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17000 + (4 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22462 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22642 = mem[_22462]
                                require mem[_22462] <= test266151307()
                                require _22462 + return_data.size > _22462 + mem[_22462] + 31
                                _22822 = mem[_22462 + mem[_22462]]
                                require mem[_22462 + mem[_22462]] <= test266151307()
                                require (32 * mem[_22462 + mem[_22462]]) + 32 >= 0 and _22462 + ceil32(return_data.size) + (32 * mem[_22462 + mem[_22462]]) + 32 <= test266151307()
                                mem[64] = _22462 + ceil32(return_data.size) + (32 * mem[_22462 + mem[_22462]]) + 32
                                mem[_22462 + ceil32(return_data.size)] = _22822
                                require return_data.size >= _22642 + (32 * _22822) + 32
                                t = _22462 + _22642 + 32
                                u = _22462 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22822:
                                    mem[u] = mem[t]
                                    _16733 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17000] - 1 < mem[_17000]
                                _25272 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25272))
                                staticcall address(_25272).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25702 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16733 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _17000
                                s = mem[_25702] - ext_call.return_data[0]
                                continue 
                            mem[_17000 + (4 * ceil32(return_data.size)) + 132] = address(_17489)
                            mem[_17000 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17477))
                            call address(_17477).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17489), -1
                            mem[_17000 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17000 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _19733 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_17000 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17000 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_17000 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_17000 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_17000 + (6 * ceil32(return_data.size)) + 292] = mem[_17000]
                            s = 0
                            t = _17000 + 32
                            u = _17000 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_17000]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17000 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17000 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19733))
                            call address(_19733).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17000 + (6 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22463 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22643 = mem[_22463]
                            require mem[_22463] <= test266151307()
                            require _22463 + return_data.size > _22463 + mem[_22463] + 31
                            _22823 = mem[_22463 + mem[_22463]]
                            require mem[_22463 + mem[_22463]] <= test266151307()
                            require (32 * mem[_22463 + mem[_22463]]) + 32 >= 0 and _22463 + ceil32(return_data.size) + (32 * mem[_22463 + mem[_22463]]) + 32 <= test266151307()
                            mem[64] = _22463 + ceil32(return_data.size) + (32 * mem[_22463 + mem[_22463]]) + 32
                            mem[_22463 + ceil32(return_data.size)] = _22823
                            require return_data.size >= _22643 + (32 * _22823) + 32
                            t = _22463 + _22643 + 32
                            u = _22463 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22823:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17000] - 1 < mem[_17000]
                            _25274 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25274))
                            staticcall address(_25274).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17000
                            s = mem[_25703] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17000 + 44 len 20])
                        staticcall mem[_17000 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17000 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17000 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17000 + (2 * ceil32(return_data.size)) + 164] = address(_17489)
                        require ext_code.size(mem[_17000 + 44 len 20])
                        staticcall mem[_17000 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17489)
                        mem[_17000 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17000 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11219 / 2) + 1 < mem[96]
                            _19236 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                            mem[_17000 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17000 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17000 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17000 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17000 + (4 * ceil32(return_data.size)) + 292] = mem[_17000]
                            s = 0
                            t = _17000 + 32
                            u = _17000 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17000]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17000 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17000 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19236))
                            call address(_19236).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17000 + (4 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22464 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22644 = mem[_22464]
                            require mem[_22464] <= test266151307()
                            require _22464 + return_data.size > _22464 + mem[_22464] + 31
                            _22824 = mem[_22464 + mem[_22464]]
                            require mem[_22464 + mem[_22464]] <= test266151307()
                            require (32 * mem[_22464 + mem[_22464]]) + 32 >= 0 and _22464 + ceil32(return_data.size) + (32 * mem[_22464 + mem[_22464]]) + 32 <= test266151307()
                            mem[64] = _22464 + ceil32(return_data.size) + (32 * mem[_22464 + mem[_22464]]) + 32
                            mem[_22464 + ceil32(return_data.size)] = _22824
                            require return_data.size >= _22644 + (32 * _22824) + 32
                            t = _22464 + _22644 + 32
                            u = _22464 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22824:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17000] - 1 < mem[_17000]
                            _25276 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25276))
                            staticcall address(_25276).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17000
                            s = mem[_25704] - ext_call.return_data[0]
                            continue 
                        mem[_17000 + (4 * ceil32(return_data.size)) + 132] = address(_17489)
                        mem[_17000 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17477))
                        call address(_17477).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17489), -1
                        mem[_17000 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17000 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11219 / 2) + 1 < mem[96]
                        _19994 = mem[(32 * idx + -(_11219 / 2) + 1) + 128]
                        mem[_17000 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17000 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17000 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17000 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17000 + (6 * ceil32(return_data.size)) + 292] = mem[_17000]
                        s = 0
                        t = _17000 + 32
                        u = _17000 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17000]:
                            mem[u] = mem[t + 12 len 20]
                            _16733 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17000 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17000 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19994))
                        call address(_19994).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17000 + (6 * ceil32(return_data.size)) + (32 * mem[_17000]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22465 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22645 = mem[_22465]
                        require mem[_22465] <= test266151307()
                        require _22465 + return_data.size > _22465 + mem[_22465] + 31
                        _22825 = mem[_22465 + mem[_22465]]
                        require mem[_22465 + mem[_22465]] <= test266151307()
                        require (32 * mem[_22465 + mem[_22465]]) + 32 >= 0 and _22465 + ceil32(return_data.size) + (32 * mem[_22465 + mem[_22465]]) + 32 <= test266151307()
                        mem[64] = _22465 + ceil32(return_data.size) + (32 * mem[_22465 + mem[_22465]]) + 32
                        mem[_22465 + ceil32(return_data.size)] = _22825
                        require return_data.size >= _22645 + (32 * _22825) + 32
                        t = _22465 + _22645 + 32
                        u = _22465 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22825:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17000] - 1 < mem[_17000]
                        _25278 = mem[(32 * mem[_17000] - 1) + _17000 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25278))
                        staticcall address(_25278).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25705 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17000
                        s = mem[_25705] - ext_call.return_data[0]
                        continue 
                    _16868 = mem[64]
                    mem[mem[64]] = 4
                    mem[64] = mem[64] + 160
                    mem[_16868 + 32 len 128] = call.data[calldata.size len 128]
                    require idx < mem[96]
                    require 0 < mem[_16868]
                    mem[_16868 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_16868]
                    mem[_16868 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_16868]
                    mem[_16868 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require idx + 3 < mem[96]
                    require 3 < mem[_16868]
                    mem[_16868 + 128] = mem[(32 * idx + 3) + 140 len 20]
                    require mem[_16868] - 1 < mem[_16868]
                    mem[_16868 + 164] = this.address
                    require ext_code.size(mem[(32 * mem[_16868] - 1) + _16868 + 44 len 20])
                    staticcall mem[(32 * mem[_16868] - 1) + _16868 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_16868 + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16868 + ceil32(return_data.size) + 160
                    require return_data.size >= 32
                    require 0 < mem[_16868]
                    _17458 = mem[_16868 + 32]
                    require idx + -(_11219 / 2) + 2 < mem[96]
                    _17479 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_16868 + 44 len 20])
                        staticcall mem[_16868 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16868 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16868 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16868 + (2 * ceil32(return_data.size)) + 196] = address(_17479)
                        require ext_code.size(mem[_16868 + 44 len 20])
                        staticcall mem[_16868 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17479)
                        mem[_16868 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16868 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11219 / 2) + 2 < mem[96]
                            _18558 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                            mem[_16868 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16868 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16868 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16868 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16868 + (4 * ceil32(return_data.size)) + 324] = mem[_16868]
                            s = 0
                            t = _16868 + 32
                            u = _16868 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16868]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16868 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16868 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18558))
                            call address(_18558).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16868 + (4 * ceil32(return_data.size)) + (32 * mem[_16868]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22466 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22646 = mem[_22466]
                            require mem[_22466] <= test266151307()
                            require _22466 + return_data.size > _22466 + mem[_22466] + 31
                            _22826 = mem[_22466 + mem[_22466]]
                            require mem[_22466 + mem[_22466]] <= test266151307()
                            require (32 * mem[_22466 + mem[_22466]]) + 32 >= 0 and _22466 + ceil32(return_data.size) + (32 * mem[_22466 + mem[_22466]]) + 32 <= test266151307()
                            mem[64] = _22466 + ceil32(return_data.size) + (32 * mem[_22466 + mem[_22466]]) + 32
                            mem[_22466 + ceil32(return_data.size)] = _22826
                            require return_data.size >= _22646 + (32 * _22826) + 32
                            t = _22466 + _22646 + 32
                            u = _22466 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22826:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16868] - 1 < mem[_16868]
                            _25280 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25280))
                            staticcall address(_25280).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25706 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16868
                            s = mem[_25706] - ext_call.return_data[0]
                            continue 
                        mem[_16868 + (4 * ceil32(return_data.size)) + 164] = address(_17479)
                        mem[_16868 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17458))
                        call address(_17458).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17479), -1
                        mem[_16868 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11219 / 2) + 2 < mem[96]
                        _19338 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                        mem[_16868 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16868 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16868 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16868 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16868 + (6 * ceil32(return_data.size)) + 324] = mem[_16868]
                        s = 0
                        t = _16868 + 32
                        u = _16868 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16868]:
                            mem[u] = mem[t + 12 len 20]
                            _16733 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16868 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16868 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19338))
                        call address(_19338).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22467 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22647 = mem[_22467]
                        require mem[_22467] <= test266151307()
                        require _22467 + return_data.size > _22467 + mem[_22467] + 31
                        _22827 = mem[_22467 + mem[_22467]]
                        require mem[_22467 + mem[_22467]] <= test266151307()
                        require (32 * mem[_22467 + mem[_22467]]) + 32 >= 0 and _22467 + ceil32(return_data.size) + (32 * mem[_22467 + mem[_22467]]) + 32 <= test266151307()
                        mem[64] = _22467 + ceil32(return_data.size) + (32 * mem[_22467 + mem[_22467]]) + 32
                        mem[_22467 + ceil32(return_data.size)] = _22827
                        require return_data.size >= _22647 + (32 * _22827) + 32
                        t = _22467 + _22647 + 32
                        u = _22467 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22827:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16868] - 1 < mem[_16868]
                        _25282 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25282))
                        staticcall address(_25282).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25707 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16868
                        s = mem[_25707] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_16868 + 44 len 20])
                        staticcall mem[_16868 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16868 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16868 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16868 + (2 * ceil32(return_data.size)) + 196] = address(_17479)
                        require ext_code.size(mem[_16868 + 44 len 20])
                        staticcall mem[_16868 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17479)
                        mem[_16868 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16868 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11219 / 2) + 2 < mem[96]
                            _18831 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                            mem[_16868 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16868 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16868 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16868 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16868 + (4 * ceil32(return_data.size)) + 324] = mem[_16868]
                            s = 0
                            t = _16868 + 32
                            u = _16868 + (4 * ceil32(return_data.size)) + 356
                            while s < mem[_16868]:
                                mem[u] = mem[t + 12 len 20]
                                _16733 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16868 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16868 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_18831))
                            call address(_18831).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16868 + (4 * ceil32(return_data.size)) + (32 * mem[_16868]) + -mem[64] + 352]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22468 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22648 = mem[_22468]
                            require mem[_22468] <= test266151307()
                            require _22468 + return_data.size > _22468 + mem[_22468] + 31
                            _22828 = mem[_22468 + mem[_22468]]
                            require mem[_22468 + mem[_22468]] <= test266151307()
                            require (32 * mem[_22468 + mem[_22468]]) + 32 >= 0 and _22468 + ceil32(return_data.size) + (32 * mem[_22468 + mem[_22468]]) + 32 <= test266151307()
                            mem[64] = _22468 + ceil32(return_data.size) + (32 * mem[_22468 + mem[_22468]]) + 32
                            mem[_22468 + ceil32(return_data.size)] = _22828
                            require return_data.size >= _22648 + (32 * _22828) + 32
                            t = _22468 + _22648 + 32
                            u = _22468 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22828:
                                mem[u] = mem[t]
                                _16733 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16868] - 1 < mem[_16868]
                            _25284 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25284))
                            staticcall address(_25284).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25708 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16733 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16868
                            s = mem[_25708] - ext_call.return_data[0]
                            continue 
                        mem[_16868 + (4 * ceil32(return_data.size)) + 164] = address(_17479)
                        mem[_16868 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17458))
                        call address(_17458).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17479), -1
                        mem[_16868 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11219 / 2) + 2 < mem[96]
                        _19636 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                        mem[_16868 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16868 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16868 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16868 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16868 + (6 * ceil32(return_data.size)) + 324] = mem[_16868]
                        s = 0
                        t = _16868 + 32
                        u = _16868 + (6 * ceil32(return_data.size)) + 356
                        while s < mem[_16868]:
                            mem[u] = mem[t + 12 len 20]
                            _16733 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16868 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16868 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19636))
                        call address(_19636).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22469 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22649 = mem[_22469]
                        require mem[_22469] <= test266151307()
                        require _22469 + return_data.size > _22469 + mem[_22469] + 31
                        _22829 = mem[_22469 + mem[_22469]]
                        require mem[_22469 + mem[_22469]] <= test266151307()
                        require (32 * mem[_22469 + mem[_22469]]) + 32 >= 0 and _22469 + ceil32(return_data.size) + (32 * mem[_22469 + mem[_22469]]) + 32 <= test266151307()
                        mem[64] = _22469 + ceil32(return_data.size) + (32 * mem[_22469 + mem[_22469]]) + 32
                        mem[_22469 + ceil32(return_data.size)] = _22829
                        require return_data.size >= _22649 + (32 * _22829) + 32
                        t = _22469 + _22649 + 32
                        u = _22469 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22829:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16868] - 1 < mem[_16868]
                        _25286 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25286))
                        staticcall address(_25286).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16868
                        s = mem[_25709] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_16868 + 44 len 20])
                    staticcall mem[_16868 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_16868 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_16868 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_16868 + (2 * ceil32(return_data.size)) + 196] = address(_17479)
                    require ext_code.size(mem[_16868 + 44 len 20])
                    staticcall mem[_16868 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17479)
                    mem[_16868 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16868 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11219 / 2) + 2 < mem[96]
                        _19135 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                        mem[_16868 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16868 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_16868 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_16868 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_16868 + (4 * ceil32(return_data.size)) + 324] = mem[_16868]
                        s = 0
                        t = _16868 + 32
                        u = _16868 + (4 * ceil32(return_data.size)) + 356
                        while s < mem[_16868]:
                            mem[u] = mem[t + 12 len 20]
                            _16733 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16868 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16868 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19135))
                        call address(_19135).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16868 + (4 * ceil32(return_data.size)) + (32 * mem[_16868]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22470 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22650 = mem[_22470]
                        require mem[_22470] <= test266151307()
                        require _22470 + return_data.size > _22470 + mem[_22470] + 31
                        _22830 = mem[_22470 + mem[_22470]]
                        require mem[_22470 + mem[_22470]] <= test266151307()
                        require (32 * mem[_22470 + mem[_22470]]) + 32 >= 0 and _22470 + ceil32(return_data.size) + (32 * mem[_22470 + mem[_22470]]) + 32 <= test266151307()
                        mem[64] = _22470 + ceil32(return_data.size) + (32 * mem[_22470 + mem[_22470]]) + 32
                        mem[_22470 + ceil32(return_data.size)] = _22830
                        require return_data.size >= _22650 + (32 * _22830) + 32
                        t = _22470 + _22650 + 32
                        u = _22470 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22830:
                            mem[u] = mem[t]
                            _16733 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16868] - 1 < mem[_16868]
                        _25288 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25288))
                        staticcall address(_25288).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25710 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16733 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16868
                        s = mem[_25710] - ext_call.return_data[0]
                        continue 
                    mem[_16868 + (4 * ceil32(return_data.size)) + 164] = address(_17479)
                    mem[_16868 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_17458))
                    call address(_17458).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17479), -1
                    mem[_16868 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _16868 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11219 / 2) + 2 < mem[96]
                    _19912 = mem[(32 * idx + -(_11219 / 2) + 2) + 128]
                    mem[_16868 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_16868 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_16868 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_16868 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_16868 + (6 * ceil32(return_data.size)) + 324] = mem[_16868]
                    s = 0
                    t = _16868 + 32
                    u = _16868 + (6 * ceil32(return_data.size)) + 356
                    while s < mem[_16868]:
                        mem[u] = mem[t + 12 len 20]
                        _16733 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_16868 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_16868 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_19912))
                    call address(_19912).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _16868 + (6 * ceil32(return_data.size)) + (32 * mem[_16868]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22471 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22651 = mem[_22471]
                    require mem[_22471] <= test266151307()
                    require _22471 + return_data.size > _22471 + mem[_22471] + 31
                    _22831 = mem[_22471 + mem[_22471]]
                    require mem[_22471 + mem[_22471]] <= test266151307()
                    require (32 * mem[_22471 + mem[_22471]]) + 32 >= 0 and _22471 + ceil32(return_data.size) + (32 * mem[_22471 + mem[_22471]]) + 32 <= test266151307()
                    mem[64] = _22471 + ceil32(return_data.size) + (32 * mem[_22471 + mem[_22471]]) + 32
                    mem[_22471 + ceil32(return_data.size)] = _22831
                    require return_data.size >= _22651 + (32 * _22831) + 32
                    t = _22471 + _22651 + 32
                    u = _22471 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22831:
                        mem[u] = mem[t]
                        _16733 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_16868] - 1 < mem[_16868]
                    _25290 = mem[(32 * mem[_16868] - 1) + _16868 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25290))
                    staticcall address(_25290).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25711 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16733 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _16868
                    s = mem[_25711] - ext_call.return_data[0]
                    continue 
                require _11219 / 2 < mem[96]
                _16760 = mem[(16 * Mask(251, 1, _11219)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16760))
                staticcall address(_16760).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16820 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16820] < _11297 - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                revert with 0, 'Ownable: caller is not the owner'
            require ('cd', 68).length / 2 <= test266151307()
            mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
            mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
            if not Mask(255, 1, ('cd', 68).length):
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11224 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11253 = mem[_11224]
                    require mem[_11224] == mem[_11224 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11301 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11301)
                    require ext_code.size(address(_11253))
                    staticcall address(_11253).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11301)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11354 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11380 = mem[_11354]
                    require mem[_11354] == mem[_11354 + 12 len 20]
                    require ext_code.size(mem[_11354 + 12 len 20])
                    staticcall mem[_11354 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11569 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11722 = mem[_11569]
                    require mem[_11569] == mem[_11569 + 18 len 14]
                    _11843 = mem[_11569 + 32]
                    require mem[_11569 + 32] == mem[_11569 + 50 len 14]
                    require mem[_11569 + 64] == mem[_11569 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11569 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11569 + 50 len 14] / (997 * s) + (1000 * mem[_11569 + 18 len 14])
                            idx = idx + 1
                            s = _11380
                            s = 997 * s * Mask(112, 0, _11843) / (997 * s) + (1000 * Mask(112, 0, _11722))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11569 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11569 + 50 len 14] / (997 * s) + (1000 * mem[_11569 + 18 len 14])
                            idx = idx + 1
                            s = _11380
                            s = 997 * s * Mask(112, 0, _11843) / (997 * s) + (1000 * Mask(112, 0, _11722))
                            continue 
                    require (997 * s) + (1000 * mem[_11569 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11569 + 18 len 14] / (997 * s) + (1000 * mem[_11569 + 50 len 14])
                    idx = idx + 1
                    s = _11380
                    s = 997 * s * Mask(112, 0, _11722) / (997 * s) + (1000 * Mask(112, 0, _11843))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11222 = mem[96]
                require mem[96] / 2 < mem[96]
                _11250 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11250))
                staticcall address(_11250).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11272 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11300 = mem[_11272]
                _16734 = mem[96]
                idx = _11222 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16734 - 1:
                    require idx + -(_11222 / 2) + 1 < mem[96]
                    require idx - (_11222 / 2) < mem[96]
                    require idx + -(_11222 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11222 / 2)) + 140 len 20] != mem[(32 * idx + -(_11222 / 2) + 1) + 140 len 20]:
                        require idx - (_11222 / 2) < mem[96]
                        if mem[(32 * idx - (_11222 / 2)) + 140 len 20] != mem[(32 * idx + -(_11222 / 2) + 1) + 140 len 20]:
                            _16871 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16871 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16871]
                            mem[_16871 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16871]
                            mem[_16871 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16871] - 1 < mem[_16871]
                            mem[_16871 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16871] - 1) + _16871 + 44 len 20])
                            staticcall mem[(32 * mem[_16871] - 1) + _16871 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16871 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16871 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16871]
                            _17358 = mem[_16871 + 32]
                            require idx - (_11222 / 2) < mem[96]
                            _17382 = mem[(32 * idx - (_11222 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16871 + 44 len 20])
                                staticcall mem[_16871 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16871 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16871 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16871 + (2 * ceil32(return_data.size)) + 132] = address(_17382)
                                require ext_code.size(mem[_16871 + 44 len 20])
                                staticcall mem[_16871 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17382)
                                mem[_16871 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11222 / 2) < mem[96]
                                    _18288 = mem[(32 * idx - (_11222 / 2)) + 128]
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 260] = mem[_16871]
                                    t = 0
                                    u = _16871 + 32
                                    v = _16871 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_16871]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16734 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18288))
                                    call address(_18288).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16871 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16871]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22652 = mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _16871 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22832 = mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_16871 + (6 * ceil32(return_data.size)) + 96] = _22832
                                    require return_data.size >= _22652 + (32 * _22832) + 32
                                    t = _16871 + (4 * ceil32(return_data.size)) + _22652 + 128
                                    u = _16871 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22832:
                                        mem[u] = mem[t]
                                        _16734 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16871] - 1 < mem[_16871]
                                    _25292 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25292))
                                    staticcall address(_25292).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25712 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16734 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16871
                                    s = mem[_25712] - ext_call.return_data[0]
                                    continue 
                                mem[_16871 + (4 * ceil32(return_data.size)) + 100] = address(_17382)
                                mem[_16871 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17358))
                                call address(_17358).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17382), -1
                                mem[_16871 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11222 / 2) < mem[96]
                                _18939 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_16871 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16871 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16871 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16871 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16871 + (6 * ceil32(return_data.size)) + 260] = mem[_16871]
                                t = 0
                                u = _16871 + 32
                                v = _16871 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_16871]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16871 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16871 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18939))
                                call address(_18939).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16871 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16871]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16871 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22653 = mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16871 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22833 = mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16871 + (7 * ceil32(return_data.size)) + (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16871 + (7 * ceil32(return_data.size)) + (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16871 + (7 * ceil32(return_data.size)) + 96] = _22833
                                require return_data.size >= _22653 + (32 * _22833) + 32
                                t = _16871 + (6 * ceil32(return_data.size)) + _22653 + 128
                                u = _16871 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22833:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16871] - 1 < mem[_16871]
                                _25294 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25294))
                                staticcall address(_25294).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25713 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16871
                                s = mem[_25713] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16871 + 44 len 20])
                                staticcall mem[_16871 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16871 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16871 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16871 + (2 * ceil32(return_data.size)) + 132] = address(_17382)
                                require ext_code.size(mem[_16871 + 44 len 20])
                                staticcall mem[_16871 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17382)
                                mem[_16871 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11222 / 2) < mem[96]
                                    _18482 = mem[(32 * idx - (_11222 / 2)) + 128]
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 260] = mem[_16871]
                                    t = 0
                                    u = _16871 + 32
                                    v = _16871 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_16871]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16734 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18482))
                                    call address(_18482).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16871 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16871]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_16871 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22654 = mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _16871 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22834 = mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_16871 + (6 * ceil32(return_data.size)) + 96] = _22834
                                    require return_data.size >= _22654 + (32 * _22834) + 32
                                    t = _16871 + (4 * ceil32(return_data.size)) + _22654 + 128
                                    u = _16871 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22834:
                                        mem[u] = mem[t]
                                        _16734 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16871] - 1 < mem[_16871]
                                    _25296 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25296))
                                    staticcall address(_25296).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25714 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16734 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16871
                                    s = mem[_25714] - ext_call.return_data[0]
                                    continue 
                                mem[_16871 + (4 * ceil32(return_data.size)) + 100] = address(_17382)
                                mem[_16871 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17358))
                                call address(_17358).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17382), -1
                                mem[_16871 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11222 / 2) < mem[96]
                                _19243 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_16871 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16871 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16871 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16871 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16871 + (6 * ceil32(return_data.size)) + 260] = mem[_16871]
                                t = 0
                                u = _16871 + 32
                                v = _16871 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_16871]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16871 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16871 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19243))
                                call address(_19243).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16871 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16871]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16871 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22655 = mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16871 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22835 = mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16871 + (7 * ceil32(return_data.size)) + (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16871 + (7 * ceil32(return_data.size)) + (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16871 + (7 * ceil32(return_data.size)) + 96] = _22835
                                require return_data.size >= _22655 + (32 * _22835) + 32
                                t = _16871 + (6 * ceil32(return_data.size)) + _22655 + 128
                                u = _16871 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22835:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16871] - 1 < mem[_16871]
                                _25298 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25298))
                                staticcall address(_25298).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25715 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16871
                                s = mem[_25715] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16871 + 44 len 20])
                            staticcall mem[_16871 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16871 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16871 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16871 + (2 * ceil32(return_data.size)) + 132] = address(_17382)
                            require ext_code.size(mem[_16871 + 44 len 20])
                            staticcall mem[_16871 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17382)
                            mem[_16871 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16871 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11222 / 2) < mem[96]
                                _18741 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_16871 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16871 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16871 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16871 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16871 + (4 * ceil32(return_data.size)) + 260] = mem[_16871]
                                t = 0
                                u = _16871 + 32
                                v = _16871 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16871]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16871 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16871 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18741))
                                call address(_18741).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16871 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16871]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16871 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22656 = mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16871 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22836 = mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16871 + (6 * ceil32(return_data.size)) + (32 * mem[_16871 + (4 * ceil32(return_data.size)) + mem[_16871 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16871 + (6 * ceil32(return_data.size)) + 96] = _22836
                                require return_data.size >= _22656 + (32 * _22836) + 32
                                t = _16871 + (4 * ceil32(return_data.size)) + _22656 + 128
                                u = _16871 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22836:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16871] - 1 < mem[_16871]
                                _25300 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25300))
                                staticcall address(_25300).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25716 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16871
                                s = mem[_25716] - ext_call.return_data[0]
                                continue 
                            mem[_16871 + (4 * ceil32(return_data.size)) + 100] = address(_17382)
                            mem[_16871 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17358))
                            call address(_17358).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17382), -1
                            mem[_16871 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16871 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11222 / 2) < mem[96]
                            _19544 = mem[(32 * idx - (_11222 / 2)) + 128]
                            mem[_16871 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16871 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16871 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16871 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16871 + (6 * ceil32(return_data.size)) + 260] = mem[_16871]
                            t = 0
                            u = _16871 + 32
                            v = _16871 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16871]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16871 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16871 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19544))
                            call address(_19544).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16871 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16871]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16871 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16871 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22657 = mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16871 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22837 = mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16871 + (7 * ceil32(return_data.size)) + (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16871 + (7 * ceil32(return_data.size)) + (32 * mem[_16871 + (6 * ceil32(return_data.size)) + mem[_16871 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16871 + (7 * ceil32(return_data.size)) + 96] = _22837
                            require return_data.size >= _22657 + (32 * _22837) + 32
                            t = _16871 + (6 * ceil32(return_data.size)) + _22657 + 128
                            u = _16871 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22837:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16871] - 1 < mem[_16871]
                            _25302 = mem[(32 * mem[_16871] - 1) + _16871 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25302))
                            staticcall address(_25302).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25717 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16871
                            s = mem[_25717] - ext_call.return_data[0]
                            continue 
                        _16873 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16873 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16873]
                        mem[_16873 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16873]
                        mem[_16873 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16873]
                        mem[_16873 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16873] - 1 < mem[_16873]
                        mem[_16873 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16873] - 1) + _16873 + 44 len 20])
                        staticcall mem[(32 * mem[_16873] - 1) + _16873 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16873 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16873 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16873]
                        _17406 = mem[_16873 + 32]
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _17434 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16873 + 44 len 20])
                            staticcall mem[_16873 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16873 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16873 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16873 + (2 * ceil32(return_data.size)) + 164] = address(_17434)
                            require ext_code.size(mem[_16873 + 44 len 20])
                            staticcall mem[_16873 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17434)
                            mem[_16873 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16873 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11222 / 2) + 1 < mem[96]
                                _18412 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                                mem[_16873 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16873 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16873 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16873 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16873 + (4 * ceil32(return_data.size)) + 292] = mem[_16873]
                                s = 0
                                t = _16873 + 32
                                u = _16873 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16873]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16734 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16873 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16873 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18412))
                                call address(_18412).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16873 + (4 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22478 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22658 = mem[_22478]
                                require mem[_22478] <= test266151307()
                                require _22478 + return_data.size > _22478 + mem[_22478] + 31
                                _22838 = mem[_22478 + mem[_22478]]
                                require mem[_22478 + mem[_22478]] <= test266151307()
                                require (32 * mem[_22478 + mem[_22478]]) + 32 >= 0 and _22478 + ceil32(return_data.size) + (32 * mem[_22478 + mem[_22478]]) + 32 <= test266151307()
                                mem[64] = _22478 + ceil32(return_data.size) + (32 * mem[_22478 + mem[_22478]]) + 32
                                mem[_22478 + ceil32(return_data.size)] = _22838
                                require return_data.size >= _22658 + (32 * _22838) + 32
                                t = _22478 + _22658 + 32
                                u = _22478 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22838:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16873] - 1 < mem[_16873]
                                _25304 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25304))
                                staticcall address(_25304).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25718 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16873
                                s = mem[_25718] - ext_call.return_data[0]
                                continue 
                            mem[_16873 + (4 * ceil32(return_data.size)) + 132] = address(_17434)
                            mem[_16873 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17406))
                            call address(_17406).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17434), -1
                            mem[_16873 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16873 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _19144 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_16873 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16873 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16873 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16873 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16873 + (6 * ceil32(return_data.size)) + 292] = mem[_16873]
                            s = 0
                            t = _16873 + 32
                            u = _16873 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16873]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16873 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16873 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19144))
                            call address(_19144).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16873 + (6 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22479 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22659 = mem[_22479]
                            require mem[_22479] <= test266151307()
                            require _22479 + return_data.size > _22479 + mem[_22479] + 31
                            _22839 = mem[_22479 + mem[_22479]]
                            require mem[_22479 + mem[_22479]] <= test266151307()
                            require (32 * mem[_22479 + mem[_22479]]) + 32 >= 0 and _22479 + ceil32(return_data.size) + (32 * mem[_22479 + mem[_22479]]) + 32 <= test266151307()
                            mem[64] = _22479 + ceil32(return_data.size) + (32 * mem[_22479 + mem[_22479]]) + 32
                            mem[_22479 + ceil32(return_data.size)] = _22839
                            require return_data.size >= _22659 + (32 * _22839) + 32
                            t = _22479 + _22659 + 32
                            u = _22479 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22839:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16873] - 1 < mem[_16873]
                            _25306 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25306))
                            staticcall address(_25306).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25719 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16873
                            s = mem[_25719] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16873 + 44 len 20])
                            staticcall mem[_16873 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16873 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16873 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16873 + (2 * ceil32(return_data.size)) + 164] = address(_17434)
                            require ext_code.size(mem[_16873 + 44 len 20])
                            staticcall mem[_16873 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17434)
                            mem[_16873 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16873 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11222 / 2) + 1 < mem[96]
                                _18653 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                                mem[_16873 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16873 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16873 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16873 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16873 + (4 * ceil32(return_data.size)) + 292] = mem[_16873]
                                s = 0
                                t = _16873 + 32
                                u = _16873 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16873]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16734 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16873 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16873 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18653))
                                call address(_18653).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16873 + (4 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22480 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22660 = mem[_22480]
                                require mem[_22480] <= test266151307()
                                require _22480 + return_data.size > _22480 + mem[_22480] + 31
                                _22840 = mem[_22480 + mem[_22480]]
                                require mem[_22480 + mem[_22480]] <= test266151307()
                                require (32 * mem[_22480 + mem[_22480]]) + 32 >= 0 and _22480 + ceil32(return_data.size) + (32 * mem[_22480 + mem[_22480]]) + 32 <= test266151307()
                                mem[64] = _22480 + ceil32(return_data.size) + (32 * mem[_22480 + mem[_22480]]) + 32
                                mem[_22480 + ceil32(return_data.size)] = _22840
                                require return_data.size >= _22660 + (32 * _22840) + 32
                                t = _22480 + _22660 + 32
                                u = _22480 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22840:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16873] - 1 < mem[_16873]
                                _25308 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25308))
                                staticcall address(_25308).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25720 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16873
                                s = mem[_25720] - ext_call.return_data[0]
                                continue 
                            mem[_16873 + (4 * ceil32(return_data.size)) + 132] = address(_17434)
                            mem[_16873 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17406))
                            call address(_17406).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17434), -1
                            mem[_16873 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16873 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _19448 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_16873 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16873 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16873 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16873 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16873 + (6 * ceil32(return_data.size)) + 292] = mem[_16873]
                            s = 0
                            t = _16873 + 32
                            u = _16873 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16873]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16873 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16873 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19448))
                            call address(_19448).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16873 + (6 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22481 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22661 = mem[_22481]
                            require mem[_22481] <= test266151307()
                            require _22481 + return_data.size > _22481 + mem[_22481] + 31
                            _22841 = mem[_22481 + mem[_22481]]
                            require mem[_22481 + mem[_22481]] <= test266151307()
                            require (32 * mem[_22481 + mem[_22481]]) + 32 >= 0 and _22481 + ceil32(return_data.size) + (32 * mem[_22481 + mem[_22481]]) + 32 <= test266151307()
                            mem[64] = _22481 + ceil32(return_data.size) + (32 * mem[_22481 + mem[_22481]]) + 32
                            mem[_22481 + ceil32(return_data.size)] = _22841
                            require return_data.size >= _22661 + (32 * _22841) + 32
                            t = _22481 + _22661 + 32
                            u = _22481 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22841:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16873] - 1 < mem[_16873]
                            _25310 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25310))
                            staticcall address(_25310).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25721 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16873
                            s = mem[_25721] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16873 + 44 len 20])
                        staticcall mem[_16873 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16873 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16873 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16873 + (2 * ceil32(return_data.size)) + 164] = address(_17434)
                        require ext_code.size(mem[_16873 + 44 len 20])
                        staticcall mem[_16873 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17434)
                        mem[_16873 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16873 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _18944 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_16873 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16873 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16873 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16873 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16873 + (4 * ceil32(return_data.size)) + 292] = mem[_16873]
                            s = 0
                            t = _16873 + 32
                            u = _16873 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16873]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16873 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16873 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18944))
                            call address(_18944).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16873 + (4 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22482 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22662 = mem[_22482]
                            require mem[_22482] <= test266151307()
                            require _22482 + return_data.size > _22482 + mem[_22482] + 31
                            _22842 = mem[_22482 + mem[_22482]]
                            require mem[_22482 + mem[_22482]] <= test266151307()
                            require (32 * mem[_22482 + mem[_22482]]) + 32 >= 0 and _22482 + ceil32(return_data.size) + (32 * mem[_22482 + mem[_22482]]) + 32 <= test266151307()
                            mem[64] = _22482 + ceil32(return_data.size) + (32 * mem[_22482 + mem[_22482]]) + 32
                            mem[_22482 + ceil32(return_data.size)] = _22842
                            require return_data.size >= _22662 + (32 * _22842) + 32
                            t = _22482 + _22662 + 32
                            u = _22482 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22842:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16873] - 1 < mem[_16873]
                            _25312 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25312))
                            staticcall address(_25312).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25722 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16873
                            s = mem[_25722] - ext_call.return_data[0]
                            continue 
                        mem[_16873 + (4 * ceil32(return_data.size)) + 132] = address(_17434)
                        mem[_16873 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17406))
                        call address(_17406).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17434), -1
                        mem[_16873 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16873 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _19744 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        mem[_16873 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16873 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16873 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16873 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16873 + (6 * ceil32(return_data.size)) + 292] = mem[_16873]
                        s = 0
                        t = _16873 + 32
                        u = _16873 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16873]:
                            mem[u] = mem[t + 12 len 20]
                            _16734 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16873 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16873 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19744))
                        call address(_19744).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16873 + (6 * ceil32(return_data.size)) + (32 * mem[_16873]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22483 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22663 = mem[_22483]
                        require mem[_22483] <= test266151307()
                        require _22483 + return_data.size > _22483 + mem[_22483] + 31
                        _22843 = mem[_22483 + mem[_22483]]
                        require mem[_22483 + mem[_22483]] <= test266151307()
                        require (32 * mem[_22483 + mem[_22483]]) + 32 >= 0 and _22483 + ceil32(return_data.size) + (32 * mem[_22483 + mem[_22483]]) + 32 <= test266151307()
                        mem[64] = _22483 + ceil32(return_data.size) + (32 * mem[_22483 + mem[_22483]]) + 32
                        mem[_22483 + ceil32(return_data.size)] = _22843
                        require return_data.size >= _22663 + (32 * _22843) + 32
                        t = _22483 + _22663 + 32
                        u = _22483 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22843:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16873] - 1 < mem[_16873]
                        _25314 = mem[(32 * mem[_16873] - 1) + _16873 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25314))
                        staticcall address(_25314).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25723 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16873
                        s = mem[_25723] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11222 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11222 / 2) + 2) + 140 len 20] == mem[(32 * idx + -(_11222 / 2) + 1) + 140 len 20]:
                        _16876 = mem[64]
                        mem[mem[64]] = 4
                        mem[64] = mem[64] + 160
                        mem[_16876 + 32 len 128] = call.data[calldata.size len 128]
                        require idx < mem[96]
                        require 0 < mem[_16876]
                        mem[_16876 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16876]
                        mem[_16876 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16876]
                        mem[_16876 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require idx + 3 < mem[96]
                        require 3 < mem[_16876]
                        mem[_16876 + 128] = mem[(32 * idx + 3) + 140 len 20]
                        require mem[_16876] - 1 < mem[_16876]
                        mem[_16876 + 164] = this.address
                        require ext_code.size(mem[(32 * mem[_16876] - 1) + _16876 + 44 len 20])
                        staticcall mem[(32 * mem[_16876] - 1) + _16876 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16876 + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + ceil32(return_data.size) + 160
                        require return_data.size >= 32
                        require 0 < mem[_16876]
                        _17462 = mem[_16876 + 32]
                        require idx + -(_11222 / 2) + 2 < mem[96]
                        _17482 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16876 + 44 len 20])
                            staticcall mem[_16876 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16876 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16876 + (2 * ceil32(return_data.size)) + 164] = this.address
                            mem[_16876 + (2 * ceil32(return_data.size)) + 196] = address(_17482)
                            require ext_code.size(mem[_16876 + 44 len 20])
                            staticcall mem[_16876 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17482)
                            mem[_16876 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (4 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11222 / 2) + 2 < mem[96]
                                _18572 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                                mem[_16876 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16876 + (4 * ceil32(return_data.size)) + 164] = s
                                mem[_16876 + (4 * ceil32(return_data.size)) + 196] = 0
                                mem[_16876 + (4 * ceil32(return_data.size)) + 228] = 160
                                mem[_16876 + (4 * ceil32(return_data.size)) + 324] = mem[_16876]
                                t = 0
                                u = _16876 + 32
                                v = _16876 + (4 * ceil32(return_data.size)) + 356
                                while t < mem[_16876]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16876 + (4 * ceil32(return_data.size)) + 260] = this.address
                                mem[_16876 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                                require ext_code.size(address(_18572))
                                call address(_18572).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16876 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _22676 = mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                                require mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16876 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                                _22856 = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                                require (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                                mem[64] = _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                                mem[_16876 + (6 * ceil32(return_data.size)) + 160] = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require return_data.size >= _22676 + (32 * _22856) + 32
                                t = _16876 + (4 * ceil32(return_data.size)) + _22676 + 192
                                u = _16876 + (6 * ceil32(return_data.size)) + 192
                                s = 0
                                while s < _22856:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16876] - 1 < mem[_16876]
                                _25340 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25340))
                                staticcall address(_25340).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25736 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 3
                                s = ext_call.return_data[0]
                                s = _16876
                                s = mem[_25736] - ext_call.return_data[0]
                                continue 
                            mem[_16876 + (4 * ceil32(return_data.size)) + 164] = address(_17482)
                            mem[_16876 + (4 * ceil32(return_data.size)) + 196] = -1
                            require ext_code.size(address(_17462))
                            call address(_17462).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17482), -1
                            mem[_16876 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11222 / 2) + 2 < mem[96]
                            _19355 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                            mem[_16876 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16876 + (6 * ceil32(return_data.size)) + 164] = s
                            mem[_16876 + (6 * ceil32(return_data.size)) + 196] = 0
                            mem[_16876 + (6 * ceil32(return_data.size)) + 228] = 160
                            mem[_16876 + (6 * ceil32(return_data.size)) + 324] = mem[_16876]
                            t = 0
                            u = _16876 + 32
                            v = _16876 + (6 * ceil32(return_data.size)) + 356
                            while t < mem[_16876]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16876 + (6 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16876 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19355))
                            call address(_19355).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16876 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (7 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22677 = mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16876 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22857 = mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16876 + (7 * ceil32(return_data.size)) + 160] = _22857
                            require return_data.size >= _22677 + (32 * _22857) + 32
                            t = _16876 + (6 * ceil32(return_data.size)) + _22677 + 192
                            u = _16876 + (7 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22857:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16876] - 1 < mem[_16876]
                            _25342 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25342))
                            staticcall address(_25342).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25737 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16876
                            s = mem[_25737] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16876 + 44 len 20])
                            staticcall mem[_16876 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16876 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16876 + (2 * ceil32(return_data.size)) + 164] = this.address
                            mem[_16876 + (2 * ceil32(return_data.size)) + 196] = address(_17482)
                            require ext_code.size(mem[_16876 + 44 len 20])
                            staticcall mem[_16876 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17482)
                            mem[_16876 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (4 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11222 / 2) + 2 < mem[96]
                                _18847 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                                mem[_16876 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16876 + (4 * ceil32(return_data.size)) + 164] = s
                                mem[_16876 + (4 * ceil32(return_data.size)) + 196] = 0
                                mem[_16876 + (4 * ceil32(return_data.size)) + 228] = 160
                                mem[_16876 + (4 * ceil32(return_data.size)) + 324] = mem[_16876]
                                t = 0
                                u = _16876 + 32
                                v = _16876 + (4 * ceil32(return_data.size)) + 356
                                while t < mem[_16876]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16876 + (4 * ceil32(return_data.size)) + 260] = this.address
                                mem[_16876 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                                require ext_code.size(address(_18847))
                                call address(_18847).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16876 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _22678 = mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                                require mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16876 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                                _22858 = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                                require (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                                mem[64] = _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                                mem[_16876 + (6 * ceil32(return_data.size)) + 160] = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require return_data.size >= _22678 + (32 * _22858) + 32
                                t = _16876 + (4 * ceil32(return_data.size)) + _22678 + 192
                                u = _16876 + (6 * ceil32(return_data.size)) + 192
                                s = 0
                                while s < _22858:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16876] - 1 < mem[_16876]
                                _25344 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25344))
                                staticcall address(_25344).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25738 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 3
                                s = ext_call.return_data[0]
                                s = _16876
                                s = mem[_25738] - ext_call.return_data[0]
                                continue 
                            mem[_16876 + (4 * ceil32(return_data.size)) + 164] = address(_17482)
                            mem[_16876 + (4 * ceil32(return_data.size)) + 196] = -1
                            require ext_code.size(address(_17462))
                            call address(_17462).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17482), -1
                            mem[_16876 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11222 / 2) + 2 < mem[96]
                            _19652 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                            mem[_16876 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16876 + (6 * ceil32(return_data.size)) + 164] = s
                            mem[_16876 + (6 * ceil32(return_data.size)) + 196] = 0
                            mem[_16876 + (6 * ceil32(return_data.size)) + 228] = 160
                            mem[_16876 + (6 * ceil32(return_data.size)) + 324] = mem[_16876]
                            t = 0
                            u = _16876 + 32
                            v = _16876 + (6 * ceil32(return_data.size)) + 356
                            while t < mem[_16876]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16876 + (6 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16876 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19652))
                            call address(_19652).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16876 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (7 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22679 = mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16876 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22859 = mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16876 + (7 * ceil32(return_data.size)) + 160] = _22859
                            require return_data.size >= _22679 + (32 * _22859) + 32
                            t = _16876 + (6 * ceil32(return_data.size)) + _22679 + 192
                            u = _16876 + (7 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22859:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16876] - 1 < mem[_16876]
                            _25346 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25346))
                            staticcall address(_25346).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25739 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16876
                            s = mem[_25739] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16876 + 44 len 20])
                        staticcall mem[_16876 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16876 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16876 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16876 + (2 * ceil32(return_data.size)) + 196] = address(_17482)
                        require ext_code.size(mem[_16876 + 44 len 20])
                        staticcall mem[_16876 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17482)
                        mem[_16876 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11222 / 2) + 2 < mem[96]
                            _19155 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                            mem[_16876 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16876 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16876 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16876 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16876 + (4 * ceil32(return_data.size)) + 324] = mem[_16876]
                            t = 0
                            u = _16876 + 32
                            v = _16876 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16876]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16876 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16876 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19155))
                            call address(_19155).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16876 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22680 = mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16876 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22860 = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16876 + (6 * ceil32(return_data.size)) + (32 * mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16876 + (6 * ceil32(return_data.size)) + 160] = mem[_16876 + (4 * ceil32(return_data.size)) + mem[_16876 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require return_data.size >= _22680 + (32 * _22860) + 32
                            t = _16876 + (4 * ceil32(return_data.size)) + _22680 + 192
                            u = _16876 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22860:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16876] - 1 < mem[_16876]
                            _25348 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25348))
                            staticcall address(_25348).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25740 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16876
                            s = mem[_25740] - ext_call.return_data[0]
                            continue 
                        mem[_16876 + (4 * ceil32(return_data.size)) + 164] = address(_17482)
                        mem[_16876 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17462))
                        call address(_17462).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17482), -1
                        mem[_16876 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11222 / 2) + 2 < mem[96]
                        _19928 = mem[(32 * idx + -(_11222 / 2) + 2) + 128]
                        mem[_16876 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16876 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16876 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16876 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16876 + (6 * ceil32(return_data.size)) + 324] = mem[_16876]
                        t = 0
                        u = _16876 + 32
                        v = _16876 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16876]:
                            mem[v] = mem[u + 12 len 20]
                            _16734 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16876 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16876 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19928))
                        call address(_19928).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16876 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16876]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16876 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16876 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22681 = mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16876 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22861 = mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16876 + (7 * ceil32(return_data.size)) + (32 * mem[_16876 + (6 * ceil32(return_data.size)) + mem[_16876 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16876 + (7 * ceil32(return_data.size)) + 160] = _22861
                        require return_data.size >= _22681 + (32 * _22861) + 32
                        t = _16876 + (6 * ceil32(return_data.size)) + _22681 + 192
                        u = _16876 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22861:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16876] - 1 < mem[_16876]
                        _25350 = mem[(32 * mem[_16876] - 1) + _16876 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25350))
                        staticcall address(_25350).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25741 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16876
                        s = mem[_25741] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11222 / 2) + 1 < mem[96]
                    require idx - (_11222 / 2) < mem[96]
                    if mem[(32 * idx - (_11222 / 2)) + 140 len 20] != mem[(32 * idx + -(_11222 / 2) + 1) + 140 len 20]:
                        _17008 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_17008 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_17008]
                        mem[_17008 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17008]
                        mem[_17008 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_17008] - 1 < mem[_17008]
                        mem[_17008 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_17008] - 1) + _17008 + 44 len 20])
                        staticcall mem[(32 * mem[_17008] - 1) + _17008 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17008 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17008 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_17008]
                        _17435 = mem[_17008 + 32]
                        require idx - (_11222 / 2) < mem[96]
                        _17460 = mem[(32 * idx - (_11222 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17008 + 44 len 20])
                            staticcall mem[_17008 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17008 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17008 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17008 + (2 * ceil32(return_data.size)) + 132] = address(_17460)
                            require ext_code.size(mem[_17008 + 44 len 20])
                            staticcall mem[_17008 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17460)
                            mem[_17008 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11222 / 2) < mem[96]
                                _18486 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_17008 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17008 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17008 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17008 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17008 + (4 * ceil32(return_data.size)) + 260] = mem[_17008]
                                t = 0
                                u = _17008 + 32
                                v = _17008 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_17008]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17008 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17008 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18486))
                                call address(_18486).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17008 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22664 = mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17008 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22844 = mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17008 + (6 * ceil32(return_data.size)) + 96] = _22844
                                require return_data.size >= _22664 + (32 * _22844) + 32
                                t = _17008 + (4 * ceil32(return_data.size)) + _22664 + 128
                                u = _17008 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22844:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17008] - 1 < mem[_17008]
                                _25316 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25316))
                                staticcall address(_25316).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25724 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17008
                                s = mem[_25724] - ext_call.return_data[0]
                                continue 
                            mem[_17008 + (4 * ceil32(return_data.size)) + 100] = address(_17460)
                            mem[_17008 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17435))
                            call address(_17435).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17460), -1
                            mem[_17008 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11222 / 2) < mem[96]
                            _19247 = mem[(32 * idx - (_11222 / 2)) + 128]
                            mem[_17008 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17008 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17008 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17008 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17008 + (6 * ceil32(return_data.size)) + 260] = mem[_17008]
                            t = 0
                            u = _17008 + 32
                            v = _17008 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_17008]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17008 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17008 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19247))
                            call address(_19247).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17008 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22665 = mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17008 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22845 = mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_17008 + (7 * ceil32(return_data.size)) + 96] = _22845
                            require return_data.size >= _22665 + (32 * _22845) + 32
                            t = _17008 + (6 * ceil32(return_data.size)) + _22665 + 128
                            u = _17008 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22845:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17008] - 1 < mem[_17008]
                            _25318 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25318))
                            staticcall address(_25318).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25725 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17008
                            s = mem[_25725] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17008 + 44 len 20])
                            staticcall mem[_17008 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17008 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17008 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17008 + (2 * ceil32(return_data.size)) + 132] = address(_17460)
                            require ext_code.size(mem[_17008 + 44 len 20])
                            staticcall mem[_17008 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17460)
                            mem[_17008 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11222 / 2) < mem[96]
                                _18747 = mem[(32 * idx - (_11222 / 2)) + 128]
                                mem[_17008 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17008 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17008 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17008 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17008 + (4 * ceil32(return_data.size)) + 260] = mem[_17008]
                                t = 0
                                u = _17008 + 32
                                v = _17008 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_17008]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16734 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_17008 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17008 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18747))
                                call address(_18747).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_17008 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22666 = mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _17008 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22846 = mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_17008 + (6 * ceil32(return_data.size)) + 96] = _22846
                                require return_data.size >= _22666 + (32 * _22846) + 32
                                t = _17008 + (4 * ceil32(return_data.size)) + _22666 + 128
                                u = _17008 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22846:
                                    mem[u] = mem[t]
                                    _16734 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17008] - 1 < mem[_17008]
                                _25320 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25320))
                                staticcall address(_25320).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25726 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16734 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17008
                                s = mem[_25726] - ext_call.return_data[0]
                                continue 
                            mem[_17008 + (4 * ceil32(return_data.size)) + 100] = address(_17460)
                            mem[_17008 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17435))
                            call address(_17435).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17460), -1
                            mem[_17008 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11222 / 2) < mem[96]
                            _19550 = mem[(32 * idx - (_11222 / 2)) + 128]
                            mem[_17008 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17008 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17008 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17008 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17008 + (6 * ceil32(return_data.size)) + 260] = mem[_17008]
                            t = 0
                            u = _17008 + 32
                            v = _17008 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_17008]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17008 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17008 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19550))
                            call address(_19550).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17008 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22667 = mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17008 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22847 = mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_17008 + (7 * ceil32(return_data.size)) + 96] = _22847
                            require return_data.size >= _22667 + (32 * _22847) + 32
                            t = _17008 + (6 * ceil32(return_data.size)) + _22667 + 128
                            u = _17008 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22847:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17008] - 1 < mem[_17008]
                            _25322 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25322))
                            staticcall address(_25322).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25727 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17008
                            s = mem[_25727] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17008 + 44 len 20])
                        staticcall mem[_17008 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17008 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17008 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_17008 + (2 * ceil32(return_data.size)) + 132] = address(_17460)
                        require ext_code.size(mem[_17008 + 44 len 20])
                        staticcall mem[_17008 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17460)
                        mem[_17008 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17008 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11222 / 2) < mem[96]
                            _19035 = mem[(32 * idx - (_11222 / 2)) + 128]
                            mem[_17008 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17008 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_17008 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_17008 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_17008 + (4 * ceil32(return_data.size)) + 260] = mem[_17008]
                            t = 0
                            u = _17008 + 32
                            v = _17008 + (4 * ceil32(return_data.size)) + 292
                            while t < mem[_17008]:
                                mem[v] = mem[u + 12 len 20]
                                _16734 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_17008 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17008 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19035))
                            call address(_19035).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_17008 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22668 = mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _17008 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22848 = mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _17008 + (6 * ceil32(return_data.size)) + (32 * mem[_17008 + (4 * ceil32(return_data.size)) + mem[_17008 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_17008 + (6 * ceil32(return_data.size)) + 96] = _22848
                            require return_data.size >= _22668 + (32 * _22848) + 32
                            t = _17008 + (4 * ceil32(return_data.size)) + _22668 + 128
                            u = _17008 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22848:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17008] - 1 < mem[_17008]
                            _25324 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25324))
                            staticcall address(_25324).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25728 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17008
                            s = mem[_25728] - ext_call.return_data[0]
                            continue 
                        mem[_17008 + (4 * ceil32(return_data.size)) + 100] = address(_17460)
                        mem[_17008 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17435))
                        call address(_17435).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17460), -1
                        mem[_17008 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17008 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11222 / 2) < mem[96]
                        _19829 = mem[(32 * idx - (_11222 / 2)) + 128]
                        mem[_17008 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17008 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_17008 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_17008 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_17008 + (6 * ceil32(return_data.size)) + 260] = mem[_17008]
                        t = 0
                        u = _17008 + 32
                        v = _17008 + (6 * ceil32(return_data.size)) + 292
                        while t < mem[_17008]:
                            mem[v] = mem[u + 12 len 20]
                            _16734 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_17008 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_17008 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19829))
                        call address(_19829).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_17008 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_17008]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_17008 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _17008 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _22669 = mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _17008 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _22849 = mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _17008 + (7 * ceil32(return_data.size)) + (32 * mem[_17008 + (6 * ceil32(return_data.size)) + mem[_17008 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_17008 + (7 * ceil32(return_data.size)) + 96] = _22849
                        require return_data.size >= _22669 + (32 * _22849) + 32
                        t = _17008 + (6 * ceil32(return_data.size)) + _22669 + 128
                        u = _17008 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _22849:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17008] - 1 < mem[_17008]
                        _25326 = mem[(32 * mem[_17008] - 1) + _17008 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25326))
                        staticcall address(_25326).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25729 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _17008
                        s = mem[_25729] - ext_call.return_data[0]
                        continue 
                    _17010 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_17010 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_17010]
                    mem[_17010 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_17010]
                    mem[_17010 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_17010]
                    mem[_17010 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_17010] - 1 < mem[_17010]
                    mem[_17010 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_17010] - 1) + _17010 + 44 len 20])
                    staticcall mem[(32 * mem[_17010] - 1) + _17010 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_17010 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17010 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_17010]
                    _17480 = mem[_17010 + 32]
                    require idx + -(_11222 / 2) + 1 < mem[96]
                    _17490 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_17010 + 44 len 20])
                        staticcall mem[_17010 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17010 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17010 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17010 + (2 * ceil32(return_data.size)) + 164] = address(_17490)
                        require ext_code.size(mem[_17010 + 44 len 20])
                        staticcall mem[_17010 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17490)
                        mem[_17010 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17010 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _18660 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_17010 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17010 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17010 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17010 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17010 + (4 * ceil32(return_data.size)) + 292] = mem[_17010]
                            s = 0
                            t = _17010 + 32
                            u = _17010 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17010]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17010 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17010 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18660))
                            call address(_18660).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17010 + (4 * ceil32(return_data.size)) + (32 * mem[_17010]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22490 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22670 = mem[_22490]
                            require mem[_22490] <= test266151307()
                            require _22490 + return_data.size > _22490 + mem[_22490] + 31
                            _22850 = mem[_22490 + mem[_22490]]
                            require mem[_22490 + mem[_22490]] <= test266151307()
                            require (32 * mem[_22490 + mem[_22490]]) + 32 >= 0 and _22490 + ceil32(return_data.size) + (32 * mem[_22490 + mem[_22490]]) + 32 <= test266151307()
                            mem[64] = _22490 + ceil32(return_data.size) + (32 * mem[_22490 + mem[_22490]]) + 32
                            mem[_22490 + ceil32(return_data.size)] = _22850
                            require return_data.size >= _22670 + (32 * _22850) + 32
                            t = _22490 + _22670 + 32
                            u = _22490 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22850:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17010] - 1 < mem[_17010]
                            _25328 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25328))
                            staticcall address(_25328).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25730 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17010
                            s = mem[_25730] - ext_call.return_data[0]
                            continue 
                        mem[_17010 + (4 * ceil32(return_data.size)) + 132] = address(_17490)
                        mem[_17010 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17480))
                        call address(_17480).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17490), -1
                        mem[_17010 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _19456 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        mem[_17010 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17010 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17010 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17010 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17010 + (6 * ceil32(return_data.size)) + 292] = mem[_17010]
                        s = 0
                        t = _17010 + 32
                        u = _17010 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17010]:
                            mem[u] = mem[t + 12 len 20]
                            _16734 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17010 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17010 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19456))
                        call address(_19456).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22491 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22671 = mem[_22491]
                        require mem[_22491] <= test266151307()
                        require _22491 + return_data.size > _22491 + mem[_22491] + 31
                        _22851 = mem[_22491 + mem[_22491]]
                        require mem[_22491 + mem[_22491]] <= test266151307()
                        require (32 * mem[_22491 + mem[_22491]]) + 32 >= 0 and _22491 + ceil32(return_data.size) + (32 * mem[_22491 + mem[_22491]]) + 32 <= test266151307()
                        mem[64] = _22491 + ceil32(return_data.size) + (32 * mem[_22491 + mem[_22491]]) + 32
                        mem[_22491 + ceil32(return_data.size)] = _22851
                        require return_data.size >= _22671 + (32 * _22851) + 32
                        t = _22491 + _22671 + 32
                        u = _22491 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22851:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17010] - 1 < mem[_17010]
                        _25330 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25330))
                        staticcall address(_25330).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25731 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17010
                        s = mem[_25731] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_17010 + 44 len 20])
                        staticcall mem[_17010 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17010 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17010 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17010 + (2 * ceil32(return_data.size)) + 164] = address(_17490)
                        require ext_code.size(mem[_17010 + 44 len 20])
                        staticcall mem[_17010 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17490)
                        mem[_17010 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17010 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11222 / 2) + 1 < mem[96]
                            _18950 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                            mem[_17010 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17010 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17010 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17010 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17010 + (4 * ceil32(return_data.size)) + 292] = mem[_17010]
                            s = 0
                            t = _17010 + 32
                            u = _17010 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17010]:
                                mem[u] = mem[t + 12 len 20]
                                _16734 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17010 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17010 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18950))
                            call address(_18950).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17010 + (4 * ceil32(return_data.size)) + (32 * mem[_17010]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22492 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22672 = mem[_22492]
                            require mem[_22492] <= test266151307()
                            require _22492 + return_data.size > _22492 + mem[_22492] + 31
                            _22852 = mem[_22492 + mem[_22492]]
                            require mem[_22492 + mem[_22492]] <= test266151307()
                            require (32 * mem[_22492 + mem[_22492]]) + 32 >= 0 and _22492 + ceil32(return_data.size) + (32 * mem[_22492 + mem[_22492]]) + 32 <= test266151307()
                            mem[64] = _22492 + ceil32(return_data.size) + (32 * mem[_22492 + mem[_22492]]) + 32
                            mem[_22492 + ceil32(return_data.size)] = _22852
                            require return_data.size >= _22672 + (32 * _22852) + 32
                            t = _22492 + _22672 + 32
                            u = _22492 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22852:
                                mem[u] = mem[t]
                                _16734 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17010] - 1 < mem[_17010]
                            _25332 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25332))
                            staticcall address(_25332).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25732 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16734 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17010
                            s = mem[_25732] - ext_call.return_data[0]
                            continue 
                        mem[_17010 + (4 * ceil32(return_data.size)) + 132] = address(_17490)
                        mem[_17010 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17480))
                        call address(_17480).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17490), -1
                        mem[_17010 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _19750 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        mem[_17010 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17010 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17010 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17010 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17010 + (6 * ceil32(return_data.size)) + 292] = mem[_17010]
                        s = 0
                        t = _17010 + 32
                        u = _17010 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17010]:
                            mem[u] = mem[t + 12 len 20]
                            _16734 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17010 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17010 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19750))
                        call address(_19750).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22493 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22673 = mem[_22493]
                        require mem[_22493] <= test266151307()
                        require _22493 + return_data.size > _22493 + mem[_22493] + 31
                        _22853 = mem[_22493 + mem[_22493]]
                        require mem[_22493 + mem[_22493]] <= test266151307()
                        require (32 * mem[_22493 + mem[_22493]]) + 32 >= 0 and _22493 + ceil32(return_data.size) + (32 * mem[_22493 + mem[_22493]]) + 32 <= test266151307()
                        mem[64] = _22493 + ceil32(return_data.size) + (32 * mem[_22493 + mem[_22493]]) + 32
                        mem[_22493 + ceil32(return_data.size)] = _22853
                        require return_data.size >= _22673 + (32 * _22853) + 32
                        t = _22493 + _22673 + 32
                        u = _22493 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22853:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17010] - 1 < mem[_17010]
                        _25334 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25334))
                        staticcall address(_25334).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25733 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17010
                        s = mem[_25733] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_17010 + 44 len 20])
                    staticcall mem[_17010 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_17010 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_17010 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_17010 + (2 * ceil32(return_data.size)) + 164] = address(_17490)
                    require ext_code.size(mem[_17010 + 44 len 20])
                    staticcall mem[_17010 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17490)
                    mem[_17010 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17010 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11222 / 2) + 1 < mem[96]
                        _19252 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                        mem[_17010 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17010 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_17010 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_17010 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_17010 + (4 * ceil32(return_data.size)) + 292] = mem[_17010]
                        s = 0
                        t = _17010 + 32
                        u = _17010 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_17010]:
                            mem[u] = mem[t + 12 len 20]
                            _16734 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17010 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17010 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19252))
                        call address(_19252).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17010 + (4 * ceil32(return_data.size)) + (32 * mem[_17010]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22494 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22674 = mem[_22494]
                        require mem[_22494] <= test266151307()
                        require _22494 + return_data.size > _22494 + mem[_22494] + 31
                        _22854 = mem[_22494 + mem[_22494]]
                        require mem[_22494 + mem[_22494]] <= test266151307()
                        require (32 * mem[_22494 + mem[_22494]]) + 32 >= 0 and _22494 + ceil32(return_data.size) + (32 * mem[_22494 + mem[_22494]]) + 32 <= test266151307()
                        mem[64] = _22494 + ceil32(return_data.size) + (32 * mem[_22494 + mem[_22494]]) + 32
                        mem[_22494 + ceil32(return_data.size)] = _22854
                        require return_data.size >= _22674 + (32 * _22854) + 32
                        t = _22494 + _22674 + 32
                        u = _22494 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22854:
                            mem[u] = mem[t]
                            _16734 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17010] - 1 < mem[_17010]
                        _25336 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25336))
                        staticcall address(_25336).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25734 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16734 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17010
                        s = mem[_25734] - ext_call.return_data[0]
                        continue 
                    mem[_17010 + (4 * ceil32(return_data.size)) + 132] = address(_17490)
                    mem[_17010 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17480))
                    call address(_17480).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17490), -1
                    mem[_17010 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17010 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11222 / 2) + 1 < mem[96]
                    _20007 = mem[(32 * idx + -(_11222 / 2) + 1) + 128]
                    mem[_17010 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_17010 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_17010 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_17010 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_17010 + (6 * ceil32(return_data.size)) + 292] = mem[_17010]
                    s = 0
                    t = _17010 + 32
                    u = _17010 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_17010]:
                        mem[u] = mem[t + 12 len 20]
                        _16734 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_17010 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_17010 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_20007))
                    call address(_20007).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _17010 + (6 * ceil32(return_data.size)) + (32 * mem[_17010]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22495 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22675 = mem[_22495]
                    require mem[_22495] <= test266151307()
                    require _22495 + return_data.size > _22495 + mem[_22495] + 31
                    _22855 = mem[_22495 + mem[_22495]]
                    require mem[_22495 + mem[_22495]] <= test266151307()
                    require (32 * mem[_22495 + mem[_22495]]) + 32 >= 0 and _22495 + ceil32(return_data.size) + (32 * mem[_22495 + mem[_22495]]) + 32 <= test266151307()
                    mem[64] = _22495 + ceil32(return_data.size) + (32 * mem[_22495 + mem[_22495]]) + 32
                    mem[_22495 + ceil32(return_data.size)] = _22855
                    require return_data.size >= _22675 + (32 * _22855) + 32
                    t = _22495 + _22675 + 32
                    u = _22495 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22855:
                        mem[u] = mem[t]
                        _16734 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_17010] - 1 < mem[_17010]
                    _25338 = mem[(32 * mem[_17010] - 1) + _17010 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25338))
                    staticcall address(_25338).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25735 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16734 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _17010
                    s = mem[_25735] - ext_call.return_data[0]
                    continue 
                require _11222 / 2 < mem[96]
                _16764 = mem[(16 * Mask(251, 1, _11222)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16764))
                staticcall address(_16764).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16824 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16824] < _11300 - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
            else:
                mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
                idx = ('cd', 68).length / 2
                s = 0
                s = cd[4]
                while idx < ('cd', 68).length - 1:
                    require idx - (('cd', 68).length / 2) < mem[96]
                    require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11227 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11257 = mem[_11227]
                    require mem[_11227] == mem[_11227 + 12 len 20]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    _11304 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(_11304)
                    require ext_code.size(address(_11257))
                    staticcall address(_11257).getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_11304)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11359 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11383 = mem[_11359]
                    require mem[_11359] == mem[_11359 + 12 len 20]
                    require ext_code.size(mem[_11359 + 12 len 20])
                    staticcall mem[_11359 + 12 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11575 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11731 = mem[_11575]
                    require mem[_11575] == mem[_11575 + 18 len 14]
                    _11851 = mem[_11575 + 32]
                    require mem[_11575 + 32] == mem[_11575 + 50 len 14]
                    require mem[_11575 + 64] == mem[_11575 + 92 len 4]
                    require idx < mem[96]
                    require idx + 1 < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11575 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11575 + 50 len 14] / (997 * s) + (1000 * mem[_11575 + 18 len 14])
                            idx = idx + 1
                            s = _11383
                            s = 997 * s * Mask(112, 0, _11851) / (997 * s) + (1000 * Mask(112, 0, _11731))
                            continue 
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                        require idx < mem[96]
                        if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                            require (997 * s) + (1000 * mem[_11575 + 18 len 14])
                            require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                            mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11575 + 50 len 14] / (997 * s) + (1000 * mem[_11575 + 18 len 14])
                            idx = idx + 1
                            s = _11383
                            s = 997 * s * Mask(112, 0, _11851) / (997 * s) + (1000 * Mask(112, 0, _11731))
                            continue 
                    require (997 * s) + (1000 * mem[_11575 + 50 len 14])
                    require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                    mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_11575 + 18 len 14] / (997 * s) + (1000 * mem[_11575 + 50 len 14])
                    idx = idx + 1
                    s = _11383
                    s = 997 * s * Mask(112, 0, _11731) / (997 * s) + (1000 * Mask(112, 0, _11851))
                    continue 
                require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
                if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                    revert with 0, 'e1'
                _11225 = mem[96]
                require mem[96] / 2 < mem[96]
                _11254 = mem[(16 * Mask(251, 1, mem[96])) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11254))
                staticcall address(_11254).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11274 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11303 = mem[_11274]
                _16735 = mem[96]
                idx = _11225 / 2
                s = 0
                s = 96
                s = cd[4]
                while idx < _16735 - 1:
                    require idx + -(_11225 / 2) + 1 < mem[96]
                    require idx - (_11225 / 2) < mem[96]
                    require idx + -(_11225 / 2) + 1 < mem[96]
                    if mem[(32 * idx - (_11225 / 2)) + 140 len 20] != mem[(32 * idx + -(_11225 / 2) + 1) + 140 len 20]:
                        require idx - (_11225 / 2) < mem[96]
                        if mem[(32 * idx - (_11225 / 2)) + 140 len 20] != mem[(32 * idx + -(_11225 / 2) + 1) + 140 len 20]:
                            _16879 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_16879 + 32 len 64] = call.data[calldata.size len 64]
                            require idx < mem[96]
                            require 0 < mem[_16879]
                            mem[_16879 + 32] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[_16879]
                            mem[_16879 + 64] = mem[(32 * idx + 1) + 140 len 20]
                            require mem[_16879] - 1 < mem[_16879]
                            mem[_16879 + 100] = this.address
                            require ext_code.size(mem[(32 * mem[_16879] - 1) + _16879 + 44 len 20])
                            staticcall mem[(32 * mem[_16879] - 1) + _16879 + 44 len 20].balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_16879 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16879 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require 0 < mem[_16879]
                            _17362 = mem[_16879 + 32]
                            require idx - (_11225 / 2) < mem[96]
                            _17386 = mem[(32 * idx - (_11225 / 2)) + 128]
                            if msg.sender == owner:
                                require ext_code.size(mem[_16879 + 44 len 20])
                                staticcall mem[_16879 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16879 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16879 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16879 + (2 * ceil32(return_data.size)) + 132] = address(_17386)
                                require ext_code.size(mem[_16879 + 44 len 20])
                                staticcall mem[_16879 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17386)
                                mem[_16879 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11225 / 2) < mem[96]
                                    _18298 = mem[(32 * idx - (_11225 / 2)) + 128]
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 260] = mem[_16879]
                                    t = 0
                                    u = _16879 + 32
                                    v = _16879 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_16879]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16735 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18298))
                                    call address(_18298).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16879 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16879]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22682 = mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _16879 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22862 = mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_16879 + (6 * ceil32(return_data.size)) + 96] = _22862
                                    require return_data.size >= _22682 + (32 * _22862) + 32
                                    t = _16879 + (4 * ceil32(return_data.size)) + _22682 + 128
                                    u = _16879 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22862:
                                        mem[u] = mem[t]
                                        _16735 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16879] - 1 < mem[_16879]
                                    _25352 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25352))
                                    staticcall address(_25352).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25742 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16735 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16879
                                    s = mem[_25742] - ext_call.return_data[0]
                                    continue 
                                mem[_16879 + (4 * ceil32(return_data.size)) + 100] = address(_17386)
                                mem[_16879 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17362))
                                call address(_17362).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17386), -1
                                mem[_16879 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11225 / 2) < mem[96]
                                _18957 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_16879 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16879 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16879 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16879 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16879 + (6 * ceil32(return_data.size)) + 260] = mem[_16879]
                                t = 0
                                u = _16879 + 32
                                v = _16879 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_16879]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16735 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16879 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16879 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18957))
                                call address(_18957).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16879 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16879]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16879 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22683 = mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16879 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22863 = mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16879 + (7 * ceil32(return_data.size)) + (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16879 + (7 * ceil32(return_data.size)) + (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16879 + (7 * ceil32(return_data.size)) + 96] = _22863
                                require return_data.size >= _22683 + (32 * _22863) + 32
                                t = _16879 + (6 * ceil32(return_data.size)) + _22683 + 128
                                u = _16879 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22863:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16879] - 1 < mem[_16879]
                                _25354 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25354))
                                staticcall address(_25354).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25743 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16879
                                s = mem[_25743] - ext_call.return_data[0]
                                continue 
                            if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                                require ext_code.size(mem[_16879 + 44 len 20])
                                staticcall mem[_16879 + 44 len 20].decimals() with:
                                        gas gas_remaining wei
                                mem[_16879 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                                mem[_16879 + (2 * ceil32(return_data.size)) + 100] = this.address
                                mem[_16879 + (2 * ceil32(return_data.size)) + 132] = address(_17386)
                                require ext_code.size(mem[_16879 + 44 len 20])
                                staticcall mem[_16879 + 44 len 20].allowance(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(this.address), address(_17386)
                                mem[_16879 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (4 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                    require idx - (_11225 / 2) < mem[96]
                                    _18494 = mem[(32 * idx - (_11225 / 2)) + 128]
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 100] = s
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 132] = 0
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 164] = 160
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 260] = mem[_16879]
                                    t = 0
                                    u = _16879 + 32
                                    v = _16879 + (4 * ceil32(return_data.size)) + 292
                                    while t < mem[_16879]:
                                        mem[v] = mem[u + 12 len 20]
                                        _16735 = mem[96]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 196] = this.address
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                    require ext_code.size(address(_18494))
                                    call address(_18494).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16879 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16879]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_16879 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                                    require return_data.size >= 32
                                    _22684 = mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                    require mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                    require _16879 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                    _22864 = mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                    require mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                    require (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                    mem[64] = _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                    mem[_16879 + (6 * ceil32(return_data.size)) + 96] = _22864
                                    require return_data.size >= _22684 + (32 * _22864) + 32
                                    t = _16879 + (4 * ceil32(return_data.size)) + _22684 + 128
                                    u = _16879 + (6 * ceil32(return_data.size)) + 128
                                    s = 0
                                    while s < _22864:
                                        mem[u] = mem[t]
                                        _16735 = mem[96]
                                        t = t + 32
                                        u = u + 32
                                        s = s + 1
                                        continue 
                                    require mem[_16879] - 1 < mem[_16879]
                                    _25356 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_25356))
                                    staticcall address(_25356).balanceOf(address rg1) with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _25744 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16735 = mem[96]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    s = _16879
                                    s = mem[_25744] - ext_call.return_data[0]
                                    continue 
                                mem[_16879 + (4 * ceil32(return_data.size)) + 100] = address(_17386)
                                mem[_16879 + (4 * ceil32(return_data.size)) + 132] = -1
                                require ext_code.size(address(_17362))
                                call address(_17362).approve(address rg1, uint256 rg2) with:
                                     gas gas_remaining wei
                                    args address(_17386), -1
                                mem[_16879 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require idx - (_11225 / 2) < mem[96]
                                _19259 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_16879 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16879 + (6 * ceil32(return_data.size)) + 100] = s
                                mem[_16879 + (6 * ceil32(return_data.size)) + 132] = 0
                                mem[_16879 + (6 * ceil32(return_data.size)) + 164] = 160
                                mem[_16879 + (6 * ceil32(return_data.size)) + 260] = mem[_16879]
                                t = 0
                                u = _16879 + 32
                                v = _16879 + (6 * ceil32(return_data.size)) + 292
                                while t < mem[_16879]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16735 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16879 + (6 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16879 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_19259))
                                call address(_19259).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16879 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16879]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16879 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (7 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22685 = mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16879 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22865 = mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16879 + (7 * ceil32(return_data.size)) + (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16879 + (7 * ceil32(return_data.size)) + (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16879 + (7 * ceil32(return_data.size)) + 96] = _22865
                                require return_data.size >= _22685 + (32 * _22865) + 32
                                t = _16879 + (6 * ceil32(return_data.size)) + _22685 + 128
                                u = _16879 + (7 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22865:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16879] - 1 < mem[_16879]
                                _25358 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25358))
                                staticcall address(_25358).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25745 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16879
                                s = mem[_25745] - ext_call.return_data[0]
                                continue 
                            if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                                revert with 0, 'Ownable: caller is not the owner'
                            require ext_code.size(mem[_16879 + 44 len 20])
                            staticcall mem[_16879 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16879 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16879 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_16879 + (2 * ceil32(return_data.size)) + 132] = address(_17386)
                            require ext_code.size(mem[_16879 + 44 len 20])
                            staticcall mem[_16879 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17386)
                            mem[_16879 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16879 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11225 / 2) < mem[96]
                                _18756 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_16879 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16879 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_16879 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_16879 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_16879 + (4 * ceil32(return_data.size)) + 260] = mem[_16879]
                                t = 0
                                u = _16879 + 32
                                v = _16879 + (4 * ceil32(return_data.size)) + 292
                                while t < mem[_16879]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16735 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16879 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_16879 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18756))
                                call address(_18756).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16879 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_16879]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16879 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _22686 = mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16879 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _22866 = mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _16879 + (6 * ceil32(return_data.size)) + (32 * mem[_16879 + (4 * ceil32(return_data.size)) + mem[_16879 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_16879 + (6 * ceil32(return_data.size)) + 96] = _22866
                                require return_data.size >= _22686 + (32 * _22866) + 32
                                t = _16879 + (4 * ceil32(return_data.size)) + _22686 + 128
                                u = _16879 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _22866:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16879] - 1 < mem[_16879]
                                _25360 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25360))
                                staticcall address(_25360).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25746 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _16879
                                s = mem[_25746] - ext_call.return_data[0]
                                continue 
                            mem[_16879 + (4 * ceil32(return_data.size)) + 100] = address(_17386)
                            mem[_16879 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17362))
                            call address(_17362).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17386), -1
                            mem[_16879 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16879 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11225 / 2) < mem[96]
                            _19560 = mem[(32 * idx - (_11225 / 2)) + 128]
                            mem[_16879 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16879 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_16879 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_16879 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_16879 + (6 * ceil32(return_data.size)) + 260] = mem[_16879]
                            t = 0
                            u = _16879 + 32
                            v = _16879 + (6 * ceil32(return_data.size)) + 292
                            while t < mem[_16879]:
                                mem[v] = mem[u + 12 len 20]
                                _16735 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16879 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_16879 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19560))
                            call address(_19560).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16879 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_16879]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16879 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16879 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _22687 = mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16879 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _22867 = mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _16879 + (7 * ceil32(return_data.size)) + (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _16879 + (7 * ceil32(return_data.size)) + (32 * mem[_16879 + (6 * ceil32(return_data.size)) + mem[_16879 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_16879 + (7 * ceil32(return_data.size)) + 96] = _22867
                            require return_data.size >= _22687 + (32 * _22867) + 32
                            t = _16879 + (6 * ceil32(return_data.size)) + _22687 + 128
                            u = _16879 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _22867:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16879] - 1 < mem[_16879]
                            _25362 = mem[(32 * mem[_16879] - 1) + _16879 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25362))
                            staticcall address(_25362).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25747 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _16879
                            s = mem[_25747] - ext_call.return_data[0]
                            continue 
                        _16881 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 128
                        mem[_16881 + 32 len 96] = call.data[calldata.size len 96]
                        require idx < mem[96]
                        require 0 < mem[_16881]
                        mem[_16881 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16881]
                        mem[_16881 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16881]
                        mem[_16881 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require mem[_16881] - 1 < mem[_16881]
                        mem[_16881 + 132] = this.address
                        require ext_code.size(mem[(32 * mem[_16881] - 1) + _16881 + 44 len 20])
                        staticcall mem[(32 * mem[_16881] - 1) + _16881 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16881 + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16881 + ceil32(return_data.size) + 128
                        require return_data.size >= 32
                        require 0 < mem[_16881]
                        _17410 = mem[_16881 + 32]
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _17439 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16881 + 44 len 20])
                            staticcall mem[_16881 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16881 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16881 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16881 + (2 * ceil32(return_data.size)) + 164] = address(_17439)
                            require ext_code.size(mem[_16881 + 44 len 20])
                            staticcall mem[_16881 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17439)
                            mem[_16881 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16881 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11225 / 2) + 1 < mem[96]
                                _18425 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                                mem[_16881 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16881 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16881 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16881 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16881 + (4 * ceil32(return_data.size)) + 292] = mem[_16881]
                                s = 0
                                t = _16881 + 32
                                u = _16881 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16881]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16881 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16881 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18425))
                                call address(_18425).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16881 + (4 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22508 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22688 = mem[_22508]
                                require mem[_22508] <= test266151307()
                                require _22508 + return_data.size > _22508 + mem[_22508] + 31
                                _22868 = mem[_22508 + mem[_22508]]
                                require mem[_22508 + mem[_22508]] <= test266151307()
                                require (32 * mem[_22508 + mem[_22508]]) + 32 >= 0 and _22508 + ceil32(return_data.size) + (32 * mem[_22508 + mem[_22508]]) + 32 <= test266151307()
                                mem[64] = _22508 + ceil32(return_data.size) + (32 * mem[_22508 + mem[_22508]]) + 32
                                mem[_22508 + ceil32(return_data.size)] = _22868
                                require return_data.size >= _22688 + (32 * _22868) + 32
                                t = _22508 + _22688 + 32
                                u = _22508 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22868:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16881] - 1 < mem[_16881]
                                _25364 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25364))
                                staticcall address(_25364).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25748 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16881
                                s = mem[_25748] - ext_call.return_data[0]
                                continue 
                            mem[_16881 + (4 * ceil32(return_data.size)) + 132] = address(_17439)
                            mem[_16881 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17410))
                            call address(_17410).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17439), -1
                            mem[_16881 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16881 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _19164 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_16881 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16881 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16881 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16881 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16881 + (6 * ceil32(return_data.size)) + 292] = mem[_16881]
                            s = 0
                            t = _16881 + 32
                            u = _16881 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16881]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16881 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16881 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19164))
                            call address(_19164).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16881 + (6 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22509 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22689 = mem[_22509]
                            require mem[_22509] <= test266151307()
                            require _22509 + return_data.size > _22509 + mem[_22509] + 31
                            _22869 = mem[_22509 + mem[_22509]]
                            require mem[_22509 + mem[_22509]] <= test266151307()
                            require (32 * mem[_22509 + mem[_22509]]) + 32 >= 0 and _22509 + ceil32(return_data.size) + (32 * mem[_22509 + mem[_22509]]) + 32 <= test266151307()
                            mem[64] = _22509 + ceil32(return_data.size) + (32 * mem[_22509 + mem[_22509]]) + 32
                            mem[_22509 + ceil32(return_data.size)] = _22869
                            require return_data.size >= _22689 + (32 * _22869) + 32
                            t = _22509 + _22689 + 32
                            u = _22509 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22869:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16881] - 1 < mem[_16881]
                            _25366 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25366))
                            staticcall address(_25366).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25749 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16881
                            s = mem[_25749] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16881 + 44 len 20])
                            staticcall mem[_16881 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16881 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16881 + (2 * ceil32(return_data.size)) + 132] = this.address
                            mem[_16881 + (2 * ceil32(return_data.size)) + 164] = address(_17439)
                            require ext_code.size(mem[_16881 + 44 len 20])
                            staticcall mem[_16881 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17439)
                            mem[_16881 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16881 + (4 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11225 / 2) + 1 < mem[96]
                                _18668 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                                mem[_16881 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16881 + (4 * ceil32(return_data.size)) + 132] = s
                                mem[_16881 + (4 * ceil32(return_data.size)) + 164] = 0
                                mem[_16881 + (4 * ceil32(return_data.size)) + 196] = 160
                                mem[_16881 + (4 * ceil32(return_data.size)) + 292] = mem[_16881]
                                s = 0
                                t = _16881 + 32
                                u = _16881 + (4 * ceil32(return_data.size)) + 324
                                while s < mem[_16881]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_16881 + (4 * ceil32(return_data.size)) + 228] = this.address
                                mem[_16881 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                                require ext_code.size(address(_18668))
                                call address(_18668).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _16881 + (4 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22510 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22690 = mem[_22510]
                                require mem[_22510] <= test266151307()
                                require _22510 + return_data.size > _22510 + mem[_22510] + 31
                                _22870 = mem[_22510 + mem[_22510]]
                                require mem[_22510 + mem[_22510]] <= test266151307()
                                require (32 * mem[_22510 + mem[_22510]]) + 32 >= 0 and _22510 + ceil32(return_data.size) + (32 * mem[_22510 + mem[_22510]]) + 32 <= test266151307()
                                mem[64] = _22510 + ceil32(return_data.size) + (32 * mem[_22510 + mem[_22510]]) + 32
                                mem[_22510 + ceil32(return_data.size)] = _22870
                                require return_data.size >= _22690 + (32 * _22870) + 32
                                t = _22510 + _22690 + 32
                                u = _22510 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22870:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16881] - 1 < mem[_16881]
                                _25368 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25368))
                                staticcall address(_25368).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25750 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 2
                                s = ext_call.return_data[0]
                                s = _16881
                                s = mem[_25750] - ext_call.return_data[0]
                                continue 
                            mem[_16881 + (4 * ceil32(return_data.size)) + 132] = address(_17439)
                            mem[_16881 + (4 * ceil32(return_data.size)) + 164] = -1
                            require ext_code.size(address(_17410))
                            call address(_17410).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17439), -1
                            mem[_16881 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16881 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _19465 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_16881 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16881 + (6 * ceil32(return_data.size)) + 132] = s
                            mem[_16881 + (6 * ceil32(return_data.size)) + 164] = 0
                            mem[_16881 + (6 * ceil32(return_data.size)) + 196] = 160
                            mem[_16881 + (6 * ceil32(return_data.size)) + 292] = mem[_16881]
                            s = 0
                            t = _16881 + 32
                            u = _16881 + (6 * ceil32(return_data.size)) + 324
                            while s < mem[_16881]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16881 + (6 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16881 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_19465))
                            call address(_19465).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16881 + (6 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22511 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22691 = mem[_22511]
                            require mem[_22511] <= test266151307()
                            require _22511 + return_data.size > _22511 + mem[_22511] + 31
                            _22871 = mem[_22511 + mem[_22511]]
                            require mem[_22511 + mem[_22511]] <= test266151307()
                            require (32 * mem[_22511 + mem[_22511]]) + 32 >= 0 and _22511 + ceil32(return_data.size) + (32 * mem[_22511 + mem[_22511]]) + 32 <= test266151307()
                            mem[64] = _22511 + ceil32(return_data.size) + (32 * mem[_22511 + mem[_22511]]) + 32
                            mem[_22511 + ceil32(return_data.size)] = _22871
                            require return_data.size >= _22691 + (32 * _22871) + 32
                            t = _22511 + _22691 + 32
                            u = _22511 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22871:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16881] - 1 < mem[_16881]
                            _25370 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25370))
                            staticcall address(_25370).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25751 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16881
                            s = mem[_25751] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16881 + 44 len 20])
                        staticcall mem[_16881 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16881 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16881 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_16881 + (2 * ceil32(return_data.size)) + 164] = address(_17439)
                        require ext_code.size(mem[_16881 + 44 len 20])
                        staticcall mem[_16881 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17439)
                        mem[_16881 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16881 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _18962 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_16881 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16881 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_16881 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_16881 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_16881 + (4 * ceil32(return_data.size)) + 292] = mem[_16881]
                            s = 0
                            t = _16881 + 32
                            u = _16881 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_16881]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_16881 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_16881 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18962))
                            call address(_18962).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _16881 + (4 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22512 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22692 = mem[_22512]
                            require mem[_22512] <= test266151307()
                            require _22512 + return_data.size > _22512 + mem[_22512] + 31
                            _22872 = mem[_22512 + mem[_22512]]
                            require mem[_22512 + mem[_22512]] <= test266151307()
                            require (32 * mem[_22512 + mem[_22512]]) + 32 >= 0 and _22512 + ceil32(return_data.size) + (32 * mem[_22512 + mem[_22512]]) + 32 <= test266151307()
                            mem[64] = _22512 + ceil32(return_data.size) + (32 * mem[_22512 + mem[_22512]]) + 32
                            mem[_22512 + ceil32(return_data.size)] = _22872
                            require return_data.size >= _22692 + (32 * _22872) + 32
                            t = _22512 + _22692 + 32
                            u = _22512 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22872:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16881] - 1 < mem[_16881]
                            _25372 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25372))
                            staticcall address(_25372).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25752 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _16881
                            s = mem[_25752] - ext_call.return_data[0]
                            continue 
                        mem[_16881 + (4 * ceil32(return_data.size)) + 132] = address(_17439)
                        mem[_16881 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17410))
                        call address(_17410).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17439), -1
                        mem[_16881 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16881 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _19761 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        mem[_16881 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16881 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_16881 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_16881 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_16881 + (6 * ceil32(return_data.size)) + 292] = mem[_16881]
                        s = 0
                        t = _16881 + 32
                        u = _16881 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_16881]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_16881 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_16881 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19761))
                        call address(_19761).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _16881 + (6 * ceil32(return_data.size)) + (32 * mem[_16881]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22513 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22693 = mem[_22513]
                        require mem[_22513] <= test266151307()
                        require _22513 + return_data.size > _22513 + mem[_22513] + 31
                        _22873 = mem[_22513 + mem[_22513]]
                        require mem[_22513 + mem[_22513]] <= test266151307()
                        require (32 * mem[_22513 + mem[_22513]]) + 32 >= 0 and _22513 + ceil32(return_data.size) + (32 * mem[_22513 + mem[_22513]]) + 32 <= test266151307()
                        mem[64] = _22513 + ceil32(return_data.size) + (32 * mem[_22513 + mem[_22513]]) + 32
                        mem[_22513 + ceil32(return_data.size)] = _22873
                        require return_data.size >= _22693 + (32 * _22873) + 32
                        t = _22513 + _22693 + 32
                        u = _22513 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22873:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16881] - 1 < mem[_16881]
                        _25374 = mem[(32 * mem[_16881] - 1) + _16881 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25374))
                        staticcall address(_25374).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _16881
                        s = mem[_25753] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11225 / 2) + 2 < mem[96]
                    if mem[(32 * idx + -(_11225 / 2) + 2) + 140 len 20] == mem[(32 * idx + -(_11225 / 2) + 1) + 140 len 20]:
                        _16884 = mem[64]
                        mem[mem[64]] = 4
                        mem[64] = mem[64] + 160
                        mem[_16884 + 32 len 128] = call.data[calldata.size len 128]
                        require idx < mem[96]
                        require 0 < mem[_16884]
                        mem[_16884 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_16884]
                        mem[_16884 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require idx + 2 < mem[96]
                        require 2 < mem[_16884]
                        mem[_16884 + 96] = mem[(32 * idx + 2) + 140 len 20]
                        require idx + 3 < mem[96]
                        require 3 < mem[_16884]
                        mem[_16884 + 128] = mem[(32 * idx + 3) + 140 len 20]
                        require mem[_16884] - 1 < mem[_16884]
                        mem[_16884 + 164] = this.address
                        require ext_code.size(mem[(32 * mem[_16884] - 1) + _16884 + 44 len 20])
                        staticcall mem[(32 * mem[_16884] - 1) + _16884 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_16884 + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16884 + ceil32(return_data.size) + 160
                        require return_data.size >= 32
                        require 0 < mem[_16884]
                        _17466 = mem[_16884 + 32]
                        require idx + -(_11225 / 2) + 2 < mem[96]
                        _17485 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_16884 + 44 len 20])
                            staticcall mem[_16884 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16884 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16884 + (2 * ceil32(return_data.size)) + 164] = this.address
                            mem[_16884 + (2 * ceil32(return_data.size)) + 196] = address(_17485)
                            require ext_code.size(mem[_16884 + 44 len 20])
                            staticcall mem[_16884 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17485)
                            mem[_16884 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16884 + (4 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11225 / 2) + 2 < mem[96]
                                _18586 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                                mem[_16884 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16884 + (4 * ceil32(return_data.size)) + 164] = s
                                mem[_16884 + (4 * ceil32(return_data.size)) + 196] = 0
                                mem[_16884 + (4 * ceil32(return_data.size)) + 228] = 160
                                mem[_16884 + (4 * ceil32(return_data.size)) + 324] = mem[_16884]
                                t = 0
                                u = _16884 + 32
                                v = _16884 + (4 * ceil32(return_data.size)) + 356
                                while t < mem[_16884]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16735 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16884 + (4 * ceil32(return_data.size)) + 260] = this.address
                                mem[_16884 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                                require ext_code.size(address(_18586))
                                call address(_18586).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16884 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16884]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16884 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _22706 = mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                                require mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16884 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                                _22886 = mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                                require (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                                mem[64] = _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                                mem[_16884 + (6 * ceil32(return_data.size)) + 160] = mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require return_data.size >= _22706 + (32 * _22886) + 32
                                t = _16884 + (4 * ceil32(return_data.size)) + _22706 + 192
                                u = _16884 + (6 * ceil32(return_data.size)) + 192
                                s = 0
                                while s < _22886:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16884] - 1 < mem[_16884]
                                _25400 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25400))
                                staticcall address(_25400).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25766 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 3
                                s = ext_call.return_data[0]
                                s = _16884
                                s = mem[_25766] - ext_call.return_data[0]
                                continue 
                            mem[_16884 + (4 * ceil32(return_data.size)) + 164] = address(_17485)
                            mem[_16884 + (4 * ceil32(return_data.size)) + 196] = -1
                            require ext_code.size(address(_17466))
                            call address(_17466).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17485), -1
                            mem[_16884 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11225 / 2) + 2 < mem[96]
                            _19372 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                            mem[_16884 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16884 + (6 * ceil32(return_data.size)) + 164] = s
                            mem[_16884 + (6 * ceil32(return_data.size)) + 196] = 0
                            mem[_16884 + (6 * ceil32(return_data.size)) + 228] = 160
                            mem[_16884 + (6 * ceil32(return_data.size)) + 324] = mem[_16884]
                            t = 0
                            u = _16884 + 32
                            v = _16884 + (6 * ceil32(return_data.size)) + 356
                            while t < mem[_16884]:
                                mem[v] = mem[u + 12 len 20]
                                _16735 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16884 + (6 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16884 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19372))
                            call address(_19372).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16884 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16884]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16884 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16884 + (7 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22707 = mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16884 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22887 = mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16884 + (7 * ceil32(return_data.size)) + (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16884 + (7 * ceil32(return_data.size)) + (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16884 + (7 * ceil32(return_data.size)) + 160] = _22887
                            require return_data.size >= _22707 + (32 * _22887) + 32
                            t = _16884 + (6 * ceil32(return_data.size)) + _22707 + 192
                            u = _16884 + (7 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22887:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16884] - 1 < mem[_16884]
                            _25402 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25402))
                            staticcall address(_25402).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25767 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16884
                            s = mem[_25767] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_16884 + 44 len 20])
                            staticcall mem[_16884 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_16884 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_16884 + (2 * ceil32(return_data.size)) + 164] = this.address
                            mem[_16884 + (2 * ceil32(return_data.size)) + 196] = address(_17485)
                            require ext_code.size(mem[_16884 + 44 len 20])
                            staticcall mem[_16884 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17485)
                            mem[_16884 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16884 + (4 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx + -(_11225 / 2) + 2 < mem[96]
                                _18863 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                                mem[_16884 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_16884 + (4 * ceil32(return_data.size)) + 164] = s
                                mem[_16884 + (4 * ceil32(return_data.size)) + 196] = 0
                                mem[_16884 + (4 * ceil32(return_data.size)) + 228] = 160
                                mem[_16884 + (4 * ceil32(return_data.size)) + 324] = mem[_16884]
                                t = 0
                                u = _16884 + 32
                                v = _16884 + (4 * ceil32(return_data.size)) + 356
                                while t < mem[_16884]:
                                    mem[v] = mem[u + 12 len 20]
                                    _16735 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_16884 + (4 * ceil32(return_data.size)) + 260] = this.address
                                mem[_16884 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                                require ext_code.size(address(_18863))
                                call address(_18863).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16884 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16884]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_16884 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _22708 = mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                                require mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _16884 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                                _22888 = mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                                require (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                                mem[64] = _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                                mem[_16884 + (6 * ceil32(return_data.size)) + 160] = mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                                require return_data.size >= _22708 + (32 * _22888) + 32
                                t = _16884 + (4 * ceil32(return_data.size)) + _22708 + 192
                                u = _16884 + (6 * ceil32(return_data.size)) + 192
                                s = 0
                                while s < _22888:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_16884] - 1 < mem[_16884]
                                _25404 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25404))
                                staticcall address(_25404).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25768 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 3
                                s = ext_call.return_data[0]
                                s = _16884
                                s = mem[_25768] - ext_call.return_data[0]
                                continue 
                            mem[_16884 + (4 * ceil32(return_data.size)) + 164] = address(_17485)
                            mem[_16884 + (4 * ceil32(return_data.size)) + 196] = -1
                            require ext_code.size(address(_17466))
                            call address(_17466).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17485), -1
                            mem[_16884 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx + -(_11225 / 2) + 2 < mem[96]
                            _19668 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                            mem[_16884 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16884 + (6 * ceil32(return_data.size)) + 164] = s
                            mem[_16884 + (6 * ceil32(return_data.size)) + 196] = 0
                            mem[_16884 + (6 * ceil32(return_data.size)) + 228] = 160
                            mem[_16884 + (6 * ceil32(return_data.size)) + 324] = mem[_16884]
                            t = 0
                            u = _16884 + 32
                            v = _16884 + (6 * ceil32(return_data.size)) + 356
                            while t < mem[_16884]:
                                mem[v] = mem[u + 12 len 20]
                                _16735 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16884 + (6 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16884 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19668))
                            call address(_19668).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16884 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16884]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16884 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16884 + (7 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22709 = mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16884 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22889 = mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16884 + (7 * ceil32(return_data.size)) + (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16884 + (7 * ceil32(return_data.size)) + (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16884 + (7 * ceil32(return_data.size)) + 160] = _22889
                            require return_data.size >= _22709 + (32 * _22889) + 32
                            t = _16884 + (6 * ceil32(return_data.size)) + _22709 + 192
                            u = _16884 + (7 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22889:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16884] - 1 < mem[_16884]
                            _25406 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25406))
                            staticcall address(_25406).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25769 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16884
                            s = mem[_25769] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_16884 + 44 len 20])
                        staticcall mem[_16884 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_16884 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_16884 + (2 * ceil32(return_data.size)) + 164] = this.address
                        mem[_16884 + (2 * ceil32(return_data.size)) + 196] = address(_17485)
                        require ext_code.size(mem[_16884 + 44 len 20])
                        staticcall mem[_16884 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17485)
                        mem[_16884 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16884 + (4 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11225 / 2) + 2 < mem[96]
                            _19175 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                            mem[_16884 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_16884 + (4 * ceil32(return_data.size)) + 164] = s
                            mem[_16884 + (4 * ceil32(return_data.size)) + 196] = 0
                            mem[_16884 + (4 * ceil32(return_data.size)) + 228] = 160
                            mem[_16884 + (4 * ceil32(return_data.size)) + 324] = mem[_16884]
                            t = 0
                            u = _16884 + 32
                            v = _16884 + (4 * ceil32(return_data.size)) + 356
                            while t < mem[_16884]:
                                mem[v] = mem[u + 12 len 20]
                                _16735 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_16884 + (4 * ceil32(return_data.size)) + 260] = this.address
                            mem[_16884 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                            require ext_code.size(address(_19175))
                            call address(_19175).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16884 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_16884]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_16884 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _22710 = mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                            require mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _16884 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                            _22890 = mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                            require (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                            mem[64] = _16884 + (6 * ceil32(return_data.size)) + (32 * mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                            mem[_16884 + (6 * ceil32(return_data.size)) + 160] = mem[_16884 + (4 * ceil32(return_data.size)) + mem[_16884 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                            require return_data.size >= _22710 + (32 * _22890) + 32
                            t = _16884 + (4 * ceil32(return_data.size)) + _22710 + 192
                            u = _16884 + (6 * ceil32(return_data.size)) + 192
                            s = 0
                            while s < _22890:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_16884] - 1 < mem[_16884]
                            _25408 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25408))
                            staticcall address(_25408).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25770 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 3
                            s = ext_call.return_data[0]
                            s = _16884
                            s = mem[_25770] - ext_call.return_data[0]
                            continue 
                        mem[_16884 + (4 * ceil32(return_data.size)) + 164] = address(_17485)
                        mem[_16884 + (4 * ceil32(return_data.size)) + 196] = -1
                        require ext_code.size(address(_17466))
                        call address(_17466).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17485), -1
                        mem[_16884 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _16884 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11225 / 2) + 2 < mem[96]
                        _19944 = mem[(32 * idx + -(_11225 / 2) + 2) + 128]
                        mem[_16884 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_16884 + (6 * ceil32(return_data.size)) + 164] = s
                        mem[_16884 + (6 * ceil32(return_data.size)) + 196] = 0
                        mem[_16884 + (6 * ceil32(return_data.size)) + 228] = 160
                        mem[_16884 + (6 * ceil32(return_data.size)) + 324] = mem[_16884]
                        t = 0
                        u = _16884 + 32
                        v = _16884 + (6 * ceil32(return_data.size)) + 356
                        while t < mem[_16884]:
                            mem[v] = mem[u + 12 len 20]
                            _16735 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_16884 + (6 * ceil32(return_data.size)) + 260] = this.address
                        mem[_16884 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_19944))
                        call address(_19944).swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_16884 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_16884]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_16884 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _16884 + (7 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _22711 = mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _16884 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _22891 = mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _16884 + (7 * ceil32(return_data.size)) + (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _16884 + (7 * ceil32(return_data.size)) + (32 * mem[_16884 + (6 * ceil32(return_data.size)) + mem[_16884 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_16884 + (7 * ceil32(return_data.size)) + 160] = _22891
                        require return_data.size >= _22711 + (32 * _22891) + 32
                        t = _16884 + (6 * ceil32(return_data.size)) + _22711 + 192
                        u = _16884 + (7 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _22891:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_16884] - 1 < mem[_16884]
                        _25410 = mem[(32 * mem[_16884] - 1) + _16884 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25410))
                        staticcall address(_25410).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25771 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _16884
                        s = mem[_25771] - ext_call.return_data[0]
                        continue 
                    require idx + -(_11225 / 2) + 1 < mem[96]
                    require idx - (_11225 / 2) < mem[96]
                    if mem[(32 * idx - (_11225 / 2)) + 140 len 20] != mem[(32 * idx + -(_11225 / 2) + 1) + 140 len 20]:
                        _17018 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_17018 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_17018]
                        mem[_17018 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_17018]
                        mem[_17018 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_17018] - 1 < mem[_17018]
                        mem[_17018 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_17018] - 1) + _17018 + 44 len 20])
                        staticcall mem[(32 * mem[_17018] - 1) + _17018 + 44 len 20].balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args this.address
                        mem[_17018 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17018 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_17018]
                        _17440 = mem[_17018 + 32]
                        require idx - (_11225 / 2) < mem[96]
                        _17464 = mem[(32 * idx - (_11225 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_17018 + 44 len 20])
                            staticcall mem[_17018 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17018 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17018 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17018 + (2 * ceil32(return_data.size)) + 132] = address(_17464)
                            require ext_code.size(mem[_17018 + 44 len 20])
                            staticcall mem[_17018 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17464)
                            mem[_17018 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17018 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11225 / 2) < mem[96]
                                _18498 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_17018 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17018 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17018 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17018 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17018 + (4 * ceil32(return_data.size)) + 260] = mem[_17018]
                                s = 0
                                t = _17018 + 32
                                u = _17018 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_17018]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17018 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17018 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18498))
                                call address(_18498).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17018 + (4 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22514 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22694 = mem[_22514]
                                require mem[_22514] <= test266151307()
                                require _22514 + return_data.size > _22514 + mem[_22514] + 31
                                _22874 = mem[_22514 + mem[_22514]]
                                require mem[_22514 + mem[_22514]] <= test266151307()
                                require (32 * mem[_22514 + mem[_22514]]) + 32 >= 0 and _22514 + ceil32(return_data.size) + (32 * mem[_22514 + mem[_22514]]) + 32 <= test266151307()
                                mem[64] = _22514 + ceil32(return_data.size) + (32 * mem[_22514 + mem[_22514]]) + 32
                                mem[_22514 + ceil32(return_data.size)] = _22874
                                require return_data.size >= _22694 + (32 * _22874) + 32
                                t = _22514 + _22694 + 32
                                u = _22514 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22874:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17018] - 1 < mem[_17018]
                                _25376 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25376))
                                staticcall address(_25376).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25754 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17018
                                s = mem[_25754] - ext_call.return_data[0]
                                continue 
                            mem[_17018 + (4 * ceil32(return_data.size)) + 100] = address(_17464)
                            mem[_17018 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17440))
                            call address(_17440).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17464), -1
                            mem[_17018 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17018 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11225 / 2) < mem[96]
                            _19263 = mem[(32 * idx - (_11225 / 2)) + 128]
                            mem[_17018 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17018 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17018 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17018 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17018 + (6 * ceil32(return_data.size)) + 260] = mem[_17018]
                            s = 0
                            t = _17018 + 32
                            u = _17018 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_17018]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17018 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17018 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19263))
                            call address(_19263).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17018 + (6 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22515 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22695 = mem[_22515]
                            require mem[_22515] <= test266151307()
                            require _22515 + return_data.size > _22515 + mem[_22515] + 31
                            _22875 = mem[_22515 + mem[_22515]]
                            require mem[_22515 + mem[_22515]] <= test266151307()
                            require (32 * mem[_22515 + mem[_22515]]) + 32 >= 0 and _22515 + ceil32(return_data.size) + (32 * mem[_22515 + mem[_22515]]) + 32 <= test266151307()
                            mem[64] = _22515 + ceil32(return_data.size) + (32 * mem[_22515 + mem[_22515]]) + 32
                            mem[_22515 + ceil32(return_data.size)] = _22875
                            require return_data.size >= _22695 + (32 * _22875) + 32
                            t = _22515 + _22695 + 32
                            u = _22515 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22875:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17018] - 1 < mem[_17018]
                            _25378 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25378))
                            staticcall address(_25378).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25755 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17018
                            s = mem[_25755] - ext_call.return_data[0]
                            continue 
                        if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                            require ext_code.size(mem[_17018 + 44 len 20])
                            staticcall mem[_17018 + 44 len 20].decimals() with:
                                    gas gas_remaining wei
                            mem[_17018 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_17018 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_17018 + (2 * ceil32(return_data.size)) + 132] = address(_17464)
                            require ext_code.size(mem[_17018 + 44 len 20])
                            staticcall mem[_17018 + 44 len 20].allowance(address rg1, address rg2) with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_17464)
                            mem[_17018 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17018 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_11225 / 2) < mem[96]
                                _18762 = mem[(32 * idx - (_11225 / 2)) + 128]
                                mem[_17018 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_17018 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_17018 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_17018 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_17018 + (4 * ceil32(return_data.size)) + 260] = mem[_17018]
                                s = 0
                                t = _17018 + 32
                                u = _17018 + (4 * ceil32(return_data.size)) + 292
                                while s < mem[_17018]:
                                    mem[u] = mem[t + 12 len 20]
                                    _16735 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17018 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_17018 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_18762))
                                call address(_18762).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17018 + (4 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22516 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _22696 = mem[_22516]
                                require mem[_22516] <= test266151307()
                                require _22516 + return_data.size > _22516 + mem[_22516] + 31
                                _22876 = mem[_22516 + mem[_22516]]
                                require mem[_22516 + mem[_22516]] <= test266151307()
                                require (32 * mem[_22516 + mem[_22516]]) + 32 >= 0 and _22516 + ceil32(return_data.size) + (32 * mem[_22516 + mem[_22516]]) + 32 <= test266151307()
                                mem[64] = _22516 + ceil32(return_data.size) + (32 * mem[_22516 + mem[_22516]]) + 32
                                mem[_22516 + ceil32(return_data.size)] = _22876
                                require return_data.size >= _22696 + (32 * _22876) + 32
                                t = _22516 + _22696 + 32
                                u = _22516 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _22876:
                                    mem[u] = mem[t]
                                    _16735 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_17018] - 1 < mem[_17018]
                                _25380 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_25380))
                                staticcall address(_25380).balanceOf(address rg1) with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25756 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16735 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _17018
                                s = mem[_25756] - ext_call.return_data[0]
                                continue 
                            mem[_17018 + (4 * ceil32(return_data.size)) + 100] = address(_17464)
                            mem[_17018 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_17440))
                            call address(_17440).approve(address rg1, uint256 rg2) with:
                                 gas gas_remaining wei
                                args address(_17464), -1
                            mem[_17018 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _17018 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_11225 / 2) < mem[96]
                            _19566 = mem[(32 * idx - (_11225 / 2)) + 128]
                            mem[_17018 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17018 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_17018 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_17018 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_17018 + (6 * ceil32(return_data.size)) + 260] = mem[_17018]
                            s = 0
                            t = _17018 + 32
                            u = _17018 + (6 * ceil32(return_data.size)) + 292
                            while s < mem[_17018]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17018 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17018 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19566))
                            call address(_19566).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17018 + (6 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22517 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22697 = mem[_22517]
                            require mem[_22517] <= test266151307()
                            require _22517 + return_data.size > _22517 + mem[_22517] + 31
                            _22877 = mem[_22517 + mem[_22517]]
                            require mem[_22517 + mem[_22517]] <= test266151307()
                            require (32 * mem[_22517 + mem[_22517]]) + 32 >= 0 and _22517 + ceil32(return_data.size) + (32 * mem[_22517 + mem[_22517]]) + 32 <= test266151307()
                            mem[64] = _22517 + ceil32(return_data.size) + (32 * mem[_22517 + mem[_22517]]) + 32
                            mem[_22517 + ceil32(return_data.size)] = _22877
                            require return_data.size >= _22697 + (32 * _22877) + 32
                            t = _22517 + _22697 + 32
                            u = _22517 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22877:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17018] - 1 < mem[_17018]
                            _25382 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25382))
                            staticcall address(_25382).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25757 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17018
                            s = mem[_25757] - ext_call.return_data[0]
                            continue 
                        if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(mem[_17018 + 44 len 20])
                        staticcall mem[_17018 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17018 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17018 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_17018 + (2 * ceil32(return_data.size)) + 132] = address(_17464)
                        require ext_code.size(mem[_17018 + 44 len 20])
                        staticcall mem[_17018 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17464)
                        mem[_17018 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17018 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_11225 / 2) < mem[96]
                            _19049 = mem[(32 * idx - (_11225 / 2)) + 128]
                            mem[_17018 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17018 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_17018 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_17018 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_17018 + (4 * ceil32(return_data.size)) + 260] = mem[_17018]
                            s = 0
                            t = _17018 + 32
                            u = _17018 + (4 * ceil32(return_data.size)) + 292
                            while s < mem[_17018]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17018 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_17018 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_19049))
                            call address(_19049).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17018 + (4 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22518 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22698 = mem[_22518]
                            require mem[_22518] <= test266151307()
                            require _22518 + return_data.size > _22518 + mem[_22518] + 31
                            _22878 = mem[_22518 + mem[_22518]]
                            require mem[_22518 + mem[_22518]] <= test266151307()
                            require (32 * mem[_22518 + mem[_22518]]) + 32 >= 0 and _22518 + ceil32(return_data.size) + (32 * mem[_22518 + mem[_22518]]) + 32 <= test266151307()
                            mem[64] = _22518 + ceil32(return_data.size) + (32 * mem[_22518 + mem[_22518]]) + 32
                            mem[_22518 + ceil32(return_data.size)] = _22878
                            require return_data.size >= _22698 + (32 * _22878) + 32
                            t = _22518 + _22698 + 32
                            u = _22518 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22878:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17018] - 1 < mem[_17018]
                            _25384 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25384))
                            staticcall address(_25384).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25758 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _17018
                            s = mem[_25758] - ext_call.return_data[0]
                            continue 
                        mem[_17018 + (4 * ceil32(return_data.size)) + 100] = address(_17464)
                        mem[_17018 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_17440))
                        call address(_17440).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17464), -1
                        mem[_17018 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17018 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_11225 / 2) < mem[96]
                        _19842 = mem[(32 * idx - (_11225 / 2)) + 128]
                        mem[_17018 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17018 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_17018 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_17018 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_17018 + (6 * ceil32(return_data.size)) + 260] = mem[_17018]
                        s = 0
                        t = _17018 + 32
                        u = _17018 + (6 * ceil32(return_data.size)) + 292
                        while s < mem[_17018]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17018 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_17018 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_19842))
                        call address(_19842).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17018 + (6 * ceil32(return_data.size)) + (32 * mem[_17018]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22519 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22699 = mem[_22519]
                        require mem[_22519] <= test266151307()
                        require _22519 + return_data.size > _22519 + mem[_22519] + 31
                        _22879 = mem[_22519 + mem[_22519]]
                        require mem[_22519 + mem[_22519]] <= test266151307()
                        require (32 * mem[_22519 + mem[_22519]]) + 32 >= 0 and _22519 + ceil32(return_data.size) + (32 * mem[_22519 + mem[_22519]]) + 32 <= test266151307()
                        mem[64] = _22519 + ceil32(return_data.size) + (32 * mem[_22519 + mem[_22519]]) + 32
                        mem[_22519 + ceil32(return_data.size)] = _22879
                        require return_data.size >= _22699 + (32 * _22879) + 32
                        t = _22519 + _22699 + 32
                        u = _22519 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22879:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17018] - 1 < mem[_17018]
                        _25386 = mem[(32 * mem[_17018] - 1) + _17018 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25386))
                        staticcall address(_25386).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25759 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _17018
                        s = mem[_25759] - ext_call.return_data[0]
                        continue 
                    _17020 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_17020 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_17020]
                    mem[_17020 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_17020]
                    mem[_17020 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_17020]
                    mem[_17020 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_17020] - 1 < mem[_17020]
                    mem[_17020 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_17020] - 1) + _17020 + 44 len 20])
                    staticcall mem[(32 * mem[_17020] - 1) + _17020 + 44 len 20].balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args this.address
                    mem[_17020 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17020 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_17020]
                    _17483 = mem[_17020 + 32]
                    require idx + -(_11225 / 2) + 1 < mem[96]
                    _17491 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_17020 + 44 len 20])
                        staticcall mem[_17020 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17020 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17020 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17020 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                        require ext_code.size(mem[_17020 + 44 len 20])
                        staticcall mem[_17020 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17491)
                        mem[_17020 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17020 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _18675 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_17020 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17020 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17020 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17020 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17020 + (4 * ceil32(return_data.size)) + 292] = mem[_17020]
                            s = 0
                            t = _17020 + 32
                            u = _17020 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17020]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17020 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17020 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18675))
                            call address(_18675).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17020 + (4 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22520 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22700 = mem[_22520]
                            require mem[_22520] <= test266151307()
                            require _22520 + return_data.size > _22520 + mem[_22520] + 31
                            _22880 = mem[_22520 + mem[_22520]]
                            require mem[_22520 + mem[_22520]] <= test266151307()
                            require (32 * mem[_22520 + mem[_22520]]) + 32 >= 0 and _22520 + ceil32(return_data.size) + (32 * mem[_22520 + mem[_22520]]) + 32 <= test266151307()
                            mem[64] = _22520 + ceil32(return_data.size) + (32 * mem[_22520 + mem[_22520]]) + 32
                            mem[_22520 + ceil32(return_data.size)] = _22880
                            require return_data.size >= _22700 + (32 * _22880) + 32
                            t = _22520 + _22700 + 32
                            u = _22520 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22880:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17020] - 1 < mem[_17020]
                            _25388 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25388))
                            staticcall address(_25388).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25760 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17020
                            s = mem[_25760] - ext_call.return_data[0]
                            continue 
                        mem[_17020 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                        mem[_17020 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17483))
                        call address(_17483).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17491), -1
                        mem[_17020 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17020 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _19473 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        mem[_17020 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17020 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17020 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17020 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17020 + (6 * ceil32(return_data.size)) + 292] = mem[_17020]
                        s = 0
                        t = _17020 + 32
                        u = _17020 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17020]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17020 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17020 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19473))
                        call address(_19473).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17020 + (6 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22521 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22701 = mem[_22521]
                        require mem[_22521] <= test266151307()
                        require _22521 + return_data.size > _22521 + mem[_22521] + 31
                        _22881 = mem[_22521 + mem[_22521]]
                        require mem[_22521 + mem[_22521]] <= test266151307()
                        require (32 * mem[_22521 + mem[_22521]]) + 32 >= 0 and _22521 + ceil32(return_data.size) + (32 * mem[_22521 + mem[_22521]]) + 32 <= test266151307()
                        mem[64] = _22521 + ceil32(return_data.size) + (32 * mem[_22521 + mem[_22521]]) + 32
                        mem[_22521 + ceil32(return_data.size)] = _22881
                        require return_data.size >= _22701 + (32 * _22881) + 32
                        t = _22521 + _22701 + 32
                        u = _22521 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22881:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17020] - 1 < mem[_17020]
                        _25390 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25390))
                        staticcall address(_25390).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25761 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17020
                        s = mem[_25761] - ext_call.return_data[0]
                        continue 
                    if 0xc5c4ee80481b0560774459dc47770dc6ec5f47 == msg.sender:
                        require ext_code.size(mem[_17020 + 44 len 20])
                        staticcall mem[_17020 + 44 len 20].decimals() with:
                                gas gas_remaining wei
                        mem[_17020 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_17020 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_17020 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                        require ext_code.size(mem[_17020 + 44 len 20])
                        staticcall mem[_17020 + 44 len 20].allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_17491)
                        mem[_17020 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17020 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_11225 / 2) + 1 < mem[96]
                            _18968 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                            mem[_17020 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_17020 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_17020 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_17020 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_17020 + (4 * ceil32(return_data.size)) + 292] = mem[_17020]
                            s = 0
                            t = _17020 + 32
                            u = _17020 + (4 * ceil32(return_data.size)) + 324
                            while s < mem[_17020]:
                                mem[u] = mem[t + 12 len 20]
                                _16735 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17020 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_17020 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_18968))
                            call address(_18968).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17020 + (4 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22522 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22702 = mem[_22522]
                            require mem[_22522] <= test266151307()
                            require _22522 + return_data.size > _22522 + mem[_22522] + 31
                            _22882 = mem[_22522 + mem[_22522]]
                            require mem[_22522 + mem[_22522]] <= test266151307()
                            require (32 * mem[_22522 + mem[_22522]]) + 32 >= 0 and _22522 + ceil32(return_data.size) + (32 * mem[_22522 + mem[_22522]]) + 32 <= test266151307()
                            mem[64] = _22522 + ceil32(return_data.size) + (32 * mem[_22522 + mem[_22522]]) + 32
                            mem[_22522 + ceil32(return_data.size)] = _22882
                            require return_data.size >= _22702 + (32 * _22882) + 32
                            t = _22522 + _22702 + 32
                            u = _22522 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _22882:
                                mem[u] = mem[t]
                                _16735 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_17020] - 1 < mem[_17020]
                            _25392 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_25392))
                            staticcall address(_25392).balanceOf(address rg1) with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25762 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16735 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _17020
                            s = mem[_25762] - ext_call.return_data[0]
                            continue 
                        mem[_17020 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                        mem[_17020 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_17483))
                        call address(_17483).approve(address rg1, uint256 rg2) with:
                             gas gas_remaining wei
                            args address(_17491), -1
                        mem[_17020 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _17020 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _19767 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        mem[_17020 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17020 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_17020 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_17020 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_17020 + (6 * ceil32(return_data.size)) + 292] = mem[_17020]
                        s = 0
                        t = _17020 + 32
                        u = _17020 + (6 * ceil32(return_data.size)) + 324
                        while s < mem[_17020]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17020 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17020 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19767))
                        call address(_19767).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17020 + (6 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22523 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22703 = mem[_22523]
                        require mem[_22523] <= test266151307()
                        require _22523 + return_data.size > _22523 + mem[_22523] + 31
                        _22883 = mem[_22523 + mem[_22523]]
                        require mem[_22523 + mem[_22523]] <= test266151307()
                        require (32 * mem[_22523 + mem[_22523]]) + 32 >= 0 and _22523 + ceil32(return_data.size) + (32 * mem[_22523 + mem[_22523]]) + 32 <= test266151307()
                        mem[64] = _22523 + ceil32(return_data.size) + (32 * mem[_22523 + mem[_22523]]) + 32
                        mem[_22523 + ceil32(return_data.size)] = _22883
                        require return_data.size >= _22703 + (32 * _22883) + 32
                        t = _22523 + _22703 + 32
                        u = _22523 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22883:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17020] - 1 < mem[_17020]
                        _25394 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25394))
                        staticcall address(_25394).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25763 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17020
                        s = mem[_25763] - ext_call.return_data[0]
                        continue 
                    if msg.sender != 0x69340e0cce47085b2230411f001fc5867b96b3:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(mem[_17020 + 44 len 20])
                    staticcall mem[_17020 + 44 len 20].decimals() with:
                            gas gas_remaining wei
                    mem[_17020 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_17020 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_17020 + (2 * ceil32(return_data.size)) + 164] = address(_17491)
                    require ext_code.size(mem[_17020 + 44 len 20])
                    staticcall mem[_17020 + 44 len 20].allowance(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(this.address), address(_17491)
                    mem[_17020 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17020 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_11225 / 2) + 1 < mem[96]
                        _19268 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                        mem[_17020 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_17020 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_17020 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_17020 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_17020 + (4 * ceil32(return_data.size)) + 292] = mem[_17020]
                        s = 0
                        t = _17020 + 32
                        u = _17020 + (4 * ceil32(return_data.size)) + 324
                        while s < mem[_17020]:
                            mem[u] = mem[t + 12 len 20]
                            _16735 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17020 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_17020 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_19268))
                        call address(_19268).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17020 + (4 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22524 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22704 = mem[_22524]
                        require mem[_22524] <= test266151307()
                        require _22524 + return_data.size > _22524 + mem[_22524] + 31
                        _22884 = mem[_22524 + mem[_22524]]
                        require mem[_22524 + mem[_22524]] <= test266151307()
                        require (32 * mem[_22524 + mem[_22524]]) + 32 >= 0 and _22524 + ceil32(return_data.size) + (32 * mem[_22524 + mem[_22524]]) + 32 <= test266151307()
                        mem[64] = _22524 + ceil32(return_data.size) + (32 * mem[_22524 + mem[_22524]]) + 32
                        mem[_22524 + ceil32(return_data.size)] = _22884
                        require return_data.size >= _22704 + (32 * _22884) + 32
                        t = _22524 + _22704 + 32
                        u = _22524 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _22884:
                            mem[u] = mem[t]
                            _16735 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_17020] - 1 < mem[_17020]
                        _25396 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25396))
                        staticcall address(_25396).balanceOf(address rg1) with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25764 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16735 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _17020
                        s = mem[_25764] - ext_call.return_data[0]
                        continue 
                    mem[_17020 + (4 * ceil32(return_data.size)) + 132] = address(_17491)
                    mem[_17020 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_17483))
                    call address(_17483).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(_17491), -1
                    mem[_17020 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _17020 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_11225 / 2) + 1 < mem[96]
                    _20020 = mem[(32 * idx + -(_11225 / 2) + 1) + 128]
                    mem[_17020 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_17020 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_17020 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_17020 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_17020 + (6 * ceil32(return_data.size)) + 292] = mem[_17020]
                    s = 0
                    t = _17020 + 32
                    u = _17020 + (6 * ceil32(return_data.size)) + 324
                    while s < mem[_17020]:
                        mem[u] = mem[t + 12 len 20]
                        _16735 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_17020 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_17020 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_20020))
                    call address(_20020).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _17020 + (6 * ceil32(return_data.size)) + (32 * mem[_17020]) + -mem[64] + 320]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22525 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22705 = mem[_22525]
                    require mem[_22525] <= test266151307()
                    require _22525 + return_data.size > _22525 + mem[_22525] + 31
                    _22885 = mem[_22525 + mem[_22525]]
                    require mem[_22525 + mem[_22525]] <= test266151307()
                    require (32 * mem[_22525 + mem[_22525]]) + 32 >= 0 and _22525 + ceil32(return_data.size) + (32 * mem[_22525 + mem[_22525]]) + 32 <= test266151307()
                    mem[64] = _22525 + ceil32(return_data.size) + (32 * mem[_22525 + mem[_22525]]) + 32
                    mem[_22525 + ceil32(return_data.size)] = _22885
                    require return_data.size >= _22705 + (32 * _22885) + 32
                    t = _22525 + _22705 + 32
                    u = _22525 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _22885:
                        mem[u] = mem[t]
                        _16735 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_17020] - 1 < mem[_17020]
                    _25398 = mem[(32 * mem[_17020] - 1) + _17020 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_25398))
                    staticcall address(_25398).balanceOf(address rg1) with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25765 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _16735 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _17020
                    s = mem[_25765] - ext_call.return_data[0]
                    continue 
                require _11225 / 2 < mem[96]
                _16768 = mem[(16 * Mask(251, 1, _11225)) + 128]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_16768))
                staticcall address(_16768).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16828 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_16828] < _11303 - cd[4] + (cd[36] * cd[4] / 10000):
                    revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}



}
